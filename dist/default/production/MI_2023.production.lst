

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Wed Jan 24 19:11:00 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og9 
     1                           	processor	16F1824
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    15                           	psect	stringtext11,global,class=STRCODE,delta=2,noexec
    16                           	psect	stringtext12,global,class=STRCODE,delta=2,noexec
    17                           	psect	stringtext13,global,class=STRCODE,delta=2,noexec
    18                           	psect	stringtext14,global,class=STRCODE,delta=2,noexec
    19                           	psect	stringtext15,global,class=STRCODE,delta=2,noexec
    20                           	psect	stringtext16,global,class=STRCODE,delta=2,noexec
    21                           	psect	cinit,global,class=CODE,merge=1,delta=2
    22                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    23                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    24                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    25                           	psect	clrtext,global,class=CODE,delta=2
    26                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    27                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    28                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    29                           	psect	text1,local,class=CODE,merge=1,delta=2
    30                           	psect	text2,local,class=CODE,merge=1,delta=2
    31                           	psect	text3,local,class=CODE,merge=1,delta=2
    32                           	psect	text4,local,class=CODE,merge=1,delta=2
    33                           	psect	text5,local,class=CODE,merge=1,delta=2
    34                           	psect	text6,local,class=CODE,merge=1,delta=2
    35                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text8,local,class=CODE,merge=1,delta=2
    37                           	psect	text9,local,class=CODE,merge=1,delta=2
    38                           	psect	text10,local,class=CODE,merge=1,delta=2
    39                           	psect	text11,local,class=CODE,merge=1,delta=2
    40                           	psect	text12,local,class=CODE,merge=1,delta=2
    41                           	psect	text13,local,class=CODE,merge=1,delta=2
    42                           	psect	text14,local,class=CODE,merge=1,delta=2
    43                           	psect	text15,local,class=CODE,merge=1,delta=2
    44                           	psect	text16,local,class=CODE,merge=1,delta=2
    45                           	psect	text17,local,class=CODE,merge=1,delta=2
    46                           	psect	text18,local,class=CODE,merge=1,delta=2
    47                           	psect	text19,local,class=CODE,merge=1,delta=2
    48                           	psect	text20,local,class=CODE,merge=1,delta=2
    49                           	psect	text21,local,class=CODE,merge=1,delta=2
    50                           	psect	text22,local,class=CODE,merge=1,delta=2
    51                           	psect	intentry,global,class=CODE,delta=2
    52                           	psect	text24,local,class=CODE,merge=1,delta=2
    53                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    54                           	dabs	1,0x7E,2
    55     0000                     
    56                           ; Generated 06/07/2023 GMT
    57                           ; 
    58                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution. Publication is not required when
    72                           ;        this file is used in an embedded application.
    73                           ; 
    74                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    75                           ;        software without specific prior written permission.
    76                           ; 
    77                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    78                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    79                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    80                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    81                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    82                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    83                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    84                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    85                           ; 
    86                           ; 
    87                           ; Code-generator required, PIC16F1824 Definitions
    88                           ; 
    89                           ; SFR Addresses
    90     0000                     	;# 
    91     0001                     	;# 
    92     0002                     	;# 
    93     0003                     	;# 
    94     0004                     	;# 
    95     0005                     	;# 
    96     0006                     	;# 
    97     0007                     	;# 
    98     0008                     	;# 
    99     0009                     	;# 
   100     000A                     	;# 
   101     000B                     	;# 
   102     000C                     	;# 
   103     000E                     	;# 
   104     0011                     	;# 
   105     0012                     	;# 
   106     0013                     	;# 
   107     0015                     	;# 
   108     0016                     	;# 
   109     0016                     	;# 
   110     0017                     	;# 
   111     0018                     	;# 
   112     0019                     	;# 
   113     001A                     	;# 
   114     001B                     	;# 
   115     001C                     	;# 
   116     001E                     	;# 
   117     001F                     	;# 
   118     008C                     	;# 
   119     008E                     	;# 
   120     0091                     	;# 
   121     0092                     	;# 
   122     0093                     	;# 
   123     0095                     	;# 
   124     0096                     	;# 
   125     0097                     	;# 
   126     0098                     	;# 
   127     0099                     	;# 
   128     009A                     	;# 
   129     009B                     	;# 
   130     009B                     	;# 
   131     009C                     	;# 
   132     009D                     	;# 
   133     009E                     	;# 
   134     010C                     	;# 
   135     010E                     	;# 
   136     0111                     	;# 
   137     0112                     	;# 
   138     0113                     	;# 
   139     0114                     	;# 
   140     0115                     	;# 
   141     0116                     	;# 
   142     0117                     	;# 
   143     0118                     	;# 
   144     0119                     	;# 
   145     011A                     	;# 
   146     011B                     	;# 
   147     011D                     	;# 
   148     011E                     	;# 
   149     018C                     	;# 
   150     018E                     	;# 
   151     0191                     	;# 
   152     0191                     	;# 
   153     0192                     	;# 
   154     0193                     	;# 
   155     0193                     	;# 
   156     0193                     	;# 
   157     0194                     	;# 
   158     0195                     	;# 
   159     0196                     	;# 
   160     0199                     	;# 
   161     019A                     	;# 
   162     019B                     	;# 
   163     019B                     	;# 
   164     019B                     	;# 
   165     019B                     	;# 
   166     019C                     	;# 
   167     019C                     	;# 
   168     019D                     	;# 
   169     019E                     	;# 
   170     019F                     	;# 
   171     020C                     	;# 
   172     020E                     	;# 
   173     0211                     	;# 
   174     0211                     	;# 
   175     0212                     	;# 
   176     0212                     	;# 
   177     0213                     	;# 
   178     0213                     	;# 
   179     0214                     	;# 
   180     0214                     	;# 
   181     0215                     	;# 
   182     0215                     	;# 
   183     0215                     	;# 
   184     0215                     	;# 
   185     0216                     	;# 
   186     0216                     	;# 
   187     0217                     	;# 
   188     0217                     	;# 
   189     0291                     	;# 
   190     0291                     	;# 
   191     0292                     	;# 
   192     0293                     	;# 
   193     0294                     	;# 
   194     0295                     	;# 
   195     0295                     	;# 
   196     0296                     	;# 
   197     0298                     	;# 
   198     0298                     	;# 
   199     0299                     	;# 
   200     029A                     	;# 
   201     029B                     	;# 
   202     029C                     	;# 
   203     029D                     	;# 
   204     029E                     	;# 
   205     029E                     	;# 
   206     0311                     	;# 
   207     0311                     	;# 
   208     0312                     	;# 
   209     0313                     	;# 
   210     0318                     	;# 
   211     0318                     	;# 
   212     0319                     	;# 
   213     031A                     	;# 
   214     038C                     	;# 
   215     038E                     	;# 
   216     0391                     	;# 
   217     0392                     	;# 
   218     0393                     	;# 
   219     039A                     	;# 
   220     039C                     	;# 
   221     039D                     	;# 
   222     039E                     	;# 
   223     039F                     	;# 
   224     0415                     	;# 
   225     0416                     	;# 
   226     0417                     	;# 
   227     041C                     	;# 
   228     041D                     	;# 
   229     041E                     	;# 
   230     0FE4                     	;# 
   231     0FE5                     	;# 
   232     0FE6                     	;# 
   233     0FE7                     	;# 
   234     0FE8                     	;# 
   235     0FE9                     	;# 
   236     0FEA                     	;# 
   237     0FEB                     	;# 
   238     0FED                     	;# 
   239     0FEE                     	;# 
   240     0FEF                     	;# 
   241     0020                     	;# 
   242     0021                     	;# 
   243     0022                     	;# 
   244     0023                     	;# 
   245     0024                     	;# 
   246     0025                     	;# 
   247     0000                     	;# 
   248     0001                     	;# 
   249     0002                     	;# 
   250     0003                     	;# 
   251     0004                     	;# 
   252     0005                     	;# 
   253     0006                     	;# 
   254     0007                     	;# 
   255     0008                     	;# 
   256     0009                     	;# 
   257     000A                     	;# 
   258     000B                     	;# 
   259     000C                     	;# 
   260     000E                     	;# 
   261     0011                     	;# 
   262     0012                     	;# 
   263     0013                     	;# 
   264     0015                     	;# 
   265     0016                     	;# 
   266     0016                     	;# 
   267     0017                     	;# 
   268     0018                     	;# 
   269     0019                     	;# 
   270     001A                     	;# 
   271     001B                     	;# 
   272     001C                     	;# 
   273     001E                     	;# 
   274     001F                     	;# 
   275     008C                     	;# 
   276     008E                     	;# 
   277     0091                     	;# 
   278     0092                     	;# 
   279     0093                     	;# 
   280     0095                     	;# 
   281     0096                     	;# 
   282     0097                     	;# 
   283     0098                     	;# 
   284     0099                     	;# 
   285     009A                     	;# 
   286     009B                     	;# 
   287     009B                     	;# 
   288     009C                     	;# 
   289     009D                     	;# 
   290     009E                     	;# 
   291     010C                     	;# 
   292     010E                     	;# 
   293     0111                     	;# 
   294     0112                     	;# 
   295     0113                     	;# 
   296     0114                     	;# 
   297     0115                     	;# 
   298     0116                     	;# 
   299     0117                     	;# 
   300     0118                     	;# 
   301     0119                     	;# 
   302     011A                     	;# 
   303     011B                     	;# 
   304     011D                     	;# 
   305     011E                     	;# 
   306     018C                     	;# 
   307     018E                     	;# 
   308     0191                     	;# 
   309     0191                     	;# 
   310     0192                     	;# 
   311     0193                     	;# 
   312     0193                     	;# 
   313     0193                     	;# 
   314     0194                     	;# 
   315     0195                     	;# 
   316     0196                     	;# 
   317     0199                     	;# 
   318     019A                     	;# 
   319     019B                     	;# 
   320     019B                     	;# 
   321     019B                     	;# 
   322     019B                     	;# 
   323     019C                     	;# 
   324     019C                     	;# 
   325     019D                     	;# 
   326     019E                     	;# 
   327     019F                     	;# 
   328     020C                     	;# 
   329     020E                     	;# 
   330     0211                     	;# 
   331     0211                     	;# 
   332     0212                     	;# 
   333     0212                     	;# 
   334     0213                     	;# 
   335     0213                     	;# 
   336     0214                     	;# 
   337     0214                     	;# 
   338     0215                     	;# 
   339     0215                     	;# 
   340     0215                     	;# 
   341     0215                     	;# 
   342     0216                     	;# 
   343     0216                     	;# 
   344     0217                     	;# 
   345     0217                     	;# 
   346     0291                     	;# 
   347     0291                     	;# 
   348     0292                     	;# 
   349     0293                     	;# 
   350     0294                     	;# 
   351     0295                     	;# 
   352     0295                     	;# 
   353     0296                     	;# 
   354     0298                     	;# 
   355     0298                     	;# 
   356     0299                     	;# 
   357     029A                     	;# 
   358     029B                     	;# 
   359     029C                     	;# 
   360     029D                     	;# 
   361     029E                     	;# 
   362     029E                     	;# 
   363     0311                     	;# 
   364     0311                     	;# 
   365     0312                     	;# 
   366     0313                     	;# 
   367     0318                     	;# 
   368     0318                     	;# 
   369     0319                     	;# 
   370     031A                     	;# 
   371     038C                     	;# 
   372     038E                     	;# 
   373     0391                     	;# 
   374     0392                     	;# 
   375     0393                     	;# 
   376     039A                     	;# 
   377     039C                     	;# 
   378     039D                     	;# 
   379     039E                     	;# 
   380     039F                     	;# 
   381     0415                     	;# 
   382     0416                     	;# 
   383     0417                     	;# 
   384     041C                     	;# 
   385     041D                     	;# 
   386     041E                     	;# 
   387     0FE4                     	;# 
   388     0FE5                     	;# 
   389     0FE6                     	;# 
   390     0FE7                     	;# 
   391     0FE8                     	;# 
   392     0FE9                     	;# 
   393     0FEA                     	;# 
   394     0FEB                     	;# 
   395     0FED                     	;# 
   396     0FEE                     	;# 
   397     0FEF                     	;# 
   398                           
   399                           	psect	idataBANK0
   400     067F                     __pidataBANK0:
   401                           
   402                           ;initializer for _top_two_bytes_ptr
   403     067F  3421               	retlw	33
   404     0680  3400               	retlw	0
   405                           
   406                           	psect	stringtext1
   407     00E4                     __pstringtext1:
   408     00E4                     _tri_table_one_quadrant:
   409     00E4  3400               	retlw	0
   410     00E5  3402               	retlw	2
   411     00E6  3404               	retlw	4
   412     00E7  3402               	retlw	2
   413     00E8  3408               	retlw	8
   414     00E9  3402               	retlw	2
   415     00EA  340C               	retlw	12
   416     00EB  3402               	retlw	2
   417     00EC  3410               	retlw	16
   418     00ED  3402               	retlw	2
   419     00EE  3414               	retlw	20
   420     00EF  3402               	retlw	2
   421     00F0  3418               	retlw	24
   422     00F1  3402               	retlw	2
   423     00F2  341C               	retlw	28
   424     00F3  3402               	retlw	2
   425     00F4  3420               	retlw	32
   426     00F5  3402               	retlw	2
   427     00F6  3424               	retlw	36
   428     00F7  3402               	retlw	2
   429     00F8  3428               	retlw	40
   430     00F9  3402               	retlw	2
   431     00FA  342C               	retlw	44
   432     00FB  3402               	retlw	2
   433     00FC  3430               	retlw	48
   434     00FD  3402               	retlw	2
   435     00FE  3434               	retlw	52
   436     00FF  3402               	retlw	2
   437     0100  3438               	retlw	56
   438     0101  3402               	retlw	2
   439     0102  343C               	retlw	60
   440     0103  3402               	retlw	2
   441     0104  3440               	retlw	64
   442     0105  3402               	retlw	2
   443     0106  3444               	retlw	68
   444     0107  3402               	retlw	2
   445     0108  3448               	retlw	72
   446     0109  3402               	retlw	2
   447     010A  344C               	retlw	76
   448     010B  3402               	retlw	2
   449     010C  3450               	retlw	80
   450     010D  3402               	retlw	2
   451     010E  3454               	retlw	84
   452     010F  3402               	retlw	2
   453     0110  3458               	retlw	88
   454     0111  3402               	retlw	2
   455     0112  345C               	retlw	92
   456     0113  3402               	retlw	2
   457     0114  3460               	retlw	96
   458     0115  3402               	retlw	2
   459     0116  3464               	retlw	100
   460     0117  3402               	retlw	2
   461     0118  3468               	retlw	104
   462     0119  3402               	retlw	2
   463     011A  346C               	retlw	108
   464     011B  3402               	retlw	2
   465     011C  3470               	retlw	112
   466     011D  3402               	retlw	2
   467     011E  3474               	retlw	116
   468     011F  3402               	retlw	2
   469     0120  3478               	retlw	120
   470     0121  3402               	retlw	2
   471     0122  347C               	retlw	124
   472     0123  3402               	retlw	2
   473     0124  3480               	retlw	128
   474     0125  3402               	retlw	2
   475     0126  3484               	retlw	132
   476     0127  3402               	retlw	2
   477     0128  3488               	retlw	136
   478     0129  3402               	retlw	2
   479     012A  348C               	retlw	140
   480     012B  3402               	retlw	2
   481     012C  3490               	retlw	144
   482     012D  3402               	retlw	2
   483     012E  3494               	retlw	148
   484     012F  3402               	retlw	2
   485     0130  3498               	retlw	152
   486     0131  3402               	retlw	2
   487     0132  349C               	retlw	156
   488     0133  3402               	retlw	2
   489     0134  34A0               	retlw	160
   490     0135  3402               	retlw	2
   491     0136  34A4               	retlw	164
   492     0137  3402               	retlw	2
   493     0138  34A8               	retlw	168
   494     0139  3402               	retlw	2
   495     013A  34AC               	retlw	172
   496     013B  3402               	retlw	2
   497     013C  34B0               	retlw	176
   498     013D  3402               	retlw	2
   499     013E  34B4               	retlw	180
   500     013F  3402               	retlw	2
   501     0140  34B8               	retlw	184
   502     0141  3402               	retlw	2
   503     0142  34BC               	retlw	188
   504     0143  3402               	retlw	2
   505     0144  34C0               	retlw	192
   506     0145  3402               	retlw	2
   507     0146  34C4               	retlw	196
   508     0147  3402               	retlw	2
   509     0148  34C8               	retlw	200
   510     0149  3402               	retlw	2
   511     014A  34CC               	retlw	204
   512     014B  3402               	retlw	2
   513     014C  34D0               	retlw	208
   514     014D  3402               	retlw	2
   515     014E  34D4               	retlw	212
   516     014F  3402               	retlw	2
   517     0150  34D8               	retlw	216
   518     0151  3402               	retlw	2
   519     0152  34DC               	retlw	220
   520     0153  3402               	retlw	2
   521     0154  34E0               	retlw	224
   522     0155  3402               	retlw	2
   523     0156  34E4               	retlw	228
   524     0157  3402               	retlw	2
   525     0158  34E8               	retlw	232
   526     0159  3402               	retlw	2
   527     015A  34EC               	retlw	236
   528     015B  3402               	retlw	2
   529     015C  34F0               	retlw	240
   530     015D  3402               	retlw	2
   531     015E  34F4               	retlw	244
   532     015F  3402               	retlw	2
   533     0160  34F8               	retlw	248
   534     0161  3402               	retlw	2
   535     0162  34FB               	retlw	251
   536     0163  3402               	retlw	2
   537     0164  34FF               	retlw	255
   538     0165  3402               	retlw	2
   539     0166  3403               	retlw	3
   540     0167  3403               	retlw	3
   541     0168  3407               	retlw	7
   542     0169  3403               	retlw	3
   543     016A  340B               	retlw	11
   544     016B  3403               	retlw	3
   545     016C  340F               	retlw	15
   546     016D  3403               	retlw	3
   547     016E  3413               	retlw	19
   548     016F  3403               	retlw	3
   549     0170  3417               	retlw	23
   550     0171  3403               	retlw	3
   551     0172  341B               	retlw	27
   552     0173  3403               	retlw	3
   553     0174  341F               	retlw	31
   554     0175  3403               	retlw	3
   555     0176  3423               	retlw	35
   556     0177  3403               	retlw	3
   557     0178  3427               	retlw	39
   558     0179  3403               	retlw	3
   559     017A  342B               	retlw	43
   560     017B  3403               	retlw	3
   561     017C  342F               	retlw	47
   562     017D  3403               	retlw	3
   563     017E  3433               	retlw	51
   564     017F  3403               	retlw	3
   565     0180  3437               	retlw	55
   566     0181  3403               	retlw	3
   567     0182  343B               	retlw	59
   568     0183  3403               	retlw	3
   569     0184  343F               	retlw	63
   570     0185  3403               	retlw	3
   571     0186  3443               	retlw	67
   572     0187  3403               	retlw	3
   573     0188  3447               	retlw	71
   574     0189  3403               	retlw	3
   575     018A  344B               	retlw	75
   576     018B  3403               	retlw	3
   577     018C  344F               	retlw	79
   578     018D  3403               	retlw	3
   579     018E  3453               	retlw	83
   580     018F  3403               	retlw	3
   581     0190  3457               	retlw	87
   582     0191  3403               	retlw	3
   583     0192  345B               	retlw	91
   584     0193  3403               	retlw	3
   585     0194  345F               	retlw	95
   586     0195  3403               	retlw	3
   587     0196  3463               	retlw	99
   588     0197  3403               	retlw	3
   589     0198  3467               	retlw	103
   590     0199  3403               	retlw	3
   591     019A  346B               	retlw	107
   592     019B  3403               	retlw	3
   593     019C  346F               	retlw	111
   594     019D  3403               	retlw	3
   595     019E  3473               	retlw	115
   596     019F  3403               	retlw	3
   597     01A0  3477               	retlw	119
   598     01A1  3403               	retlw	3
   599     01A2  347B               	retlw	123
   600     01A3  3403               	retlw	3
   601     01A4  347F               	retlw	127
   602     01A5  3403               	retlw	3
   603     01A6  3483               	retlw	131
   604     01A7  3403               	retlw	3
   605     01A8  3487               	retlw	135
   606     01A9  3403               	retlw	3
   607     01AA  348B               	retlw	139
   608     01AB  3403               	retlw	3
   609     01AC  348F               	retlw	143
   610     01AD  3403               	retlw	3
   611     01AE  3493               	retlw	147
   612     01AF  3403               	retlw	3
   613     01B0  3497               	retlw	151
   614     01B1  3403               	retlw	3
   615     01B2  349B               	retlw	155
   616     01B3  3403               	retlw	3
   617     01B4  349F               	retlw	159
   618     01B5  3403               	retlw	3
   619     01B6  34A3               	retlw	163
   620     01B7  3403               	retlw	3
   621     01B8  34A7               	retlw	167
   622     01B9  3403               	retlw	3
   623     01BA  34AB               	retlw	171
   624     01BB  3403               	retlw	3
   625     01BC  34AF               	retlw	175
   626     01BD  3403               	retlw	3
   627     01BE  34B3               	retlw	179
   628     01BF  3403               	retlw	3
   629     01C0  34B7               	retlw	183
   630     01C1  3403               	retlw	3
   631     01C2  34BB               	retlw	187
   632     01C3  3403               	retlw	3
   633     01C4  34BF               	retlw	191
   634     01C5  3403               	retlw	3
   635     01C6  34C3               	retlw	195
   636     01C7  3403               	retlw	3
   637     01C8  34C7               	retlw	199
   638     01C9  3403               	retlw	3
   639     01CA  34CB               	retlw	203
   640     01CB  3403               	retlw	3
   641     01CC  34CF               	retlw	207
   642     01CD  3403               	retlw	3
   643     01CE  34D3               	retlw	211
   644     01CF  3403               	retlw	3
   645     01D0  34D7               	retlw	215
   646     01D1  3403               	retlw	3
   647     01D2  34DB               	retlw	219
   648     01D3  3403               	retlw	3
   649     01D4  34DF               	retlw	223
   650     01D5  3403               	retlw	3
   651     01D6  34E3               	retlw	227
   652     01D7  3403               	retlw	3
   653     01D8  34E7               	retlw	231
   654     01D9  3403               	retlw	3
   655     01DA  34EB               	retlw	235
   656     01DB  3403               	retlw	3
   657     01DC  34EF               	retlw	239
   658     01DD  3403               	retlw	3
   659     01DE  34F3               	retlw	243
   660     01DF  3403               	retlw	3
   661     01E0  34F7               	retlw	247
   662     01E1  3403               	retlw	3
   663     01E2  34FB               	retlw	251
   664     01E3  3403               	retlw	3
   665     01E4  34FF               	retlw	255
   666     01E5  3403               	retlw	3
   667     01E6                     __end_of_tri_table_one_quadrant:
   668                           
   669                           	psect	stringtext2
   670     01E6                     __pstringtext2:
   671     01E6                     _sine_table_one_quadrant:
   672     01E6  3400               	retlw	0
   673     01E7  3402               	retlw	2
   674     01E8  3406               	retlw	6
   675     01E9  3402               	retlw	2
   676     01EA  340C               	retlw	12
   677     01EB  3402               	retlw	2
   678     01EC  3412               	retlw	18
   679     01ED  3402               	retlw	2
   680     01EE  3419               	retlw	25
   681     01EF  3402               	retlw	2
   682     01F0  341F               	retlw	31
   683     01F1  3402               	retlw	2
   684     01F2  3425               	retlw	37
   685     01F3  3402               	retlw	2
   686     01F4  342B               	retlw	43
   687     01F5  3402               	retlw	2
   688     01F6  3432               	retlw	50
   689     01F7  3402               	retlw	2
   690     01F8  3438               	retlw	56
   691     01F9  3402               	retlw	2
   692     01FA  343E               	retlw	62
   693     01FB  3402               	retlw	2
   694     01FC  3444               	retlw	68
   695     01FD  3402               	retlw	2
   696     01FE  344B               	retlw	75
   697     01FF  3402               	retlw	2
   698     0200  3451               	retlw	81
   699     0201  3402               	retlw	2
   700     0202  3457               	retlw	87
   701     0203  3402               	retlw	2
   702     0204  345D               	retlw	93
   703     0205  3402               	retlw	2
   704     0206  3463               	retlw	99
   705     0207  3402               	retlw	2
   706     0208  3469               	retlw	105
   707     0209  3402               	retlw	2
   708     020A  3470               	retlw	112
   709     020B  3402               	retlw	2
   710     020C  3476               	retlw	118
   711     020D  3402               	retlw	2
   712     020E  347C               	retlw	124
   713     020F  3402               	retlw	2
   714     0210  3482               	retlw	130
   715     0211  3402               	retlw	2
   716     0212  3488               	retlw	136
   717     0213  3402               	retlw	2
   718     0214  348E               	retlw	142
   719     0215  3402               	retlw	2
   720     0216  3494               	retlw	148
   721     0217  3402               	retlw	2
   722     0218  349A               	retlw	154
   723     0219  3402               	retlw	2
   724     021A  34A0               	retlw	160
   725     021B  3402               	retlw	2
   726     021C  34A6               	retlw	166
   727     021D  3402               	retlw	2
   728     021E  34AC               	retlw	172
   729     021F  3402               	retlw	2
   730     0220  34B2               	retlw	178
   731     0221  3402               	retlw	2
   732     0222  34B8               	retlw	184
   733     0223  3402               	retlw	2
   734     0224  34BD               	retlw	189
   735     0225  3402               	retlw	2
   736     0226  34C3               	retlw	195
   737     0227  3402               	retlw	2
   738     0228  34C9               	retlw	201
   739     0229  3402               	retlw	2
   740     022A  34CF               	retlw	207
   741     022B  3402               	retlw	2
   742     022C  34D5               	retlw	213
   743     022D  3402               	retlw	2
   744     022E  34DA               	retlw	218
   745     022F  3402               	retlw	2
   746     0230  34E0               	retlw	224
   747     0231  3402               	retlw	2
   748     0232  34E5               	retlw	229
   749     0233  3402               	retlw	2
   750     0234  34EB               	retlw	235
   751     0235  3402               	retlw	2
   752     0236  34F1               	retlw	241
   753     0237  3402               	retlw	2
   754     0238  34F6               	retlw	246
   755     0239  3402               	retlw	2
   756     023A  34FC               	retlw	252
   757     023B  3402               	retlw	2
   758     023C  3401               	retlw	1
   759     023D  3403               	retlw	3
   760     023E  3406               	retlw	6
   761     023F  3403               	retlw	3
   762     0240  340C               	retlw	12
   763     0241  3403               	retlw	3
   764     0242  3411               	retlw	17
   765     0243  3403               	retlw	3
   766     0244  3416               	retlw	22
   767     0245  3403               	retlw	3
   768     0246  341C               	retlw	28
   769     0247  3403               	retlw	3
   770     0248  3421               	retlw	33
   771     0249  3403               	retlw	3
   772     024A  3426               	retlw	38
   773     024B  3403               	retlw	3
   774     024C  342B               	retlw	43
   775     024D  3403               	retlw	3
   776     024E  3430               	retlw	48
   777     024F  3403               	retlw	3
   778     0250  3435               	retlw	53
   779     0251  3403               	retlw	3
   780     0252  343A               	retlw	58
   781     0253  3403               	retlw	3
   782     0254  343F               	retlw	63
   783     0255  3403               	retlw	3
   784     0256  3444               	retlw	68
   785     0257  3403               	retlw	3
   786     0258  3449               	retlw	73
   787     0259  3403               	retlw	3
   788     025A  344E               	retlw	78
   789     025B  3403               	retlw	3
   790     025C  3452               	retlw	82
   791     025D  3403               	retlw	3
   792     025E  3457               	retlw	87
   793     025F  3403               	retlw	3
   794     0260  345C               	retlw	92
   795     0261  3403               	retlw	3
   796     0262  3460               	retlw	96
   797     0263  3403               	retlw	3
   798     0264  3465               	retlw	101
   799     0265  3403               	retlw	3
   800     0266  3469               	retlw	105
   801     0267  3403               	retlw	3
   802     0268  346E               	retlw	110
   803     0269  3403               	retlw	3
   804     026A  3472               	retlw	114
   805     026B  3403               	retlw	3
   806     026C  3476               	retlw	118
   807     026D  3403               	retlw	3
   808     026E  347A               	retlw	122
   809     026F  3403               	retlw	3
   810     0270  347F               	retlw	127
   811     0271  3403               	retlw	3
   812     0272  3483               	retlw	131
   813     0273  3403               	retlw	3
   814     0274  3487               	retlw	135
   815     0275  3403               	retlw	3
   816     0276  348B               	retlw	139
   817     0277  3403               	retlw	3
   818     0278  348F               	retlw	143
   819     0279  3403               	retlw	3
   820     027A  3493               	retlw	147
   821     027B  3403               	retlw	3
   822     027C  3497               	retlw	151
   823     027D  3403               	retlw	3
   824     027E  349A               	retlw	154
   825     027F  3403               	retlw	3
   826     0280  349E               	retlw	158
   827     0281  3403               	retlw	3
   828     0282  34A2               	retlw	162
   829     0283  3403               	retlw	3
   830     0284  34A5               	retlw	165
   831     0285  3403               	retlw	3
   832     0286  34A9               	retlw	169
   833     0287  3403               	retlw	3
   834     0288  34AC               	retlw	172
   835     0289  3403               	retlw	3
   836     028A  34B0               	retlw	176
   837     028B  3403               	retlw	3
   838     028C  34B3               	retlw	179
   839     028D  3403               	retlw	3
   840     028E  34B6               	retlw	182
   841     028F  3403               	retlw	3
   842     0290  34B9               	retlw	185
   843     0291  3403               	retlw	3
   844     0292  34BD               	retlw	189
   845     0293  3403               	retlw	3
   846     0294  34C0               	retlw	192
   847     0295  3403               	retlw	3
   848     0296  34C3               	retlw	195
   849     0297  3403               	retlw	3
   850     0298  34C6               	retlw	198
   851     0299  3403               	retlw	3
   852     029A  34C8               	retlw	200
   853     029B  3403               	retlw	3
   854     029C  34CB               	retlw	203
   855     029D  3403               	retlw	3
   856     029E  34CE               	retlw	206
   857     029F  3403               	retlw	3
   858     02A0  34D1               	retlw	209
   859     02A1  3403               	retlw	3
   860     02A2  34D3               	retlw	211
   861     02A3  3403               	retlw	3
   862     02A4  34D6               	retlw	214
   863     02A5  3403               	retlw	3
   864     02A6  34D8               	retlw	216
   865     02A7  3403               	retlw	3
   866     02A8  34DA               	retlw	218
   867     02A9  3403               	retlw	3
   868     02AA  34DD               	retlw	221
   869     02AB  3403               	retlw	3
   870     02AC  34DF               	retlw	223
   871     02AD  3403               	retlw	3
   872     02AE  34E1               	retlw	225
   873     02AF  3403               	retlw	3
   874     02B0  34E3               	retlw	227
   875     02B1  3403               	retlw	3
   876     02B2  34E5               	retlw	229
   877     02B3  3403               	retlw	3
   878     02B4  34E7               	retlw	231
   879     02B5  3403               	retlw	3
   880     02B6  34E9               	retlw	233
   881     02B7  3403               	retlw	3
   882     02B8  34EB               	retlw	235
   883     02B9  3403               	retlw	3
   884     02BA  34EC               	retlw	236
   885     02BB  3403               	retlw	3
   886     02BC  34EE               	retlw	238
   887     02BD  3403               	retlw	3
   888     02BE  34F0               	retlw	240
   889     02BF  3403               	retlw	3
   890     02C0  34F1               	retlw	241
   891     02C1  3403               	retlw	3
   892     02C2  34F3               	retlw	243
   893     02C3  3403               	retlw	3
   894     02C4  34F4               	retlw	244
   895     02C5  3403               	retlw	3
   896     02C6  34F5               	retlw	245
   897     02C7  3403               	retlw	3
   898     02C8  34F6               	retlw	246
   899     02C9  3403               	retlw	3
   900     02CA  34F7               	retlw	247
   901     02CB  3403               	retlw	3
   902     02CC  34F9               	retlw	249
   903     02CD  3403               	retlw	3
   904     02CE  34F9               	retlw	249
   905     02CF  3403               	retlw	3
   906     02D0  34FA               	retlw	250
   907     02D1  3403               	retlw	3
   908     02D2  34FB               	retlw	251
   909     02D3  3403               	retlw	3
   910     02D4  34FC               	retlw	252
   911     02D5  3403               	retlw	3
   912     02D6  34FD               	retlw	253
   913     02D7  3403               	retlw	3
   914     02D8  34FD               	retlw	253
   915     02D9  3403               	retlw	3
   916     02DA  34FE               	retlw	254
   917     02DB  3403               	retlw	3
   918     02DC  34FE               	retlw	254
   919     02DD  3403               	retlw	3
   920     02DE  34FE               	retlw	254
   921     02DF  3403               	retlw	3
   922     02E0  34FF               	retlw	255
   923     02E1  3403               	retlw	3
   924     02E2  34FF               	retlw	255
   925     02E3  3403               	retlw	3
   926     02E4  34FF               	retlw	255
   927     02E5  3403               	retlw	3
   928     02E6  34FF               	retlw	255
   929     02E7  3403               	retlw	3
   930     02E8                     __end_of_sine_table_one_quadrant:
   931                           
   932                           	psect	stringtext3
   933     064F                     __pstringtext3:
   934     064F                     _prescaler_bits:
   935     064F  3407               	retlw	7
   936     0650  3406               	retlw	6
   937     0651  3405               	retlw	5
   938     0652  3404               	retlw	4
   939     0653  3403               	retlw	3
   940     0654  3402               	retlw	2
   941     0655  3401               	retlw	1
   942     0656  3400               	retlw	0
   943     0657                     __end_of_prescaler_bits:
   944                           
   945                           	psect	stringtext4
   946     0683                     __pstringtext4:
   947     0683                     _NO:
   948     0683  3400               	retlw	0
   949     0684                     __end_of_NO:
   950                           
   951                           	psect	stringtext5
   952     0684                     __pstringtext5:
   953     0684                     _YES:
   954     0684  3401               	retlw	1
   955     0685                     __end_of_YES:
   956                           
   957                           	psect	stringtext6
   958     0685                     __pstringtext6:
   959     0685                     _DONT_CARE:
   960     0685  3404               	retlw	4
   961     0686                     __end_of_DONT_CARE:
   962                           
   963                           	psect	stringtext7
   964     0686                     __pstringtext7:
   965     0686                     _DIVIDE_BY_FOUR:
   966     0686  3403               	retlw	3
   967     0687                     __end_of_DIVIDE_BY_FOUR:
   968                           
   969                           	psect	stringtext8
   970     0687                     __pstringtext8:
   971     0687                     _MULTIPLY_BY_TWO:
   972     0687  3402               	retlw	2
   973     0688                     __end_of_MULTIPLY_BY_TWO:
   974                           
   975                           	psect	stringtext9
   976     0688                     __pstringtext9:
   977     0688                     _DIVIDE_BY_TWO:
   978     0688  3401               	retlw	1
   979     0689                     __end_of_DIVIDE_BY_TWO:
   980                           
   981                           	psect	stringtext10
   982     0689                     __pstringtext10:
   983     0689                     _DO_NOTHING:
   984     0689  3400               	retlw	0
   985     068A                     __end_of_DO_NOTHING:
   986                           
   987                           	psect	stringtext11
   988     068A                     __pstringtext11:
   989     068A                     _NEGATIVE:
   990     068A  3400               	retlw	0
   991     068B                     __end_of_NEGATIVE:
   992                           
   993                           	psect	stringtext12
   994     068B                     __pstringtext12:
   995     068B                     _POSITIVE:
   996     068B  3401               	retlw	1
   997     068C                     __end_of_POSITIVE:
   998                           
   999                           	psect	stringtext13
  1000     068C                     __pstringtext13:
  1001     068C                     _symmetry_adc_config_value:
  1002     068C  3407               	retlw	7
  1003     068D                     __end_of_symmetry_adc_config_value:
  1004                           
  1005                           	psect	stringtext14
  1006     068D                     __pstringtext14:
  1007     068D                     _depth_adc_config_value:
  1008     068D  3406               	retlw	6
  1009     068E                     __end_of_depth_adc_config_value:
  1010                           
  1011                           	psect	stringtext15
  1012     068E                     __pstringtext15:
  1013     068E                     _speed_adc_config_value:
  1014     068E  3405               	retlw	5
  1015     068F                     __end_of_speed_adc_config_value:
  1016                           
  1017                           	psect	stringtext16
  1018     068F                     __pstringtext16:
  1019     068F                     _waveshape_adc_config_value:
  1020     068F  3404               	retlw	4
  1021     0690                     __end_of_waveshape_adc_config_value:
  1022     0015                     _TMR0	set	21
  1023     001C                     _T2CON	set	28
  1024     001B                     _PR2	set	27
  1025     005F                     _GIE	set	95
  1026     005A                     _TMR0IF	set	90
  1027     005D                     _TMR0IE	set	93
  1028     00E2                     _TMR2ON	set	226
  1029     0089                     _TMR2IF	set	137
  1030     0095                     _OPTION_REG	set	149
  1031     009B                     _ADRESL	set	155
  1032     009C                     _ADRESH	set	156
  1033     009D                     _ADCON0	set	157
  1034     009E                     _ADCON1	set	158
  1035     008E                     _TRISC	set	142
  1036     0098                     _OSCTUNE	set	152
  1037     0099                     _OSCCON	set	153
  1038     0462                     _TRISA2	set	1122
  1039     04E9                     _GO_nDONE	set	1257
  1040     04E8                     _ADON	set	1256
  1041     0875                     _LATC5	set	2165
  1042     088F                     _C1ON	set	2191
  1043     08D7                     _SRLEN	set	2263
  1044     018E                     _ANSELC	set	398
  1045     020E                     _WPUC	set	526
  1046     029E                     _CCPTMRS0	set	670
  1047     0313                     _CCP3CON	set	787
  1048     0311                     _CCPR3L	set	785
  1049                           
  1050                           	psect	cinit
  1051     00CB                     start_initialization:	
  1052                           ; #config settings
  1053                           
  1054     00CB                     __initialization:
  1055                           
  1056                           ; Initialize objects allocated to BANK0
  1057     00CB  3186  267F  3180   	fcall	__pidataBANK0	;fetch initializer
  1058     00CE  00E5               	movwf	__pdataBANK0& (0+127)
  1059     00CF  3186  2680  3180   	fcall	__pidataBANK0+1	;fetch initializer
  1060     00D2  00E6               	movwf	(__pdataBANK0+1)& (0+127)
  1061                           
  1062                           ; Clear objects allocated to COMMON
  1063     00D3  01F0               	clrf	__pbssCOMMON& (0+127)
  1064     00D4  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  1065     00D5  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  1066     00D6  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  1067     00D7  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  1068     00D8  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  1069                           
  1070                           ; Clear objects allocated to BANK0
  1071     00D9  3020               	movlw	low __pbssBANK0
  1072     00DA  0084               	movwf	4
  1073     00DB  3000               	movlw	high __pbssBANK0
  1074     00DC  0085               	movwf	5
  1075     00DD  3028               	movlw	40
  1076     00DE  3186  2667         	fcall	clear_ram0
  1077     00E0                     end_of_initialization:	
  1078                           ;End of C runtime variable initialization code
  1079                           
  1080     00E0                     __end_of__initialization:
  1081     00E0  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1082     00E1  0020               	movlb	0
  1083     00E2  3185  2D76         	ljmp	_main	;jump to C main() function
  1084                           
  1085                           	psect	bssCOMMON
  1086     0070                     __pbssCOMMON:
  1087     0070                     _base_prescaler_bits_index:
  1088     0070                     	ds	1
  1089     0071                     _current_one_quadrant_index:
  1090     0071                     	ds	1
  1091     0072                     _current_waveshape:
  1092     0072                     	ds	1
  1093     0073                     _duty:
  1094     0073                     	ds	2
  1095     0075                     _final_TMR0:
  1096     0075                     	ds	1
  1097                           
  1098                           	psect	bssBANK0
  1099     0020                     __pbssBANK0:
  1100     0020                     _symmetry_total:
  1101     0020                     	ds	4
  1102     0024                     _current_speed_log_32:
  1103     0024                     	ds	4
  1104     0028                     _current_speed_linear_32:
  1105     0028                     	ds	4
  1106     002C                     _speed_control_32:
  1107     002C                     	ds	4
  1108     0030                     _dTMR0_ideal:
  1109     0030                     	ds	2
  1110     0032                     _current_symmetry:
  1111     0032                     	ds	2
  1112     0034                     _current_depth:
  1113     0034                     	ds	2
  1114     0036                     _current_speed_log:
  1115     0036                     	ds	2
  1116     0038                     _current_speed_linear:
  1117     0038                     	ds	2
  1118     003A                     _how_many_128:
  1119     003A                     	ds	2
  1120     003C                     _speed_control:
  1121     003C                     	ds	2
  1122     003E                     _symmetry_status:
  1123     003E                     	ds	1
  1124     003F                     _clear_TMR0_please:
  1125     003F                     	ds	1
  1126     0040                     _raw_TMR0:
  1127     0040                     	ds	1
  1128     0041                     _prescaler_adjust:
  1129     0041                     	ds	1
  1130     0042                     _TMR0_offset_sign:
  1131     0042                     	ds	1
  1132     0043                     _TMR0_offset:
  1133     0043                     	ds	1
  1134     0044                     _current_quadrant:
  1135     0044                     	ds	1
  1136     0045                     _current_halfcycle:
  1137     0045                     	ds	1
  1138     0046                     _duty_high_byte:
  1139     0046                     	ds	1
  1140     0047                     _duty_low_byte:
  1141     0047                     	ds	1
  1142                           
  1143                           	psect	dataBANK0
  1144     0065                     __pdataBANK0:
  1145     0065                     _top_two_bytes_ptr:
  1146     0065                     	ds	2
  1147                           
  1148                           	psect	clrtext
  1149     0667                     clear_ram0:	
  1150                           ;	Called with FSR0 containing the base address, and
  1151                           ;	WREG with the size to clear
  1152                           
  1153     0667  0064               	clrwdt	;clear the watchdog before getting into this loop
  1154     0668                     clrloop0:
  1155     0668  0180               	clrf	0	;clear RAM location pointed to by FSR
  1156     0669  3101               	addfsr 0,1
  1157     066A  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1158     066B  2E68               	goto	clrloop0	;have we reached the end yet?
  1159     066C  3400               	retlw	0	;all done for this memory range, return
  1160                           
  1161                           	psect	cstackCOMMON
  1162     0076                     __pcstackCOMMON:
  1163     0076                     ?_ADJUST_TMR0:
  1164     0076                     ?_ADJUST_PRESCALER:	
  1165                           ; 1 bytes @ 0x0
  1166                           
  1167     0076                     ?_CONFIG_INT_OSC:	
  1168                           ; 1 bytes @ 0x0
  1169                           
  1170     0076                     ?_CONFIG_PORTS:	
  1171                           ; 1 bytes @ 0x0
  1172                           
  1173     0076                     ?_CONFIG_ADC_PINS:	
  1174                           ; 1 bytes @ 0x0
  1175                           
  1176     0076                     ?_DETERMINE_WAVESHAPE:	
  1177                           ; 1 bytes @ 0x0
  1178                           
  1179     0076                     ?_SET_DUTY_CCP3:	
  1180                           ; 1 bytes @ 0x0
  1181                           
  1182     0076                     ??_SET_DUTY_CCP3:	
  1183                           ; 1 bytes @ 0x0
  1184                           
  1185     0076                     ?_CONFIG_PWM_CCP3:	
  1186                           ; 1 bytes @ 0x0
  1187                           
  1188     0076                     ?_TURN_ON_CCP3_PWM:	
  1189                           ; 1 bytes @ 0x0
  1190                           
  1191     0076                     ?_CONFIG_TMR0_INTERRUPT:	
  1192                           ; 1 bytes @ 0x0
  1193                           
  1194     0076                     ?_CONFIG_SYSTEM:	
  1195                           ; 1 bytes @ 0x0
  1196                           
  1197     0076                     ?_TMR0_WRITE:	
  1198                           ; 1 bytes @ 0x0
  1199                           
  1200     0076                     ?_GET_CURRENT_POT_VALUES:	
  1201                           ; 1 bytes @ 0x0
  1202                           
  1203     0076                     ?_PROCESS_RAW_SPEED_AND_PRESCALER:	
  1204                           ; 1 bytes @ 0x0
  1205                           
  1206     0076                     ?_CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1:	
  1207                           ; 1 bytes @ 0x0
  1208                           
  1209     0076                     ?_TURN_PRESCALER_OFF:	
  1210                           ; 1 bytes @ 0x0
  1211                           
  1212     0076                     ?_TURN_PRESCALER_ON:	
  1213                           ; 1 bytes @ 0x0
  1214                           
  1215     0076                     ?_PROCESS_FINAL_SPEED_AND_PRESCALER:	
  1216                           ; 1 bytes @ 0x0
  1217                           
  1218     0076                     ?_SHORTEN_PERIOD:	
  1219                           ; 1 bytes @ 0x0
  1220                           
  1221     0076                     ?_LENGTHEN_PERIOD:	
  1222                           ; 1 bytes @ 0x0
  1223                           
  1224     0076                     ?_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST:	
  1225                           ; 1 bytes @ 0x0
  1226                           
  1227     0076                     ?_INTERRUPT_InterruptManager:	
  1228                           ; 1 bytes @ 0x0
  1229                           
  1230     0076                     ?_main:	
  1231                           ; 1 bytes @ 0x0
  1232                           
  1233                           
  1234                           ; 1 bytes @ 0x0
  1235     0076                     	ds	2
  1236     0078                     SET_DUTY_CCP3@temp:
  1237                           
  1238                           ; 1 bytes @ 0x2
  1239     0078                     	ds	1
  1240     0079                     SET_DUTY_CCP3@duty_ptr:
  1241                           
  1242                           ; 1 bytes @ 0x3
  1243     0079                     	ds	1
  1244     007A                     ??_INTERRUPT_InterruptManager:
  1245                           
  1246                           ; 1 bytes @ 0x4
  1247     007A                     	ds	2
  1248                           
  1249                           	psect	cstackBANK0
  1250     0048                     __pcstackBANK0:
  1251     0048                     ??_ADJUST_TMR0:
  1252     0048                     ??_ADJUST_PRESCALER:	
  1253                           ; 1 bytes @ 0x0
  1254                           
  1255     0048                     ??_CONFIG_INT_OSC:	
  1256                           ; 1 bytes @ 0x0
  1257                           
  1258     0048                     ??_CONFIG_PORTS:	
  1259                           ; 1 bytes @ 0x0
  1260                           
  1261     0048                     ??_CONFIG_ADC_PINS:	
  1262                           ; 1 bytes @ 0x0
  1263                           
  1264     0048                     ??_CONFIG_PWM_CCP3:	
  1265                           ; 1 bytes @ 0x0
  1266                           
  1267     0048                     ??_TURN_ON_CCP3_PWM:	
  1268                           ; 1 bytes @ 0x0
  1269                           
  1270     0048                     ??_CONFIG_TMR0_INTERRUPT:	
  1271                           ; 1 bytes @ 0x0
  1272                           
  1273     0048                     ??_CONFIG_SYSTEM:	
  1274                           ; 1 bytes @ 0x0
  1275                           
  1276     0048                     ??_TMR0_WRITE:	
  1277                           ; 1 bytes @ 0x0
  1278                           
  1279     0048                     ??_CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1:	
  1280                           ; 1 bytes @ 0x0
  1281                           
  1282     0048                     ??_TURN_PRESCALER_OFF:	
  1283                           ; 1 bytes @ 0x0
  1284                           
  1285     0048                     ??_TURN_PRESCALER_ON:	
  1286                           ; 1 bytes @ 0x0
  1287                           
  1288     0048                     ?_DO_ADC:	
  1289                           ; 1 bytes @ 0x0
  1290                           
  1291     0048                     ?___lmul:	
  1292                           ; 2 bytes @ 0x0
  1293                           
  1294     0048                     TMR0_WRITE@timer_value_ptr:	
  1295                           ; 4 bytes @ 0x0
  1296                           
  1297     0048                     DO_ADC@modifier:	
  1298                           ; 1 bytes @ 0x0
  1299                           
  1300     0048                     ___lmul@multiplier:	
  1301                           ; 2 bytes @ 0x0
  1302                           
  1303                           
  1304                           ; 4 bytes @ 0x0
  1305     0048                     	ds	2
  1306     004A                     ??_DO_ADC:
  1307                           
  1308                           ; 1 bytes @ 0x2
  1309     004A                     	ds	1
  1310     004B                     ??_PROCESS_FINAL_SPEED_AND_PRESCALER:
  1311     004B                     PROCESS_FINAL_SPEED_AND_PRESCALER@prescaler_overflow_flag:	
  1312                           ; 1 bytes @ 0x3
  1313                           
  1314     004B                     DO_ADC@adc_result:	
  1315                           ; 1 bytes @ 0x3
  1316                           
  1317                           
  1318                           ; 2 bytes @ 0x3
  1319     004B                     	ds	1
  1320     004C                     ___lmul@multiplicand:
  1321                           
  1322                           ; 4 bytes @ 0x4
  1323     004C                     	ds	1
  1324     004D                     DO_ADC@temp:
  1325                           
  1326                           ; 1 bytes @ 0x5
  1327     004D                     	ds	1
  1328     004E                     ??_DETERMINE_WAVESHAPE:
  1329     004E                     DETERMINE_WAVESHAPE@ADC:	
  1330                           ; 1 bytes @ 0x6
  1331                           
  1332                           
  1333                           ; 2 bytes @ 0x6
  1334     004E                     	ds	2
  1335     0050                     ??_GET_CURRENT_POT_VALUES:
  1336     0050                     ??___lmul:	
  1337                           ; 1 bytes @ 0x8
  1338                           
  1339     0050                     ___lmul@product:	
  1340                           ; 1 bytes @ 0x8
  1341                           
  1342                           
  1343                           ; 4 bytes @ 0x8
  1344     0050                     	ds	4
  1345     0054                     ??_PROCESS_RAW_SPEED_AND_PRESCALER:
  1346     0054                     ??_SHORTEN_PERIOD:	
  1347                           ; 1 bytes @ 0xC
  1348                           
  1349     0054                     ??_LENGTHEN_PERIOD:	
  1350                           ; 1 bytes @ 0xC
  1351                           
  1352                           
  1353                           ; 1 bytes @ 0xC
  1354     0054                     	ds	4
  1355     0058                     PROCESS_RAW_SPEED_AND_PRESCALER@speed_control_subtracted:
  1356     0058                     SHORTEN_PERIOD@dTMR0_ideal:	
  1357                           ; 2 bytes @ 0x10
  1358                           
  1359     0058                     LENGTHEN_PERIOD@dTMR0_ideal:	
  1360                           ; 2 bytes @ 0x10
  1361                           
  1362                           
  1363                           ; 2 bytes @ 0x10
  1364     0058                     	ds	2
  1365     005A                     SHORTEN_PERIOD@TMR0_raw_extra:
  1366                           
  1367                           ; 2 bytes @ 0x12
  1368     005A                     	ds	2
  1369     005C                     ??_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST:
  1370                           
  1371                           ; 1 bytes @ 0x14
  1372     005C                     	ds	4
  1373     0060                     PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST@temp:
  1374                           
  1375                           ; 4 bytes @ 0x18
  1376     0060                     	ds	4
  1377     0064                     PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST@symmetry_status:
  1378                           
  1379                           ; 1 bytes @ 0x1C
  1380     0064                     	ds	1
  1381     0065                     ??_main:
  1382                           
  1383                           	psect	maintext
  1384     0576                     __pmaintext:	
  1385                           ; 1 bytes @ 0x1D
  1386 ;;
  1387 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1388 ;;
  1389 ;; *************** function _main *****************
  1390 ;; Defined at:
  1391 ;;		line 612 in file "main.c"
  1392 ;; Parameters:    Size  Location     Type
  1393 ;;		None
  1394 ;; Auto vars:     Size  Location     Type
  1395 ;;		None
  1396 ;; Return value:  Size  Location     Type
  1397 ;;                  1    wreg      void 
  1398 ;; Registers used:
  1399 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1400 ;; Tracked objects:
  1401 ;;		On entry : B1F/0
  1402 ;;		On exit  : 1F/2
  1403 ;;		Unchanged: 0/0
  1404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1405 ;;      Params:         0       0       0       0
  1406 ;;      Locals:         0       0       0       0
  1407 ;;      Temps:          0       0       0       0
  1408 ;;      Totals:         0       0       0       0
  1409 ;;Total ram usage:        0 bytes
  1410 ;; Hardware stack levels required when called: 5
  1411 ;; This function calls:
  1412 ;;		_CONFIG_SYSTEM
  1413 ;;		_CONFIG_TMR0_INTERRUPT
  1414 ;;		_GET_CURRENT_POT_VALUES
  1415 ;;		_PROCESS_FINAL_SPEED_AND_PRESCALER
  1416 ;;		_PROCESS_RAW_SPEED_AND_PRESCALER
  1417 ;;		_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST
  1418 ;;		_TMR0_WRITE
  1419 ;;		_TURN_ON_CCP3_PWM
  1420 ;; This function is called by:
  1421 ;;		Startup code after reset
  1422 ;; This function uses a non-reentrant model
  1423 ;;
  1424                           
  1425     0576                     _main:	
  1426                           ;psect for function _main
  1427                           
  1428                           
  1429                           ;main.c: 614:     CONFIG_SYSTEM();
  1430                           
  1431                           ;incstack = 0
  1432                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1433     0576  3186  263A  3185   	fcall	_CONFIG_SYSTEM
  1434                           
  1435                           ;main.c: 615:     TURN_ON_CCP3_PWM();
  1436     0579  3186  2657  3185   	fcall	_TURN_ON_CCP3_PWM
  1437                           
  1438                           ;main.c: 616:     CONFIG_TMR0_INTERRUPT();
  1439     057C  3186  2681  3185   	fcall	_CONFIG_TMR0_INTERRUPT
  1440                           
  1441                           ;main.c: 617:     GET_CURRENT_POT_VALUES();
  1442     057F  3184  24A3  3185   	fcall	_GET_CURRENT_POT_VALUES
  1443                           
  1444                           ;main.c: 618:     PROCESS_RAW_SPEED_AND_PRESCALER();
  1445     0582  3183  23F4  3185   	fcall	_PROCESS_RAW_SPEED_AND_PRESCALER
  1446                           
  1447                           ;main.c: 621:     PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST();
  1448     0585  3183  2381  3185   	fcall	_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST
  1449                           
  1450                           ;main.c: 624:     PROCESS_FINAL_SPEED_AND_PRESCALER();
  1451     0588  3186  2613  3185   	fcall	_PROCESS_FINAL_SPEED_AND_PRESCALER
  1452                           
  1453                           ;main.c: 625:     TMR0_WRITE(&final_TMR0);
  1454     058B  3075               	movlw	(low (_final_TMR0| 0))& (0+255)
  1455     058C  3186  265F  3185   	fcall	_TMR0_WRITE
  1456                           
  1457                           ;main.c: 626:     GIE = 1;
  1458     058F  178B               	bsf	11,7	;volatile
  1459     0590                     l1991:
  1460                           
  1461                           ;main.c: 630:         GET_CURRENT_POT_VALUES();
  1462     0590  3184  24A3  3185   	fcall	_GET_CURRENT_POT_VALUES
  1463                           
  1464                           ;main.c: 631:         PROCESS_RAW_SPEED_AND_PRESCALER();
  1465     0593  3183  23F4  3185   	fcall	_PROCESS_RAW_SPEED_AND_PRESCALER
  1466                           
  1467                           ;main.c: 634:         PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST();
  1468     0596  3183  2381  3185   	fcall	_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST
  1469                           
  1470                           ;main.c: 636:         LATC5 = 1;
  1471     0599  0022               	movlb	2	; select bank2
  1472     059A  168E               	bsf	14,5	;volatile
  1473                           
  1474                           ;main.c: 637:         PROCESS_FINAL_SPEED_AND_PRESCALER();
  1475     059B  3186  2613  3185   	fcall	_PROCESS_FINAL_SPEED_AND_PRESCALER
  1476                           
  1477                           ;main.c: 638:         LATC5 = 0;
  1478     059E  0022               	movlb	2	; select bank2
  1479     059F  128E               	bcf	14,5	;volatile
  1480     05A0  2D90               	goto	l1991
  1481     05A1                     __end_of_main:
  1482                           
  1483                           	psect	text1
  1484     0657                     __ptext1:	
  1485 ;; *************** function _TURN_ON_CCP3_PWM *****************
  1486 ;; Defined at:
  1487 ;;		line 271 in file "main.c"
  1488 ;; Parameters:    Size  Location     Type
  1489 ;;		None
  1490 ;; Auto vars:     Size  Location     Type
  1491 ;;		None
  1492 ;; Return value:  Size  Location     Type
  1493 ;;                  1    wreg      unsigned char 
  1494 ;; Registers used:
  1495 ;;		None
  1496 ;; Tracked objects:
  1497 ;;		On entry : B1F/0
  1498 ;;		On exit  : B1F/1
  1499 ;;		Unchanged: B00/0
  1500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1501 ;;      Params:         0       0       0       0
  1502 ;;      Locals:         0       0       0       0
  1503 ;;      Temps:          0       0       0       0
  1504 ;;      Totals:         0       0       0       0
  1505 ;;Total ram usage:        0 bytes
  1506 ;; Hardware stack levels used: 1
  1507 ;; Hardware stack levels required when called: 2
  1508 ;; This function calls:
  1509 ;;		Nothing
  1510 ;; This function is called by:
  1511 ;;		_main
  1512 ;; This function uses a non-reentrant model
  1513 ;;
  1514                           
  1515     0657                     _TURN_ON_CCP3_PWM:	
  1516                           ;psect for function _TURN_ON_CCP3_PWM
  1517                           
  1518                           
  1519                           ;main.c: 273:     TMR2IF = 0;
  1520                           
  1521                           ;incstack = 0
  1522                           ; Regs used in _TURN_ON_CCP3_PWM: []
  1523     0657  1091               	bcf	17,1	;volatile
  1524                           
  1525                           ;main.c: 274:     TMR2ON = 1;
  1526     0658  151C               	bsf	28,2	;volatile
  1527     0659                     l177:	
  1528                           ;main.c: 275:     while(TMR2IF == 0){}
  1529                           
  1530     0659  1C91               	btfss	17,1	;volatile
  1531     065A  2E59               	goto	l177
  1532                           
  1533                           ;main.c: 276:     TMR2IF = 0;
  1534     065B  1091               	bcf	17,1	;volatile
  1535                           
  1536                           ;main.c: 277:     TRISA2 = 0;
  1537     065C  0021               	movlb	1	; select bank1
  1538     065D  110C               	bcf	12,2	;volatile
  1539                           
  1540                           ;main.c: 278:     return 1;;	Return value of _TURN_ON_CCP3_PWM is never used
  1541     065E  0008               	return
  1542     065F                     __end_of_TURN_ON_CCP3_PWM:
  1543                           
  1544                           	psect	text2
  1545     065F                     __ptext2:	
  1546 ;; *************** function _TMR0_WRITE *****************
  1547 ;; Defined at:
  1548 ;;		line 297 in file "main.c"
  1549 ;; Parameters:    Size  Location     Type
  1550 ;;  timer_value_    1    wreg     PTR volatile unsigned ch
  1551 ;;		 -> final_TMR0(1), 
  1552 ;; Auto vars:     Size  Location     Type
  1553 ;;  timer_value_    1    0[BANK0 ] PTR volatile unsigned ch
  1554 ;;		 -> final_TMR0(1), 
  1555 ;; Return value:  Size  Location     Type
  1556 ;;                  1    wreg      unsigned char 
  1557 ;; Registers used:
  1558 ;;		wreg, fsr1l, fsr1h
  1559 ;; Tracked objects:
  1560 ;;		On entry : 1E/0
  1561 ;;		On exit  : 1F/0
  1562 ;;		Unchanged: 0/0
  1563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1564 ;;      Params:         0       0       0       0
  1565 ;;      Locals:         0       1       0       0
  1566 ;;      Temps:          0       0       0       0
  1567 ;;      Totals:         0       1       0       0
  1568 ;;Total ram usage:        1 bytes
  1569 ;; Hardware stack levels used: 1
  1570 ;; Hardware stack levels required when called: 2
  1571 ;; This function calls:
  1572 ;;		Nothing
  1573 ;; This function is called by:
  1574 ;;		_main
  1575 ;; This function uses a non-reentrant model
  1576 ;;
  1577                           
  1578     065F                     _TMR0_WRITE:	
  1579                           ;psect for function _TMR0_WRITE
  1580                           
  1581                           
  1582                           ;incstack = 0
  1583                           ; Regs used in _TMR0_WRITE: [wregfsr1]
  1584                           ;TMR0_WRITE@timer_value_ptr stored from wreg
  1585     065F  0020               	movlb	0	; select bank0
  1586     0660  00C8               	movwf	TMR0_WRITE@timer_value_ptr
  1587                           
  1588                           ;main.c: 298:     TMR0 = (uint8_t) *timer_value_ptr;
  1589     0661  0848               	movf	TMR0_WRITE@timer_value_ptr,w
  1590     0662  0086               	movwf	6
  1591     0663  0187               	clrf	7
  1592     0664  0801               	movf	1,w
  1593     0665  0095               	movwf	21	;volatile
  1594     0666  0008               	return
  1595     0667                     __end_of_TMR0_WRITE:
  1596                           
  1597                           	psect	text3
  1598     0381                     __ptext3:	
  1599 ;; *************** function _PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST *****************
  1600 ;; Defined at:
  1601 ;;		line 486 in file "main.c"
  1602 ;; Parameters:    Size  Location     Type
  1603 ;;		None
  1604 ;; Auto vars:     Size  Location     Type
  1605 ;;  temp            4   24[BANK0 ] unsigned long 
  1606 ;;  symmetry_sta    1   28[BANK0 ] unsigned char 
  1607 ;; Return value:  Size  Location     Type
  1608 ;;                  1    wreg      unsigned char 
  1609 ;; Registers used:
  1610 ;;		wreg, status,2, status,0, pclath, cstack
  1611 ;; Tracked objects:
  1612 ;;		On entry : 1F/0
  1613 ;;		On exit  : 1F/0
  1614 ;;		Unchanged: 0/0
  1615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1616 ;;      Params:         0       0       0       0
  1617 ;;      Locals:         0       5       0       0
  1618 ;;      Temps:          0       4       0       0
  1619 ;;      Totals:         0       9       0       0
  1620 ;;Total ram usage:        9 bytes
  1621 ;; Hardware stack levels used: 1
  1622 ;; Hardware stack levels required when called: 4
  1623 ;; This function calls:
  1624 ;;		_LENGTHEN_PERIOD
  1625 ;;		_SHORTEN_PERIOD
  1626 ;;		___lmul
  1627 ;; This function is called by:
  1628 ;;		_main
  1629 ;; This function uses a non-reentrant model
  1630 ;;
  1631                           
  1632     0381                     _PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST:	
  1633                           ;psect for function _PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST
  1634                           
  1635                           
  1636                           ;main.c: 487:     if(current_symmetry == 128){
  1637                           
  1638                           ;incstack = 0
  1639                           ; Regs used in _PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST: [wreg+status,2+status,0+pclath
      +                          +cstack]
  1640     0381  3080               	movlw	128
  1641     0382  0632               	xorwf	_current_symmetry,w	;volatile
  1642     0383  0433               	iorwf	_current_symmetry+1,w	;volatile
  1643     0384  1D03               	btfss	3,2
  1644     0385  2B8C               	goto	l1935
  1645                           
  1646                           ;main.c: 488:         TMR0_offset = 0;
  1647     0386  01C3               	clrf	_TMR0_offset	;volatile
  1648                           
  1649                           ;main.c: 489:         TMR0_offset_sign = POSITIVE;
  1650     0387  3001               	movlw	1
  1651     0388  00C2               	movwf	_TMR0_offset_sign	;volatile
  1652                           
  1653                           ;main.c: 490:         prescaler_adjust = DO_NOTHING;
  1654     0389  01C1               	clrf	_prescaler_adjust	;volatile
  1655                           
  1656                           ;main.c: 491:         clear_TMR0_please = NO;
  1657     038A  01BF               	clrf	_clear_TMR0_please	;volatile
  1658                           
  1659                           ;main.c: 492:         return 1;;	Return value of _PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJU
      +                          ST is never used
  1660     038B  0008               	return
  1661     038C                     l1935:
  1662                           
  1663                           ;main.c: 494:     uint8_t symmetry_status = 0;
  1664     038C  01E4               	clrf	PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST@symmetry_status
  1665                           
  1666                           ;main.c: 495:     if(current_symmetry > 128){
  1667     038D  3000               	movlw	0
  1668     038E  0233               	subwf	_current_symmetry+1,w	;volatile
  1669     038F  3081               	movlw	129
  1670     0390  1903               	skipnz
  1671     0391  0232               	subwf	_current_symmetry,w	;volatile
  1672     0392  1C03               	skipc
  1673     0393  2B9F               	goto	l1943
  1674                           
  1675                           ;main.c: 496:         current_symmetry = 255 - current_symmetry;
  1676     0394  30FF               	movlw	255
  1677     0395  00DC               	movwf	??_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST
  1678     0396  0832               	movf	_current_symmetry,w	;volatile
  1679     0397  025C               	subwf	??_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST,w
  1680     0398  00B2               	movwf	_current_symmetry	;volatile
  1681     0399  0933               	comf	_current_symmetry+1,w	;volatile
  1682     039A  1803               	skipnc
  1683     039B  0A89               	incf	9,f
  1684     039C  00B3               	movwf	_current_symmetry+1	;volatile
  1685                           
  1686                           ;main.c: 497:         symmetry_status = 1;
  1687     039D  01E4               	clrf	PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST@symmetry_status
  1688     039E  0AE4               	incf	PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST@symmetry_status,f
  1689     039F                     l1943:
  1690                           
  1691                           ;main.c: 500:     uint32_t temp = (uint32_t)(361 * (uint32_t)(128 - current_symmetry));
  1692     039F  3080               	movlw	128
  1693     03A0  00DC               	movwf	??_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST
  1694     03A1  0832               	movf	_current_symmetry,w	;volatile
  1695     03A2  025C               	subwf	??_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST,w
  1696     03A3  00C8               	movwf	___lmul@multiplier
  1697     03A4  0933               	comf	_current_symmetry+1,w	;volatile
  1698     03A5  1803               	skipnc
  1699     03A6  0A89               	incf	9,f
  1700     03A7  00C9               	movwf	___lmul@multiplier+1
  1701     03A8  01CA               	clrf	___lmul@multiplier+2
  1702     03A9  01CB               	clrf	___lmul@multiplier+3
  1703     03AA  3000               	movlw	0
  1704     03AB  00CF               	movwf	___lmul@multiplicand+3
  1705     03AC  3000               	movlw	0
  1706     03AD  00CE               	movwf	___lmul@multiplicand+2
  1707     03AE  3001               	movlw	1
  1708     03AF  00CD               	movwf	___lmul@multiplicand+1
  1709     03B0  3069               	movlw	105
  1710     03B1  00CC               	movwf	___lmul@multiplicand
  1711     03B2  3185  251B  3183   	fcall	___lmul
  1712     03B5  084B               	movf	?___lmul+3,w
  1713     03B6  00E3               	movwf	PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST@temp+3
  1714     03B7  084A               	movf	?___lmul+2,w
  1715     03B8  00E2               	movwf	PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST@temp+2
  1716     03B9  0849               	movf	?___lmul+1,w
  1717     03BA  00E1               	movwf	PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST@temp+1
  1718     03BB  0848               	movf	?___lmul,w
  1719     03BC  00E0               	movwf	PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST@temp
  1720                           
  1721                           ;main.c: 501:     symmetry_total = (temp >> 7);
  1722     03BD  0860               	movf	PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST@temp,w
  1723     03BE  00DC               	movwf	??_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST
  1724     03BF  0861               	movf	PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST@temp+1,w
  1725     03C0  00DD               	movwf	??_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST+1
  1726     03C1  0862               	movf	PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST@temp+2,w
  1727     03C2  00DE               	movwf	??_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST+2
  1728     03C3  0863               	movf	PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST@temp+3,w
  1729     03C4  00DF               	movwf	??_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST+3
  1730     03C5  3007               	movlw	7
  1731     03C6                     u1485:
  1732     03C6  36DF               	lsrf	??_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST+3,f
  1733     03C7  0CDE               	rrf	??_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST+2,f
  1734     03C8  0CDD               	rrf	??_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST+1,f
  1735     03C9  0CDC               	rrf	??_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST,f
  1736     03CA  0B89               	decfsz	9,f
  1737     03CB  2BC6               	goto	u1485
  1738     03CC  085F               	movf	??_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST+3,w
  1739     03CD  00A3               	movwf	_symmetry_total+3	;volatile
  1740     03CE  085E               	movf	??_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST+2,w
  1741     03CF  00A2               	movwf	_symmetry_total+2	;volatile
  1742     03D0  085D               	movf	??_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST+1,w
  1743     03D1  00A1               	movwf	_symmetry_total+1	;volatile
  1744     03D2  085C               	movf	??_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST,w
  1745     03D3  00A0               	movwf	_symmetry_total	;volatile
  1746                           
  1747                           ;main.c: 503:     if((current_halfcycle == 0) && (symmetry_status == 0)){
  1748     03D4  0845               	movf	_current_halfcycle,w	;volatile
  1749     03D5  1D03               	btfss	3,2
  1750     03D6  2BDD               	goto	l1953
  1751     03D7  0864               	movf	PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST@symmetry_status,w
  1752     03D8  1D03               	btfss	3,2
  1753     03D9  2BDD               	goto	l1953
  1754     03DA                     l1951:
  1755                           
  1756                           ;main.c: 504:         SHORTEN_PERIOD();
  1757     03DA  3182  22E8         	fcall	_SHORTEN_PERIOD
  1758                           
  1759                           ;main.c: 505:     }
  1760     03DC  0008               	return
  1761     03DD                     l1953:
  1762     03DD  0845               	movf	_current_halfcycle,w	;volatile
  1763     03DE  1D03               	btfss	3,2
  1764     03DF  2BEA               	goto	l1959
  1765     03E0  0364               	decf	PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST@symmetry_status,w
  1766     03E1  1903               	btfsc	3,2
  1767     03E2  2BE7               	goto	l1957
  1768     03E3  2BEA               	goto	l1959
  1769     03E4                     l1961:
  1770     03E4  0864               	movf	PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST@symmetry_status,w
  1771     03E5  1D03               	btfss	3,2
  1772     03E6  2BED               	goto	l1965
  1773     03E7                     l1957:
  1774                           
  1775                           ;main.c: 507:         LENGTHEN_PERIOD();
  1776     03E7  3184  2461         	fcall	_LENGTHEN_PERIOD
  1777                           
  1778                           ;main.c: 508:     }
  1779     03E9  0008               	return
  1780     03EA                     l1959:
  1781     03EA  0345               	decf	_current_halfcycle,w	;volatile
  1782     03EB  1903               	btfsc	3,2
  1783     03EC  2BE4               	goto	l1961
  1784     03ED                     l1965:
  1785     03ED  0345               	decf	_current_halfcycle,w	;volatile
  1786     03EE  1D03               	btfss	3,2
  1787     03EF  0008               	return
  1788     03F0  0364               	decf	PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST@symmetry_status,w
  1789     03F1  1D03               	btfss	3,2
  1790     03F2  0008               	return
  1791     03F3  2BDA               	goto	l1951
  1792     03F4                     __end_of_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST:
  1793                           
  1794                           	psect	text4
  1795     02E8                     __ptext4:	
  1796 ;; *************** function _SHORTEN_PERIOD *****************
  1797 ;; Defined at:
  1798 ;;		line 434 in file "main.c"
  1799 ;; Parameters:    Size  Location     Type
  1800 ;;		None
  1801 ;; Auto vars:     Size  Location     Type
  1802 ;;  TMR0_raw_ext    2   18[BANK0 ] unsigned short 
  1803 ;;  dTMR0_ideal     2   16[BANK0 ] unsigned short 
  1804 ;; Return value:  Size  Location     Type
  1805 ;;                  1    wreg      unsigned char 
  1806 ;; Registers used:
  1807 ;;		wreg, status,2, status,0, pclath, cstack
  1808 ;; Tracked objects:
  1809 ;;		On entry : 1F/0
  1810 ;;		On exit  : 1F/0
  1811 ;;		Unchanged: 0/0
  1812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1813 ;;      Params:         0       0       0       0
  1814 ;;      Locals:         0       4       0       0
  1815 ;;      Temps:          0       4       0       0
  1816 ;;      Totals:         0       8       0       0
  1817 ;;Total ram usage:        8 bytes
  1818 ;; Hardware stack levels used: 1
  1819 ;; Hardware stack levels required when called: 3
  1820 ;; This function calls:
  1821 ;;		___lmul
  1822 ;; This function is called by:
  1823 ;;		_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST
  1824 ;; This function uses a non-reentrant model
  1825 ;;
  1826                           
  1827     02E8                     _SHORTEN_PERIOD:	
  1828                           ;psect for function _SHORTEN_PERIOD
  1829                           
  1830                           
  1831                           ;main.c: 435:     uint16_t dTMR0_ideal = (uint16_t)((uint32_t)(symmetry_total * 47926) >
      +                          > 16);
  1832                           
  1833                           ;incstack = 0
  1834                           ; Regs used in _SHORTEN_PERIOD: [wreg+status,2+status,0+pclath+cstack]
  1835     02E8  0823               	movf	_symmetry_total+3,w	;volatile
  1836     02E9  00CB               	movwf	___lmul@multiplier+3
  1837     02EA  0822               	movf	_symmetry_total+2,w	;volatile
  1838     02EB  00CA               	movwf	___lmul@multiplier+2
  1839     02EC  0821               	movf	_symmetry_total+1,w	;volatile
  1840     02ED  00C9               	movwf	___lmul@multiplier+1
  1841     02EE  0820               	movf	_symmetry_total,w	;volatile
  1842     02EF  00C8               	movwf	___lmul@multiplier
  1843     02F0  3000               	movlw	0
  1844     02F1  00CF               	movwf	___lmul@multiplicand+3
  1845     02F2  3000               	movlw	0
  1846     02F3  00CE               	movwf	___lmul@multiplicand+2
  1847     02F4  30BB               	movlw	187
  1848     02F5  00CD               	movwf	___lmul@multiplicand+1
  1849     02F6  3036               	movlw	54
  1850     02F7  00CC               	movwf	___lmul@multiplicand
  1851     02F8  3185  251B  3182   	fcall	___lmul
  1852     02FB  0848               	movf	?___lmul,w
  1853     02FC  00D4               	movwf	??_SHORTEN_PERIOD
  1854     02FD  0849               	movf	?___lmul+1,w
  1855     02FE  00D5               	movwf	??_SHORTEN_PERIOD+1
  1856     02FF  084A               	movf	?___lmul+2,w
  1857     0300  00D6               	movwf	??_SHORTEN_PERIOD+2
  1858     0301  084B               	movf	?___lmul+3,w
  1859     0302  00D7               	movwf	??_SHORTEN_PERIOD+3
  1860     0303  3010               	movlw	16
  1861     0304                     u1305:
  1862     0304  36D7               	lsrf	??_SHORTEN_PERIOD+3,f
  1863     0305  0CD6               	rrf	??_SHORTEN_PERIOD+2,f
  1864     0306  0CD5               	rrf	??_SHORTEN_PERIOD+1,f
  1865     0307  0CD4               	rrf	??_SHORTEN_PERIOD,f
  1866     0308  0B89               	decfsz	9,f
  1867     0309  2B04               	goto	u1305
  1868     030A  0855               	movf	??_SHORTEN_PERIOD+1,w
  1869     030B  00D9               	movwf	SHORTEN_PERIOD@dTMR0_ideal+1
  1870     030C  0854               	movf	??_SHORTEN_PERIOD,w
  1871     030D  00D8               	movwf	SHORTEN_PERIOD@dTMR0_ideal
  1872                           
  1873                           ;main.c: 437:     if((dTMR0_ideal + raw_TMR0) < 128){
  1874     030E  0840               	movf	_raw_TMR0,w	;volatile
  1875     030F  0758               	addwf	SHORTEN_PERIOD@dTMR0_ideal,w
  1876     0310  00D4               	movwf	??_SHORTEN_PERIOD
  1877     0311  0859               	movf	SHORTEN_PERIOD@dTMR0_ideal+1,w
  1878     0312  1803               	skipnc
  1879     0313  0A59               	incf	SHORTEN_PERIOD@dTMR0_ideal+1,w
  1880     0314  00D5               	movwf	??_SHORTEN_PERIOD+1
  1881     0315  3000               	movlw	0
  1882     0316  0255               	subwf	??_SHORTEN_PERIOD+1,w
  1883     0317  3080               	movlw	128
  1884     0318  1903               	skipnz
  1885     0319  0254               	subwf	??_SHORTEN_PERIOD,w
  1886     031A  1803               	skipnc
  1887     031B  2B23               	goto	l1809
  1888                           
  1889                           ;main.c: 438:         TMR0_offset = (uint8_t)dTMR0_ideal;
  1890     031C  0858               	movf	SHORTEN_PERIOD@dTMR0_ideal,w
  1891     031D  00C3               	movwf	_TMR0_offset	;volatile
  1892                           
  1893                           ;main.c: 439:         TMR0_offset_sign = POSITIVE;
  1894     031E  3001               	movlw	1
  1895     031F  00C2               	movwf	_TMR0_offset_sign	;volatile
  1896                           
  1897                           ;main.c: 440:         prescaler_adjust = DO_NOTHING;
  1898     0320  01C1               	clrf	_prescaler_adjust	;volatile
  1899                           
  1900                           ;main.c: 441:         clear_TMR0_please = NO;
  1901     0321  01BF               	clrf	_clear_TMR0_please	;volatile
  1902                           
  1903                           ;main.c: 442:     }
  1904     0322  0008               	return
  1905     0323                     l1809:
  1906     0323  0840               	movf	_raw_TMR0,w	;volatile
  1907     0324  0758               	addwf	SHORTEN_PERIOD@dTMR0_ideal,w
  1908     0325  00D4               	movwf	??_SHORTEN_PERIOD
  1909     0326  0859               	movf	SHORTEN_PERIOD@dTMR0_ideal+1,w
  1910     0327  1803               	skipnc
  1911     0328  0A59               	incf	SHORTEN_PERIOD@dTMR0_ideal+1,w
  1912     0329  00D5               	movwf	??_SHORTEN_PERIOD+1
  1913     032A  3080               	movlw	128
  1914     032B  0654               	xorwf	??_SHORTEN_PERIOD,w
  1915     032C  0455               	iorwf	??_SHORTEN_PERIOD+1,w
  1916     032D  1D03               	btfss	3,2
  1917     032E  2B37               	goto	l1819
  1918                           
  1919                           ;main.c: 444:         TMR0_offset = 0;
  1920     032F  01C3               	clrf	_TMR0_offset	;volatile
  1921                           
  1922                           ;main.c: 445:         TMR0_offset_sign = DONT_CARE;
  1923     0330  3004               	movlw	4
  1924     0331  00C2               	movwf	_TMR0_offset_sign	;volatile
  1925                           
  1926                           ;main.c: 446:         prescaler_adjust = DIVIDE_BY_TWO;
  1927     0332  3001               	movlw	1
  1928     0333                     L1:
  1929     0333  00C1               	movwf	_prescaler_adjust	;volatile
  1930                           
  1931                           ;main.c: 447:         clear_TMR0_please = YES;
  1932     0334  3001               	movlw	1
  1933     0335  00BF               	movwf	_clear_TMR0_please	;volatile
  1934                           
  1935                           ;main.c: 448:     }
  1936     0336  0008               	return
  1937     0337                     l1819:
  1938     0337  0840               	movf	_raw_TMR0,w	;volatile
  1939     0338  0758               	addwf	SHORTEN_PERIOD@dTMR0_ideal,w
  1940     0339  00D4               	movwf	??_SHORTEN_PERIOD
  1941     033A  0859               	movf	SHORTEN_PERIOD@dTMR0_ideal+1,w
  1942     033B  1803               	skipnc
  1943     033C  0A59               	incf	SHORTEN_PERIOD@dTMR0_ideal+1,w
  1944     033D  00D5               	movwf	??_SHORTEN_PERIOD+1
  1945     033E  3000               	movlw	0
  1946     033F  0255               	subwf	??_SHORTEN_PERIOD+1,w
  1947     0340  3081               	movlw	129
  1948     0341  1903               	skipnz
  1949     0342  0254               	subwf	??_SHORTEN_PERIOD,w
  1950     0343  1C03               	skipc
  1951     0344  0008               	return
  1952                           
  1953                           ;main.c: 450:         uint16_t TMR0_raw_extra = dTMR0_ideal + raw_TMR0 - 128;
  1954     0345  0840               	movf	_raw_TMR0,w	;volatile
  1955     0346  0758               	addwf	SHORTEN_PERIOD@dTMR0_ideal,w
  1956     0347  00D4               	movwf	??_SHORTEN_PERIOD
  1957     0348  0859               	movf	SHORTEN_PERIOD@dTMR0_ideal+1,w
  1958     0349  1803               	skipnc
  1959     034A  0A59               	incf	SHORTEN_PERIOD@dTMR0_ideal+1,w
  1960     034B  00D5               	movwf	??_SHORTEN_PERIOD+1
  1961     034C  0854               	movf	??_SHORTEN_PERIOD,w
  1962     034D  3E80               	addlw	128
  1963     034E  00DA               	movwf	SHORTEN_PERIOD@TMR0_raw_extra
  1964     034F  30FF               	movlw	255
  1965     0350  3D55               	addwfc	??_SHORTEN_PERIOD+1,w
  1966     0351  00DB               	movwf	SHORTEN_PERIOD@TMR0_raw_extra+1
  1967                           
  1968                           ;main.c: 451:         if(TMR0_raw_extra >> 7 == 0){
  1969     0352  085B               	movf	SHORTEN_PERIOD@TMR0_raw_extra+1,w
  1970     0353  00D5               	movwf	??_SHORTEN_PERIOD+1
  1971     0354  085A               	movf	SHORTEN_PERIOD@TMR0_raw_extra,w
  1972     0355  00D4               	movwf	??_SHORTEN_PERIOD
  1973     0356  3007               	movlw	7
  1974     0357                     u1345:
  1975     0357  36D5               	lsrf	??_SHORTEN_PERIOD+1,f
  1976     0358  0CD4               	rrf	??_SHORTEN_PERIOD,f
  1977     0359  0B89               	decfsz	9,f
  1978     035A  2B57               	goto	u1345
  1979     035B  0854               	movf	??_SHORTEN_PERIOD,w
  1980     035C  0455               	iorwf	??_SHORTEN_PERIOD+1,w
  1981     035D  1D03               	btfss	3,2
  1982     035E  2B68               	goto	l1825
  1983                           
  1984                           ;main.c: 452:             TMR0_offset = (uint8_t)TMR0_raw_extra;
  1985     035F  085A               	movf	SHORTEN_PERIOD@TMR0_raw_extra,w
  1986     0360  00C3               	movwf	_TMR0_offset	;volatile
  1987                           
  1988                           ;main.c: 453:             TMR0_offset_sign = POSITIVE;
  1989     0361  3001               	movlw	1
  1990     0362  00C2               	movwf	_TMR0_offset_sign	;volatile
  1991                           
  1992                           ;main.c: 454:             prescaler_adjust = DIVIDE_BY_TWO;
  1993     0363  3001               	movlw	1
  1994     0364  00C1               	movwf	_prescaler_adjust	;volatile
  1995                           
  1996                           ;main.c: 455:             clear_TMR0_please = YES;
  1997     0365  3001               	movlw	1
  1998     0366  00BF               	movwf	_clear_TMR0_please	;volatile
  1999                           
  2000                           ;main.c: 456:         }
  2001     0367  0008               	return
  2002     0368                     l1825:
  2003     0368  085B               	movf	SHORTEN_PERIOD@TMR0_raw_extra+1,w
  2004     0369  00D5               	movwf	??_SHORTEN_PERIOD+1
  2005     036A  085A               	movf	SHORTEN_PERIOD@TMR0_raw_extra,w
  2006     036B  00D4               	movwf	??_SHORTEN_PERIOD
  2007     036C  3007               	movlw	7
  2008     036D                     u1365:
  2009     036D  36D5               	lsrf	??_SHORTEN_PERIOD+1,f
  2010     036E  0CD4               	rrf	??_SHORTEN_PERIOD,f
  2011     036F  0B89               	decfsz	9,f
  2012     0370  2B6D               	goto	u1365
  2013     0371  0354               	decf	??_SHORTEN_PERIOD,w
  2014     0372  0455               	iorwf	??_SHORTEN_PERIOD+1,w
  2015     0373  1D03               	btfss	3,2
  2016     0374  0008               	return
  2017                           
  2018                           ;main.c: 458:             TMR0_raw_extra = TMR0_raw_extra - 128;
  2019     0375  085A               	movf	SHORTEN_PERIOD@TMR0_raw_extra,w
  2020     0376  3E80               	addlw	128
  2021     0377  00DA               	movwf	SHORTEN_PERIOD@TMR0_raw_extra
  2022     0378  30FF               	movlw	255
  2023     0379  3D5B               	addwfc	SHORTEN_PERIOD@TMR0_raw_extra+1,w
  2024     037A  00DB               	movwf	SHORTEN_PERIOD@TMR0_raw_extra+1
  2025                           
  2026                           ;main.c: 459:             TMR0_offset = (uint8_t)TMR0_raw_extra;
  2027     037B  085A               	movf	SHORTEN_PERIOD@TMR0_raw_extra,w
  2028     037C  00C3               	movwf	_TMR0_offset	;volatile
  2029                           
  2030                           ;main.c: 460:             TMR0_offset_sign = POSITIVE;
  2031     037D  3001               	movlw	1
  2032     037E  00C2               	movwf	_TMR0_offset_sign	;volatile
  2033                           
  2034                           ;main.c: 461:             prescaler_adjust = DIVIDE_BY_FOUR;
  2035     037F  3003               	movlw	3
  2036     0380  2B33               	goto	L1
  2037     0381                     __end_of_SHORTEN_PERIOD:
  2038                           
  2039                           	psect	text5
  2040     0461                     __ptext5:	
  2041 ;; *************** function _LENGTHEN_PERIOD *****************
  2042 ;; Defined at:
  2043 ;;		line 468 in file "main.c"
  2044 ;; Parameters:    Size  Location     Type
  2045 ;;		None
  2046 ;; Auto vars:     Size  Location     Type
  2047 ;;  dTMR0_ideal     2   16[BANK0 ] unsigned short 
  2048 ;; Return value:  Size  Location     Type
  2049 ;;                  1    wreg      unsigned char 
  2050 ;; Registers used:
  2051 ;;		wreg, status,2, status,0, pclath, cstack
  2052 ;; Tracked objects:
  2053 ;;		On entry : 1F/0
  2054 ;;		On exit  : 1F/0
  2055 ;;		Unchanged: 0/0
  2056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2057 ;;      Params:         0       0       0       0
  2058 ;;      Locals:         0       2       0       0
  2059 ;;      Temps:          0       4       0       0
  2060 ;;      Totals:         0       6       0       0
  2061 ;;Total ram usage:        6 bytes
  2062 ;; Hardware stack levels used: 1
  2063 ;; Hardware stack levels required when called: 3
  2064 ;; This function calls:
  2065 ;;		___lmul
  2066 ;; This function is called by:
  2067 ;;		_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST
  2068 ;; This function uses a non-reentrant model
  2069 ;;
  2070                           
  2071     0461                     _LENGTHEN_PERIOD:	
  2072                           ;psect for function _LENGTHEN_PERIOD
  2073                           
  2074                           
  2075                           ;main.c: 469:     uint16_t dTMR0_ideal = (uint16_t)((uint32_t)(symmetry_total * 17609) >
      +                          > 16);
  2076                           
  2077                           ;incstack = 0
  2078                           ; Regs used in _LENGTHEN_PERIOD: [wreg+status,2+status,0+pclath+cstack]
  2079     0461  0823               	movf	_symmetry_total+3,w	;volatile
  2080     0462  00CB               	movwf	___lmul@multiplier+3
  2081     0463  0822               	movf	_symmetry_total+2,w	;volatile
  2082     0464  00CA               	movwf	___lmul@multiplier+2
  2083     0465  0821               	movf	_symmetry_total+1,w	;volatile
  2084     0466  00C9               	movwf	___lmul@multiplier+1
  2085     0467  0820               	movf	_symmetry_total,w	;volatile
  2086     0468  00C8               	movwf	___lmul@multiplier
  2087     0469  3000               	movlw	0
  2088     046A  00CF               	movwf	___lmul@multiplicand+3
  2089     046B  3000               	movlw	0
  2090     046C  00CE               	movwf	___lmul@multiplicand+2
  2091     046D  3044               	movlw	68
  2092     046E  00CD               	movwf	___lmul@multiplicand+1
  2093     046F  30C9               	movlw	201
  2094     0470  00CC               	movwf	___lmul@multiplicand
  2095     0471  3185  251B  3184   	fcall	___lmul
  2096     0474  0848               	movf	?___lmul,w
  2097     0475  00D4               	movwf	??_LENGTHEN_PERIOD
  2098     0476  0849               	movf	?___lmul+1,w
  2099     0477  00D5               	movwf	??_LENGTHEN_PERIOD+1
  2100     0478  084A               	movf	?___lmul+2,w
  2101     0479  00D6               	movwf	??_LENGTHEN_PERIOD+2
  2102     047A  084B               	movf	?___lmul+3,w
  2103     047B  00D7               	movwf	??_LENGTHEN_PERIOD+3
  2104     047C  3010               	movlw	16
  2105     047D                     u1385:
  2106     047D  36D7               	lsrf	??_LENGTHEN_PERIOD+3,f
  2107     047E  0CD6               	rrf	??_LENGTHEN_PERIOD+2,f
  2108     047F  0CD5               	rrf	??_LENGTHEN_PERIOD+1,f
  2109     0480  0CD4               	rrf	??_LENGTHEN_PERIOD,f
  2110     0481  0B89               	decfsz	9,f
  2111     0482  2C7D               	goto	u1385
  2112     0483  0855               	movf	??_LENGTHEN_PERIOD+1,w
  2113     0484  00D9               	movwf	LENGTHEN_PERIOD@dTMR0_ideal+1
  2114     0485  0854               	movf	??_LENGTHEN_PERIOD,w
  2115     0486  00D8               	movwf	LENGTHEN_PERIOD@dTMR0_ideal
  2116                           
  2117                           ;main.c: 471:         if(raw_TMR0 < dTMR0_ideal){
  2118     0487  0840               	movf	_raw_TMR0,w	;volatile
  2119     0488  00D4               	movwf	??_LENGTHEN_PERIOD
  2120     0489  01D5               	clrf	??_LENGTHEN_PERIOD+1
  2121     048A  0859               	movf	LENGTHEN_PERIOD@dTMR0_ideal+1,w
  2122     048B  0255               	subwf	??_LENGTHEN_PERIOD+1,w
  2123     048C  1D03               	skipz
  2124     048D  2C90               	goto	u1395
  2125     048E  0858               	movf	LENGTHEN_PERIOD@dTMR0_ideal,w
  2126     048F  0254               	subwf	??_LENGTHEN_PERIOD,w
  2127     0490                     u1395:
  2128     0490  1803               	skipnc
  2129     0491  2C9D               	goto	l1851
  2130                           
  2131                           ;main.c: 472:             TMR0_offset = (uint8_t)(128 - (dTMR0_ideal - raw_TMR0));
  2132     0492  0858               	movf	LENGTHEN_PERIOD@dTMR0_ideal,w
  2133     0493  0240               	subwf	_raw_TMR0,w
  2134     0494  3E80               	addlw	128
  2135     0495  00C3               	movwf	_TMR0_offset	;volatile
  2136                           
  2137                           ;main.c: 473:             TMR0_offset_sign = POSITIVE;
  2138     0496  3001               	movlw	1
  2139     0497  00C2               	movwf	_TMR0_offset_sign	;volatile
  2140                           
  2141                           ;main.c: 474:             prescaler_adjust = MULTIPLY_BY_TWO;
  2142     0498  3002               	movlw	2
  2143     0499  00C1               	movwf	_prescaler_adjust	;volatile
  2144                           
  2145                           ;main.c: 475:             clear_TMR0_please = YES;
  2146     049A  3001               	movlw	1
  2147     049B  00BF               	movwf	_clear_TMR0_please	;volatile
  2148                           
  2149                           ;main.c: 476:         }
  2150     049C  0008               	return
  2151     049D                     l1851:
  2152                           
  2153                           ;main.c: 478:             TMR0_offset = (uint8_t)dTMR0_ideal;
  2154     049D  0858               	movf	LENGTHEN_PERIOD@dTMR0_ideal,w
  2155     049E  00C3               	movwf	_TMR0_offset	;volatile
  2156                           
  2157                           ;main.c: 479:             TMR0_offset_sign = NEGATIVE;
  2158     049F  01C2               	clrf	_TMR0_offset_sign	;volatile
  2159                           
  2160                           ;main.c: 480:             prescaler_adjust = DO_NOTHING;
  2161     04A0  01C1               	clrf	_prescaler_adjust	;volatile
  2162                           
  2163                           ;main.c: 481:             clear_TMR0_please = NO;
  2164     04A1  01BF               	clrf	_clear_TMR0_please	;volatile
  2165     04A2  0008               	return
  2166     04A3                     __end_of_LENGTHEN_PERIOD:
  2167                           
  2168                           	psect	text6
  2169     03F4                     __ptext6:	
  2170 ;; *************** function _PROCESS_RAW_SPEED_AND_PRESCALER *****************
  2171 ;; Defined at:
  2172 ;;		line 321 in file "main.c"
  2173 ;; Parameters:    Size  Location     Type
  2174 ;;		None
  2175 ;; Auto vars:     Size  Location     Type
  2176 ;;  speed_contro    2   16[BANK0 ] unsigned short 
  2177 ;; Return value:  Size  Location     Type
  2178 ;;                  1    wreg      unsigned char 
  2179 ;; Registers used:
  2180 ;;		wreg, status,2, status,0, pclath, cstack
  2181 ;; Tracked objects:
  2182 ;;		On entry : 1F/0
  2183 ;;		On exit  : 1F/0
  2184 ;;		Unchanged: 0/0
  2185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2186 ;;      Params:         0       0       0       0
  2187 ;;      Locals:         0       2       0       0
  2188 ;;      Temps:          0       4       0       0
  2189 ;;      Totals:         0       6       0       0
  2190 ;;Total ram usage:        6 bytes
  2191 ;; Hardware stack levels used: 1
  2192 ;; Hardware stack levels required when called: 3
  2193 ;; This function calls:
  2194 ;;		___lmul
  2195 ;; This function is called by:
  2196 ;;		_main
  2197 ;; This function uses a non-reentrant model
  2198 ;;
  2199                           
  2200     03F4                     _PROCESS_RAW_SPEED_AND_PRESCALER:	
  2201                           ;psect for function _PROCESS_RAW_SPEED_AND_PRESCALER
  2202                           
  2203                           
  2204                           ;main.c: 322:     current_speed_linear_32 = current_speed_linear;
  2205                           
  2206                           ;incstack = 0
  2207                           ; Regs used in _PROCESS_RAW_SPEED_AND_PRESCALER: [wreg+status,2+status,0+pclath+cstack]
  2208     03F4  0838               	movf	_current_speed_linear,w	;volatile
  2209     03F5  00A8               	movwf	_current_speed_linear_32	;volatile
  2210     03F6  0839               	movf	_current_speed_linear+1,w	;volatile
  2211     03F7  00A9               	movwf	_current_speed_linear_32+1	;volatile
  2212     03F8  01AA               	clrf	_current_speed_linear_32+2	;volatile
  2213     03F9  01AB               	clrf	_current_speed_linear_32+3	;volatile
  2214                           
  2215                           ;main.c: 323:     speed_control_32 = current_speed_linear_32 * 760;;
  2216     03FA  082B               	movf	_current_speed_linear_32+3,w	;volatile
  2217     03FB  00CB               	movwf	___lmul@multiplier+3
  2218     03FC  082A               	movf	_current_speed_linear_32+2,w	;volatile
  2219     03FD  00CA               	movwf	___lmul@multiplier+2
  2220     03FE  0829               	movf	_current_speed_linear_32+1,w	;volatile
  2221     03FF  00C9               	movwf	___lmul@multiplier+1
  2222     0400  0828               	movf	_current_speed_linear_32,w	;volatile
  2223     0401  00C8               	movwf	___lmul@multiplier
  2224     0402  3000               	movlw	0
  2225     0403  00CF               	movwf	___lmul@multiplicand+3
  2226     0404  3000               	movlw	0
  2227     0405  00CE               	movwf	___lmul@multiplicand+2
  2228     0406  3002               	movlw	2
  2229     0407  00CD               	movwf	___lmul@multiplicand+1
  2230     0408  30F8               	movlw	248
  2231     0409  00CC               	movwf	___lmul@multiplicand
  2232     040A  3185  251B  3183   	fcall	___lmul
  2233     040D  084B               	movf	?___lmul+3,w
  2234     040E  00AF               	movwf	_speed_control_32+3	;volatile
  2235     040F  084A               	movf	?___lmul+2,w
  2236     0410  00AE               	movwf	_speed_control_32+2	;volatile
  2237     0411  0849               	movf	?___lmul+1,w
  2238     0412  00AD               	movwf	_speed_control_32+1	;volatile
  2239     0413  0848               	movf	?___lmul,w
  2240     0414  00AC               	movwf	_speed_control_32	;volatile
  2241                           
  2242                           ;main.c: 324:     speed_control_32 = speed_control_32 >> 10;
  2243     0415  082C               	movf	_speed_control_32,w	;volatile
  2244     0416  00D4               	movwf	??_PROCESS_RAW_SPEED_AND_PRESCALER
  2245     0417  082D               	movf	_speed_control_32+1,w	;volatile
  2246     0418  00D5               	movwf	??_PROCESS_RAW_SPEED_AND_PRESCALER+1
  2247     0419  082E               	movf	_speed_control_32+2,w	;volatile
  2248     041A  00D6               	movwf	??_PROCESS_RAW_SPEED_AND_PRESCALER+2
  2249     041B  082F               	movf	_speed_control_32+3,w	;volatile
  2250     041C  00D7               	movwf	??_PROCESS_RAW_SPEED_AND_PRESCALER+3
  2251     041D  300A               	movlw	10
  2252     041E                     u1415:
  2253     041E  36D7               	lsrf	??_PROCESS_RAW_SPEED_AND_PRESCALER+3,f
  2254     041F  0CD6               	rrf	??_PROCESS_RAW_SPEED_AND_PRESCALER+2,f
  2255     0420  0CD5               	rrf	??_PROCESS_RAW_SPEED_AND_PRESCALER+1,f
  2256     0421  0CD4               	rrf	??_PROCESS_RAW_SPEED_AND_PRESCALER,f
  2257     0422  0B89               	decfsz	9,f
  2258     0423  2C1E               	goto	u1415
  2259     0424  0857               	movf	??_PROCESS_RAW_SPEED_AND_PRESCALER+3,w
  2260     0425  00AF               	movwf	_speed_control_32+3	;volatile
  2261     0426  0856               	movf	??_PROCESS_RAW_SPEED_AND_PRESCALER+2,w
  2262     0427  00AE               	movwf	_speed_control_32+2	;volatile
  2263     0428  0855               	movf	??_PROCESS_RAW_SPEED_AND_PRESCALER+1,w
  2264     0429  00AD               	movwf	_speed_control_32+1	;volatile
  2265     042A  0854               	movf	??_PROCESS_RAW_SPEED_AND_PRESCALER,w
  2266     042B  00AC               	movwf	_speed_control_32	;volatile
  2267                           
  2268                           ;main.c: 325:     speed_control = (uint16_t) speed_control_32;
  2269     042C  082D               	movf	_speed_control_32+1,w	;volatile
  2270     042D  00BD               	movwf	_speed_control+1	;volatile
  2271     042E  082C               	movf	_speed_control_32,w	;volatile
  2272     042F  00BC               	movwf	_speed_control	;volatile
  2273                           
  2274                           ;main.c: 327:         if(speed_control <= (127-12)){
  2275     0430  3000               	movlw	0
  2276     0431  023D               	subwf	_speed_control+1,w	;volatile
  2277     0432  3074               	movlw	116
  2278     0433  1903               	skipnz
  2279     0434  023C               	subwf	_speed_control,w	;volatile
  2280     0435  1803               	skipnc
  2281     0436  2C3D               	goto	l1901
  2282                           
  2283                           ;main.c: 328:             raw_TMR0 = (uint8_t) speed_control + 12;
  2284     0437  083C               	movf	_speed_control,w	;volatile
  2285     0438  3E0C               	addlw	12
  2286     0439  00C0               	movwf	_raw_TMR0	;volatile
  2287                           
  2288                           ;main.c: 329:             base_prescaler_bits_index = 1;
  2289     043A  3001               	movlw	1
  2290     043B  00F0               	movwf	_base_prescaler_bits_index	;volatile
  2291                           
  2292                           ;main.c: 330:         }
  2293     043C  0008               	return
  2294     043D                     l1901:
  2295                           
  2296                           ;main.c: 332:             uint16_t speed_control_subtracted;;main.c: 333:             sp
      +                          eed_control_subtracted = speed_control - (127-12);
  2297     043D  083C               	movf	_speed_control,w	;volatile
  2298     043E  3E8D               	addlw	141
  2299     043F  00D8               	movwf	PROCESS_RAW_SPEED_AND_PRESCALER@speed_control_subtracted
  2300     0440  30FF               	movlw	255
  2301     0441  3D3D               	addwfc	_speed_control+1,w	;volatile
  2302     0442  00D9               	movwf	PROCESS_RAW_SPEED_AND_PRESCALER@speed_control_subtracted+1
  2303                           
  2304                           ;main.c: 334:             how_many_128 = (uint8_t)(speed_control_subtracted >> 7);
  2305     0443  0859               	movf	PROCESS_RAW_SPEED_AND_PRESCALER@speed_control_subtracted+1,w
  2306     0444  00D5               	movwf	??_PROCESS_RAW_SPEED_AND_PRESCALER+1
  2307     0445  0858               	movf	PROCESS_RAW_SPEED_AND_PRESCALER@speed_control_subtracted,w
  2308     0446  00D4               	movwf	??_PROCESS_RAW_SPEED_AND_PRESCALER
  2309     0447  3007               	movlw	7
  2310     0448                     u1435:
  2311     0448  36D5               	lsrf	??_PROCESS_RAW_SPEED_AND_PRESCALER+1,f
  2312     0449  0CD4               	rrf	??_PROCESS_RAW_SPEED_AND_PRESCALER,f
  2313     044A  0B89               	decfsz	9,f
  2314     044B  2C48               	goto	u1435
  2315     044C  0854               	movf	??_PROCESS_RAW_SPEED_AND_PRESCALER,w
  2316     044D  00D6               	movwf	??_PROCESS_RAW_SPEED_AND_PRESCALER+2
  2317     044E  01D7               	clrf	??_PROCESS_RAW_SPEED_AND_PRESCALER+3
  2318     044F  0856               	movf	??_PROCESS_RAW_SPEED_AND_PRESCALER+2,w
  2319     0450  00BA               	movwf	_how_many_128	;volatile
  2320     0451  0857               	movf	??_PROCESS_RAW_SPEED_AND_PRESCALER+3,w
  2321     0452  00BB               	movwf	_how_many_128+1	;volatile
  2322                           
  2323                           ;main.c: 335:             raw_TMR0 = (uint8_t) (speed_control_subtracted - (how_many_128
      +                           << 7));
  2324     0453  083A               	movf	_how_many_128,w	;volatile
  2325     0454  00D4               	movwf	??_PROCESS_RAW_SPEED_AND_PRESCALER
  2326     0455  3006               	movlw	6
  2327     0456                     u1445:
  2328     0456  35D4               	lslf	??_PROCESS_RAW_SPEED_AND_PRESCALER,f
  2329     0457  3EFF               	addlw	-1
  2330     0458  1D03               	skipz
  2331     0459  2C56               	goto	u1445
  2332     045A  3554               	lslf	??_PROCESS_RAW_SPEED_AND_PRESCALER,w
  2333     045B  0758               	addwf	PROCESS_RAW_SPEED_AND_PRESCALER@speed_control_subtracted,w
  2334     045C  00C0               	movwf	_raw_TMR0	;volatile
  2335                           
  2336                           ;main.c: 338:             base_prescaler_bits_index = (uint8_t)(how_many_128 + 2);
  2337     045D  083A               	movf	_how_many_128,w	;volatile
  2338     045E  3E02               	addlw	2
  2339     045F  00F0               	movwf	_base_prescaler_bits_index	;volatile
  2340     0460  0008               	return
  2341     0461                     __end_of_PROCESS_RAW_SPEED_AND_PRESCALER:
  2342                           
  2343                           	psect	text7
  2344     051B                     __ptext7:	
  2345 ;; *************** function ___lmul *****************
  2346 ;; Defined at:
  2347 ;;		line 15 in file "/Applications/microchip/xc8/v2.45/pic/sources/c99/common/Umul32.c"
  2348 ;; Parameters:    Size  Location     Type
  2349 ;;  multiplier      4    0[BANK0 ] unsigned long 
  2350 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  2351 ;; Auto vars:     Size  Location     Type
  2352 ;;  product         4    8[BANK0 ] unsigned long 
  2353 ;; Return value:  Size  Location     Type
  2354 ;;                  4    0[BANK0 ] unsigned long 
  2355 ;; Registers used:
  2356 ;;		wreg, status,2, status,0
  2357 ;; Tracked objects:
  2358 ;;		On entry : 1F/0
  2359 ;;		On exit  : 1F/0
  2360 ;;		Unchanged: 0/0
  2361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2362 ;;      Params:         0       8       0       0
  2363 ;;      Locals:         0       4       0       0
  2364 ;;      Temps:          0       0       0       0
  2365 ;;      Totals:         0      12       0       0
  2366 ;;Total ram usage:       12 bytes
  2367 ;; Hardware stack levels used: 1
  2368 ;; Hardware stack levels required when called: 2
  2369 ;; This function calls:
  2370 ;;		Nothing
  2371 ;; This function is called by:
  2372 ;;		_PROCESS_RAW_SPEED_AND_PRESCALER
  2373 ;;		_SHORTEN_PERIOD
  2374 ;;		_LENGTHEN_PERIOD
  2375 ;;		_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST
  2376 ;; This function uses a non-reentrant model
  2377 ;;
  2378                           
  2379     051B                     ___lmul:	
  2380                           ;psect for function ___lmul
  2381                           
  2382                           
  2383                           ;incstack = 0
  2384                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  2385     051B  3000               	movlw	0
  2386     051C  00D3               	movwf	___lmul@product+3
  2387     051D  3000               	movlw	0
  2388     051E  00D2               	movwf	___lmul@product+2
  2389     051F  3000               	movlw	0
  2390     0520  00D1               	movwf	___lmul@product+1
  2391     0521  3000               	movlw	0
  2392     0522  00D0               	movwf	___lmul@product
  2393     0523                     l1677:
  2394     0523  1C48               	btfss	___lmul@multiplier,0
  2395     0524  2D2D               	goto	l1681
  2396     0525  084C               	movf	___lmul@multiplicand,w
  2397     0526  07D0               	addwf	___lmul@product,f
  2398     0527  084D               	movf	___lmul@multiplicand+1,w
  2399     0528  3DD1               	addwfc	___lmul@product+1,f
  2400     0529  084E               	movf	___lmul@multiplicand+2,w
  2401     052A  3DD2               	addwfc	___lmul@product+2,f
  2402     052B  084F               	movf	___lmul@multiplicand+3,w
  2403     052C  3DD3               	addwfc	___lmul@product+3,f
  2404     052D                     l1681:
  2405     052D  3001               	movlw	1
  2406     052E                     u1155:
  2407     052E  35CC               	lslf	___lmul@multiplicand,f
  2408     052F  0DCD               	rlf	___lmul@multiplicand+1,f
  2409     0530  0DCE               	rlf	___lmul@multiplicand+2,f
  2410     0531  0DCF               	rlf	___lmul@multiplicand+3,f
  2411     0532  0B89               	decfsz	9,f
  2412     0533  2D2E               	goto	u1155
  2413     0534  3001               	movlw	1
  2414     0535                     u1165:
  2415     0535  36CB               	lsrf	___lmul@multiplier+3,f
  2416     0536  0CCA               	rrf	___lmul@multiplier+2,f
  2417     0537  0CC9               	rrf	___lmul@multiplier+1,f
  2418     0538  0CC8               	rrf	___lmul@multiplier,f
  2419     0539  0B89               	decfsz	9,f
  2420     053A  2D35               	goto	u1165
  2421     053B  084B               	movf	___lmul@multiplier+3,w
  2422     053C  044A               	iorwf	___lmul@multiplier+2,w
  2423     053D  0449               	iorwf	___lmul@multiplier+1,w
  2424     053E  0448               	iorwf	___lmul@multiplier,w
  2425     053F  1D03               	skipz
  2426     0540  2D23               	goto	l1677
  2427     0541  0853               	movf	___lmul@product+3,w
  2428     0542  00CB               	movwf	?___lmul+3
  2429     0543  0852               	movf	___lmul@product+2,w
  2430     0544  00CA               	movwf	?___lmul+2
  2431     0545  0851               	movf	___lmul@product+1,w
  2432     0546  00C9               	movwf	?___lmul+1
  2433     0547  0850               	movf	___lmul@product,w
  2434     0548  00C8               	movwf	?___lmul
  2435     0549  0008               	return
  2436     054A                     __end_of___lmul:
  2437                           
  2438                           	psect	text8
  2439     0613                     __ptext8:	
  2440 ;; *************** function _PROCESS_FINAL_SPEED_AND_PRESCALER *****************
  2441 ;; Defined at:
  2442 ;;		line 375 in file "main.c"
  2443 ;; Parameters:    Size  Location     Type
  2444 ;;		None
  2445 ;; Auto vars:     Size  Location     Type
  2446 ;;  prescaler_ov    1    3[BANK0 ] unsigned char 
  2447 ;; Return value:  Size  Location     Type
  2448 ;;                  1    wreg      unsigned char 
  2449 ;; Registers used:
  2450 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2451 ;; Tracked objects:
  2452 ;;		On entry : 1D/0
  2453 ;;		On exit  : 1E/0
  2454 ;;		Unchanged: 0/0
  2455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2456 ;;      Params:         0       0       0       0
  2457 ;;      Locals:         0       1       0       0
  2458 ;;      Temps:          0       0       0       0
  2459 ;;      Totals:         0       1       0       0
  2460 ;;Total ram usage:        1 bytes
  2461 ;; Hardware stack levels used: 1
  2462 ;; Hardware stack levels required when called: 3
  2463 ;; This function calls:
  2464 ;;		_ADJUST_PRESCALER
  2465 ;;		_ADJUST_TMR0
  2466 ;;		_CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1
  2467 ;;		_TURN_PRESCALER_OFF
  2468 ;;		_TURN_PRESCALER_ON
  2469 ;; This function is called by:
  2470 ;;		_main
  2471 ;; This function uses a non-reentrant model
  2472 ;;
  2473                           
  2474     0613                     _PROCESS_FINAL_SPEED_AND_PRESCALER:	
  2475                           ;psect for function _PROCESS_FINAL_SPEED_AND_PRESCALER
  2476                           
  2477                           
  2478                           ;main.c: 378:     ADJUST_TMR0();
  2479                           
  2480                           ;incstack = 0
  2481                           ; Regs used in _PROCESS_FINAL_SPEED_AND_PRESCALER: [wreg-fsr0h+status,2+status,0+pclath+
      +                          cstack]
  2482     0613  3185  25E8  3186   	fcall	_ADJUST_TMR0
  2483                           
  2484                           ;main.c: 380:    uint8_t prescaler_overflow_flag = CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1();
  2485     0616  3185  25FE  3186   	fcall	_CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1
  2486     0619  0020               	movlb	0	; select bank0
  2487     061A  00CB               	movwf	PROCESS_FINAL_SPEED_AND_PRESCALER@prescaler_overflow_flag
  2488                           
  2489                           ;main.c: 383:     if(prescaler_overflow_flag){
  2490     061B  084B               	movf	PROCESS_FINAL_SPEED_AND_PRESCALER@prescaler_overflow_flag,w
  2491     061C  1903               	btfsc	3,2
  2492     061D  2E21               	goto	l1917
  2493                           
  2494                           ;main.c: 384:         TURN_PRESCALER_OFF();
  2495     061E  3186  2673         	fcall	_TURN_PRESCALER_OFF
  2496     0620  0008               	return
  2497     0621                     l1917:
  2498                           
  2499                           ;main.c: 388:         TURN_PRESCALER_ON();
  2500     0621  3186  267C  3186   	fcall	_TURN_PRESCALER_ON
  2501                           
  2502                           ;main.c: 391:     ADJUST_PRESCALER();
  2503     0624  3184  24E0         	fcall	_ADJUST_PRESCALER
  2504     0626  0008               	return
  2505     0627                     __end_of_PROCESS_FINAL_SPEED_AND_PRESCALER:
  2506                           
  2507                           	psect	text9
  2508     067C                     __ptext9:	
  2509 ;; *************** function _TURN_PRESCALER_ON *****************
  2510 ;; Defined at:
  2511 ;;		line 369 in file "main.c"
  2512 ;; Parameters:    Size  Location     Type
  2513 ;;		None
  2514 ;; Auto vars:     Size  Location     Type
  2515 ;;		None
  2516 ;; Return value:  Size  Location     Type
  2517 ;;                  1    wreg      unsigned char 
  2518 ;; Registers used:
  2519 ;;		status,2
  2520 ;; Tracked objects:
  2521 ;;		On entry : 1F/0
  2522 ;;		On exit  : 1F/1
  2523 ;;		Unchanged: 0/0
  2524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2525 ;;      Params:         0       0       0       0
  2526 ;;      Locals:         0       0       0       0
  2527 ;;      Temps:          0       0       0       0
  2528 ;;      Totals:         0       0       0       0
  2529 ;;Total ram usage:        0 bytes
  2530 ;; Hardware stack levels used: 1
  2531 ;; Hardware stack levels required when called: 2
  2532 ;; This function calls:
  2533 ;;		Nothing
  2534 ;; This function is called by:
  2535 ;;		_PROCESS_FINAL_SPEED_AND_PRESCALER
  2536 ;; This function uses a non-reentrant model
  2537 ;;
  2538                           
  2539     067C                     _TURN_PRESCALER_ON:	
  2540                           ;psect for function _TURN_PRESCALER_ON
  2541                           
  2542                           
  2543                           ;main.c: 370:     OPTION_REG = OPTION_REG & (0<<3);
  2544                           
  2545                           ;incstack = 0
  2546                           ; Regs used in _TURN_PRESCALER_ON: [status,2]
  2547     067C  0021               	movlb	1	; select bank1
  2548     067D  0195               	clrf	21	;volatile
  2549     067E  0008               	return
  2550     067F                     __end_of_TURN_PRESCALER_ON:
  2551                           
  2552                           	psect	text10
  2553     0673                     __ptext10:	
  2554 ;; *************** function _TURN_PRESCALER_OFF *****************
  2555 ;; Defined at:
  2556 ;;		line 363 in file "main.c"
  2557 ;; Parameters:    Size  Location     Type
  2558 ;;		None
  2559 ;; Auto vars:     Size  Location     Type
  2560 ;;		None
  2561 ;; Return value:  Size  Location     Type
  2562 ;;                  1    wreg      unsigned char 
  2563 ;; Registers used:
  2564 ;;		wreg, status,2
  2565 ;; Tracked objects:
  2566 ;;		On entry : 1F/0
  2567 ;;		On exit  : 1F/1
  2568 ;;		Unchanged: 0/0
  2569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2570 ;;      Params:         0       0       0       0
  2571 ;;      Locals:         0       0       0       0
  2572 ;;      Temps:          0       0       0       0
  2573 ;;      Totals:         0       0       0       0
  2574 ;;Total ram usage:        0 bytes
  2575 ;; Hardware stack levels used: 1
  2576 ;; Hardware stack levels required when called: 2
  2577 ;; This function calls:
  2578 ;;		Nothing
  2579 ;; This function is called by:
  2580 ;;		_PROCESS_FINAL_SPEED_AND_PRESCALER
  2581 ;; This function uses a non-reentrant model
  2582 ;;
  2583                           
  2584     0673                     _TURN_PRESCALER_OFF:	
  2585                           ;psect for function _TURN_PRESCALER_OFF
  2586                           
  2587                           
  2588                           ;main.c: 364:     OPTION_REG = OPTION_REG & (1<<3);
  2589                           
  2590                           ;incstack = 0
  2591                           ; Regs used in _TURN_PRESCALER_OFF: [wreg+status,2]
  2592     0673  0021               	movlb	1	; select bank1
  2593     0674  0815               	movf	21,w	;volatile
  2594     0675  3908               	andlw	8
  2595     0676  0095               	movwf	21	;volatile
  2596     0677  0008               	return
  2597     0678                     __end_of_TURN_PRESCALER_OFF:
  2598                           
  2599                           	psect	text11
  2600     05FE                     __ptext11:	
  2601 ;; *************** function _CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1 *****************
  2602 ;; Defined at:
  2603 ;;		line 352 in file "main.c"
  2604 ;; Parameters:    Size  Location     Type
  2605 ;;		None
  2606 ;; Auto vars:     Size  Location     Type
  2607 ;;		None
  2608 ;; Return value:  Size  Location     Type
  2609 ;;                  1    wreg      unsigned char 
  2610 ;; Registers used:
  2611 ;;		wreg
  2612 ;; Tracked objects:
  2613 ;;		On entry : 1F/0
  2614 ;;		On exit  : 0/0
  2615 ;;		Unchanged: 0/0
  2616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2617 ;;      Params:         0       0       0       0
  2618 ;;      Locals:         0       0       0       0
  2619 ;;      Temps:          0       3       0       0
  2620 ;;      Totals:         0       3       0       0
  2621 ;;Total ram usage:        3 bytes
  2622 ;; Hardware stack levels used: 1
  2623 ;; Hardware stack levels required when called: 2
  2624 ;; This function calls:
  2625 ;;		Nothing
  2626 ;; This function is called by:
  2627 ;;		_PROCESS_FINAL_SPEED_AND_PRESCALER
  2628 ;; This function uses a non-reentrant model
  2629 ;;
  2630                           
  2631     05FE                     _CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1:	
  2632                           ;psect for function _CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1
  2633                           
  2634                           
  2635                           ;main.c: 353:     if(((base_prescaler_bits_index + 1) > 7)){
  2636                           
  2637                           ;incstack = 0
  2638                           ; Regs used in _CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1: [wreg]
  2639     05FE  0870               	movf	_base_prescaler_bits_index,w	;volatile
  2640     05FF  3E01               	addlw	1
  2641     0600  00C8               	movwf	??_CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1
  2642     0601  3000               	movlw	0
  2643     0602  1803               	skipnc
  2644     0603  3001               	movlw	1
  2645     0604  00C9               	movwf	??_CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1+1
  2646     0605  0849               	movf	??_CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1+1,w
  2647     0606  3A80               	xorlw	128
  2648     0607  00CA               	movwf	??_CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1+2
  2649     0608  3080               	movlw	128
  2650     0609  024A               	subwf	??_CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1+2,w
  2651     060A  3008               	movlw	8
  2652     060B  1903               	btfsc	3,2
  2653     060C  0248               	subwf	??_CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1,w
  2654     060D  1C03               	skipc
  2655     060E  2E11               	goto	l1753
  2656                           
  2657                           ;main.c: 355:         return 1;
  2658     060F  3001               	movlw	1
  2659     0610  0008               	return
  2660     0611                     l1753:
  2661                           
  2662                           ;main.c: 358:         return 0;
  2663     0611  3000               	movlw	0
  2664     0612  0008               	return
  2665     0613                     __end_of_CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1:
  2666                           
  2667                           	psect	text12
  2668     05E8                     __ptext12:	
  2669 ;; *************** function _ADJUST_TMR0 *****************
  2670 ;; Defined at:
  2671 ;;		line 405 in file "main.c"
  2672 ;; Parameters:    Size  Location     Type
  2673 ;;		None
  2674 ;; Auto vars:     Size  Location     Type
  2675 ;;		None
  2676 ;; Return value:  Size  Location     Type
  2677 ;;                  1    wreg      unsigned char 
  2678 ;; Registers used:
  2679 ;;		wreg, status,2, status,0
  2680 ;; Tracked objects:
  2681 ;;		On entry : 1D/0
  2682 ;;		On exit  : 1F/0
  2683 ;;		Unchanged: 0/0
  2684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2685 ;;      Params:         0       0       0       0
  2686 ;;      Locals:         0       0       0       0
  2687 ;;      Temps:          0       0       0       0
  2688 ;;      Totals:         0       0       0       0
  2689 ;;Total ram usage:        0 bytes
  2690 ;; Hardware stack levels used: 1
  2691 ;; Hardware stack levels required when called: 2
  2692 ;; This function calls:
  2693 ;;		Nothing
  2694 ;; This function is called by:
  2695 ;;		_PROCESS_FINAL_SPEED_AND_PRESCALER
  2696 ;; This function uses a non-reentrant model
  2697 ;;
  2698                           
  2699     05E8                     _ADJUST_TMR0:	
  2700                           ;psect for function _ADJUST_TMR0
  2701                           
  2702                           
  2703                           ;main.c: 406:     if(clear_TMR0_please){
  2704                           
  2705                           ;incstack = 0
  2706                           ; Regs used in _ADJUST_TMR0: [wreg+status,2+status,0]
  2707     05E8  0020               	movlb	0	; select bank0
  2708     05E9  083F               	movf	_clear_TMR0_please,w	;volatile
  2709     05EA  1D03               	btfss	3,2
  2710                           
  2711                           ;main.c: 407:         raw_TMR0 = 0;
  2712     05EB  01C0               	clrf	_raw_TMR0	;volatile
  2713                           
  2714                           ;main.c: 409:     if((TMR0_offset_sign == POSITIVE) || (TMR0_offset_sign == DONT_CARE)){
  2715     05EC  0342               	decf	_TMR0_offset_sign,w	;volatile
  2716     05ED  1903               	btfsc	3,2
  2717     05EE  2DF3               	goto	l1773
  2718     05EF  3004               	movlw	4
  2719     05F0  0642               	xorwf	_TMR0_offset_sign,w	;volatile
  2720     05F1  1D03               	btfss	3,2
  2721     05F2  2DF7               	goto	l1775
  2722     05F3                     l1773:
  2723                           
  2724                           ;main.c: 410:         final_TMR0 = raw_TMR0 + TMR0_offset;
  2725     05F3  0840               	movf	_raw_TMR0,w	;volatile
  2726     05F4  0743               	addwf	_TMR0_offset,w	;volatile
  2727     05F5  00F5               	movwf	_final_TMR0	;volatile
  2728                           
  2729                           ;main.c: 411:     }
  2730     05F6  0008               	return
  2731     05F7                     l1775:
  2732     05F7  0842               	movf	_TMR0_offset_sign,w	;volatile
  2733     05F8  1D03               	btfss	3,2
  2734     05F9  0008               	return
  2735                           
  2736                           ;main.c: 413:         final_TMR0 = raw_TMR0 - TMR0_offset;
  2737     05FA  0843               	movf	_TMR0_offset,w	;volatile
  2738     05FB  0240               	subwf	_raw_TMR0,w	;volatile
  2739     05FC  00F5               	movwf	_final_TMR0	;volatile
  2740     05FD  0008               	return
  2741     05FE                     __end_of_ADJUST_TMR0:
  2742                           
  2743                           	psect	text13
  2744     04E0                     __ptext13:	
  2745 ;; *************** function _ADJUST_PRESCALER *****************
  2746 ;; Defined at:
  2747 ;;		line 418 in file "main.c"
  2748 ;; Parameters:    Size  Location     Type
  2749 ;;		None
  2750 ;; Auto vars:     Size  Location     Type
  2751 ;;		None
  2752 ;; Return value:  Size  Location     Type
  2753 ;;                  1    wreg      unsigned char 
  2754 ;; Registers used:
  2755 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  2756 ;; Tracked objects:
  2757 ;;		On entry : 1F/1
  2758 ;;		On exit  : 1E/0
  2759 ;;		Unchanged: 0/0
  2760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2761 ;;      Params:         0       0       0       0
  2762 ;;      Locals:         0       0       0       0
  2763 ;;      Temps:          0       0       0       0
  2764 ;;      Totals:         0       0       0       0
  2765 ;;Total ram usage:        0 bytes
  2766 ;; Hardware stack levels used: 1
  2767 ;; Hardware stack levels required when called: 2
  2768 ;; This function calls:
  2769 ;;		Nothing
  2770 ;; This function is called by:
  2771 ;;		_PROCESS_FINAL_SPEED_AND_PRESCALER
  2772 ;; This function uses a non-reentrant model
  2773 ;;
  2774                           
  2775     04E0                     _ADJUST_PRESCALER:	
  2776                           ;psect for function _ADJUST_PRESCALER
  2777                           
  2778                           
  2779                           ;main.c: 419:     if(prescaler_adjust == DIVIDE_BY_TWO){
  2780                           
  2781                           ;incstack = 0
  2782                           ; Regs used in _ADJUST_PRESCALER: [wreg-fsr0h+status,2+status,0+pclath]
  2783     04E0  0020               	movlb	0	; select bank0
  2784     04E1  0341               	decf	_prescaler_adjust,w	;volatile
  2785     04E2  1D03               	btfss	3,2
  2786     04E3  2CEF               	goto	l1785
  2787                           
  2788                           ;main.c: 420:         OPTION_REG = prescaler_bits[base_prescaler_bits_index + 1];
  2789     04E4  0870               	movf	_base_prescaler_bits_index,w	;volatile
  2790     04E5  3E50               	addlw	low ((_prescaler_bits+1)| (0+32768))
  2791     04E6  0084               	movwf	4
  2792     04E7  3086               	movlw	high ((_prescaler_bits+1)| (0+32768))
  2793     04E8  1803               	skipnc
  2794     04E9  3E01               	addlw	1
  2795     04EA  0085               	movwf	5
  2796     04EB  0800               	movf	0,w	;code access
  2797     04EC  0021               	movlb	1	; select bank1
  2798     04ED  0095               	movwf	21	;volatile
  2799                           
  2800                           ;main.c: 421:     }
  2801     04EE  0008               	return
  2802     04EF                     l1785:
  2803     04EF  3003               	movlw	3
  2804     04F0  0641               	xorwf	_prescaler_adjust,w	;volatile
  2805     04F1  1D03               	btfss	3,2
  2806     04F2  2CFE               	goto	l1789
  2807                           
  2808                           ;main.c: 423:         OPTION_REG = prescaler_bits[base_prescaler_bits_index + 2];
  2809     04F3  0870               	movf	_base_prescaler_bits_index,w	;volatile
  2810     04F4  3E51               	addlw	low ((_prescaler_bits+2)| (0+32768))
  2811     04F5  0084               	movwf	4
  2812     04F6  3086               	movlw	high ((_prescaler_bits+2)| (0+32768))
  2813     04F7  1803               	skipnc
  2814     04F8  3E01               	addlw	1
  2815     04F9  0085               	movwf	5
  2816     04FA  0800               	movf	0,w	;code access
  2817     04FB  0021               	movlb	1	; select bank1
  2818     04FC  0095               	movwf	21	;volatile
  2819                           
  2820                           ;main.c: 424:     }
  2821     04FD  0008               	return
  2822     04FE                     l1789:
  2823     04FE  3002               	movlw	2
  2824     04FF  0641               	xorwf	_prescaler_adjust,w	;volatile
  2825     0500  1D03               	btfss	3,2
  2826     0501  2D0D               	goto	l1793
  2827                           
  2828                           ;main.c: 426:         OPTION_REG = prescaler_bits[base_prescaler_bits_index - 1];
  2829     0502  0870               	movf	_base_prescaler_bits_index,w	;volatile
  2830     0503  3E4E               	addlw	low ((_prescaler_bits+65535)| (0+32768))
  2831     0504  0084               	movwf	4
  2832     0505  3086               	movlw	high ((_prescaler_bits+65535)| (0+32768))
  2833     0506  1803               	skipnc
  2834     0507  3E01               	addlw	1
  2835     0508  0085               	movwf	5
  2836     0509  0800               	movf	0,w	;code access
  2837     050A  0021               	movlb	1	; select bank1
  2838     050B  0095               	movwf	21	;volatile
  2839                           
  2840                           ;main.c: 427:     }
  2841     050C  0008               	return
  2842     050D                     l1793:
  2843     050D  0841               	movf	_prescaler_adjust,w	;volatile
  2844     050E  1D03               	btfss	3,2
  2845     050F  0008               	return
  2846                           
  2847                           ;main.c: 429:         OPTION_REG = prescaler_bits[base_prescaler_bits_index];
  2848     0510  0870               	movf	_base_prescaler_bits_index,w	;volatile
  2849     0511  3E4F               	addlw	low (_prescaler_bits| (0+32768))
  2850     0512  0084               	movwf	4
  2851     0513  3086               	movlw	high (_prescaler_bits| (0+32768))
  2852     0514  1803               	skipnc
  2853     0515  3E01               	addlw	1
  2854     0516  0085               	movwf	5
  2855     0517  0800               	movf	0,w	;code access
  2856     0518  0021               	movlb	1	; select bank1
  2857     0519  0095               	movwf	21	;volatile
  2858     051A  0008               	return
  2859     051B                     __end_of_ADJUST_PRESCALER:
  2860                           
  2861                           	psect	text14
  2862     04A3                     __ptext14:	
  2863 ;; *************** function _GET_CURRENT_POT_VALUES *****************
  2864 ;; Defined at:
  2865 ;;		line 303 in file "main.c"
  2866 ;; Parameters:    Size  Location     Type
  2867 ;;		None
  2868 ;; Auto vars:     Size  Location     Type
  2869 ;;  symmetry_ADC    1    0        unsigned char 
  2870 ;; Return value:  Size  Location     Type
  2871 ;;                  1    wreg      unsigned char 
  2872 ;; Registers used:
  2873 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2874 ;; Tracked objects:
  2875 ;;		On entry : 1C/1
  2876 ;;		On exit  : 1F/0
  2877 ;;		Unchanged: 0/0
  2878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2879 ;;      Params:         0       0       0       0
  2880 ;;      Locals:         0       0       0       0
  2881 ;;      Temps:          0       2       0       0
  2882 ;;      Totals:         0       2       0       0
  2883 ;;Total ram usage:        2 bytes
  2884 ;; Hardware stack levels used: 1
  2885 ;; Hardware stack levels required when called: 4
  2886 ;; This function calls:
  2887 ;;		_DETERMINE_WAVESHAPE
  2888 ;;		_DO_ADC
  2889 ;; This function is called by:
  2890 ;;		_main
  2891 ;; This function uses a non-reentrant model
  2892 ;;
  2893                           
  2894     04A3                     _GET_CURRENT_POT_VALUES:	
  2895                           ;psect for function _GET_CURRENT_POT_VALUES
  2896                           
  2897                           
  2898                           ;main.c: 304:     current_waveshape = DETERMINE_WAVESHAPE();
  2899                           
  2900                           ;incstack = 0
  2901                           ; Regs used in _GET_CURRENT_POT_VALUES: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2902     04A3  3185  25A1  3184   	fcall	_DETERMINE_WAVESHAPE
  2903     04A6  00F2               	movwf	_current_waveshape	;volatile
  2904                           
  2905                           ;main.c: 305:     current_speed_linear = DO_ADC(&speed_adc_config_value);
  2906     04A7  308E               	movlw	low (_speed_adc_config_value| (0+32768))
  2907     04A8  00C8               	movwf	DO_ADC@modifier
  2908     04A9  3086               	movlw	high (_speed_adc_config_value| (0+32768))
  2909     04AA  00C9               	movwf	DO_ADC@modifier+1
  2910     04AB  3185  254A  3184   	fcall	_DO_ADC
  2911     04AE  0849               	movf	?_DO_ADC+1,w
  2912     04AF  00B9               	movwf	_current_speed_linear+1	;volatile
  2913     04B0  0848               	movf	?_DO_ADC,w
  2914     04B1  00B8               	movwf	_current_speed_linear	;volatile
  2915                           
  2916                           ;main.c: 307:         current_depth = DO_ADC(&depth_adc_config_value);
  2917     04B2  308D               	movlw	low (_depth_adc_config_value| (0+32768))
  2918     04B3  00C8               	movwf	DO_ADC@modifier
  2919     04B4  3086               	movlw	high (_depth_adc_config_value| (0+32768))
  2920     04B5  00C9               	movwf	DO_ADC@modifier+1
  2921     04B6  3185  254A  3184   	fcall	_DO_ADC
  2922     04B9  0849               	movf	?_DO_ADC+1,w
  2923     04BA  00B5               	movwf	_current_depth+1	;volatile
  2924     04BB  0848               	movf	?_DO_ADC,w
  2925     04BC  00B4               	movwf	_current_depth	;volatile
  2926                           
  2927                           ;main.c: 308:         current_depth = current_depth >> 2;
  2928     04BD  0835               	movf	_current_depth+1,w	;volatile
  2929     04BE  00D1               	movwf	??_GET_CURRENT_POT_VALUES+1
  2930     04BF  0834               	movf	_current_depth,w	;volatile
  2931     04C0  00D0               	movwf	??_GET_CURRENT_POT_VALUES
  2932     04C1  36D1               	lsrf	??_GET_CURRENT_POT_VALUES+1,f
  2933     04C2  0CD0               	rrf	??_GET_CURRENT_POT_VALUES,f
  2934     04C3  36D1               	lsrf	??_GET_CURRENT_POT_VALUES+1,f
  2935     04C4  0CD0               	rrf	??_GET_CURRENT_POT_VALUES,f
  2936     04C5  0850               	movf	??_GET_CURRENT_POT_VALUES,w
  2937     04C6  00B4               	movwf	_current_depth	;volatile
  2938     04C7  0851               	movf	??_GET_CURRENT_POT_VALUES+1,w
  2939     04C8  00B5               	movwf	_current_depth+1	;volatile
  2940                           
  2941                           ;main.c: 311:         current_symmetry = DO_ADC(&symmetry_adc_config_value);
  2942     04C9  308C               	movlw	low (_symmetry_adc_config_value| (0+32768))
  2943     04CA  00C8               	movwf	DO_ADC@modifier
  2944     04CB  3086               	movlw	high (_symmetry_adc_config_value| (0+32768))
  2945     04CC  00C9               	movwf	DO_ADC@modifier+1
  2946     04CD  3185  254A         	fcall	_DO_ADC
  2947     04CF  0849               	movf	?_DO_ADC+1,w
  2948     04D0  00B3               	movwf	_current_symmetry+1	;volatile
  2949     04D1  0848               	movf	?_DO_ADC,w
  2950     04D2  00B2               	movwf	_current_symmetry	;volatile
  2951                           
  2952                           ;main.c: 314:             current_symmetry = current_symmetry >> 2;
  2953                           
  2954                           ;main.c: 313:         if(symmetry_ADC_resolution == 8){
  2955     04D3  0833               	movf	_current_symmetry+1,w	;volatile
  2956     04D4  00D1               	movwf	??_GET_CURRENT_POT_VALUES+1
  2957     04D5  0832               	movf	_current_symmetry,w	;volatile
  2958     04D6  00D0               	movwf	??_GET_CURRENT_POT_VALUES
  2959     04D7  36D1               	lsrf	??_GET_CURRENT_POT_VALUES+1,f
  2960     04D8  0CD0               	rrf	??_GET_CURRENT_POT_VALUES,f
  2961     04D9  36D1               	lsrf	??_GET_CURRENT_POT_VALUES+1,f
  2962     04DA  0CD0               	rrf	??_GET_CURRENT_POT_VALUES,f
  2963     04DB  0850               	movf	??_GET_CURRENT_POT_VALUES,w
  2964     04DC  00B2               	movwf	_current_symmetry	;volatile
  2965     04DD  0851               	movf	??_GET_CURRENT_POT_VALUES+1,w
  2966     04DE  00B3               	movwf	_current_symmetry+1	;volatile
  2967     04DF  0008               	return
  2968     04E0                     __end_of_GET_CURRENT_POT_VALUES:
  2969                           
  2970                           	psect	text15
  2971     05A1                     __ptext15:	
  2972 ;; *************** function _DETERMINE_WAVESHAPE *****************
  2973 ;; Defined at:
  2974 ;;		line 224 in file "main.c"
  2975 ;; Parameters:    Size  Location     Type
  2976 ;;		None
  2977 ;; Auto vars:     Size  Location     Type
  2978 ;;  ADC             2    6[BANK0 ] unsigned short 
  2979 ;; Return value:  Size  Location     Type
  2980 ;;                  1    wreg      unsigned char 
  2981 ;; Registers used:
  2982 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2983 ;; Tracked objects:
  2984 ;;		On entry : 1C/1
  2985 ;;		On exit  : 1F/0
  2986 ;;		Unchanged: 0/0
  2987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2988 ;;      Params:         0       0       0       0
  2989 ;;      Locals:         0       2       0       0
  2990 ;;      Temps:          0       0       0       0
  2991 ;;      Totals:         0       2       0       0
  2992 ;;Total ram usage:        2 bytes
  2993 ;; Hardware stack levels used: 1
  2994 ;; Hardware stack levels required when called: 3
  2995 ;; This function calls:
  2996 ;;		_DO_ADC
  2997 ;; This function is called by:
  2998 ;;		_GET_CURRENT_POT_VALUES
  2999 ;; This function uses a non-reentrant model
  3000 ;;
  3001                           
  3002     05A1                     _DETERMINE_WAVESHAPE:	
  3003                           ;psect for function _DETERMINE_WAVESHAPE
  3004                           
  3005                           
  3006                           ;main.c: 225:     uint16_t ADC = DO_ADC(&waveshape_adc_config_value);
  3007                           
  3008                           ;incstack = 0
  3009                           ; Regs used in _DETERMINE_WAVESHAPE: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3010     05A1  308F               	movlw	low (_waveshape_adc_config_value| (0+32768))
  3011     05A2  0020               	movlb	0	; select bank0
  3012     05A3  00C8               	movwf	DO_ADC@modifier
  3013     05A4  3086               	movlw	high (_waveshape_adc_config_value| (0+32768))
  3014     05A5  00C9               	movwf	DO_ADC@modifier+1
  3015     05A6  3185  254A  3185   	fcall	_DO_ADC
  3016     05A9  0849               	movf	?_DO_ADC+1,w
  3017     05AA  00CF               	movwf	DETERMINE_WAVESHAPE@ADC+1
  3018     05AB  0848               	movf	?_DO_ADC,w
  3019     05AC  00CE               	movwf	DETERMINE_WAVESHAPE@ADC
  3020                           
  3021                           ;main.c: 226:     if(ADC <= 341){
  3022     05AD  3001               	movlw	1
  3023     05AE  024F               	subwf	DETERMINE_WAVESHAPE@ADC+1,w
  3024     05AF  3056               	movlw	86
  3025     05B0  1903               	skipnz
  3026     05B1  024E               	subwf	DETERMINE_WAVESHAPE@ADC,w
  3027     05B2  1803               	skipnc
  3028     05B3  2DB6               	goto	l1711
  3029                           
  3030                           ;main.c: 227:             return 0;
  3031     05B4  3000               	movlw	0
  3032     05B5  0008               	return
  3033     05B6                     l1711:
  3034                           
  3035                           ;main.c: 229:         if (ADC <= 682){
  3036     05B6  3002               	movlw	2
  3037     05B7  024F               	subwf	DETERMINE_WAVESHAPE@ADC+1,w
  3038     05B8  30AB               	movlw	171
  3039     05B9  1903               	skipnz
  3040     05BA  024E               	subwf	DETERMINE_WAVESHAPE@ADC,w
  3041     05BB  1803               	skipnc
  3042     05BC  2DBF               	goto	l1717
  3043     05BD                     l1713:
  3044                           
  3045                           ;main.c: 230:             return 1;
  3046     05BD  3001               	movlw	1
  3047     05BE  0008               	return
  3048     05BF                     l1717:
  3049                           
  3050                           ;main.c: 232:         if (ADC <= 1023){
  3051     05BF  3004               	movlw	4
  3052     05C0  024F               	subwf	DETERMINE_WAVESHAPE@ADC+1,w
  3053     05C1  3000               	movlw	0
  3054     05C2  1903               	skipnz
  3055     05C3  024E               	subwf	DETERMINE_WAVESHAPE@ADC,w
  3056     05C4  1803               	skipnc
  3057     05C5  2DBD               	goto	l1713
  3058                           
  3059                           ;main.c: 233:             return 2;
  3060     05C6  3002               	movlw	2
  3061     05C7  0008               	return
  3062     05C8                     __end_of_DETERMINE_WAVESHAPE:
  3063                           
  3064                           	psect	text16
  3065     054A                     __ptext16:	
  3066 ;; *************** function _DO_ADC *****************
  3067 ;; Defined at:
  3068 ;;		line 209 in file "main.c"
  3069 ;; Parameters:    Size  Location     Type
  3070 ;;  modifier        2    0[BANK0 ] PTR const unsigned char 
  3071 ;;		 -> symmetry_adc_config_value(1), depth_adc_config_value(1), speed_adc_config_value(1), waveshape_adc_config_value(1
      +), 
  3072 ;; Auto vars:     Size  Location     Type
  3073 ;;  adc_result      2    3[BANK0 ] unsigned short 
  3074 ;;  temp            1    5[BANK0 ] unsigned char 
  3075 ;; Return value:  Size  Location     Type
  3076 ;;                  2    0[BANK0 ] unsigned short 
  3077 ;; Registers used:
  3078 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  3079 ;; Tracked objects:
  3080 ;;		On entry : 1F/0
  3081 ;;		On exit  : 1F/0
  3082 ;;		Unchanged: 0/0
  3083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3084 ;;      Params:         0       2       0       0
  3085 ;;      Locals:         0       3       0       0
  3086 ;;      Temps:          0       1       0       0
  3087 ;;      Totals:         0       6       0       0
  3088 ;;Total ram usage:        6 bytes
  3089 ;; Hardware stack levels used: 1
  3090 ;; Hardware stack levels required when called: 2
  3091 ;; This function calls:
  3092 ;;		Nothing
  3093 ;; This function is called by:
  3094 ;;		_DETERMINE_WAVESHAPE
  3095 ;;		_GET_CURRENT_POT_VALUES
  3096 ;; This function uses a non-reentrant model
  3097 ;;
  3098                           
  3099     054A                     _DO_ADC:	
  3100                           ;psect for function _DO_ADC
  3101                           
  3102                           
  3103                           ;main.c: 210:     ADCON0 = 0x00;
  3104                           
  3105                           ;incstack = 0
  3106                           ; Regs used in _DO_ADC: [wreg-fsr0h+status,2+status,0+pclath]
  3107     054A  0021               	movlb	1	; select bank1
  3108     054B  019D               	clrf	29	;volatile
  3109                           
  3110                           ;main.c: 212:     uint8_t temp = (uint8_t)(*modifier << 2);
  3111     054C  0020               	movlb	0	; select bank0
  3112     054D  0848               	movf	DO_ADC@modifier,w
  3113     054E  0084               	movwf	4
  3114     054F  0849               	movf	DO_ADC@modifier+1,w
  3115     0550  0085               	movwf	5
  3116     0551  0800               	movf	0,w	;code access
  3117     0552  00CA               	movwf	??_DO_ADC
  3118     0553  3001               	movlw	1
  3119     0554                     u1125:
  3120     0554  35CA               	lslf	??_DO_ADC,f
  3121     0555  3EFF               	addlw	-1
  3122     0556  1D03               	skipz
  3123     0557  2D54               	goto	u1125
  3124     0558  354A               	lslf	??_DO_ADC,w
  3125     0559  00CD               	movwf	DO_ADC@temp
  3126                           
  3127                           ;main.c: 213:     ADCON0 = ADCON0 | temp;
  3128     055A  0021               	movlb	1	; select bank1
  3129     055B  081D               	movf	29,w	;volatile
  3130     055C  0020               	movlb	0	; select bank0
  3131     055D  044D               	iorwf	DO_ADC@temp,w
  3132     055E  0021               	movlb	1	; select bank1
  3133     055F  009D               	movwf	29	;volatile
  3134                           
  3135                           ;main.c: 214:     ADON = 1;
  3136     0560  141D               	bsf	29,0	;volatile
  3137                           
  3138                           ;main.c: 215:     _delay((unsigned long)((0.005)*(32000000/4000.0)));
  3139     0561  300D               	movlw	13
  3140     0562                     u1577:
  3141     0562  0B89               	decfsz	9,f
  3142     0563  2D62               	goto	u1577
  3143     0564  0000               	nop
  3144                           
  3145                           ;main.c: 216:     GO_nDONE = 1;
  3146     0565  0021               	movlb	1	; select bank1
  3147     0566  149D               	bsf	29,1	;volatile
  3148     0567                     l158:	
  3149                           ;main.c: 217:     while(GO_nDONE == 1){}
  3150                           
  3151     0567  189D               	btfsc	29,1	;volatile
  3152     0568  2D67               	goto	l158
  3153                           
  3154                           ;main.c: 218:     ADON = 0;
  3155     0569  101D               	bcf	29,0	;volatile
  3156                           
  3157                           ;main.c: 219:     uint16_t adc_result = ((uint16_t)(ADRESH << 8) | ADRESL);
  3158     056A  081C               	movf	28,w	;volatile
  3159     056B  0020               	movlb	0	; select bank0
  3160     056C  00CC               	movwf	DO_ADC@adc_result+1
  3161     056D  0021               	movlb	1	; select bank1
  3162     056E  081B               	movf	27,w	;volatile
  3163     056F  0020               	movlb	0	; select bank0
  3164     0570  00CB               	movwf	DO_ADC@adc_result
  3165                           
  3166                           ;main.c: 220:     return adc_result;
  3167     0571  084C               	movf	DO_ADC@adc_result+1,w
  3168     0572  00C9               	movwf	?_DO_ADC+1
  3169     0573  084B               	movf	DO_ADC@adc_result,w
  3170     0574  00C8               	movwf	?_DO_ADC
  3171     0575  0008               	return
  3172     0576                     __end_of_DO_ADC:
  3173                           
  3174                           	psect	text17
  3175     0681                     __ptext17:	
  3176 ;; *************** function _CONFIG_TMR0_INTERRUPT *****************
  3177 ;; Defined at:
  3178 ;;		line 282 in file "main.c"
  3179 ;; Parameters:    Size  Location     Type
  3180 ;;		None
  3181 ;; Auto vars:     Size  Location     Type
  3182 ;;		None
  3183 ;; Return value:  Size  Location     Type
  3184 ;;                  1    wreg      unsigned char 
  3185 ;; Registers used:
  3186 ;;		None
  3187 ;; Tracked objects:
  3188 ;;		On entry : B1F/1
  3189 ;;		On exit  : B1F/1
  3190 ;;		Unchanged: B1F/0
  3191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3192 ;;      Params:         0       0       0       0
  3193 ;;      Locals:         0       0       0       0
  3194 ;;      Temps:          0       0       0       0
  3195 ;;      Totals:         0       0       0       0
  3196 ;;Total ram usage:        0 bytes
  3197 ;; Hardware stack levels used: 1
  3198 ;; Hardware stack levels required when called: 2
  3199 ;; This function calls:
  3200 ;;		Nothing
  3201 ;; This function is called by:
  3202 ;;		_main
  3203 ;; This function uses a non-reentrant model
  3204 ;;
  3205                           
  3206     0681                     _CONFIG_TMR0_INTERRUPT:	
  3207                           ;psect for function _CONFIG_TMR0_INTERRUPT
  3208                           
  3209                           
  3210                           ;main.c: 283:     TMR0IE = 1;
  3211                           
  3212                           ;incstack = 0
  3213                           ; Regs used in _CONFIG_TMR0_INTERRUPT: []
  3214     0681  168B               	bsf	11,5	;volatile
  3215                           
  3216                           ;main.c: 284:     return 1;;	Return value of _CONFIG_TMR0_INTERRUPT is never used
  3217     0682  0008               	return
  3218     0683                     __end_of_CONFIG_TMR0_INTERRUPT:
  3219                           
  3220                           	psect	text18
  3221     063A                     __ptext18:	
  3222 ;; *************** function _CONFIG_SYSTEM *****************
  3223 ;; Defined at:
  3224 ;;		line 288 in file "main.c"
  3225 ;; Parameters:    Size  Location     Type
  3226 ;;		None
  3227 ;; Auto vars:     Size  Location     Type
  3228 ;;		None
  3229 ;; Return value:  Size  Location     Type
  3230 ;;                  1    wreg      unsigned char 
  3231 ;; Registers used:
  3232 ;;		wreg, status,2, status,0, pclath, cstack
  3233 ;; Tracked objects:
  3234 ;;		On entry : B1F/0
  3235 ;;		On exit  : B1F/0
  3236 ;;		Unchanged: B00/0
  3237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3238 ;;      Params:         0       0       0       0
  3239 ;;      Locals:         0       0       0       0
  3240 ;;      Temps:          0       0       0       0
  3241 ;;      Totals:         0       0       0       0
  3242 ;;Total ram usage:        0 bytes
  3243 ;; Hardware stack levels used: 1
  3244 ;; Hardware stack levels required when called: 3
  3245 ;; This function calls:
  3246 ;;		_CONFIG_ADC_PINS
  3247 ;;		_CONFIG_INT_OSC
  3248 ;;		_CONFIG_PORTS
  3249 ;;		_CONFIG_PWM_CCP3
  3250 ;; This function is called by:
  3251 ;;		_main
  3252 ;; This function uses a non-reentrant model
  3253 ;;
  3254                           
  3255     063A                     _CONFIG_SYSTEM:	
  3256                           ;psect for function _CONFIG_SYSTEM
  3257                           
  3258                           
  3259                           ;main.c: 289:     CONFIG_INT_OSC();
  3260                           
  3261                           ;incstack = 0
  3262                           ; Regs used in _CONFIG_SYSTEM: [wreg+status,2+status,0+pclath+cstack]
  3263     063A  3186  266D  3186   	fcall	_CONFIG_INT_OSC
  3264                           
  3265                           ;main.c: 290:     CONFIG_PORTS();
  3266     063D  3186  2646  3186   	fcall	_CONFIG_PORTS
  3267                           
  3268                           ;main.c: 291:     CONFIG_ADC_PINS();
  3269     0640  3186  2678  3186   	fcall	_CONFIG_ADC_PINS
  3270                           
  3271                           ;main.c: 292:     CONFIG_PWM_CCP3();
  3272     0643  3186  2627         	fcall	_CONFIG_PWM_CCP3
  3273     0645  0008               	return
  3274     0646                     __end_of_CONFIG_SYSTEM:
  3275                           
  3276                           	psect	text19
  3277     0627                     __ptext19:	
  3278 ;; *************** function _CONFIG_PWM_CCP3 *****************
  3279 ;; Defined at:
  3280 ;;		line 253 in file "main.c"
  3281 ;; Parameters:    Size  Location     Type
  3282 ;;		None
  3283 ;; Auto vars:     Size  Location     Type
  3284 ;;		None
  3285 ;; Return value:  Size  Location     Type
  3286 ;;                  1    wreg      unsigned char 
  3287 ;; Registers used:
  3288 ;;		wreg, status,2
  3289 ;; Tracked objects:
  3290 ;;		On entry : B1F/1
  3291 ;;		On exit  : B1F/0
  3292 ;;		Unchanged: B00/0
  3293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3294 ;;      Params:         0       0       0       0
  3295 ;;      Locals:         0       0       0       0
  3296 ;;      Temps:          0       0       0       0
  3297 ;;      Totals:         0       0       0       0
  3298 ;;Total ram usage:        0 bytes
  3299 ;; Hardware stack levels used: 1
  3300 ;; Hardware stack levels required when called: 2
  3301 ;; This function calls:
  3302 ;;		Nothing
  3303 ;; This function is called by:
  3304 ;;		_CONFIG_SYSTEM
  3305 ;; This function uses a non-reentrant model
  3306 ;;
  3307                           
  3308     0627                     _CONFIG_PWM_CCP3:	
  3309                           ;psect for function _CONFIG_PWM_CCP3
  3310                           
  3311                           
  3312                           ;main.c: 254:     SRLEN = 0;
  3313                           
  3314                           ;incstack = 0
  3315                           ; Regs used in _CONFIG_PWM_CCP3: [wreg+status,2]
  3316     0627  0022               	movlb	2	; select bank2
  3317     0628  139A               	bcf	26,7	;volatile
  3318                           
  3319                           ;main.c: 255:     C1ON = 0;
  3320     0629  1391               	bcf	17,7	;volatile
  3321                           
  3322                           ;main.c: 257:     TRISA2 = 1;
  3323     062A  0021               	movlb	1	; select bank1
  3324     062B  150C               	bsf	12,2	;volatile
  3325                           
  3326                           ;main.c: 258:     PR2 = 0xFF;
  3327     062C  30FF               	movlw	255
  3328     062D  0020               	movlb	0	; select bank0
  3329     062E  009B               	movwf	27	;volatile
  3330                           
  3331                           ;main.c: 259:     CCP3CON = CCP3CON | 0b00001111;
  3332     062F  0026               	movlb	6	; select bank6
  3333     0630  0813               	movf	19,w	;volatile
  3334     0631  380F               	iorlw	15
  3335     0632  0093               	movwf	19	;volatile
  3336                           
  3337                           ;main.c: 261:     CCPTMRS0 = 0x00;
  3338     0633  0025               	movlb	5	; select bank5
  3339     0634  019E               	clrf	30	;volatile
  3340                           
  3341                           ;main.c: 262:     TMR2IF = 0;
  3342     0635  0020               	movlb	0	; select bank0
  3343     0636  1091               	bcf	17,1	;volatile
  3344                           
  3345                           ;main.c: 263:     T2CON = T2CON | 0b00000000;
  3346     0637  081C               	movf	28,w	;volatile
  3347     0638  009C               	movwf	28	;volatile
  3348     0639  0008               	return
  3349     063A                     __end_of_CONFIG_PWM_CCP3:
  3350                           
  3351                           	psect	text20
  3352     0646                     __ptext20:	
  3353 ;; *************** function _CONFIG_PORTS *****************
  3354 ;; Defined at:
  3355 ;;		line 195 in file "main.c"
  3356 ;; Parameters:    Size  Location     Type
  3357 ;;		None
  3358 ;; Auto vars:     Size  Location     Type
  3359 ;;		None
  3360 ;; Return value:  Size  Location     Type
  3361 ;;                  1    wreg      unsigned char 
  3362 ;; Registers used:
  3363 ;;		wreg, status,2
  3364 ;; Tracked objects:
  3365 ;;		On entry : B1F/1
  3366 ;;		On exit  : B1F/4
  3367 ;;		Unchanged: B00/0
  3368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3369 ;;      Params:         0       0       0       0
  3370 ;;      Locals:         0       0       0       0
  3371 ;;      Temps:          0       0       0       0
  3372 ;;      Totals:         0       0       0       0
  3373 ;;Total ram usage:        0 bytes
  3374 ;; Hardware stack levels used: 1
  3375 ;; Hardware stack levels required when called: 2
  3376 ;; This function calls:
  3377 ;;		Nothing
  3378 ;; This function is called by:
  3379 ;;		_CONFIG_SYSTEM
  3380 ;; This function uses a non-reentrant model
  3381 ;;
  3382                           
  3383     0646                     _CONFIG_PORTS:	
  3384                           ;psect for function _CONFIG_PORTS
  3385                           
  3386                           
  3387                           ;main.c: 196:     ANSELC = 0b00001111;
  3388                           
  3389                           ;incstack = 0
  3390                           ; Regs used in _CONFIG_PORTS: [wreg+status,2]
  3391     0646  300F               	movlw	15
  3392     0647  0023               	movlb	3	; select bank3
  3393     0648  008E               	movwf	14	;volatile
  3394                           
  3395                           ;main.c: 197:     TRISC = 0b00001111;
  3396     0649  300F               	movlw	15
  3397     064A  0021               	movlb	1	; select bank1
  3398     064B  008E               	movwf	14	;volatile
  3399                           
  3400                           ;main.c: 198:     WPUC = 0b00000000;
  3401     064C  0024               	movlb	4	; select bank4
  3402     064D  018E               	clrf	14	;volatile
  3403     064E  0008               	return
  3404     064F                     __end_of_CONFIG_PORTS:
  3405                           
  3406                           	psect	text21
  3407     066D                     __ptext21:	
  3408 ;; *************** function _CONFIG_INT_OSC *****************
  3409 ;; Defined at:
  3410 ;;		line 187 in file "main.c"
  3411 ;; Parameters:    Size  Location     Type
  3412 ;;		None
  3413 ;; Auto vars:     Size  Location     Type
  3414 ;;		None
  3415 ;; Return value:  Size  Location     Type
  3416 ;;                  1    wreg      unsigned char 
  3417 ;; Registers used:
  3418 ;;		wreg
  3419 ;; Tracked objects:
  3420 ;;		On entry : B1F/0
  3421 ;;		On exit  : B1F/1
  3422 ;;		Unchanged: B00/0
  3423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3424 ;;      Params:         0       0       0       0
  3425 ;;      Locals:         0       0       0       0
  3426 ;;      Temps:          0       0       0       0
  3427 ;;      Totals:         0       0       0       0
  3428 ;;Total ram usage:        0 bytes
  3429 ;; Hardware stack levels used: 1
  3430 ;; Hardware stack levels required when called: 2
  3431 ;; This function calls:
  3432 ;;		Nothing
  3433 ;; This function is called by:
  3434 ;;		_CONFIG_SYSTEM
  3435 ;; This function uses a non-reentrant model
  3436 ;;
  3437                           
  3438     066D                     _CONFIG_INT_OSC:	
  3439                           ;psect for function _CONFIG_INT_OSC
  3440                           
  3441                           
  3442                           ;main.c: 188:     OSCCON = 0b11110000;
  3443                           
  3444                           ;incstack = 0
  3445                           ; Regs used in _CONFIG_INT_OSC: [wreg]
  3446     066D  30F0               	movlw	240
  3447     066E  0021               	movlb	1	; select bank1
  3448     066F  0099               	movwf	25	;volatile
  3449                           
  3450                           ;main.c: 189:     OSCTUNE = 0b00011111;
  3451     0670  301F               	movlw	31
  3452     0671  0098               	movwf	24	;volatile
  3453     0672  0008               	return
  3454     0673                     __end_of_CONFIG_INT_OSC:
  3455                           
  3456                           	psect	text22
  3457     0678                     __ptext22:	
  3458 ;; *************** function _CONFIG_ADC_PINS *****************
  3459 ;; Defined at:
  3460 ;;		line 203 in file "main.c"
  3461 ;; Parameters:    Size  Location     Type
  3462 ;;		None
  3463 ;; Auto vars:     Size  Location     Type
  3464 ;;		None
  3465 ;; Return value:  Size  Location     Type
  3466 ;;                  1    wreg      unsigned char 
  3467 ;; Registers used:
  3468 ;;		wreg
  3469 ;; Tracked objects:
  3470 ;;		On entry : B1F/4
  3471 ;;		On exit  : B1F/1
  3472 ;;		Unchanged: B00/0
  3473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3474 ;;      Params:         0       0       0       0
  3475 ;;      Locals:         0       0       0       0
  3476 ;;      Temps:          0       0       0       0
  3477 ;;      Totals:         0       0       0       0
  3478 ;;Total ram usage:        0 bytes
  3479 ;; Hardware stack levels used: 1
  3480 ;; Hardware stack levels required when called: 2
  3481 ;; This function calls:
  3482 ;;		Nothing
  3483 ;; This function is called by:
  3484 ;;		_CONFIG_SYSTEM
  3485 ;; This function uses a non-reentrant model
  3486 ;;
  3487                           
  3488     0678                     _CONFIG_ADC_PINS:	
  3489                           ;psect for function _CONFIG_ADC_PINS
  3490                           
  3491                           
  3492                           ;main.c: 204:     ADCON1 = 0b10100000;
  3493                           
  3494                           ;incstack = 0
  3495                           ; Regs used in _CONFIG_ADC_PINS: [wreg]
  3496     0678  30A0               	movlw	160
  3497     0679  0021               	movlb	1	; select bank1
  3498     067A  009E               	movwf	30	;volatile
  3499     067B  0008               	return
  3500     067C                     __end_of_CONFIG_ADC_PINS:
  3501                           
  3502                           	psect	intentry
  3503     0004                     __pintentry:	
  3504 ;; *************** function _INTERRUPT_InterruptManager *****************
  3505 ;; Defined at:
  3506 ;;		line 519 in file "main.c"
  3507 ;; Parameters:    Size  Location     Type
  3508 ;;		None
  3509 ;; Auto vars:     Size  Location     Type
  3510 ;;		None
  3511 ;; Return value:  Size  Location     Type
  3512 ;;                  1    wreg      void 
  3513 ;; Registers used:
  3514 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3515 ;; Tracked objects:
  3516 ;;		On entry : 0/0
  3517 ;;		On exit  : 0/0
  3518 ;;		Unchanged: 0/0
  3519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3520 ;;      Params:         0       0       0       0
  3521 ;;      Locals:         0       0       0       0
  3522 ;;      Temps:          2       0       0       0
  3523 ;;      Totals:         2       0       0       0
  3524 ;;Total ram usage:        2 bytes
  3525 ;; Hardware stack levels used: 1
  3526 ;; Hardware stack levels required when called: 1
  3527 ;; This function calls:
  3528 ;;		_SET_DUTY_CCP3
  3529 ;; This function is called by:
  3530 ;;		Interrupt level 1
  3531 ;; This function uses a non-reentrant model
  3532 ;;
  3533                           
  3534     0004                     _INTERRUPT_InterruptManager:
  3535                           
  3536                           ;incstack = 0
  3537     0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  3538                           
  3539                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3540     0005  3180               	pagesel	$
  3541                           
  3542                           ;main.c: 520:     if(TMR0IF == 1){
  3543     0006  1D0B               	btfss	11,2	;volatile
  3544     0007  28C7               	goto	i1l281
  3545                           
  3546                           ;main.c: 521:     GIE = 0;
  3547     0008  138B               	bcf	11,7	;volatile
  3548                           
  3549                           ;main.c: 522:     TMR0 = final_TMR0;
  3550     0009  0875               	movf	_final_TMR0,w	;volatile
  3551     000A  0020               	movlb	0	; select bank0
  3552     000B  0095               	movwf	21	;volatile
  3553                           
  3554                           ;main.c: 524:     TMR0IF = 0;
  3555     000C  110B               	bcf	11,2	;volatile
  3556                           
  3557                           ;main.c: 526:     if(current_waveshape == 0){
  3558     000D  0872               	movf	_current_waveshape,w	;volatile
  3559     000E  1D03               	btfss	3,2
  3560     000F  2820               	goto	i1l1589
  3561                           
  3562                           ;main.c: 527:         duty = tri_table_one_quadrant[current_one_quadrant_index];
  3563     0010  0871               	movf	_current_one_quadrant_index,w	;volatile
  3564     0011  00FA               	movwf	??_INTERRUPT_InterruptManager
  3565     0012  01FB               	clrf	??_INTERRUPT_InterruptManager+1
  3566     0013  35FA               	lslf	??_INTERRUPT_InterruptManager,f
  3567     0014  0DFB               	rlf	??_INTERRUPT_InterruptManager+1,f
  3568     0015  30E4               	movlw	low _tri_table_one_quadrant
  3569     0016  077A               	addwf	??_INTERRUPT_InterruptManager,w
  3570     0017  0084               	movwf	4
  3571     0018  3000               	movlw	high _tri_table_one_quadrant
  3572     0019  3D7B               	addwfc	??_INTERRUPT_InterruptManager+1,w
  3573     001A  3880               	iorlw	128
  3574     001B  0085               	movwf	5
  3575     001C  3F00               	moviw [0]fsr0
  3576     001D  00F3               	movwf	_duty	;volatile
  3577     001E  3F01               	moviw [1]fsr0
  3578     001F  283A               	goto	L2
  3579     0020                     i1l1589:	
  3580                           ;main.c: 528:     }
  3581                           
  3582     0020  0372               	decf	_current_waveshape,w	;volatile
  3583     0021  1D03               	btfss	3,2
  3584     0022  2833               	goto	i1l1593
  3585                           
  3586                           ;main.c: 530:         duty = sine_table_one_quadrant[current_one_quadrant_index];
  3587     0023  0871               	movf	_current_one_quadrant_index,w	;volatile
  3588     0024  00FA               	movwf	??_INTERRUPT_InterruptManager
  3589     0025  01FB               	clrf	??_INTERRUPT_InterruptManager+1
  3590     0026  35FA               	lslf	??_INTERRUPT_InterruptManager,f
  3591     0027  0DFB               	rlf	??_INTERRUPT_InterruptManager+1,f
  3592     0028  30E6               	movlw	low _sine_table_one_quadrant
  3593     0029  077A               	addwf	??_INTERRUPT_InterruptManager,w
  3594     002A  0084               	movwf	4
  3595     002B  3001               	movlw	high _sine_table_one_quadrant
  3596     002C  3D7B               	addwfc	??_INTERRUPT_InterruptManager+1,w
  3597     002D  3880               	iorlw	128
  3598     002E  0085               	movwf	5
  3599     002F  3F00               	moviw [0]fsr0
  3600     0030  00F3               	movwf	_duty	;volatile
  3601     0031  3F01               	moviw [1]fsr0
  3602     0032  283A               	goto	L2
  3603     0033                     i1l1593:	
  3604                           ;main.c: 531:     }
  3605                           
  3606     0033  3002               	movlw	2
  3607     0034  0672               	xorwf	_current_waveshape,w	;volatile
  3608     0035  1D03               	btfss	3,2
  3609     0036  283B               	goto	i1l1597
  3610                           
  3611                           ;main.c: 533:         duty = 1023;
  3612     0037  30FF               	movlw	255
  3613     0038  00F3               	movwf	_duty	;volatile
  3614     0039  3003               	movlw	3
  3615     003A                     L2:
  3616     003A  00F4               	movwf	_duty+1	;volatile
  3617     003B                     i1l1597:
  3618                           
  3619                           ;main.c: 535:     if(current_one_quadrant_index == 128){
  3620     003B  3080               	movlw	128
  3621     003C  0671               	xorwf	_current_one_quadrant_index,w	;volatile
  3622     003D  1D03               	btfss	3,2
  3623     003E  2841               	goto	i1l1601
  3624                           
  3625                           ;main.c: 536:         current_quadrant = 1;
  3626     003F  3001               	movlw	1
  3627     0040  00C4               	movwf	_current_quadrant	;volatile
  3628     0041                     i1l1601:
  3629                           
  3630                           ;main.c: 538:     if(current_one_quadrant_index == 0){
  3631     0041  0871               	movf	_current_one_quadrant_index,w	;volatile
  3632     0042  1D03               	btfss	3,2
  3633     0043  284C               	goto	i1l1611
  3634                           
  3635                           ;main.c: 539:         current_quadrant = 0;
  3636     0044  01C4               	clrf	_current_quadrant	;volatile
  3637                           
  3638                           ;main.c: 540:         if(current_halfcycle == 0){
  3639     0045  0845               	movf	_current_halfcycle,w	;volatile
  3640     0046  1D03               	btfss	3,2
  3641     0047  284B               	goto	i1l1609
  3642                           
  3643                           ;main.c: 541:             current_halfcycle = 1;
  3644     0048  3001               	movlw	1
  3645     0049  00C5               	movwf	_current_halfcycle	;volatile
  3646                           
  3647                           ;main.c: 542:         }
  3648     004A  284C               	goto	i1l1611
  3649     004B                     i1l1609:
  3650                           
  3651                           ;main.c: 544:             current_halfcycle = 0;
  3652     004B  01C5               	clrf	_current_halfcycle	;volatile
  3653     004C                     i1l1611:
  3654                           
  3655                           ;main.c: 547:         if(current_quadrant == 0){
  3656     004C  0844               	movf	_current_quadrant,w	;volatile
  3657     004D  1D03               	btfss	3,2
  3658     004E  2854               	goto	i1l1615
  3659                           
  3660                           ;main.c: 548:             current_one_quadrant_index++;
  3661     004F  3001               	movlw	1
  3662     0050  00FA               	movwf	??_INTERRUPT_InterruptManager
  3663     0051  087A               	movf	??_INTERRUPT_InterruptManager,w
  3664     0052  07F1               	addwf	_current_one_quadrant_index,f	;volatile
  3665                           
  3666                           ;main.c: 549:         }
  3667     0053  2856               	goto	i1l277
  3668     0054                     i1l1615:
  3669                           
  3670                           ;main.c: 551:             current_one_quadrant_index--;
  3671     0054  3001               	movlw	1
  3672     0055  02F1               	subwf	_current_one_quadrant_index,f	;volatile
  3673     0056                     i1l277:	
  3674                           ;main.c: 552:         }
  3675                           
  3676                           
  3677                           ;main.c: 553:         if(current_halfcycle == 1){
  3678     0056  0345               	decf	_current_halfcycle,w	;volatile
  3679     0057  1D03               	btfss	3,2
  3680     0058  2863               	goto	i1l278
  3681                           
  3682                           ;main.c: 554:         duty = 1023 - duty;
  3683     0059  30FF               	movlw	255
  3684     005A  00FA               	movwf	??_INTERRUPT_InterruptManager
  3685     005B  3003               	movlw	3
  3686     005C  00FB               	movwf	??_INTERRUPT_InterruptManager+1
  3687     005D  0873               	movf	_duty,w	;volatile
  3688     005E  027A               	subwf	??_INTERRUPT_InterruptManager,w
  3689     005F  00F3               	movwf	_duty	;volatile
  3690     0060  0874               	movf	_duty+1,w	;volatile
  3691     0061  3B7B               	subwfb	??_INTERRUPT_InterruptManager+1,w
  3692     0062  00F4               	movwf	_duty+1	;volatile
  3693     0063                     i1l278:	
  3694                           ;main.c: 555:         }
  3695                           
  3696                           
  3697                           ;main.c: 559:         if(current_depth != 0){
  3698     0063  0834               	movf	_current_depth,w	;volatile
  3699     0064  0435               	iorwf	_current_depth+1,w	;volatile
  3700     0065  1903               	btfsc	3,2
  3701     0066  28BF               	goto	i1l1623
  3702                           
  3703                           ;main.c: 560:             duty_low_byte = duty & 0xFF;
  3704     0067  0873               	movf	_duty,w	;volatile
  3705     0068  00C7               	movwf	_duty_low_byte	;volatile
  3706                           
  3707                           ;main.c: 561:             duty_high_byte = duty >> 8;
  3708     0069  0874               	movf	_duty+1,w	;volatile
  3709     006A  00C6               	movwf	_duty_high_byte	;volatile
  3710     006B  01A2               	clrf	34	;# 
  3711     006C  01A0               	clrf	32	;# 
  3712     006D  1003               	bcf	3,0	;# 
  3713     006E  0834               	movf	_current_depth,w	;# 
  3714     006F  1847               	btfsc	_duty_low_byte,0	;# 
  3715     0070  07A2               	addwf	34,f	;# 
  3716     0071  0CA2               	rrf	34,f	;# 
  3717     0072  0CA0               	rrf	32,f	;# 
  3718     0073  18C7               	btfsc	_duty_low_byte,1	;# 
  3719     0074  07A2               	addwf	34,f	;# 
  3720     0075  0CA2               	rrf	34,f	;# 
  3721     0076  0CA0               	rrf	32,f	;# 
  3722     0077  1947               	btfsc	_duty_low_byte,2	;# 
  3723     0078  07A2               	addwf	34,f	;# 
  3724     0079  0CA2               	rrf	34,f	;# 
  3725     007A  0CA0               	rrf	32,f	;# 
  3726     007B  19C7               	btfsc	_duty_low_byte,3	;# 
  3727     007C  07A2               	addwf	34,f	;# 
  3728     007D  0CA2               	rrf	34,f	;# 
  3729     007E  0CA0               	rrf	32,f	;# 
  3730     007F  1A47               	btfsc	_duty_low_byte,4	;# 
  3731     0080  07A2               	addwf	34,f	;# 
  3732     0081  0CA2               	rrf	34,f	;# 
  3733     0082  0CA0               	rrf	32,f	;# 
  3734     0083  1AC7               	btfsc	_duty_low_byte,5	;# 
  3735     0084  07A2               	addwf	34,f	;# 
  3736     0085  0CA2               	rrf	34,f	;# 
  3737     0086  0CA0               	rrf	32,f	;# 
  3738     0087  1B47               	btfsc	_duty_low_byte,6	;# 
  3739     0088  07A2               	addwf	34,f	;# 
  3740     0089  0CA2               	rrf	34,f	;# 
  3741     008A  0CA0               	rrf	32,f	;# 
  3742     008B  1BC7               	btfsc	_duty_low_byte,7	;# 
  3743     008C  07A2               	addwf	34,f	;# 
  3744     008D  0CA2               	rrf	34,f	;# 
  3745     008E  0CA0               	rrf	32,f	;# 
  3746     008F  01A1               	clrf	33	;# 
  3747     0090  1846               	btfsc	_duty_high_byte,0	;# 
  3748     0091  07A2               	addwf	34,f	;# 
  3749     0092  0CA2               	rrf	34,f	;# 
  3750     0093  0CA1               	rrf	33,f	;# 
  3751     0094  18C6               	btfsc	_duty_high_byte,1	;# 
  3752     0095  07A2               	addwf	34,f	;# 
  3753     0096  0CA2               	rrf	34,f	;# 
  3754     0097  0CA1               	rrf	33,f	;# 
  3755     0098  1946               	btfsc	_duty_high_byte,2	;# 
  3756     0099  07A2               	addwf	34,f	;# 
  3757     009A  0CA2               	rrf	34,f	;# 
  3758     009B  0CA1               	rrf	33,f	;# 
  3759     009C  19C6               	btfsc	_duty_high_byte,3	;# 
  3760     009D  07A2               	addwf	34,f	;# 
  3761     009E  0CA2               	rrf	34,f	;# 
  3762     009F  0CA1               	rrf	33,f	;# 
  3763     00A0  1A46               	btfsc	_duty_high_byte,4	;# 
  3764     00A1  07A2               	addwf	34,f	;# 
  3765     00A2  0CA2               	rrf	34,f	;# 
  3766     00A3  0CA1               	rrf	33,f	;# 
  3767     00A4  1AC6               	btfsc	_duty_high_byte,5	;# 
  3768     00A5  07A2               	addwf	34,f	;# 
  3769     00A6  0CA2               	rrf	34,f	;# 
  3770     00A7  0CA1               	rrf	33,f	;# 
  3771     00A8  1B46               	btfsc	_duty_high_byte,6	;# 
  3772     00A9  07A2               	addwf	34,f	;# 
  3773     00AA  0CA2               	rrf	34,f	;# 
  3774     00AB  0CA1               	rrf	33,f	;# 
  3775     00AC  1BC6               	btfsc	_duty_high_byte,7	;# 
  3776     00AD  07A2               	addwf	34,f	;# 
  3777     00AE  0CA2               	rrf	34,f	;# 
  3778     00AF  0CA1               	rrf	33,f	;# 
  3779                           
  3780                           ;main.c: 596:             duty = 1023 - *top_two_bytes_ptr;
  3781     00B0  0020               	movlb	0	; select bank0
  3782     00B1  0865               	movf	_top_two_bytes_ptr,w
  3783     00B2  0086               	movwf	6
  3784     00B3  0866               	movf	_top_two_bytes_ptr+1,w
  3785     00B4  0087               	movwf	7
  3786     00B5  30FF               	movlw	255
  3787     00B6  00FA               	movwf	??_INTERRUPT_InterruptManager
  3788     00B7  3003               	movlw	3
  3789     00B8  00FB               	movwf	??_INTERRUPT_InterruptManager+1
  3790     00B9  3F40               	moviw [0]fsr1
  3791     00BA  027A               	subwf	??_INTERRUPT_InterruptManager,w
  3792     00BB  00F3               	movwf	_duty	;volatile
  3793     00BC  3F41               	moviw [1]fsr1
  3794     00BD  3B7B               	subwfb	??_INTERRUPT_InterruptManager+1,w
  3795     00BE  28C2               	goto	L3
  3796     00BF                     i1l1623:	
  3797                           ;main.c: 597:         }
  3798                           
  3799                           
  3800                           ;main.c: 599:             duty = 1023;
  3801     00BF  30FF               	movlw	255
  3802     00C0  00F3               	movwf	_duty	;volatile
  3803     00C1  3003               	movlw	3
  3804     00C2                     L3:
  3805     00C2  00F4               	movwf	_duty+1	;volatile
  3806                           
  3807                           ;main.c: 604:     SET_DUTY_CCP3(&duty);
  3808     00C3  3073               	movlw	(low (_duty| 0))& (0+255)
  3809     00C4  3185  25C8         	fcall	_SET_DUTY_CCP3
  3810                           
  3811                           ;main.c: 608:     GIE = 1;
  3812     00C6  178B               	bsf	11,7	;volatile
  3813     00C7                     i1l281:
  3814     00C7  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  3815     00C8  0009               	retfie
  3816     00C9                     __end_of_INTERRUPT_InterruptManager:
  3817                           
  3818                           	psect	text24
  3819     05C8                     __ptext24:	
  3820 ;; *************** function _SET_DUTY_CCP3 *****************
  3821 ;; Defined at:
  3822 ;;		line 242 in file "main.c"
  3823 ;; Parameters:    Size  Location     Type
  3824 ;;  duty_ptr        1    wreg     PTR volatile unsigned sh
  3825 ;;		 -> duty(2), 
  3826 ;; Auto vars:     Size  Location     Type
  3827 ;;  duty_ptr        1    3[COMMON] PTR volatile unsigned sh
  3828 ;;		 -> duty(2), 
  3829 ;;  temp            1    2[COMMON] unsigned char 
  3830 ;; Return value:  Size  Location     Type
  3831 ;;                  1    wreg      unsigned char 
  3832 ;; Registers used:
  3833 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3834 ;; Tracked objects:
  3835 ;;		On entry : 1F/0
  3836 ;;		On exit  : 1F/6
  3837 ;;		Unchanged: 0/0
  3838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3839 ;;      Params:         0       0       0       0
  3840 ;;      Locals:         2       0       0       0
  3841 ;;      Temps:          2       0       0       0
  3842 ;;      Totals:         4       0       0       0
  3843 ;;Total ram usage:        4 bytes
  3844 ;; Hardware stack levels used: 1
  3845 ;; This function calls:
  3846 ;;		Nothing
  3847 ;; This function is called by:
  3848 ;;		_INTERRUPT_InterruptManager
  3849 ;; This function uses a non-reentrant model
  3850 ;;
  3851                           
  3852     05C8                     _SET_DUTY_CCP3:	
  3853                           ;psect for function _SET_DUTY_CCP3
  3854                           
  3855                           
  3856                           ;incstack = 0
  3857                           ; Regs used in _SET_DUTY_CCP3: [wreg+fsr1l+fsr1h+status,2+status,0]
  3858                           ;SET_DUTY_CCP3@duty_ptr stored from wreg
  3859     05C8  00F9               	movwf	SET_DUTY_CCP3@duty_ptr
  3860                           
  3861                           ;main.c: 244:     CCPR3L = (uint8_t)(*duty_ptr >> 2);
  3862     05C9  0879               	movf	SET_DUTY_CCP3@duty_ptr,w
  3863     05CA  0086               	movwf	6
  3864     05CB  0187               	clrf	7
  3865     05CC  3F40               	moviw [0]fsr1
  3866     05CD  00F6               	movwf	??_SET_DUTY_CCP3
  3867     05CE  3F41               	moviw [1]fsr1
  3868     05CF  00F7               	movwf	??_SET_DUTY_CCP3+1
  3869     05D0  36F7               	lsrf	??_SET_DUTY_CCP3+1,f
  3870     05D1  0CF6               	rrf	??_SET_DUTY_CCP3,f
  3871     05D2  36F7               	lsrf	??_SET_DUTY_CCP3+1,f
  3872     05D3  0CF6               	rrf	??_SET_DUTY_CCP3,f
  3873     05D4  0876               	movf	??_SET_DUTY_CCP3,w
  3874     05D5  0026               	movlb	6	; select bank6
  3875     05D6  0091               	movwf	17	;volatile
  3876                           
  3877                           ;main.c: 245:     uint8_t temp = *duty_ptr % 0b100;
  3878     05D7  0879               	movf	SET_DUTY_CCP3@duty_ptr,w
  3879     05D8  0086               	movwf	6
  3880     05D9  0187               	clrf	7
  3881     05DA  0801               	movf	1,w
  3882     05DB  3903               	andlw	3
  3883     05DC  00F8               	movwf	SET_DUTY_CCP3@temp
  3884                           
  3885                           ;main.c: 246:     CCP3CON = CCP3CON | ((uint8_t)(temp << 4));
  3886     05DD  0878               	movf	SET_DUTY_CCP3@temp,w
  3887     05DE  00F6               	movwf	??_SET_DUTY_CCP3
  3888     05DF  3003               	movlw	3
  3889     05E0                     u85_25:
  3890     05E0  35F6               	lslf	??_SET_DUTY_CCP3,f
  3891     05E1  3EFF               	addlw	-1
  3892     05E2  1D03               	skipz
  3893     05E3  2DE0               	goto	u85_25
  3894     05E4  3576               	lslf	??_SET_DUTY_CCP3,w
  3895     05E5  0413               	iorwf	19,w	;volatile
  3896     05E6  0093               	movwf	19	;volatile
  3897     05E7  0008               	return
  3898     05E8                     __end_of_SET_DUTY_CCP3:
  3899     007E                     btemp	set	126	;btemp
  3900     007E                     int$flags	set	126
  3901     007E                     wtemp0	set	126
  3902                           
  3903                           	psect	config
  3904                           
  3905                           ;Config register CONFIG1 @ 0x8007
  3906                           ;	Oscillator Selection
  3907                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  3908                           ;	Watchdog Timer Enable
  3909                           ;	WDTE = OFF, WDT disabled
  3910                           ;	Power-up Timer Enable
  3911                           ;	PWRTE = OFF, PWRT disabled
  3912                           ;	MCLR Pin Function Select
  3913                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  3914                           ;	Flash Program Memory Code Protection
  3915                           ;	CP = OFF, Program memory code protection is disabled
  3916                           ;	Data Memory Code Protection
  3917                           ;	CPD = OFF, Data memory code protection is disabled
  3918                           ;	Brown-out Reset Enable
  3919                           ;	BOREN = OFF, Brown-out Reset disabled
  3920                           ;	Clock Out Enable
  3921                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  3922                           ;	Internal/External Switchover
  3923                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3924                           ;	Fail-Safe Clock Monitor Enable
  3925                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3926     8007                     	org	32775
  3927     8007  09E4               	dw	2532
  3928                           
  3929                           ;Config register CONFIG2 @ 0x8008
  3930                           ;	Flash Memory Self-Write Protection
  3931                           ;	WRT = OFF, Write protection off
  3932                           ;	PLL Enable
  3933                           ;	PLLEN = ON, 4x PLL enabled
  3934                           ;	Stack Overflow/Underflow Reset Enable
  3935                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  3936                           ;	Brown-out Reset Voltage Selection
  3937                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  3938                           ;	In-Circuit Debugger Mode
  3939                           ;	DEBUG = ON, In-Circuit Debugger enabled, ICSPCLK and ICSPDAT are dedicated to the debu
      +                          gger
  3940                           ;	Low-Voltage Programming Enable
  3941                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  3942     8008                     	org	32776
  3943     8008  0FFF               	dw	4095

Data Sizes:
    Strings     0
    Constant    537
    Data        2
    BSS         46
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     29      71
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    DO_ADC@modifier	PTR const unsigned char  size(2) Largest target is 1
		 -> depth_adc_config_value(CODE[1]), speed_adc_config_value(CODE[1]), symmetry_adc_config_value(CODE[1]), waveshape_adc_config_value(CODE[1]), 

    SET_DUTY_CCP3@duty_ptr	PTR volatile unsigned short  size(1) Largest target is 2
		 -> duty(COMMON[2]), 

    TMR0_WRITE@timer_value_ptr	PTR volatile unsigned char  size(1) Largest target is 1
		 -> final_TMR0(COMMON[1]), 

    top_two_bytes_ptr	PTR unsigned short  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_SET_DUTY_CCP3

Critical Paths under _main in BANK0

    _main->_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST
    _PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST->_SHORTEN_PERIOD
    _SHORTEN_PERIOD->___lmul
    _LENGTHEN_PERIOD->___lmul
    _PROCESS_RAW_SPEED_AND_PRESCALER->___lmul
    _PROCESS_FINAL_SPEED_AND_PRESCALER->_CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1
    _GET_CURRENT_POT_VALUES->_DETERMINE_WAVESHAPE
    _DETERMINE_WAVESHAPE->_DO_ADC

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    5205
                      _CONFIG_SYSTEM
              _CONFIG_TMR0_INTERRUPT
             _GET_CURRENT_POT_VALUES
  _PROCESS_FINAL_SPEED_AND_PRESCALER
    _PROCESS_RAW_SPEED_AND_PRESCALER
_PROCESS_TMR0_OFFSET_AND_PRESCALER_A
                         _TMR0_WRITE
                   _TURN_ON_CCP3_PWM
 ---------------------------------------------------------------------------------
 (1) _TURN_ON_CCP3_PWM                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_WRITE                                           1     1      0      55
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST             9     9      0    3147
                                             20 BANK0      9     9      0
                    _LENGTHEN_PERIOD
                     _SHORTEN_PERIOD
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) _SHORTEN_PERIOD                                       8     8      0    1175
                                             12 BANK0      8     8      0
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) _LENGTHEN_PERIOD                                      6     6      0     952
                                             12 BANK0      6     6      0
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) _PROCESS_RAW_SPEED_AND_PRESCALER                      6     6      0     921
                                             12 BANK0      6     6      0
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     856
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) _PROCESS_FINAL_SPEED_AND_PRESCALER                    1     1      0      34
                                              3 BANK0      1     1      0
                   _ADJUST_PRESCALER
                        _ADJUST_TMR0
 _CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1
                 _TURN_PRESCALER_OFF
                  _TURN_PRESCALER_ON
 ---------------------------------------------------------------------------------
 (2) _TURN_PRESCALER_ON                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TURN_PRESCALER_OFF                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1                   3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _ADJUST_TMR0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADJUST_PRESCALER                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GET_CURRENT_POT_VALUES                               3     3      0    1048
                                              8 BANK0      2     2      0
                _DETERMINE_WAVESHAPE
                             _DO_ADC
 ---------------------------------------------------------------------------------
 (2) _DETERMINE_WAVESHAPE                                  2     2      0     555
                                              6 BANK0      2     2      0
                             _DO_ADC
 ---------------------------------------------------------------------------------
 (2) _DO_ADC                                               6     4      2     459
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _CONFIG_TMR0_INTERRUPT                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CONFIG_SYSTEM                                        0     0      0       0
                    _CONFIG_ADC_PINS
                     _CONFIG_INT_OSC
                       _CONFIG_PORTS
                    _CONFIG_PWM_CCP3
 ---------------------------------------------------------------------------------
 (2) _CONFIG_PWM_CCP3                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CONFIG_PORTS                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CONFIG_INT_OSC                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CONFIG_ADC_PINS                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           2     2      0     100
                                              4 COMMON     2     2      0
                      _SET_DUTY_CCP3
 ---------------------------------------------------------------------------------
 (5) _SET_DUTY_CCP3                                        4     4      0     100
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CONFIG_SYSTEM
     _CONFIG_ADC_PINS
     _CONFIG_INT_OSC
     _CONFIG_PORTS
     _CONFIG_PWM_CCP3
   _CONFIG_TMR0_INTERRUPT
   _GET_CURRENT_POT_VALUES
     _DETERMINE_WAVESHAPE
       _DO_ADC
     _DO_ADC
   _PROCESS_FINAL_SPEED_AND_PRESCALER
     _ADJUST_PRESCALER
     _ADJUST_TMR0
     _CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1
     _TURN_PRESCALER_OFF
     _TURN_PRESCALER_ON
   _PROCESS_RAW_SPEED_AND_PRESCALER
     ___lmul
   _PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST
     _LENGTHEN_PERIOD
       ___lmul
     _SHORTEN_PERIOD
       ___lmul
     ___lmul
   _TMR0_WRITE
   _TURN_ON_CCP3_PWM

 _INTERRUPT_InterruptManager (ROOT)
   _SET_DUTY_CCP3

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      53       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     1D      47       6       88.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      53      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Wed Jan 24 19:11:00 2024

                                                       r1 0020  
                                                       r2 0021  
                                                       r3 0022  
                                                      _NO 0683  
                                                     l158 0567  
                                                     l177 0659  
                                                     _GIE 005F  
                                                     _PR2 001B  
                                                     _YES 0684  
                                        _ADJUST_PRESCALER 04E0  
                                                     wreg 0009  
                                                    l1711 05B6  
                                                    _C1ON 088F  
                                                    l1713 05BD  
                                                    l1717 05BF  
                                                    l1901 043D  
                                                    l1753 0611  
                                                    l1681 052D  
                                                    l1825 0368  
                                                    l1809 0323  
                                                    l1851 049D  
                                                    l1819 0337  
                                                    l1773 05F3  
                                                    l1917 0621  
                                                    l1677 0523  
                                                    l1775 05F7  
                                                    l1951 03DA  
                                                    l1943 039F  
                                                    l1935 038C  
                                                    l1793 050D  
                                                    l1785 04EF  
                                                    l1961 03E4  
                                                    l1953 03DD  
                                                    l1789 04FE  
                                                    l1965 03ED  
                                                    l1957 03E7  
                                                    l1959 03EA  
                                                    l1991 0590  
                                                    _ADON 04E8  
                                                    u1125 0554  
                                                    u1305 0304  
                                                    u1155 052E  
                                                    u1165 0535  
                                                    u1415 041E  
                                                    u1345 0357  
                                                    u1435 0448  
                                                    u1445 0456  
                                                    u1365 036D  
                                                    u1385 047D  
                                                    u1395 0490  
                                                    u1485 03C6  
                                                    u1577 0562  
                                                    _TMR0 0015  
                                                    _WPUC 020E  
                                       _current_speed_log 0036  
                                                    _main 0576  
                                                    _duty 0073  
                                                    fsr0h 0005  
                                                    fsr1h 0007  
                                                    indf0 0000  
                                                    fsr0l 0004  
                                                    indf1 0001  
                                                    fsr1l 0006  
                                                    btemp 007E  
                                       _current_waveshape 0072  
                                                    start 00C9  
                                   _CONFIG_TMR0_INTERRUPT 0681  
                                        __end_of_NEGATIVE 068B  
                                    __end_of_CONFIG_PORTS 064F  
              __end_of_CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1 0613  
                    ??_CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1 0048  
                     ?_CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1 0076  
                      _CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1 05FE  
                                                   STATUS 0003  
                                                   ?_main 0076  
                                                   _T2CON 001C  
                                                   _LATC5 0875  
                                                   i1l281 00C7  
                                                   i1l277 0056  
                                                   i1l278 0063  
                                                   _SRLEN 08D7  
                                                   _TRISC 008E  
                                                   u85_25 05E0  
                                             ?_TMR0_WRITE 0076  
                                     ___lmul@multiplicand 004C  
                                        __end_of_POSITIVE 068C  
                                ??_GET_CURRENT_POT_VALUES 0050  
                                                   status 0003  
                                                   wtemp0 007E  
                              _current_one_quadrant_index 0071  
                                         __initialization 00CB  
                              LENGTHEN_PERIOD@dTMR0_ideal 0058  
                                            __end_of_main 05A1  
        __end_of_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST 03F4  
              ??_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST 005C  
               ?_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST 0076  
                _PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST 0381  
                             ?_INTERRUPT_InterruptManager 0076  
                                       __end_of_DONT_CARE 0686  
                                                  ??_main 0065  
                                   __end_of_DIVIDE_BY_TWO 0689  
                                  _speed_adc_config_value 068E  
                                   __end_of_CONFIG_SYSTEM 0646  
                                                  _ADCON0 009D  
                                                  _ADCON1 009E  
PROCESS_FINAL_SPEED_AND_PRESCALER@prescaler_overflow_flag 004B  
                                                  _ADRESH 009C  
                                                  _ADRESL 009B  
                                                  _CCPR3L 0311  
                                                  _ANSELC 018E  
                                                  _DO_ADC 054A  
                                                  i1l1601 0041  
                                                  i1l1611 004C  
                                                  i1l1623 00BF  
                                                  i1l1615 0054  
                                                  i1l1609 004B  
                                                  i1l1593 0033  
                                                  i1l1597 003B  
                                                  i1l1589 0020  
                                                  _OSCCON 0099  
                                                  _TMR0IE 005D  
                                                  _TMR0IF 005A  
                                                  _TMR2IF 0089  
                                                  _TMR2ON 00E2  
                                                  _TRISA2 0462  
                                  ?_CONFIG_TMR0_INTERRUPT 0076  
                                          DO_ADC@modifier 0048  
                             __end_of_DETERMINE_WAVESHAPE 05C8  
                       __end_of_symmetry_adc_config_value 068D  
                                                  ___lmul 051B  
                                   __end_of_SET_DUTY_CCP3 05E8  
                                       ?_TURN_ON_CCP3_PWM 0076  
                                       ??_CONFIG_ADC_PINS 0048  
                                 _current_speed_linear_32 0028  
                                      ??_TURN_ON_CCP3_PWM 0048  
                                 __end_of__initialization 00E0  
                                          _SHORTEN_PERIOD 02E8  
                                __end_of_ADJUST_PRESCALER 051B  
                                          _DIVIDE_BY_FOUR 0686  
                                          _CONFIG_INT_OSC 066D  
                                          __pcstackCOMMON 0076  
                                            __pidataBANK0 067F  
                                             _dTMR0_ideal 0030  
                                              __end_of_NO 0684  
                                  _tri_table_one_quadrant 00E4  
                                       ??_CONFIG_PWM_CCP3 0048  
                                       _top_two_bytes_ptr 0065  
                                           _current_depth 0034  
                                              __pbssBANK0 0020  
                                                 ?_DO_ADC 0048  
                                  __end_of_SHORTEN_PERIOD 0381  
                                            _CONFIG_PORTS 0646  
                                  __end_of_DIVIDE_BY_FOUR 0687  
                                  __end_of_CONFIG_INT_OSC 0673  
                                      __end_of_DO_NOTHING 068A  
                                              __pmaintext 0576  
                                  _GET_CURRENT_POT_VALUES 04A3  
                                                 ?___lmul 0048  
                                              __pintentry 0004  
 PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST@symmetry_status 0064  
                                                 _CCP3CON 0313  
                                          ___lmul@product 0050  
                                              _final_TMR0 0075  
                                           ??_ADJUST_TMR0 0048  
                                            ??_TMR0_WRITE 0048  
                                   SET_DUTY_CCP3@duty_ptr 0079  
                                                 _OSCTUNE 0098  
                                 _sine_table_one_quadrant 01E6  
                               TMR0_WRITE@timer_value_ptr 0048  
                                         ?_SHORTEN_PERIOD 0076  
               __end_of_PROCESS_FINAL_SPEED_AND_PRESCALER 0627  
                     ??_PROCESS_FINAL_SPEED_AND_PRESCALER 004B  
                      ?_PROCESS_FINAL_SPEED_AND_PRESCALER 0076  
                       _PROCESS_FINAL_SPEED_AND_PRESCALER 0613  
                                         ?_CONFIG_INT_OSC 0076  
                                    _current_speed_log_32 0024  
                                      __end_of_TMR0_WRITE 0667  
                                    _current_speed_linear 0038  
                                       _TURN_PRESCALER_ON 067C  
                               _base_prescaler_bits_index 0070  
                                                 __ptext1 0657  
                                                 __ptext2 065F  
                                                 __ptext3 0381  
                                                 __ptext4 02E8  
                                                 __ptext5 0461  
                                                 __ptext6 03F4  
                                                 __ptext7 051B  
                                                 __ptext8 0613  
                                                 __ptext9 067C  
                                      ?_TURN_PRESCALER_ON 0076  
                                         _MULTIPLY_BY_TWO 0687  
                 __end_of_PROCESS_RAW_SPEED_AND_PRESCALER 0461  
                       ??_PROCESS_RAW_SPEED_AND_PRESCALER 0054  
                        ?_PROCESS_RAW_SPEED_AND_PRESCALER 0076  
                         _PROCESS_RAW_SPEED_AND_PRESCALER 03F4  
                                               _DONT_CARE 0685  
                                     ??_TURN_PRESCALER_ON 0048  
                                                 clrloop0 0668  
                                    end_of_initialization 00E0  
                                     __end_of_ADJUST_TMR0 05FE  
                                 ??_CONFIG_TMR0_INTERRUPT 0048  
                                           _duty_low_byte 0047  
                               __end_of_TURN_PRESCALER_ON 067F  
                          __end_of_speed_adc_config_value 068F  
                                  _depth_adc_config_value 068D  
                                         _CONFIG_ADC_PINS 0678  
                                        _TMR0_offset_sign 0042  
                                       ??_LENGTHEN_PERIOD 0054  
                                              DO_ADC@temp 004D  
                                          __end_of_DO_ADC 0576  
                                       SET_DUTY_CCP3@temp 0078  
                                        _current_quadrant 0044  
                                       ?_ADJUST_PRESCALER 0076  
                              __end_of_TURN_PRESCALER_OFF 0678  
                                      ??_ADJUST_PRESCALER 0048  
                                 __end_of_MULTIPLY_BY_TWO 0688  
                                         _CONFIG_PWM_CCP3 0627  
                                        _current_symmetry 0032  
                                          __end_of___lmul 054A  
                                     start_initialization 00CB  
                                             _ADJUST_TMR0 05E8  
                                             __end_of_YES 0685  
                                                ??_DO_ADC 004A  
                                 ?_GET_CURRENT_POT_VALUES 0076  
                         __end_of_sine_table_one_quadrant 02E8  
                                 __end_of_CONFIG_ADC_PINS 067C  
                                                ??___lmul 0050  
                          __end_of_tri_table_one_quadrant 01E6  
                                             __pdataBANK0 0065  
                                        DO_ADC@adc_result 004B  
                                             __pbssCOMMON 0070  
                                               ___latbits 0001  
                                           _DIVIDE_BY_TWO 0688  
                                           __pcstackBANK0 0048  
                                        ??_SHORTEN_PERIOD 0054  
                                           _CONFIG_SYSTEM 063A  
                                        ??_CONFIG_INT_OSC 0048  
                          __end_of_GET_CURRENT_POT_VALUES 04E0  
                                 __end_of_CONFIG_PWM_CCP3 063A  
                                          _prescaler_bits 064F  
                            ??_INTERRUPT_InterruptManager 007A  
                                            _how_many_128 003A  
                                           _SET_DUTY_CCP3 05C8  
                                                _CCPTMRS0 029E  
                                          ?_CONFIG_SYSTEM 0076  
                                        _prescaler_adjust 0041  
                                         _symmetry_status 003E  
                                                _NEGATIVE 068A  
                      __end_of_waveshape_adc_config_value 0690  
                              _waveshape_adc_config_value 068F  
                           __end_of_CONFIG_TMR0_INTERRUPT 0683  
                                               clear_ram0 0667  
                                                _GO_nDONE 04E9  
                                        _TURN_ON_CCP3_PWM 0657  
                                  __end_of_prescaler_bits 0657  
                                        ?_CONFIG_ADC_PINS 0076  
                                                _POSITIVE 068B  
                                         _LENGTHEN_PERIOD 0461  
                                          ?_SET_DUTY_CCP3 0076  
                                       _clear_TMR0_please 003F  
                            SHORTEN_PERIOD@TMR0_raw_extra 005A  
                                       ___lmul@multiplier 0048  
                                     _DETERMINE_WAVESHAPE 05A1  
                                  DETERMINE_WAVESHAPE@ADC 004E  
                                        ?_CONFIG_PWM_CCP3 0076  
                          __end_of_depth_adc_config_value 068E  
            PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST@temp 0060  
                                    ?_DETERMINE_WAVESHAPE 0076  
                                      _TURN_PRESCALER_OFF 0673  
                                         ??_CONFIG_SYSTEM 0048  
                                            ?_ADJUST_TMR0 0076  
                                        _speed_control_32 002C  
                                                __ptext10 0673  
                                                __ptext11 05FE  
                                                __ptext20 0646  
                                                __ptext12 05E8  
                                                __ptext21 066D  
                                                __ptext13 04E0  
                                                __ptext22 0678  
                                                __ptext14 04A3  
                                                __ptext15 05A1  
                                                __ptext24 05C8  
                                                __ptext16 054A  
                                                __ptext17 0681  
                                                __ptext18 063A  
                                                __ptext19 0627  
                                     ?_TURN_PRESCALER_OFF 0076  
 PROCESS_RAW_SPEED_AND_PRESCALER@speed_control_subtracted 0058  
                                           ?_CONFIG_PORTS 0076  
                                          _duty_high_byte 0046  
                                           _speed_control 003C  
                                                _raw_TMR0 0040  
                                          _symmetry_total 0020  
                                 __end_of_LENGTHEN_PERIOD 04A3  
                                    ??_TURN_PRESCALER_OFF 0048  
                                                int$flags 007E  
                                   ??_DETERMINE_WAVESHAPE 004E  
                      __end_of_INTERRUPT_InterruptManager 00C9  
                              _INTERRUPT_InterruptManager 0004  
                                         ??_SET_DUTY_CCP3 0076  
                                              _DO_NOTHING 0689  
                                          __pstringtext10 0689  
                                          __pstringtext11 068A  
                                          __pstringtext12 068B  
                                          __pstringtext13 068C  
                                          __pstringtext14 068D  
                                          __pstringtext15 068E  
                                          __pstringtext16 068F  
                               _symmetry_adc_config_value 068C  
                                          ??_CONFIG_PORTS 0048  
                                                intlevel1 0000  
                                           __pstringtext1 00E4  
                                           __pstringtext2 01E6  
                                           __pstringtext3 064F  
                                           __pstringtext4 0683  
                                           __pstringtext5 0684  
                                           __pstringtext6 0685  
                                           __pstringtext7 0686  
                                           __pstringtext8 0687  
                                           __pstringtext9 0688  
                                             _TMR0_offset 0043  
                                              _OPTION_REG 0095  
                                              _TMR0_WRITE 065F  
                               SHORTEN_PERIOD@dTMR0_ideal 0058  
                                __end_of_TURN_ON_CCP3_PWM 065F  
                                       _current_halfcycle 0045  
                                        ?_LENGTHEN_PERIOD 0076  
