

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Sat Jan 20 21:37:34 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og9 
     1                           	processor	16F1824
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    15                           	psect	stringtext11,global,class=STRCODE,delta=2,noexec
    16                           	psect	stringtext12,global,class=STRCODE,delta=2,noexec
    17                           	psect	stringtext13,global,class=STRCODE,delta=2,noexec
    18                           	psect	stringtext14,global,class=STRCODE,delta=2,noexec
    19                           	psect	stringtext15,global,class=STRCODE,delta=2,noexec
    20                           	psect	stringtext16,global,class=STRCODE,delta=2,noexec
    21                           	psect	stringtext17,global,class=STRCODE,delta=2,noexec
    22                           	psect	stringtext18,global,class=STRCODE,delta=2,noexec
    23                           	psect	stringtext19,global,class=STRCODE,delta=2,noexec
    24                           	psect	stringtext20,global,class=STRCODE,delta=2,noexec
    25                           	psect	cinit,global,class=CODE,merge=1,delta=2
    26                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    27                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    28                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    29                           	psect	clrtext,global,class=CODE,delta=2
    30                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    31                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    32                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    33                           	psect	text1,local,class=CODE,merge=1,delta=2
    34                           	psect	text2,local,class=CODE,merge=1,delta=2
    35                           	psect	text3,local,class=CODE,merge=1,delta=2
    36                           	psect	text4,local,class=CODE,merge=1,delta=2
    37                           	psect	text5,local,class=CODE,merge=1,delta=2
    38                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text7,local,class=CODE,merge=1,delta=2
    40                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    41                           	psect	text9,local,class=CODE,merge=1,delta=2
    42                           	psect	text10,local,class=CODE,merge=1,delta=2
    43                           	psect	text11,local,class=CODE,merge=1,delta=2
    44                           	psect	text12,local,class=CODE,merge=1,delta=2
    45                           	psect	text13,local,class=CODE,merge=1,delta=2
    46                           	psect	text14,local,class=CODE,merge=1,delta=2
    47                           	psect	text15,local,class=CODE,merge=1,delta=2
    48                           	psect	text16,local,class=CODE,merge=1,delta=2
    49                           	psect	text17,local,class=CODE,merge=1,delta=2
    50                           	psect	text18,local,class=CODE,merge=1,delta=2
    51                           	psect	intentry,global,class=CODE,delta=2
    52                           	psect	text20,local,class=CODE,merge=1,delta=2
    53                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    54                           	dabs	1,0x7E,2
    55     0000                     
    56                           ; Generated 06/07/2023 GMT
    57                           ; 
    58                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution. Publication is not required when
    72                           ;        this file is used in an embedded application.
    73                           ; 
    74                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    75                           ;        software without specific prior written permission.
    76                           ; 
    77                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    78                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    79                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    80                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    81                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    82                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    83                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    84                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    85                           ; 
    86                           ; 
    87                           ; Code-generator required, PIC16F1824 Definitions
    88                           ; 
    89                           ; SFR Addresses
    90     0000                     	;# 
    91     0001                     	;# 
    92     0002                     	;# 
    93     0003                     	;# 
    94     0004                     	;# 
    95     0005                     	;# 
    96     0006                     	;# 
    97     0007                     	;# 
    98     0008                     	;# 
    99     0009                     	;# 
   100     000A                     	;# 
   101     000B                     	;# 
   102     000C                     	;# 
   103     000E                     	;# 
   104     0011                     	;# 
   105     0012                     	;# 
   106     0013                     	;# 
   107     0015                     	;# 
   108     0016                     	;# 
   109     0016                     	;# 
   110     0017                     	;# 
   111     0018                     	;# 
   112     0019                     	;# 
   113     001A                     	;# 
   114     001B                     	;# 
   115     001C                     	;# 
   116     001E                     	;# 
   117     001F                     	;# 
   118     008C                     	;# 
   119     008E                     	;# 
   120     0091                     	;# 
   121     0092                     	;# 
   122     0093                     	;# 
   123     0095                     	;# 
   124     0096                     	;# 
   125     0097                     	;# 
   126     0098                     	;# 
   127     0099                     	;# 
   128     009A                     	;# 
   129     009B                     	;# 
   130     009B                     	;# 
   131     009C                     	;# 
   132     009D                     	;# 
   133     009E                     	;# 
   134     010C                     	;# 
   135     010E                     	;# 
   136     0111                     	;# 
   137     0112                     	;# 
   138     0113                     	;# 
   139     0114                     	;# 
   140     0115                     	;# 
   141     0116                     	;# 
   142     0117                     	;# 
   143     0118                     	;# 
   144     0119                     	;# 
   145     011A                     	;# 
   146     011B                     	;# 
   147     011D                     	;# 
   148     011E                     	;# 
   149     018C                     	;# 
   150     018E                     	;# 
   151     0191                     	;# 
   152     0191                     	;# 
   153     0192                     	;# 
   154     0193                     	;# 
   155     0193                     	;# 
   156     0193                     	;# 
   157     0194                     	;# 
   158     0195                     	;# 
   159     0196                     	;# 
   160     0199                     	;# 
   161     019A                     	;# 
   162     019B                     	;# 
   163     019B                     	;# 
   164     019B                     	;# 
   165     019B                     	;# 
   166     019C                     	;# 
   167     019C                     	;# 
   168     019D                     	;# 
   169     019E                     	;# 
   170     019F                     	;# 
   171     020C                     	;# 
   172     020E                     	;# 
   173     0211                     	;# 
   174     0211                     	;# 
   175     0212                     	;# 
   176     0212                     	;# 
   177     0213                     	;# 
   178     0213                     	;# 
   179     0214                     	;# 
   180     0214                     	;# 
   181     0215                     	;# 
   182     0215                     	;# 
   183     0215                     	;# 
   184     0215                     	;# 
   185     0216                     	;# 
   186     0216                     	;# 
   187     0217                     	;# 
   188     0217                     	;# 
   189     0291                     	;# 
   190     0291                     	;# 
   191     0292                     	;# 
   192     0293                     	;# 
   193     0294                     	;# 
   194     0295                     	;# 
   195     0295                     	;# 
   196     0296                     	;# 
   197     0298                     	;# 
   198     0298                     	;# 
   199     0299                     	;# 
   200     029A                     	;# 
   201     029B                     	;# 
   202     029C                     	;# 
   203     029D                     	;# 
   204     029E                     	;# 
   205     029E                     	;# 
   206     0311                     	;# 
   207     0311                     	;# 
   208     0312                     	;# 
   209     0313                     	;# 
   210     0318                     	;# 
   211     0318                     	;# 
   212     0319                     	;# 
   213     031A                     	;# 
   214     038C                     	;# 
   215     038E                     	;# 
   216     0391                     	;# 
   217     0392                     	;# 
   218     0393                     	;# 
   219     039A                     	;# 
   220     039C                     	;# 
   221     039D                     	;# 
   222     039E                     	;# 
   223     039F                     	;# 
   224     0415                     	;# 
   225     0416                     	;# 
   226     0417                     	;# 
   227     041C                     	;# 
   228     041D                     	;# 
   229     041E                     	;# 
   230     0FE4                     	;# 
   231     0FE5                     	;# 
   232     0FE6                     	;# 
   233     0FE7                     	;# 
   234     0FE8                     	;# 
   235     0FE9                     	;# 
   236     0FEA                     	;# 
   237     0FEB                     	;# 
   238     0FED                     	;# 
   239     0FEE                     	;# 
   240     0FEF                     	;# 
   241     0020                     	;# 
   242     0021                     	;# 
   243     0022                     	;# 
   244     0023                     	;# 
   245     0024                     	;# 
   246     0025                     	;# 
   247     0000                     	;# 
   248     0001                     	;# 
   249     0002                     	;# 
   250     0003                     	;# 
   251     0004                     	;# 
   252     0005                     	;# 
   253     0006                     	;# 
   254     0007                     	;# 
   255     0008                     	;# 
   256     0009                     	;# 
   257     000A                     	;# 
   258     000B                     	;# 
   259     000C                     	;# 
   260     000E                     	;# 
   261     0011                     	;# 
   262     0012                     	;# 
   263     0013                     	;# 
   264     0015                     	;# 
   265     0016                     	;# 
   266     0016                     	;# 
   267     0017                     	;# 
   268     0018                     	;# 
   269     0019                     	;# 
   270     001A                     	;# 
   271     001B                     	;# 
   272     001C                     	;# 
   273     001E                     	;# 
   274     001F                     	;# 
   275     008C                     	;# 
   276     008E                     	;# 
   277     0091                     	;# 
   278     0092                     	;# 
   279     0093                     	;# 
   280     0095                     	;# 
   281     0096                     	;# 
   282     0097                     	;# 
   283     0098                     	;# 
   284     0099                     	;# 
   285     009A                     	;# 
   286     009B                     	;# 
   287     009B                     	;# 
   288     009C                     	;# 
   289     009D                     	;# 
   290     009E                     	;# 
   291     010C                     	;# 
   292     010E                     	;# 
   293     0111                     	;# 
   294     0112                     	;# 
   295     0113                     	;# 
   296     0114                     	;# 
   297     0115                     	;# 
   298     0116                     	;# 
   299     0117                     	;# 
   300     0118                     	;# 
   301     0119                     	;# 
   302     011A                     	;# 
   303     011B                     	;# 
   304     011D                     	;# 
   305     011E                     	;# 
   306     018C                     	;# 
   307     018E                     	;# 
   308     0191                     	;# 
   309     0191                     	;# 
   310     0192                     	;# 
   311     0193                     	;# 
   312     0193                     	;# 
   313     0193                     	;# 
   314     0194                     	;# 
   315     0195                     	;# 
   316     0196                     	;# 
   317     0199                     	;# 
   318     019A                     	;# 
   319     019B                     	;# 
   320     019B                     	;# 
   321     019B                     	;# 
   322     019B                     	;# 
   323     019C                     	;# 
   324     019C                     	;# 
   325     019D                     	;# 
   326     019E                     	;# 
   327     019F                     	;# 
   328     020C                     	;# 
   329     020E                     	;# 
   330     0211                     	;# 
   331     0211                     	;# 
   332     0212                     	;# 
   333     0212                     	;# 
   334     0213                     	;# 
   335     0213                     	;# 
   336     0214                     	;# 
   337     0214                     	;# 
   338     0215                     	;# 
   339     0215                     	;# 
   340     0215                     	;# 
   341     0215                     	;# 
   342     0216                     	;# 
   343     0216                     	;# 
   344     0217                     	;# 
   345     0217                     	;# 
   346     0291                     	;# 
   347     0291                     	;# 
   348     0292                     	;# 
   349     0293                     	;# 
   350     0294                     	;# 
   351     0295                     	;# 
   352     0295                     	;# 
   353     0296                     	;# 
   354     0298                     	;# 
   355     0298                     	;# 
   356     0299                     	;# 
   357     029A                     	;# 
   358     029B                     	;# 
   359     029C                     	;# 
   360     029D                     	;# 
   361     029E                     	;# 
   362     029E                     	;# 
   363     0311                     	;# 
   364     0311                     	;# 
   365     0312                     	;# 
   366     0313                     	;# 
   367     0318                     	;# 
   368     0318                     	;# 
   369     0319                     	;# 
   370     031A                     	;# 
   371     038C                     	;# 
   372     038E                     	;# 
   373     0391                     	;# 
   374     0392                     	;# 
   375     0393                     	;# 
   376     039A                     	;# 
   377     039C                     	;# 
   378     039D                     	;# 
   379     039E                     	;# 
   380     039F                     	;# 
   381     0415                     	;# 
   382     0416                     	;# 
   383     0417                     	;# 
   384     041C                     	;# 
   385     041D                     	;# 
   386     041E                     	;# 
   387     0FE4                     	;# 
   388     0FE5                     	;# 
   389     0FE6                     	;# 
   390     0FE7                     	;# 
   391     0FE8                     	;# 
   392     0FE9                     	;# 
   393     0FEA                     	;# 
   394     0FEB                     	;# 
   395     0FED                     	;# 
   396     0FEE                     	;# 
   397     0FEF                     	;# 
   398                           
   399                           	psect	idataBANK0
   400     0794                     __pidataBANK0:
   401                           
   402                           ;initializer for _top_two_bytes_ptr
   403     0794  3421               	retlw	33
   404     0795  3400               	retlw	0
   405                           
   406                           	psect	stringtext1
   407     00EE                     __pstringtext1:
   408     00EE                     _shorten_period_log_table:
   409     00EE  3400               	retlw	0
   410     00EF  3401               	retlw	1
   411     00F0  34F5               	retlw	245
   412     00F1  3400               	retlw	0
   413     00F2  34EA               	retlw	234
   414     00F3  3400               	retlw	0
   415     00F4  34E0               	retlw	224
   416     00F5  3400               	retlw	0
   417     00F6  34D7               	retlw	215
   418     00F7  3400               	retlw	0
   419     00F8  34CE               	retlw	206
   420     00F9  3400               	retlw	0
   421     00FA  34C5               	retlw	197
   422     00FB  3400               	retlw	0
   423     00FC  34BC               	retlw	188
   424     00FD  3400               	retlw	0
   425     00FE  34B4               	retlw	180
   426     00FF  3400               	retlw	0
   427     0100  34AD               	retlw	173
   428     0101  3400               	retlw	0
   429     0102  34A5               	retlw	165
   430     0103  3400               	retlw	0
   431     0104  349E               	retlw	158
   432     0105  3400               	retlw	0
   433     0106  3498               	retlw	152
   434     0107  3400               	retlw	0
   435     0108  3491               	retlw	145
   436     0109  3400               	retlw	0
   437     010A  348B               	retlw	139
   438     010B  3400               	retlw	0
   439     010C  3485               	retlw	133
   440     010D  3400               	retlw	0
   441     010E  347F               	retlw	127
   442     010F  3400               	retlw	0
   443     0110  347A               	retlw	122
   444     0111  3400               	retlw	0
   445     0112  3475               	retlw	117
   446     0113  3400               	retlw	0
   447     0114  3470               	retlw	112
   448     0115  3400               	retlw	0
   449     0116  346B               	retlw	107
   450     0117  3400               	retlw	0
   451     0118  3466               	retlw	102
   452     0119  3400               	retlw	0
   453     011A  3462               	retlw	98
   454     011B  3400               	retlw	0
   455     011C  345E               	retlw	94
   456     011D  3400               	retlw	0
   457     011E  345A               	retlw	90
   458     011F  3400               	retlw	0
   459     0120  3456               	retlw	86
   460     0121  3400               	retlw	0
   461     0122  3452               	retlw	82
   462     0123  3400               	retlw	0
   463     0124  344F               	retlw	79
   464     0125  3400               	retlw	0
   465     0126  344B               	retlw	75
   466     0127  3400               	retlw	0
   467     0128  3448               	retlw	72
   468     0129  3400               	retlw	0
   469     012A  3445               	retlw	69
   470     012B  3400               	retlw	0
   471     012C  3442               	retlw	66
   472     012D  3400               	retlw	0
   473     012E  343F               	retlw	63
   474     012F  3400               	retlw	0
   475     0130  343C               	retlw	60
   476     0131  3400               	retlw	0
   477     0132  343A               	retlw	58
   478     0133  3400               	retlw	0
   479     0134  3437               	retlw	55
   480     0135  3400               	retlw	0
   481     0136  3435               	retlw	53
   482     0137  3400               	retlw	0
   483     0138  3433               	retlw	51
   484     0139  3400               	retlw	0
   485     013A  3430               	retlw	48
   486     013B  3400               	retlw	0
   487     013C  342E               	retlw	46
   488     013D  3400               	retlw	0
   489     013E  342C               	retlw	44
   490     013F  3400               	retlw	0
   491     0140  342A               	retlw	42
   492     0141  3400               	retlw	0
   493     0142  3429               	retlw	41
   494     0143  3400               	retlw	0
   495     0144  3427               	retlw	39
   496     0145  3400               	retlw	0
   497     0146  3425               	retlw	37
   498     0147  3400               	retlw	0
   499     0148  3423               	retlw	35
   500     0149  3400               	retlw	0
   501     014A  3422               	retlw	34
   502     014B  3400               	retlw	0
   503     014C  3420               	retlw	32
   504     014D  3400               	retlw	0
   505     014E  341F               	retlw	31
   506     014F  3400               	retlw	0
   507     0150  341E               	retlw	30
   508     0151  3400               	retlw	0
   509     0152  341C               	retlw	28
   510     0153  3400               	retlw	0
   511     0154  341B               	retlw	27
   512     0155  3400               	retlw	0
   513     0156  341A               	retlw	26
   514     0157  3400               	retlw	0
   515     0158  3419               	retlw	25
   516     0159  3400               	retlw	0
   517     015A  3418               	retlw	24
   518     015B  3400               	retlw	0
   519     015C  3417               	retlw	23
   520     015D  3400               	retlw	0
   521     015E  3416               	retlw	22
   522     015F  3400               	retlw	0
   523     0160  3415               	retlw	21
   524     0161  3400               	retlw	0
   525     0162  3414               	retlw	20
   526     0163  3400               	retlw	0
   527     0164  3413               	retlw	19
   528     0165  3400               	retlw	0
   529     0166  3412               	retlw	18
   530     0167  3400               	retlw	0
   531     0168  3411               	retlw	17
   532     0169  3400               	retlw	0
   533     016A  3410               	retlw	16
   534     016B  3400               	retlw	0
   535     016C  3410               	retlw	16
   536     016D  3400               	retlw	0
   537     016E  340F               	retlw	15
   538     016F  3400               	retlw	0
   539     0170  340E               	retlw	14
   540     0171  3400               	retlw	0
   541     0172  340E               	retlw	14
   542     0173  3400               	retlw	0
   543     0174  340D               	retlw	13
   544     0175  3400               	retlw	0
   545     0176  340C               	retlw	12
   546     0177  3400               	retlw	0
   547     0178  340C               	retlw	12
   548     0179  3400               	retlw	0
   549     017A  340B               	retlw	11
   550     017B  3400               	retlw	0
   551     017C  340B               	retlw	11
   552     017D  3400               	retlw	0
   553     017E  340A               	retlw	10
   554     017F  3400               	retlw	0
   555     0180  340A               	retlw	10
   556     0181  3400               	retlw	0
   557     0182  3409               	retlw	9
   558     0183  3400               	retlw	0
   559     0184  3409               	retlw	9
   560     0185  3400               	retlw	0
   561     0186  3409               	retlw	9
   562     0187  3400               	retlw	0
   563     0188  3408               	retlw	8
   564     0189  3400               	retlw	0
   565     018A  3408               	retlw	8
   566     018B  3400               	retlw	0
   567     018C  3407               	retlw	7
   568     018D  3400               	retlw	0
   569     018E  3407               	retlw	7
   570     018F  3400               	retlw	0
   571     0190  3407               	retlw	7
   572     0191  3400               	retlw	0
   573     0192  3406               	retlw	6
   574     0193  3400               	retlw	0
   575     0194  3406               	retlw	6
   576     0195  3400               	retlw	0
   577     0196  3406               	retlw	6
   578     0197  3400               	retlw	0
   579     0198  3405               	retlw	5
   580     0199  3400               	retlw	0
   581     019A  3405               	retlw	5
   582     019B  3400               	retlw	0
   583     019C  3405               	retlw	5
   584     019D  3400               	retlw	0
   585     019E  3405               	retlw	5
   586     019F  3400               	retlw	0
   587     01A0  3404               	retlw	4
   588     01A1  3400               	retlw	0
   589     01A2  3404               	retlw	4
   590     01A3  3400               	retlw	0
   591     01A4  3404               	retlw	4
   592     01A5  3400               	retlw	0
   593     01A6  3404               	retlw	4
   594     01A7  3400               	retlw	0
   595     01A8  3404               	retlw	4
   596     01A9  3400               	retlw	0
   597     01AA  3403               	retlw	3
   598     01AB  3400               	retlw	0
   599     01AC  3403               	retlw	3
   600     01AD  3400               	retlw	0
   601     01AE  3403               	retlw	3
   602     01AF  3400               	retlw	0
   603     01B0  3403               	retlw	3
   604     01B1  3400               	retlw	0
   605     01B2  3403               	retlw	3
   606     01B3  3400               	retlw	0
   607     01B4  3403               	retlw	3
   608     01B5  3400               	retlw	0
   609     01B6  3402               	retlw	2
   610     01B7  3400               	retlw	0
   611     01B8  3402               	retlw	2
   612     01B9  3400               	retlw	0
   613     01BA  3402               	retlw	2
   614     01BB  3400               	retlw	0
   615     01BC  3402               	retlw	2
   616     01BD  3400               	retlw	0
   617     01BE  3402               	retlw	2
   618     01BF  3400               	retlw	0
   619     01C0  3402               	retlw	2
   620     01C1  3400               	retlw	0
   621     01C2  3402               	retlw	2
   622     01C3  3400               	retlw	0
   623     01C4  3401               	retlw	1
   624     01C5  3400               	retlw	0
   625     01C6  3401               	retlw	1
   626     01C7  3400               	retlw	0
   627     01C8  3401               	retlw	1
   628     01C9  3400               	retlw	0
   629     01CA  3401               	retlw	1
   630     01CB  3400               	retlw	0
   631     01CC  3401               	retlw	1
   632     01CD  3400               	retlw	0
   633     01CE  3401               	retlw	1
   634     01CF  3400               	retlw	0
   635     01D0  3401               	retlw	1
   636     01D1  3400               	retlw	0
   637     01D2  3401               	retlw	1
   638     01D3  3400               	retlw	0
   639     01D4  3401               	retlw	1
   640     01D5  3400               	retlw	0
   641     01D6  3401               	retlw	1
   642     01D7  3400               	retlw	0
   643     01D8  3401               	retlw	1
   644     01D9  3400               	retlw	0
   645     01DA  3401               	retlw	1
   646     01DB  3400               	retlw	0
   647     01DC  3400               	retlw	0
   648     01DD  3400               	retlw	0
   649     01DE  3400               	retlw	0
   650     01DF  3400               	retlw	0
   651     01E0  3400               	retlw	0
   652     01E1  3400               	retlw	0
   653     01E2  3400               	retlw	0
   654     01E3  3400               	retlw	0
   655     01E4  3400               	retlw	0
   656     01E5  3400               	retlw	0
   657     01E6  3400               	retlw	0
   658     01E7  3400               	retlw	0
   659     01E8  3400               	retlw	0
   660     01E9  3400               	retlw	0
   661     01EA  3400               	retlw	0
   662     01EB  3400               	retlw	0
   663     01EC  3400               	retlw	0
   664     01ED  3400               	retlw	0
   665     01EE  3400               	retlw	0
   666     01EF  3400               	retlw	0
   667     01F0                     __end_of_shorten_period_log_table:
   668                           
   669                           	psect	stringtext2
   670     01F0                     __pstringtext2:
   671     01F0                     _tri_table_one_quadrant:
   672     01F0  3400               	retlw	0
   673     01F1  3402               	retlw	2
   674     01F2  3404               	retlw	4
   675     01F3  3402               	retlw	2
   676     01F4  3408               	retlw	8
   677     01F5  3402               	retlw	2
   678     01F6  340C               	retlw	12
   679     01F7  3402               	retlw	2
   680     01F8  3410               	retlw	16
   681     01F9  3402               	retlw	2
   682     01FA  3414               	retlw	20
   683     01FB  3402               	retlw	2
   684     01FC  3418               	retlw	24
   685     01FD  3402               	retlw	2
   686     01FE  341C               	retlw	28
   687     01FF  3402               	retlw	2
   688     0200  3420               	retlw	32
   689     0201  3402               	retlw	2
   690     0202  3424               	retlw	36
   691     0203  3402               	retlw	2
   692     0204  3428               	retlw	40
   693     0205  3402               	retlw	2
   694     0206  342C               	retlw	44
   695     0207  3402               	retlw	2
   696     0208  3430               	retlw	48
   697     0209  3402               	retlw	2
   698     020A  3434               	retlw	52
   699     020B  3402               	retlw	2
   700     020C  3438               	retlw	56
   701     020D  3402               	retlw	2
   702     020E  343C               	retlw	60
   703     020F  3402               	retlw	2
   704     0210  3440               	retlw	64
   705     0211  3402               	retlw	2
   706     0212  3444               	retlw	68
   707     0213  3402               	retlw	2
   708     0214  3448               	retlw	72
   709     0215  3402               	retlw	2
   710     0216  344C               	retlw	76
   711     0217  3402               	retlw	2
   712     0218  3450               	retlw	80
   713     0219  3402               	retlw	2
   714     021A  3454               	retlw	84
   715     021B  3402               	retlw	2
   716     021C  3458               	retlw	88
   717     021D  3402               	retlw	2
   718     021E  345C               	retlw	92
   719     021F  3402               	retlw	2
   720     0220  3460               	retlw	96
   721     0221  3402               	retlw	2
   722     0222  3464               	retlw	100
   723     0223  3402               	retlw	2
   724     0224  3468               	retlw	104
   725     0225  3402               	retlw	2
   726     0226  346C               	retlw	108
   727     0227  3402               	retlw	2
   728     0228  3470               	retlw	112
   729     0229  3402               	retlw	2
   730     022A  3474               	retlw	116
   731     022B  3402               	retlw	2
   732     022C  3478               	retlw	120
   733     022D  3402               	retlw	2
   734     022E  347C               	retlw	124
   735     022F  3402               	retlw	2
   736     0230  3480               	retlw	128
   737     0231  3402               	retlw	2
   738     0232  3484               	retlw	132
   739     0233  3402               	retlw	2
   740     0234  3488               	retlw	136
   741     0235  3402               	retlw	2
   742     0236  348C               	retlw	140
   743     0237  3402               	retlw	2
   744     0238  3490               	retlw	144
   745     0239  3402               	retlw	2
   746     023A  3494               	retlw	148
   747     023B  3402               	retlw	2
   748     023C  3498               	retlw	152
   749     023D  3402               	retlw	2
   750     023E  349C               	retlw	156
   751     023F  3402               	retlw	2
   752     0240  34A0               	retlw	160
   753     0241  3402               	retlw	2
   754     0242  34A4               	retlw	164
   755     0243  3402               	retlw	2
   756     0244  34A8               	retlw	168
   757     0245  3402               	retlw	2
   758     0246  34AC               	retlw	172
   759     0247  3402               	retlw	2
   760     0248  34B0               	retlw	176
   761     0249  3402               	retlw	2
   762     024A  34B4               	retlw	180
   763     024B  3402               	retlw	2
   764     024C  34B8               	retlw	184
   765     024D  3402               	retlw	2
   766     024E  34BC               	retlw	188
   767     024F  3402               	retlw	2
   768     0250  34C0               	retlw	192
   769     0251  3402               	retlw	2
   770     0252  34C4               	retlw	196
   771     0253  3402               	retlw	2
   772     0254  34C8               	retlw	200
   773     0255  3402               	retlw	2
   774     0256  34CC               	retlw	204
   775     0257  3402               	retlw	2
   776     0258  34D0               	retlw	208
   777     0259  3402               	retlw	2
   778     025A  34D4               	retlw	212
   779     025B  3402               	retlw	2
   780     025C  34D8               	retlw	216
   781     025D  3402               	retlw	2
   782     025E  34DC               	retlw	220
   783     025F  3402               	retlw	2
   784     0260  34E0               	retlw	224
   785     0261  3402               	retlw	2
   786     0262  34E4               	retlw	228
   787     0263  3402               	retlw	2
   788     0264  34E8               	retlw	232
   789     0265  3402               	retlw	2
   790     0266  34EC               	retlw	236
   791     0267  3402               	retlw	2
   792     0268  34F0               	retlw	240
   793     0269  3402               	retlw	2
   794     026A  34F4               	retlw	244
   795     026B  3402               	retlw	2
   796     026C  34F8               	retlw	248
   797     026D  3402               	retlw	2
   798     026E  34FB               	retlw	251
   799     026F  3402               	retlw	2
   800     0270  34FF               	retlw	255
   801     0271  3402               	retlw	2
   802     0272  3403               	retlw	3
   803     0273  3403               	retlw	3
   804     0274  3407               	retlw	7
   805     0275  3403               	retlw	3
   806     0276  340B               	retlw	11
   807     0277  3403               	retlw	3
   808     0278  340F               	retlw	15
   809     0279  3403               	retlw	3
   810     027A  3413               	retlw	19
   811     027B  3403               	retlw	3
   812     027C  3417               	retlw	23
   813     027D  3403               	retlw	3
   814     027E  341B               	retlw	27
   815     027F  3403               	retlw	3
   816     0280  341F               	retlw	31
   817     0281  3403               	retlw	3
   818     0282  3423               	retlw	35
   819     0283  3403               	retlw	3
   820     0284  3427               	retlw	39
   821     0285  3403               	retlw	3
   822     0286  342B               	retlw	43
   823     0287  3403               	retlw	3
   824     0288  342F               	retlw	47
   825     0289  3403               	retlw	3
   826     028A  3433               	retlw	51
   827     028B  3403               	retlw	3
   828     028C  3437               	retlw	55
   829     028D  3403               	retlw	3
   830     028E  343B               	retlw	59
   831     028F  3403               	retlw	3
   832     0290  343F               	retlw	63
   833     0291  3403               	retlw	3
   834     0292  3443               	retlw	67
   835     0293  3403               	retlw	3
   836     0294  3447               	retlw	71
   837     0295  3403               	retlw	3
   838     0296  344B               	retlw	75
   839     0297  3403               	retlw	3
   840     0298  344F               	retlw	79
   841     0299  3403               	retlw	3
   842     029A  3453               	retlw	83
   843     029B  3403               	retlw	3
   844     029C  3457               	retlw	87
   845     029D  3403               	retlw	3
   846     029E  345B               	retlw	91
   847     029F  3403               	retlw	3
   848     02A0  345F               	retlw	95
   849     02A1  3403               	retlw	3
   850     02A2  3463               	retlw	99
   851     02A3  3403               	retlw	3
   852     02A4  3467               	retlw	103
   853     02A5  3403               	retlw	3
   854     02A6  346B               	retlw	107
   855     02A7  3403               	retlw	3
   856     02A8  346F               	retlw	111
   857     02A9  3403               	retlw	3
   858     02AA  3473               	retlw	115
   859     02AB  3403               	retlw	3
   860     02AC  3477               	retlw	119
   861     02AD  3403               	retlw	3
   862     02AE  347B               	retlw	123
   863     02AF  3403               	retlw	3
   864     02B0  347F               	retlw	127
   865     02B1  3403               	retlw	3
   866     02B2  3483               	retlw	131
   867     02B3  3403               	retlw	3
   868     02B4  3487               	retlw	135
   869     02B5  3403               	retlw	3
   870     02B6  348B               	retlw	139
   871     02B7  3403               	retlw	3
   872     02B8  348F               	retlw	143
   873     02B9  3403               	retlw	3
   874     02BA  3493               	retlw	147
   875     02BB  3403               	retlw	3
   876     02BC  3497               	retlw	151
   877     02BD  3403               	retlw	3
   878     02BE  349B               	retlw	155
   879     02BF  3403               	retlw	3
   880     02C0  349F               	retlw	159
   881     02C1  3403               	retlw	3
   882     02C2  34A3               	retlw	163
   883     02C3  3403               	retlw	3
   884     02C4  34A7               	retlw	167
   885     02C5  3403               	retlw	3
   886     02C6  34AB               	retlw	171
   887     02C7  3403               	retlw	3
   888     02C8  34AF               	retlw	175
   889     02C9  3403               	retlw	3
   890     02CA  34B3               	retlw	179
   891     02CB  3403               	retlw	3
   892     02CC  34B7               	retlw	183
   893     02CD  3403               	retlw	3
   894     02CE  34BB               	retlw	187
   895     02CF  3403               	retlw	3
   896     02D0  34BF               	retlw	191
   897     02D1  3403               	retlw	3
   898     02D2  34C3               	retlw	195
   899     02D3  3403               	retlw	3
   900     02D4  34C7               	retlw	199
   901     02D5  3403               	retlw	3
   902     02D6  34CB               	retlw	203
   903     02D7  3403               	retlw	3
   904     02D8  34CF               	retlw	207
   905     02D9  3403               	retlw	3
   906     02DA  34D3               	retlw	211
   907     02DB  3403               	retlw	3
   908     02DC  34D7               	retlw	215
   909     02DD  3403               	retlw	3
   910     02DE  34DB               	retlw	219
   911     02DF  3403               	retlw	3
   912     02E0  34DF               	retlw	223
   913     02E1  3403               	retlw	3
   914     02E2  34E3               	retlw	227
   915     02E3  3403               	retlw	3
   916     02E4  34E7               	retlw	231
   917     02E5  3403               	retlw	3
   918     02E6  34EB               	retlw	235
   919     02E7  3403               	retlw	3
   920     02E8  34EF               	retlw	239
   921     02E9  3403               	retlw	3
   922     02EA  34F3               	retlw	243
   923     02EB  3403               	retlw	3
   924     02EC  34F7               	retlw	247
   925     02ED  3403               	retlw	3
   926     02EE  34FB               	retlw	251
   927     02EF  3403               	retlw	3
   928     02F0  34FF               	retlw	255
   929     02F1  3403               	retlw	3
   930     02F2                     __end_of_tri_table_one_quadrant:
   931                           
   932                           	psect	stringtext3
   933     02F2                     __pstringtext3:
   934     02F2                     _sine_table_one_quadrant:
   935     02F2  3400               	retlw	0
   936     02F3  3402               	retlw	2
   937     02F4  3406               	retlw	6
   938     02F5  3402               	retlw	2
   939     02F6  340C               	retlw	12
   940     02F7  3402               	retlw	2
   941     02F8  3412               	retlw	18
   942     02F9  3402               	retlw	2
   943     02FA  3419               	retlw	25
   944     02FB  3402               	retlw	2
   945     02FC  341F               	retlw	31
   946     02FD  3402               	retlw	2
   947     02FE  3425               	retlw	37
   948     02FF  3402               	retlw	2
   949     0300  342B               	retlw	43
   950     0301  3402               	retlw	2
   951     0302  3432               	retlw	50
   952     0303  3402               	retlw	2
   953     0304  3438               	retlw	56
   954     0305  3402               	retlw	2
   955     0306  343E               	retlw	62
   956     0307  3402               	retlw	2
   957     0308  3444               	retlw	68
   958     0309  3402               	retlw	2
   959     030A  344B               	retlw	75
   960     030B  3402               	retlw	2
   961     030C  3451               	retlw	81
   962     030D  3402               	retlw	2
   963     030E  3457               	retlw	87
   964     030F  3402               	retlw	2
   965     0310  345D               	retlw	93
   966     0311  3402               	retlw	2
   967     0312  3463               	retlw	99
   968     0313  3402               	retlw	2
   969     0314  3469               	retlw	105
   970     0315  3402               	retlw	2
   971     0316  3470               	retlw	112
   972     0317  3402               	retlw	2
   973     0318  3476               	retlw	118
   974     0319  3402               	retlw	2
   975     031A  347C               	retlw	124
   976     031B  3402               	retlw	2
   977     031C  3482               	retlw	130
   978     031D  3402               	retlw	2
   979     031E  3488               	retlw	136
   980     031F  3402               	retlw	2
   981     0320  348E               	retlw	142
   982     0321  3402               	retlw	2
   983     0322  3494               	retlw	148
   984     0323  3402               	retlw	2
   985     0324  349A               	retlw	154
   986     0325  3402               	retlw	2
   987     0326  34A0               	retlw	160
   988     0327  3402               	retlw	2
   989     0328  34A6               	retlw	166
   990     0329  3402               	retlw	2
   991     032A  34AC               	retlw	172
   992     032B  3402               	retlw	2
   993     032C  34B2               	retlw	178
   994     032D  3402               	retlw	2
   995     032E  34B8               	retlw	184
   996     032F  3402               	retlw	2
   997     0330  34BD               	retlw	189
   998     0331  3402               	retlw	2
   999     0332  34C3               	retlw	195
  1000     0333  3402               	retlw	2
  1001     0334  34C9               	retlw	201
  1002     0335  3402               	retlw	2
  1003     0336  34CF               	retlw	207
  1004     0337  3402               	retlw	2
  1005     0338  34D5               	retlw	213
  1006     0339  3402               	retlw	2
  1007     033A  34DA               	retlw	218
  1008     033B  3402               	retlw	2
  1009     033C  34E0               	retlw	224
  1010     033D  3402               	retlw	2
  1011     033E  34E5               	retlw	229
  1012     033F  3402               	retlw	2
  1013     0340  34EB               	retlw	235
  1014     0341  3402               	retlw	2
  1015     0342  34F1               	retlw	241
  1016     0343  3402               	retlw	2
  1017     0344  34F6               	retlw	246
  1018     0345  3402               	retlw	2
  1019     0346  34FC               	retlw	252
  1020     0347  3402               	retlw	2
  1021     0348  3401               	retlw	1
  1022     0349  3403               	retlw	3
  1023     034A  3406               	retlw	6
  1024     034B  3403               	retlw	3
  1025     034C  340C               	retlw	12
  1026     034D  3403               	retlw	3
  1027     034E  3411               	retlw	17
  1028     034F  3403               	retlw	3
  1029     0350  3416               	retlw	22
  1030     0351  3403               	retlw	3
  1031     0352  341C               	retlw	28
  1032     0353  3403               	retlw	3
  1033     0354  3421               	retlw	33
  1034     0355  3403               	retlw	3
  1035     0356  3426               	retlw	38
  1036     0357  3403               	retlw	3
  1037     0358  342B               	retlw	43
  1038     0359  3403               	retlw	3
  1039     035A  3430               	retlw	48
  1040     035B  3403               	retlw	3
  1041     035C  3435               	retlw	53
  1042     035D  3403               	retlw	3
  1043     035E  343A               	retlw	58
  1044     035F  3403               	retlw	3
  1045     0360  343F               	retlw	63
  1046     0361  3403               	retlw	3
  1047     0362  3444               	retlw	68
  1048     0363  3403               	retlw	3
  1049     0364  3449               	retlw	73
  1050     0365  3403               	retlw	3
  1051     0366  344E               	retlw	78
  1052     0367  3403               	retlw	3
  1053     0368  3452               	retlw	82
  1054     0369  3403               	retlw	3
  1055     036A  3457               	retlw	87
  1056     036B  3403               	retlw	3
  1057     036C  345C               	retlw	92
  1058     036D  3403               	retlw	3
  1059     036E  3460               	retlw	96
  1060     036F  3403               	retlw	3
  1061     0370  3465               	retlw	101
  1062     0371  3403               	retlw	3
  1063     0372  3469               	retlw	105
  1064     0373  3403               	retlw	3
  1065     0374  346E               	retlw	110
  1066     0375  3403               	retlw	3
  1067     0376  3472               	retlw	114
  1068     0377  3403               	retlw	3
  1069     0378  3476               	retlw	118
  1070     0379  3403               	retlw	3
  1071     037A  347A               	retlw	122
  1072     037B  3403               	retlw	3
  1073     037C  347F               	retlw	127
  1074     037D  3403               	retlw	3
  1075     037E  3483               	retlw	131
  1076     037F  3403               	retlw	3
  1077     0380  3487               	retlw	135
  1078     0381  3403               	retlw	3
  1079     0382  348B               	retlw	139
  1080     0383  3403               	retlw	3
  1081     0384  348F               	retlw	143
  1082     0385  3403               	retlw	3
  1083     0386  3493               	retlw	147
  1084     0387  3403               	retlw	3
  1085     0388  3497               	retlw	151
  1086     0389  3403               	retlw	3
  1087     038A  349A               	retlw	154
  1088     038B  3403               	retlw	3
  1089     038C  349E               	retlw	158
  1090     038D  3403               	retlw	3
  1091     038E  34A2               	retlw	162
  1092     038F  3403               	retlw	3
  1093     0390  34A5               	retlw	165
  1094     0391  3403               	retlw	3
  1095     0392  34A9               	retlw	169
  1096     0393  3403               	retlw	3
  1097     0394  34AC               	retlw	172
  1098     0395  3403               	retlw	3
  1099     0396  34B0               	retlw	176
  1100     0397  3403               	retlw	3
  1101     0398  34B3               	retlw	179
  1102     0399  3403               	retlw	3
  1103     039A  34B6               	retlw	182
  1104     039B  3403               	retlw	3
  1105     039C  34B9               	retlw	185
  1106     039D  3403               	retlw	3
  1107     039E  34BD               	retlw	189
  1108     039F  3403               	retlw	3
  1109     03A0  34C0               	retlw	192
  1110     03A1  3403               	retlw	3
  1111     03A2  34C3               	retlw	195
  1112     03A3  3403               	retlw	3
  1113     03A4  34C6               	retlw	198
  1114     03A5  3403               	retlw	3
  1115     03A6  34C8               	retlw	200
  1116     03A7  3403               	retlw	3
  1117     03A8  34CB               	retlw	203
  1118     03A9  3403               	retlw	3
  1119     03AA  34CE               	retlw	206
  1120     03AB  3403               	retlw	3
  1121     03AC  34D1               	retlw	209
  1122     03AD  3403               	retlw	3
  1123     03AE  34D3               	retlw	211
  1124     03AF  3403               	retlw	3
  1125     03B0  34D6               	retlw	214
  1126     03B1  3403               	retlw	3
  1127     03B2  34D8               	retlw	216
  1128     03B3  3403               	retlw	3
  1129     03B4  34DA               	retlw	218
  1130     03B5  3403               	retlw	3
  1131     03B6  34DD               	retlw	221
  1132     03B7  3403               	retlw	3
  1133     03B8  34DF               	retlw	223
  1134     03B9  3403               	retlw	3
  1135     03BA  34E1               	retlw	225
  1136     03BB  3403               	retlw	3
  1137     03BC  34E3               	retlw	227
  1138     03BD  3403               	retlw	3
  1139     03BE  34E5               	retlw	229
  1140     03BF  3403               	retlw	3
  1141     03C0  34E7               	retlw	231
  1142     03C1  3403               	retlw	3
  1143     03C2  34E9               	retlw	233
  1144     03C3  3403               	retlw	3
  1145     03C4  34EB               	retlw	235
  1146     03C5  3403               	retlw	3
  1147     03C6  34EC               	retlw	236
  1148     03C7  3403               	retlw	3
  1149     03C8  34EE               	retlw	238
  1150     03C9  3403               	retlw	3
  1151     03CA  34F0               	retlw	240
  1152     03CB  3403               	retlw	3
  1153     03CC  34F1               	retlw	241
  1154     03CD  3403               	retlw	3
  1155     03CE  34F3               	retlw	243
  1156     03CF  3403               	retlw	3
  1157     03D0  34F4               	retlw	244
  1158     03D1  3403               	retlw	3
  1159     03D2  34F5               	retlw	245
  1160     03D3  3403               	retlw	3
  1161     03D4  34F6               	retlw	246
  1162     03D5  3403               	retlw	3
  1163     03D6  34F7               	retlw	247
  1164     03D7  3403               	retlw	3
  1165     03D8  34F9               	retlw	249
  1166     03D9  3403               	retlw	3
  1167     03DA  34F9               	retlw	249
  1168     03DB  3403               	retlw	3
  1169     03DC  34FA               	retlw	250
  1170     03DD  3403               	retlw	3
  1171     03DE  34FB               	retlw	251
  1172     03DF  3403               	retlw	3
  1173     03E0  34FC               	retlw	252
  1174     03E1  3403               	retlw	3
  1175     03E2  34FD               	retlw	253
  1176     03E3  3403               	retlw	3
  1177     03E4  34FD               	retlw	253
  1178     03E5  3403               	retlw	3
  1179     03E6  34FE               	retlw	254
  1180     03E7  3403               	retlw	3
  1181     03E8  34FE               	retlw	254
  1182     03E9  3403               	retlw	3
  1183     03EA  34FE               	retlw	254
  1184     03EB  3403               	retlw	3
  1185     03EC  34FF               	retlw	255
  1186     03ED  3403               	retlw	3
  1187     03EE  34FF               	retlw	255
  1188     03EF  3403               	retlw	3
  1189     03F0  34FF               	retlw	255
  1190     03F1  3403               	retlw	3
  1191     03F2  34FF               	retlw	255
  1192     03F3  3403               	retlw	3
  1193     03F4                     __end_of_sine_table_one_quadrant:
  1194                           
  1195                           	psect	stringtext4
  1196     03F4                     __pstringtext4:
  1197     03F4                     _lengthen_period_log_table:
  1198     03F4  3461               	retlw	97
  1199     03F5  3461               	retlw	97
  1200     03F6  3461               	retlw	97
  1201     03F7  3461               	retlw	97
  1202     03F8  3460               	retlw	96
  1203     03F9  3460               	retlw	96
  1204     03FA  3460               	retlw	96
  1205     03FB  3460               	retlw	96
  1206     03FC  3460               	retlw	96
  1207     03FD  3460               	retlw	96
  1208     03FE  345F               	retlw	95
  1209     03FF  345F               	retlw	95
  1210     0400  345F               	retlw	95
  1211     0401  345F               	retlw	95
  1212     0402  345F               	retlw	95
  1213     0403  345F               	retlw	95
  1214     0404  345E               	retlw	94
  1215     0405  345E               	retlw	94
  1216     0406  345E               	retlw	94
  1217     0407  345E               	retlw	94
  1218     0408  345E               	retlw	94
  1219     0409  345D               	retlw	93
  1220     040A  345D               	retlw	93
  1221     040B  345D               	retlw	93
  1222     040C  345D               	retlw	93
  1223     040D  345D               	retlw	93
  1224     040E  345D               	retlw	93
  1225     040F  345C               	retlw	92
  1226     0410  345C               	retlw	92
  1227     0411  345C               	retlw	92
  1228     0412  345C               	retlw	92
  1229     0413  345C               	retlw	92
  1230     0414  345B               	retlw	91
  1231     0415  345B               	retlw	91
  1232     0416  345B               	retlw	91
  1233     0417  345B               	retlw	91
  1234     0418  345A               	retlw	90
  1235     0419  345A               	retlw	90
  1236     041A  345A               	retlw	90
  1237     041B  345A               	retlw	90
  1238     041C  345A               	retlw	90
  1239     041D  3459               	retlw	89
  1240     041E  3459               	retlw	89
  1241     041F  3459               	retlw	89
  1242     0420  3459               	retlw	89
  1243     0421  3458               	retlw	88
  1244     0422  3458               	retlw	88
  1245     0423  3458               	retlw	88
  1246     0424  3458               	retlw	88
  1247     0425  3457               	retlw	87
  1248     0426  3457               	retlw	87
  1249     0427  3457               	retlw	87
  1250     0428  3457               	retlw	87
  1251     0429  3456               	retlw	86
  1252     042A  3456               	retlw	86
  1253     042B  3456               	retlw	86
  1254     042C  3456               	retlw	86
  1255     042D  3455               	retlw	85
  1256     042E  3455               	retlw	85
  1257     042F  3455               	retlw	85
  1258     0430  3455               	retlw	85
  1259     0431  3454               	retlw	84
  1260     0432  3454               	retlw	84
  1261     0433  3454               	retlw	84
  1262     0434  3453               	retlw	83
  1263     0435  3453               	retlw	83
  1264     0436  3453               	retlw	83
  1265     0437  3452               	retlw	82
  1266     0438  3452               	retlw	82
  1267     0439  3452               	retlw	82
  1268     043A  3451               	retlw	81
  1269     043B  3451               	retlw	81
  1270     043C  3451               	retlw	81
  1271     043D  3450               	retlw	80
  1272     043E  3450               	retlw	80
  1273     043F  3450               	retlw	80
  1274     0440  344F               	retlw	79
  1275     0441  344F               	retlw	79
  1276     0442  344E               	retlw	78
  1277     0443  344E               	retlw	78
  1278     0444  344E               	retlw	78
  1279     0445  344D               	retlw	77
  1280     0446  344D               	retlw	77
  1281     0447  344C               	retlw	76
  1282     0448  344C               	retlw	76
  1283     0449  344C               	retlw	76
  1284     044A  344B               	retlw	75
  1285     044B  344B               	retlw	75
  1286     044C  344A               	retlw	74
  1287     044D  344A               	retlw	74
  1288     044E  3449               	retlw	73
  1289     044F  3449               	retlw	73
  1290     0450  3448               	retlw	72
  1291     0451  3448               	retlw	72
  1292     0452  3447               	retlw	71
  1293     0453  3446               	retlw	70
  1294     0454  3446               	retlw	70
  1295     0455  3445               	retlw	69
  1296     0456  3445               	retlw	69
  1297     0457  3444               	retlw	68
  1298     0458  3443               	retlw	67
  1299     0459  3443               	retlw	67
  1300     045A  3442               	retlw	66
  1301     045B  3441               	retlw	65
  1302     045C  3440               	retlw	64
  1303     045D  343F               	retlw	63
  1304     045E  343F               	retlw	63
  1305     045F  343E               	retlw	62
  1306     0460  343D               	retlw	61
  1307     0461  343C               	retlw	60
  1308     0462  343B               	retlw	59
  1309     0463  343A               	retlw	58
  1310     0464  3439               	retlw	57
  1311     0465  3437               	retlw	55
  1312     0466  3436               	retlw	54
  1313     0467  3435               	retlw	53
  1314     0468  3433               	retlw	51
  1315     0469  3432               	retlw	50
  1316     046A  3430               	retlw	48
  1317     046B  342E               	retlw	46
  1318     046C  342C               	retlw	44
  1319     046D  342A               	retlw	42
  1320     046E  3427               	retlw	39
  1321     046F  3424               	retlw	36
  1322     0470  3420               	retlw	32
  1323     0471  341C               	retlw	28
  1324     0472  3416               	retlw	22
  1325     0473  340E               	retlw	14
  1326     0474  3400               	retlw	0
  1327     0475                     __end_of_lengthen_period_log_table:
  1328                           
  1329                           	psect	stringtext5
  1330     076C                     __pstringtext5:
  1331     076C                     _prescaler_bits:
  1332     076C  3407               	retlw	7
  1333     076D  3406               	retlw	6
  1334     076E  3405               	retlw	5
  1335     076F  3404               	retlw	4
  1336     0770  3403               	retlw	3
  1337     0771  3402               	retlw	2
  1338     0772  3401               	retlw	1
  1339     0773  3400               	retlw	0
  1340     0774                     __end_of_prescaler_bits:
  1341                           
  1342                           	psect	stringtext6
  1343     0798                     __pstringtext6:
  1344     0798                     _CW:
  1345     0798  3401               	retlw	1
  1346     0799                     __end_of_CW:
  1347                           
  1348                           	psect	stringtext7
  1349     0799                     __pstringtext7:
  1350     0799                     _CCW:
  1351     0799  3400               	retlw	0
  1352     079A                     __end_of_CCW:
  1353                           
  1354                           	psect	stringtext8
  1355     079A                     __pstringtext8:
  1356     079A                     _NO:
  1357     079A  3400               	retlw	0
  1358     079B                     __end_of_NO:
  1359                           
  1360                           	psect	stringtext9
  1361     079B                     __pstringtext9:
  1362     079B                     _YES:
  1363     079B  3401               	retlw	1
  1364     079C                     __end_of_YES:
  1365                           
  1366                           	psect	stringtext10
  1367     079C                     __pstringtext10:
  1368     079C                     _DONT_CARE:
  1369     079C  3404               	retlw	4
  1370     079D                     __end_of_DONT_CARE:
  1371                           
  1372                           	psect	stringtext11
  1373     079D                     __pstringtext11:
  1374     079D                     _DIVIDE_BY_FOUR:
  1375     079D  3403               	retlw	3
  1376     079E                     __end_of_DIVIDE_BY_FOUR:
  1377                           
  1378                           	psect	stringtext12
  1379     079E                     __pstringtext12:
  1380     079E                     _MULTIPLY_BY_TWO:
  1381     079E  3402               	retlw	2
  1382     079F                     __end_of_MULTIPLY_BY_TWO:
  1383                           
  1384                           	psect	stringtext13
  1385     079F                     __pstringtext13:
  1386     079F                     _DIVIDE_BY_TWO:
  1387     079F  3401               	retlw	1
  1388     07A0                     __end_of_DIVIDE_BY_TWO:
  1389                           
  1390                           	psect	stringtext14
  1391     07A0                     __pstringtext14:
  1392     07A0                     _DO_NOTHING:
  1393     07A0  3400               	retlw	0
  1394     07A1                     __end_of_DO_NOTHING:
  1395                           
  1396                           	psect	stringtext15
  1397     07A1                     __pstringtext15:
  1398     07A1                     _NEGATIVE:
  1399     07A1  3400               	retlw	0
  1400     07A2                     __end_of_NEGATIVE:
  1401                           
  1402                           	psect	stringtext16
  1403     07A2                     __pstringtext16:
  1404     07A2                     _POSITIVE:
  1405     07A2  3401               	retlw	1
  1406     07A3                     __end_of_POSITIVE:
  1407                           
  1408                           	psect	stringtext17
  1409     07A3                     __pstringtext17:
  1410     07A3                     _symmetry_adc_config_value:
  1411     07A3  3407               	retlw	7
  1412     07A4                     __end_of_symmetry_adc_config_value:
  1413                           
  1414                           	psect	stringtext18
  1415     07A4                     __pstringtext18:
  1416     07A4                     _depth_adc_config_value:
  1417     07A4  3406               	retlw	6
  1418     07A5                     __end_of_depth_adc_config_value:
  1419                           
  1420                           	psect	stringtext19
  1421     07A5                     __pstringtext19:
  1422     07A5                     _speed_adc_config_value:
  1423     07A5  3405               	retlw	5
  1424     07A6                     __end_of_speed_adc_config_value:
  1425                           
  1426                           	psect	stringtext20
  1427     07A6                     __pstringtext20:
  1428     07A6                     _waveshape_adc_config_value:
  1429     07A6  3404               	retlw	4
  1430     07A7                     __end_of_waveshape_adc_config_value:
  1431     0015                     _TMR0	set	21
  1432     001C                     _T2CON	set	28
  1433     001B                     _PR2	set	27
  1434     005F                     _GIE	set	95
  1435     005A                     _TMR0IF	set	90
  1436     005D                     _TMR0IE	set	93
  1437     00E2                     _TMR2ON	set	226
  1438     0089                     _TMR2IF	set	137
  1439     0095                     _OPTION_REG	set	149
  1440     009B                     _ADRESL	set	155
  1441     009C                     _ADRESH	set	156
  1442     009D                     _ADCON0	set	157
  1443     009E                     _ADCON1	set	158
  1444     008E                     _TRISC	set	142
  1445     0098                     _OSCTUNE	set	152
  1446     0099                     _OSCCON	set	153
  1447     0462                     _TRISA2	set	1122
  1448     04E9                     _GO_nDONE	set	1257
  1449     04E8                     _ADON	set	1256
  1450     0875                     _LATC5	set	2165
  1451     088F                     _C1ON	set	2191
  1452     08D7                     _SRLEN	set	2263
  1453     018E                     _ANSELC	set	398
  1454     020E                     _WPUC	set	526
  1455     029E                     _CCPTMRS0	set	670
  1456     0313                     _CCP3CON	set	787
  1457     0311                     _CCPR3L	set	785
  1458                           
  1459                           	psect	cinit
  1460     00D5                     start_initialization:	
  1461                           ; #config settings
  1462                           
  1463     00D5                     __initialization:
  1464                           
  1465                           ; Initialize objects allocated to BANK0
  1466     00D5  3187  2794  3180   	fcall	__pidataBANK0	;fetch initializer
  1467     00D8  00D6               	movwf	__pdataBANK0& (0+127)
  1468     00D9  3187  2795  3180   	fcall	__pidataBANK0+1	;fetch initializer
  1469     00DC  00D7               	movwf	(__pdataBANK0+1)& (0+127)
  1470                           
  1471                           ; Clear objects allocated to COMMON
  1472     00DD  01F0               	clrf	__pbssCOMMON& (0+127)
  1473     00DE  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  1474     00DF  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  1475     00E0  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  1476     00E1  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  1477     00E2  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  1478                           
  1479                           ; Clear objects allocated to BANK0
  1480     00E3  3020               	movlw	low __pbssBANK0
  1481     00E4  0084               	movwf	4
  1482     00E5  3000               	movlw	high __pbssBANK0
  1483     00E6  0085               	movwf	5
  1484     00E7  3026               	movlw	38
  1485     00E8  3187  2784         	fcall	clear_ram0
  1486     00EA                     end_of_initialization:	
  1487                           ;End of C runtime variable initialization code
  1488                           
  1489     00EA                     __end_of__initialization:
  1490     00EA  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1491     00EB  0020               	movlb	0
  1492     00EC  3186  2EBB         	ljmp	_main	;jump to C main() function
  1493                           
  1494                           	psect	bssCOMMON
  1495     0070                     __pbssCOMMON:
  1496     0070                     _dTMR0_ideal:
  1497     0070                     	ds	2
  1498     0072                     _raw_TMR0:
  1499     0072                     	ds	1
  1500     0073                     _prescaler_adjust:
  1501     0073                     	ds	1
  1502     0074                     _current_one_quadrant_index:
  1503     0074                     	ds	1
  1504     0075                     _current_waveshape:
  1505     0075                     	ds	1
  1506                           
  1507                           	psect	bssBANK0
  1508     0020                     __pbssBANK0:
  1509     0020                     _current_speed_log_32:
  1510     0020                     	ds	4
  1511     0024                     _current_speed_linear_32:
  1512     0024                     	ds	4
  1513     0028                     _speed_control_32:
  1514     0028                     	ds	4
  1515     002C                     _current_symmetry:
  1516     002C                     	ds	2
  1517     002E                     _current_depth:
  1518     002E                     	ds	2
  1519     0030                     _current_speed_log:
  1520     0030                     	ds	2
  1521     0032                     _current_speed_linear:
  1522     0032                     	ds	2
  1523     0034                     _how_many_128:
  1524     0034                     	ds	2
  1525     0036                     _speed_control_subtracted:
  1526     0036                     	ds	2
  1527     0038                     _speed_control:
  1528     0038                     	ds	2
  1529     003A                     _symmetry_status:
  1530     003A                     	ds	1
  1531     003B                     _clear_TMR0_please:
  1532     003B                     	ds	1
  1533     003C                     _base_prescaler_bits_index:
  1534     003C                     	ds	1
  1535     003D                     _TMR0_offset_sign:
  1536     003D                     	ds	1
  1537     003E                     _TMR0_offset:
  1538     003E                     	ds	1
  1539     003F                     _current_quadrant:
  1540     003F                     	ds	1
  1541     0040                     _current_halfcycle:
  1542     0040                     	ds	1
  1543     0041                     _duty_high_byte:
  1544     0041                     	ds	1
  1545     0042                     _duty_low_byte:
  1546     0042                     	ds	1
  1547     0043                     _duty:
  1548     0043                     	ds	2
  1549     0045                     _final_TMR0:
  1550     0045                     	ds	1
  1551                           
  1552                           	psect	dataBANK0
  1553     0056                     __pdataBANK0:
  1554     0056                     _top_two_bytes_ptr:
  1555     0056                     	ds	2
  1556                           
  1557                           	psect	clrtext
  1558     0784                     clear_ram0:	
  1559                           ;	Called with FSR0 containing the base address, and
  1560                           ;	WREG with the size to clear
  1561                           
  1562     0784  0064               	clrwdt	;clear the watchdog before getting into this loop
  1563     0785                     clrloop0:
  1564     0785  0180               	clrf	0	;clear RAM location pointed to by FSR
  1565     0786  3101               	addfsr 0,1
  1566     0787  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1567     0788  2F85               	goto	clrloop0	;have we reached the end yet?
  1568     0789  3400               	retlw	0	;all done for this memory range, return
  1569                           
  1570                           	psect	cstackCOMMON
  1571     0076                     __pcstackCOMMON:
  1572     0076                     ?_CONFIG_INT_OSC:
  1573     0076                     ?_CONFIG_PORTS:	
  1574                           ; 1 bytes @ 0x0
  1575                           
  1576     0076                     ?_CONFIG_ADC_PINS:	
  1577                           ; 1 bytes @ 0x0
  1578                           
  1579     0076                     ?_DETERMINE_WAVESHAPE:	
  1580                           ; 1 bytes @ 0x0
  1581                           
  1582     0076                     ?_SET_DUTY_CCP3:	
  1583                           ; 1 bytes @ 0x0
  1584                           
  1585     0076                     ??_SET_DUTY_CCP3:	
  1586                           ; 1 bytes @ 0x0
  1587                           
  1588     0076                     ?_CONFIG_PWM_CCP3:	
  1589                           ; 1 bytes @ 0x0
  1590                           
  1591     0076                     ?_TURN_ON_CCP3_PWM:	
  1592                           ; 1 bytes @ 0x0
  1593                           
  1594     0076                     ?_CONFIG_TMR0_INTERRUPT:	
  1595                           ; 1 bytes @ 0x0
  1596                           
  1597     0076                     ?_CONFIG_SYSTEM:	
  1598                           ; 1 bytes @ 0x0
  1599                           
  1600     0076                     ?_TMR0_WRITE:	
  1601                           ; 1 bytes @ 0x0
  1602                           
  1603     0076                     ?_GET_CURRENT_POT_VALUES:	
  1604                           ; 1 bytes @ 0x0
  1605                           
  1606     0076                     ?_PROCESS_RAW_SPEED_AND_PRESCALER:	
  1607                           ; 1 bytes @ 0x0
  1608                           
  1609     0076                     ?_PROCESS_FINAL_SPEED_AND_PRESCALER:	
  1610                           ; 1 bytes @ 0x0
  1611                           
  1612     0076                     ?_SHORTEN_PERIOD:	
  1613                           ; 1 bytes @ 0x0
  1614                           
  1615     0076                     ?_LENGTHEN_PERIOD:	
  1616                           ; 1 bytes @ 0x0
  1617                           
  1618     0076                     ?_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST:	
  1619                           ; 1 bytes @ 0x0
  1620                           
  1621     0076                     ?_INTERRUPT_InterruptManager:	
  1622                           ; 1 bytes @ 0x0
  1623                           
  1624     0076                     ?_main:	
  1625                           ; 1 bytes @ 0x0
  1626                           
  1627                           
  1628                           ; 1 bytes @ 0x0
  1629     0076                     	ds	2
  1630     0078                     SET_DUTY_CCP3@temp:
  1631                           
  1632                           ; 1 bytes @ 0x2
  1633     0078                     	ds	1
  1634     0079                     SET_DUTY_CCP3@duty_ptr:
  1635                           
  1636                           ; 1 bytes @ 0x3
  1637     0079                     	ds	1
  1638     007A                     ??_INTERRUPT_InterruptManager:
  1639                           
  1640                           ; 1 bytes @ 0x4
  1641     007A                     	ds	2
  1642                           
  1643                           	psect	cstackBANK0
  1644     0046                     __pcstackBANK0:
  1645     0046                     ??_CONFIG_INT_OSC:
  1646     0046                     ??_CONFIG_PORTS:	
  1647                           ; 1 bytes @ 0x0
  1648                           
  1649     0046                     ??_CONFIG_ADC_PINS:	
  1650                           ; 1 bytes @ 0x0
  1651                           
  1652     0046                     ??_CONFIG_PWM_CCP3:	
  1653                           ; 1 bytes @ 0x0
  1654                           
  1655     0046                     ??_TURN_ON_CCP3_PWM:	
  1656                           ; 1 bytes @ 0x0
  1657                           
  1658     0046                     ??_CONFIG_TMR0_INTERRUPT:	
  1659                           ; 1 bytes @ 0x0
  1660                           
  1661     0046                     ??_CONFIG_SYSTEM:	
  1662                           ; 1 bytes @ 0x0
  1663                           
  1664     0046                     ??_TMR0_WRITE:	
  1665                           ; 1 bytes @ 0x0
  1666                           
  1667     0046                     ??_PROCESS_FINAL_SPEED_AND_PRESCALER:	
  1668                           ; 1 bytes @ 0x0
  1669                           
  1670     0046                     ??_SHORTEN_PERIOD:	
  1671                           ; 1 bytes @ 0x0
  1672                           
  1673     0046                     ?_DO_ADC:	
  1674                           ; 1 bytes @ 0x0
  1675                           
  1676     0046                     ?___wmul:	
  1677                           ; 2 bytes @ 0x0
  1678                           
  1679     0046                     ?___lmul:	
  1680                           ; 2 bytes @ 0x0
  1681                           
  1682     0046                     TMR0_WRITE@timer_value_ptr:	
  1683                           ; 4 bytes @ 0x0
  1684                           
  1685     0046                     DO_ADC@modifier:	
  1686                           ; 1 bytes @ 0x0
  1687                           
  1688     0046                     ___wmul@multiplier:	
  1689                           ; 2 bytes @ 0x0
  1690                           
  1691     0046                     ___lmul@multiplier:	
  1692                           ; 2 bytes @ 0x0
  1693                           
  1694                           
  1695                           ; 4 bytes @ 0x0
  1696     0046                     	ds	2
  1697     0048                     ??_DO_ADC:
  1698     0048                     ___wmul@multiplicand:	
  1699                           ; 1 bytes @ 0x2
  1700                           
  1701                           
  1702                           ; 2 bytes @ 0x2
  1703     0048                     	ds	1
  1704     0049                     DO_ADC@adc_result:
  1705     0049                     SHORTEN_PERIOD@TMR0_raw_extra:	
  1706                           ; 2 bytes @ 0x3
  1707                           
  1708                           
  1709                           ; 2 bytes @ 0x3
  1710     0049                     	ds	1
  1711     004A                     ??___wmul:
  1712     004A                     ___wmul@product:	
  1713                           ; 1 bytes @ 0x4
  1714                           
  1715     004A                     ___lmul@multiplicand:	
  1716                           ; 2 bytes @ 0x4
  1717                           
  1718                           
  1719                           ; 4 bytes @ 0x4
  1720     004A                     	ds	1
  1721     004B                     DO_ADC@temp:
  1722                           
  1723                           ; 1 bytes @ 0x5
  1724     004B                     	ds	1
  1725     004C                     ??_DETERMINE_WAVESHAPE:
  1726     004C                     ??_LENGTHEN_PERIOD:	
  1727                           ; 1 bytes @ 0x6
  1728                           
  1729     004C                     DETERMINE_WAVESHAPE@ADC:	
  1730                           ; 1 bytes @ 0x6
  1731                           
  1732                           
  1733                           ; 2 bytes @ 0x6
  1734     004C                     	ds	2
  1735     004E                     ??_GET_CURRENT_POT_VALUES:
  1736     004E                     ??___lmul:	
  1737                           ; 1 bytes @ 0x8
  1738                           
  1739     004E                     ___lmul@product:	
  1740                           ; 1 bytes @ 0x8
  1741                           
  1742                           
  1743                           ; 4 bytes @ 0x8
  1744     004E                     	ds	1
  1745     004F                     ??_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST:
  1746                           
  1747                           ; 1 bytes @ 0x9
  1748     004F                     	ds	1
  1749     0050                     PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST@symmetry_status:
  1750                           
  1751                           ; 1 bytes @ 0xA
  1752     0050                     	ds	2
  1753     0052                     ??_PROCESS_RAW_SPEED_AND_PRESCALER:
  1754                           
  1755                           ; 1 bytes @ 0xC
  1756     0052                     	ds	4
  1757     0056                     ??_main:
  1758                           
  1759                           	psect	maintext
  1760     06BB                     __pmaintext:	
  1761                           ; 1 bytes @ 0x10
  1762 ;;
  1763 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1764 ;;
  1765 ;; *************** function _main *****************
  1766 ;; Defined at:
  1767 ;;		line 476 in file "main.c"
  1768 ;; Parameters:    Size  Location     Type
  1769 ;;		None
  1770 ;; Auto vars:     Size  Location     Type
  1771 ;;		None
  1772 ;; Return value:  Size  Location     Type
  1773 ;;                  1    wreg      void 
  1774 ;; Registers used:
  1775 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1776 ;; Tracked objects:
  1777 ;;		On entry : B1F/0
  1778 ;;		On exit  : 1E/0
  1779 ;;		Unchanged: 0/0
  1780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1781 ;;      Params:         0       0       0       0
  1782 ;;      Locals:         0       0       0       0
  1783 ;;      Temps:          0       0       0       0
  1784 ;;      Totals:         0       0       0       0
  1785 ;;Total ram usage:        0 bytes
  1786 ;; Hardware stack levels required when called: 5
  1787 ;; This function calls:
  1788 ;;		_CONFIG_SYSTEM
  1789 ;;		_CONFIG_TMR0_INTERRUPT
  1790 ;;		_GET_CURRENT_POT_VALUES
  1791 ;;		_PROCESS_FINAL_SPEED_AND_PRESCALER
  1792 ;;		_PROCESS_RAW_SPEED_AND_PRESCALER
  1793 ;;		_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST
  1794 ;;		_TMR0_WRITE
  1795 ;;		_TURN_ON_CCP3_PWM
  1796 ;; This function is called by:
  1797 ;;		Startup code after reset
  1798 ;; This function uses a non-reentrant model
  1799 ;;
  1800                           
  1801     06BB                     _main:	
  1802                           ;psect for function _main
  1803                           
  1804                           
  1805                           ;main.c: 478:     CONFIG_SYSTEM();
  1806                           
  1807                           ;incstack = 0
  1808                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1809     06BB  3187  2757  3186   	fcall	_CONFIG_SYSTEM
  1810                           
  1811                           ;main.c: 479:     TURN_ON_CCP3_PWM();
  1812     06BE  3187  2774  3186   	fcall	_TURN_ON_CCP3_PWM
  1813                           
  1814                           ;main.c: 480:     CONFIG_TMR0_INTERRUPT();
  1815     06C1  3187  2796  3186   	fcall	_CONFIG_TMR0_INTERRUPT
  1816                           
  1817                           ;main.c: 481:     GET_CURRENT_POT_VALUES();
  1818     06C4  3185  25EA  3186   	fcall	_GET_CURRENT_POT_VALUES
  1819                           
  1820                           ;main.c: 482:     PROCESS_RAW_SPEED_AND_PRESCALER();
  1821     06C7  3184  24F5  3186   	fcall	_PROCESS_RAW_SPEED_AND_PRESCALER
  1822                           
  1823                           ;main.c: 483:     PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST();
  1824     06CA  3185  25AC  3186   	fcall	_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST
  1825                           
  1826                           ;main.c: 484:     PROCESS_FINAL_SPEED_AND_PRESCALER();
  1827     06CD  3185  255F  3186   	fcall	_PROCESS_FINAL_SPEED_AND_PRESCALER
  1828                           
  1829                           ;main.c: 485:     TMR0_WRITE(&final_TMR0);
  1830     06D0  3045               	movlw	(low (_final_TMR0| 0))& (0+255)
  1831     06D1  3187  277C  3186   	fcall	_TMR0_WRITE
  1832                           
  1833                           ;main.c: 486:     GIE = 1;
  1834     06D4  178B               	bsf	11,7	;volatile
  1835     06D5                     l1901:
  1836                           
  1837                           ;main.c: 490:         GET_CURRENT_POT_VALUES();
  1838     06D5  3185  25EA  3186   	fcall	_GET_CURRENT_POT_VALUES
  1839                           
  1840                           ;main.c: 491:         PROCESS_RAW_SPEED_AND_PRESCALER();
  1841     06D8  3184  24F5  3186   	fcall	_PROCESS_RAW_SPEED_AND_PRESCALER
  1842                           
  1843                           ;main.c: 492:         PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST();
  1844     06DB  3185  25AC  3186   	fcall	_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST
  1845                           
  1846                           ;main.c: 493:         PROCESS_FINAL_SPEED_AND_PRESCALER();
  1847     06DE  3185  255F  3186   	fcall	_PROCESS_FINAL_SPEED_AND_PRESCALER
  1848     06E1  2ED5               	goto	l1901
  1849     06E2                     __end_of_main:
  1850                           
  1851                           	psect	text1
  1852     0774                     __ptext1:	
  1853 ;; *************** function _TURN_ON_CCP3_PWM *****************
  1854 ;; Defined at:
  1855 ;;		line 225 in file "main.c"
  1856 ;; Parameters:    Size  Location     Type
  1857 ;;		None
  1858 ;; Auto vars:     Size  Location     Type
  1859 ;;		None
  1860 ;; Return value:  Size  Location     Type
  1861 ;;                  1    wreg      unsigned char 
  1862 ;; Registers used:
  1863 ;;		None
  1864 ;; Tracked objects:
  1865 ;;		On entry : B1F/0
  1866 ;;		On exit  : B1F/1
  1867 ;;		Unchanged: B00/0
  1868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1869 ;;      Params:         0       0       0       0
  1870 ;;      Locals:         0       0       0       0
  1871 ;;      Temps:          0       0       0       0
  1872 ;;      Totals:         0       0       0       0
  1873 ;;Total ram usage:        0 bytes
  1874 ;; Hardware stack levels used: 1
  1875 ;; Hardware stack levels required when called: 2
  1876 ;; This function calls:
  1877 ;;		Nothing
  1878 ;; This function is called by:
  1879 ;;		_main
  1880 ;; This function uses a non-reentrant model
  1881 ;;
  1882                           
  1883     0774                     _TURN_ON_CCP3_PWM:	
  1884                           ;psect for function _TURN_ON_CCP3_PWM
  1885                           
  1886                           
  1887                           ;main.c: 227:     TMR2IF = 0;
  1888                           
  1889                           ;incstack = 0
  1890                           ; Regs used in _TURN_ON_CCP3_PWM: []
  1891     0774  1091               	bcf	17,1	;volatile
  1892                           
  1893                           ;main.c: 228:     TMR2ON = 1;
  1894     0775  151C               	bsf	28,2	;volatile
  1895     0776                     l181:	
  1896                           ;main.c: 229:     while(TMR2IF == 0){}
  1897                           
  1898     0776  1C91               	btfss	17,1	;volatile
  1899     0777  2F76               	goto	l181
  1900                           
  1901                           ;main.c: 230:     TMR2IF = 0;
  1902     0778  1091               	bcf	17,1	;volatile
  1903                           
  1904                           ;main.c: 231:     TRISA2 = 0;
  1905     0779  0021               	movlb	1	; select bank1
  1906     077A  110C               	bcf	12,2	;volatile
  1907                           
  1908                           ;main.c: 232:     return 1;;	Return value of _TURN_ON_CCP3_PWM is never used
  1909     077B  0008               	return
  1910     077C                     __end_of_TURN_ON_CCP3_PWM:
  1911                           
  1912                           	psect	text2
  1913     077C                     __ptext2:	
  1914 ;; *************** function _TMR0_WRITE *****************
  1915 ;; Defined at:
  1916 ;;		line 248 in file "main.c"
  1917 ;; Parameters:    Size  Location     Type
  1918 ;;  timer_value_    1    wreg     PTR volatile unsigned ch
  1919 ;;		 -> final_TMR0(1), 
  1920 ;; Auto vars:     Size  Location     Type
  1921 ;;  timer_value_    1    0[BANK0 ] PTR volatile unsigned ch
  1922 ;;		 -> final_TMR0(1), 
  1923 ;; Return value:  Size  Location     Type
  1924 ;;                  1    wreg      unsigned char 
  1925 ;; Registers used:
  1926 ;;		wreg, fsr1l, fsr1h
  1927 ;; Tracked objects:
  1928 ;;		On entry : 1E/0
  1929 ;;		On exit  : 1F/0
  1930 ;;		Unchanged: 0/0
  1931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1932 ;;      Params:         0       0       0       0
  1933 ;;      Locals:         0       1       0       0
  1934 ;;      Temps:          0       0       0       0
  1935 ;;      Totals:         0       1       0       0
  1936 ;;Total ram usage:        1 bytes
  1937 ;; Hardware stack levels used: 1
  1938 ;; Hardware stack levels required when called: 2
  1939 ;; This function calls:
  1940 ;;		Nothing
  1941 ;; This function is called by:
  1942 ;;		_main
  1943 ;; This function uses a non-reentrant model
  1944 ;;
  1945                           
  1946     077C                     _TMR0_WRITE:	
  1947                           ;psect for function _TMR0_WRITE
  1948                           
  1949                           
  1950                           ;incstack = 0
  1951                           ; Regs used in _TMR0_WRITE: [wregfsr1]
  1952                           ;TMR0_WRITE@timer_value_ptr stored from wreg
  1953     077C  0020               	movlb	0	; select bank0
  1954     077D  00C6               	movwf	TMR0_WRITE@timer_value_ptr
  1955                           
  1956                           ;main.c: 249:     TMR0 = (uint8_t) *timer_value_ptr;
  1957     077E  0846               	movf	TMR0_WRITE@timer_value_ptr,w
  1958     077F  0086               	movwf	6
  1959     0780  0187               	clrf	7
  1960     0781  0801               	movf	1,w
  1961     0782  0095               	movwf	21	;volatile
  1962     0783  0008               	return
  1963     0784                     __end_of_TMR0_WRITE:
  1964                           
  1965                           	psect	text3
  1966     05AC                     __ptext3:	
  1967 ;; *************** function _PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST *****************
  1968 ;; Defined at:
  1969 ;;		line 357 in file "main.c"
  1970 ;; Parameters:    Size  Location     Type
  1971 ;;		None
  1972 ;; Auto vars:     Size  Location     Type
  1973 ;;  symmetry_sta    1   10[BANK0 ] unsigned char 
  1974 ;; Return value:  Size  Location     Type
  1975 ;;                  1    wreg      unsigned char 
  1976 ;; Registers used:
  1977 ;;		wreg, status,2, status,0, pclath, cstack
  1978 ;; Tracked objects:
  1979 ;;		On entry : 1F/0
  1980 ;;		On exit  : 1F/0
  1981 ;;		Unchanged: 0/0
  1982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1983 ;;      Params:         0       0       0       0
  1984 ;;      Locals:         0       1       0       0
  1985 ;;      Temps:          0       1       0       0
  1986 ;;      Totals:         0       2       0       0
  1987 ;;Total ram usage:        2 bytes
  1988 ;; Hardware stack levels used: 1
  1989 ;; Hardware stack levels required when called: 4
  1990 ;; This function calls:
  1991 ;;		_LENGTHEN_PERIOD
  1992 ;;		_SHORTEN_PERIOD
  1993 ;; This function is called by:
  1994 ;;		_main
  1995 ;; This function uses a non-reentrant model
  1996 ;;
  1997                           
  1998     05AC                     _PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST:	
  1999                           ;psect for function _PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST
  2000                           
  2001                           
  2002                           ;main.c: 358:     if(current_symmetry == 128){
  2003                           
  2004                           ;incstack = 0
  2005                           ; Regs used in _PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST: [wreg+status,2+status,0+pclath
      +                          +cstack]
  2006     05AC  3080               	movlw	128
  2007     05AD  062C               	xorwf	_current_symmetry,w	;volatile
  2008     05AE  042D               	iorwf	_current_symmetry+1,w	;volatile
  2009     05AF  1D03               	btfss	3,2
  2010     05B0  2DB7               	goto	l1849
  2011                           
  2012                           ;main.c: 359:         TMR0_offset = 0;
  2013     05B1  01BE               	clrf	_TMR0_offset	;volatile
  2014                           
  2015                           ;main.c: 360:         TMR0_offset_sign = POSITIVE;
  2016     05B2  3001               	movlw	1
  2017     05B3  00BD               	movwf	_TMR0_offset_sign	;volatile
  2018                           
  2019                           ;main.c: 361:         prescaler_adjust = DO_NOTHING;
  2020     05B4  01F3               	clrf	_prescaler_adjust	;volatile
  2021                           
  2022                           ;main.c: 362:         clear_TMR0_please = NO;
  2023     05B5  01BB               	clrf	_clear_TMR0_please	;volatile
  2024                           
  2025                           ;main.c: 363:         return 1;;	Return value of _PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJU
      +                          ST is never used
  2026     05B6  0008               	return
  2027     05B7                     l1849:
  2028                           
  2029                           ;main.c: 365:     uint8_t symmetry_status = CCW;
  2030     05B7  01D0               	clrf	PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST@symmetry_status
  2031                           
  2032                           ;main.c: 366:     if(current_symmetry > 128){
  2033     05B8  3000               	movlw	0
  2034     05B9  022D               	subwf	_current_symmetry+1,w	;volatile
  2035     05BA  3081               	movlw	129
  2036     05BB  1903               	skipnz
  2037     05BC  022C               	subwf	_current_symmetry,w	;volatile
  2038     05BD  1C03               	skipc
  2039     05BE  2DCA               	goto	l1857
  2040                           
  2041                           ;main.c: 367:         current_symmetry = 255 - current_symmetry;
  2042     05BF  30FF               	movlw	255
  2043     05C0  00CF               	movwf	??_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST
  2044     05C1  082C               	movf	_current_symmetry,w	;volatile
  2045     05C2  024F               	subwf	??_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST,w
  2046     05C3  00AC               	movwf	_current_symmetry	;volatile
  2047     05C4  092D               	comf	_current_symmetry+1,w	;volatile
  2048     05C5  1803               	skipnc
  2049     05C6  0A89               	incf	9,f
  2050     05C7  00AD               	movwf	_current_symmetry+1	;volatile
  2051                           
  2052                           ;main.c: 368:         symmetry_status = CW;
  2053     05C8  01D0               	clrf	PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST@symmetry_status
  2054     05C9  0AD0               	incf	PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST@symmetry_status,f
  2055     05CA                     l1857:
  2056                           
  2057                           ;main.c: 370:     if((current_halfcycle == 0) && (symmetry_status == CCW)){
  2058     05CA  0840               	movf	_current_halfcycle,w	;volatile
  2059     05CB  1D03               	btfss	3,2
  2060     05CC  2DD3               	goto	l1863
  2061     05CD  0850               	movf	PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST@symmetry_status,w
  2062     05CE  1D03               	btfss	3,2
  2063     05CF  2DD3               	goto	l1863
  2064     05D0                     l1861:
  2065                           
  2066                           ;main.c: 371:         SHORTEN_PERIOD();
  2067     05D0  3184  2475         	fcall	_SHORTEN_PERIOD
  2068                           
  2069                           ;main.c: 372:     }
  2070     05D2  0008               	return
  2071     05D3                     l1863:
  2072     05D3  0840               	movf	_current_halfcycle,w	;volatile
  2073     05D4  1D03               	btfss	3,2
  2074     05D5  2DE0               	goto	l1869
  2075     05D6  0350               	decf	PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST@symmetry_status,w
  2076     05D7  1903               	btfsc	3,2
  2077     05D8  2DDD               	goto	l1867
  2078     05D9  2DE0               	goto	l1869
  2079     05DA                     l1871:
  2080     05DA  0850               	movf	PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST@symmetry_status,w
  2081     05DB  1D03               	btfss	3,2
  2082     05DC  2DE3               	goto	l1875
  2083     05DD                     l1867:
  2084                           
  2085                           ;main.c: 374:         LENGTHEN_PERIOD();
  2086     05DD  3186  2627         	fcall	_LENGTHEN_PERIOD
  2087                           
  2088                           ;main.c: 375:     }
  2089     05DF  0008               	return
  2090     05E0                     l1869:
  2091     05E0  0340               	decf	_current_halfcycle,w	;volatile
  2092     05E1  1903               	btfsc	3,2
  2093     05E2  2DDA               	goto	l1871
  2094     05E3                     l1875:
  2095     05E3  0340               	decf	_current_halfcycle,w	;volatile
  2096     05E4  1D03               	btfss	3,2
  2097     05E5  0008               	return
  2098     05E6  0350               	decf	PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST@symmetry_status,w
  2099     05E7  1D03               	btfss	3,2
  2100     05E8  0008               	return
  2101     05E9  2DD0               	goto	l1861
  2102     05EA                     __end_of_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST:
  2103                           
  2104                           	psect	text4
  2105     0475                     __ptext4:	
  2106 ;; *************** function _SHORTEN_PERIOD *****************
  2107 ;; Defined at:
  2108 ;;		line 307 in file "main.c"
  2109 ;; Parameters:    Size  Location     Type
  2110 ;;		None
  2111 ;; Auto vars:     Size  Location     Type
  2112 ;;  TMR0_raw_ext    2    3[BANK0 ] unsigned short 
  2113 ;; Return value:  Size  Location     Type
  2114 ;;                  1    wreg      unsigned char 
  2115 ;; Registers used:
  2116 ;;		wreg, status,2, status,0
  2117 ;; Tracked objects:
  2118 ;;		On entry : 1F/0
  2119 ;;		On exit  : 1F/0
  2120 ;;		Unchanged: 0/0
  2121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2122 ;;      Params:         0       0       0       0
  2123 ;;      Locals:         0       2       0       0
  2124 ;;      Temps:          0       3       0       0
  2125 ;;      Totals:         0       5       0       0
  2126 ;;Total ram usage:        5 bytes
  2127 ;; Hardware stack levels used: 1
  2128 ;; Hardware stack levels required when called: 2
  2129 ;; This function calls:
  2130 ;;		Nothing
  2131 ;; This function is called by:
  2132 ;;		_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST
  2133 ;; This function uses a non-reentrant model
  2134 ;;
  2135                           
  2136     0475                     _SHORTEN_PERIOD:	
  2137                           ;psect for function _SHORTEN_PERIOD
  2138                           
  2139                           
  2140                           ;main.c: 308:     dTMR0_ideal = (128 - current_symmetry) << 1;
  2141                           
  2142                           ;incstack = 0
  2143                           ; Regs used in _SHORTEN_PERIOD: [wreg+status,2+status,0]
  2144     0475  3080               	movlw	128
  2145     0476  00C6               	movwf	??_SHORTEN_PERIOD
  2146     0477  082C               	movf	_current_symmetry,w	;volatile
  2147     0478  0246               	subwf	??_SHORTEN_PERIOD,w
  2148     0479  00C7               	movwf	??_SHORTEN_PERIOD+1
  2149     047A  092D               	comf	_current_symmetry+1,w	;volatile
  2150     047B  1803               	skipnc
  2151     047C  0A89               	incf	9,f
  2152     047D  00C8               	movwf	??_SHORTEN_PERIOD+2
  2153     047E  3547               	lslf	??_SHORTEN_PERIOD+1,w
  2154     047F  00F0               	movwf	_dTMR0_ideal	;volatile
  2155     0480  0D48               	rlf	??_SHORTEN_PERIOD+2,w
  2156     0481  00F1               	movwf	_dTMR0_ideal+1	;volatile
  2157                           
  2158                           ;main.c: 309:     if((dTMR0_ideal + raw_TMR0) < 128){
  2159     0482  0872               	movf	_raw_TMR0,w	;volatile
  2160     0483  0770               	addwf	_dTMR0_ideal,w	;volatile
  2161     0484  00C6               	movwf	??_SHORTEN_PERIOD
  2162     0485  0871               	movf	_dTMR0_ideal+1,w	;volatile
  2163     0486  1803               	skipnc
  2164     0487  0A71               	incf	_dTMR0_ideal+1,w	;volatile
  2165     0488  00C7               	movwf	??_SHORTEN_PERIOD+1
  2166     0489  3000               	movlw	0
  2167     048A  0247               	subwf	??_SHORTEN_PERIOD+1,w
  2168     048B  3080               	movlw	128
  2169     048C  1903               	skipnz
  2170     048D  0246               	subwf	??_SHORTEN_PERIOD,w
  2171     048E  1803               	skipnc
  2172     048F  2C97               	goto	l1703
  2173                           
  2174                           ;main.c: 310:         TMR0_offset = (uint8_t)dTMR0_ideal;
  2175     0490  0870               	movf	_dTMR0_ideal,w	;volatile
  2176     0491  00BE               	movwf	_TMR0_offset	;volatile
  2177                           
  2178                           ;main.c: 311:         TMR0_offset_sign = POSITIVE;
  2179     0492  3001               	movlw	1
  2180     0493  00BD               	movwf	_TMR0_offset_sign	;volatile
  2181                           
  2182                           ;main.c: 312:         prescaler_adjust = DO_NOTHING;
  2183     0494  01F3               	clrf	_prescaler_adjust	;volatile
  2184                           
  2185                           ;main.c: 313:         clear_TMR0_please = NO;
  2186     0495  01BB               	clrf	_clear_TMR0_please	;volatile
  2187                           
  2188                           ;main.c: 314:     }
  2189     0496  0008               	return
  2190     0497                     l1703:
  2191     0497  0872               	movf	_raw_TMR0,w	;volatile
  2192     0498  0770               	addwf	_dTMR0_ideal,w	;volatile
  2193     0499  00C6               	movwf	??_SHORTEN_PERIOD
  2194     049A  0871               	movf	_dTMR0_ideal+1,w	;volatile
  2195     049B  1803               	skipnc
  2196     049C  0A71               	incf	_dTMR0_ideal+1,w	;volatile
  2197     049D  00C7               	movwf	??_SHORTEN_PERIOD+1
  2198     049E  3080               	movlw	128
  2199     049F  0646               	xorwf	??_SHORTEN_PERIOD,w
  2200     04A0  0447               	iorwf	??_SHORTEN_PERIOD+1,w
  2201     04A1  1D03               	btfss	3,2
  2202     04A2  2CAB               	goto	l1713
  2203                           
  2204                           ;main.c: 316:         TMR0_offset = 0;
  2205     04A3  01BE               	clrf	_TMR0_offset	;volatile
  2206                           
  2207                           ;main.c: 317:         TMR0_offset_sign = DONT_CARE;
  2208     04A4  3004               	movlw	4
  2209     04A5  00BD               	movwf	_TMR0_offset_sign	;volatile
  2210                           
  2211                           ;main.c: 318:         prescaler_adjust = DIVIDE_BY_TWO;
  2212     04A6  3001               	movlw	1
  2213     04A7                     L1:
  2214     04A7  00F3               	movwf	_prescaler_adjust	;volatile
  2215                           
  2216                           ;main.c: 319:         clear_TMR0_please = YES;
  2217     04A8  3001               	movlw	1
  2218     04A9  00BB               	movwf	_clear_TMR0_please	;volatile
  2219                           
  2220                           ;main.c: 320:     }
  2221     04AA  0008               	return
  2222     04AB                     l1713:
  2223     04AB  0872               	movf	_raw_TMR0,w	;volatile
  2224     04AC  0770               	addwf	_dTMR0_ideal,w	;volatile
  2225     04AD  00C6               	movwf	??_SHORTEN_PERIOD
  2226     04AE  0871               	movf	_dTMR0_ideal+1,w	;volatile
  2227     04AF  1803               	skipnc
  2228     04B0  0A71               	incf	_dTMR0_ideal+1,w	;volatile
  2229     04B1  00C7               	movwf	??_SHORTEN_PERIOD+1
  2230     04B2  3000               	movlw	0
  2231     04B3  0247               	subwf	??_SHORTEN_PERIOD+1,w
  2232     04B4  3081               	movlw	129
  2233     04B5  1903               	skipnz
  2234     04B6  0246               	subwf	??_SHORTEN_PERIOD,w
  2235     04B7  1C03               	skipc
  2236     04B8  0008               	return
  2237                           
  2238                           ;main.c: 322:         uint16_t TMR0_raw_extra = dTMR0_ideal + raw_TMR0 - 128;
  2239     04B9  0872               	movf	_raw_TMR0,w	;volatile
  2240     04BA  0770               	addwf	_dTMR0_ideal,w	;volatile
  2241     04BB  00C6               	movwf	??_SHORTEN_PERIOD
  2242     04BC  0871               	movf	_dTMR0_ideal+1,w	;volatile
  2243     04BD  1803               	skipnc
  2244     04BE  0A71               	incf	_dTMR0_ideal+1,w	;volatile
  2245     04BF  00C7               	movwf	??_SHORTEN_PERIOD+1
  2246     04C0  0846               	movf	??_SHORTEN_PERIOD,w
  2247     04C1  3E80               	addlw	128
  2248     04C2  00C9               	movwf	SHORTEN_PERIOD@TMR0_raw_extra
  2249     04C3  30FF               	movlw	255
  2250     04C4  3D47               	addwfc	??_SHORTEN_PERIOD+1,w
  2251     04C5  00CA               	movwf	SHORTEN_PERIOD@TMR0_raw_extra+1
  2252                           
  2253                           ;main.c: 323:         if(TMR0_raw_extra >> 7 == 0){
  2254     04C6  084A               	movf	SHORTEN_PERIOD@TMR0_raw_extra+1,w
  2255     04C7  00C7               	movwf	??_SHORTEN_PERIOD+1
  2256     04C8  0849               	movf	SHORTEN_PERIOD@TMR0_raw_extra,w
  2257     04C9  00C6               	movwf	??_SHORTEN_PERIOD
  2258     04CA  3007               	movlw	7
  2259     04CB                     u1255:
  2260     04CB  36C7               	lsrf	??_SHORTEN_PERIOD+1,f
  2261     04CC  0CC6               	rrf	??_SHORTEN_PERIOD,f
  2262     04CD  0B89               	decfsz	9,f
  2263     04CE  2CCB               	goto	u1255
  2264     04CF  0846               	movf	??_SHORTEN_PERIOD,w
  2265     04D0  0447               	iorwf	??_SHORTEN_PERIOD+1,w
  2266     04D1  1D03               	btfss	3,2
  2267     04D2  2CDC               	goto	l1719
  2268                           
  2269                           ;main.c: 324:             TMR0_offset = (uint8_t)TMR0_raw_extra;
  2270     04D3  0849               	movf	SHORTEN_PERIOD@TMR0_raw_extra,w
  2271     04D4  00BE               	movwf	_TMR0_offset	;volatile
  2272                           
  2273                           ;main.c: 325:             TMR0_offset_sign = POSITIVE;
  2274     04D5  3001               	movlw	1
  2275     04D6  00BD               	movwf	_TMR0_offset_sign	;volatile
  2276                           
  2277                           ;main.c: 326:             prescaler_adjust = DIVIDE_BY_TWO;
  2278     04D7  3001               	movlw	1
  2279     04D8  00F3               	movwf	_prescaler_adjust	;volatile
  2280                           
  2281                           ;main.c: 327:             clear_TMR0_please = YES;
  2282     04D9  3001               	movlw	1
  2283     04DA  00BB               	movwf	_clear_TMR0_please	;volatile
  2284                           
  2285                           ;main.c: 328:         }
  2286     04DB  0008               	return
  2287     04DC                     l1719:
  2288     04DC  084A               	movf	SHORTEN_PERIOD@TMR0_raw_extra+1,w
  2289     04DD  00C7               	movwf	??_SHORTEN_PERIOD+1
  2290     04DE  0849               	movf	SHORTEN_PERIOD@TMR0_raw_extra,w
  2291     04DF  00C6               	movwf	??_SHORTEN_PERIOD
  2292     04E0  3007               	movlw	7
  2293     04E1                     u1275:
  2294     04E1  36C7               	lsrf	??_SHORTEN_PERIOD+1,f
  2295     04E2  0CC6               	rrf	??_SHORTEN_PERIOD,f
  2296     04E3  0B89               	decfsz	9,f
  2297     04E4  2CE1               	goto	u1275
  2298     04E5  0346               	decf	??_SHORTEN_PERIOD,w
  2299     04E6  0447               	iorwf	??_SHORTEN_PERIOD+1,w
  2300     04E7  1D03               	btfss	3,2
  2301     04E8  0008               	return
  2302                           
  2303                           ;main.c: 330:             TMR0_raw_extra = TMR0_raw_extra - 128;
  2304     04E9  0849               	movf	SHORTEN_PERIOD@TMR0_raw_extra,w
  2305     04EA  3E80               	addlw	128
  2306     04EB  00C9               	movwf	SHORTEN_PERIOD@TMR0_raw_extra
  2307     04EC  30FF               	movlw	255
  2308     04ED  3D4A               	addwfc	SHORTEN_PERIOD@TMR0_raw_extra+1,w
  2309     04EE  00CA               	movwf	SHORTEN_PERIOD@TMR0_raw_extra+1
  2310                           
  2311                           ;main.c: 331:             TMR0_offset = (uint8_t)TMR0_raw_extra;
  2312     04EF  0849               	movf	SHORTEN_PERIOD@TMR0_raw_extra,w
  2313     04F0  00BE               	movwf	_TMR0_offset	;volatile
  2314                           
  2315                           ;main.c: 332:             TMR0_offset_sign = POSITIVE;
  2316     04F1  3001               	movlw	1
  2317     04F2  00BD               	movwf	_TMR0_offset_sign	;volatile
  2318                           
  2319                           ;main.c: 333:             prescaler_adjust = DIVIDE_BY_FOUR;
  2320     04F3  3003               	movlw	3
  2321     04F4  2CA7               	goto	L1
  2322     04F5                     __end_of_SHORTEN_PERIOD:
  2323                           
  2324                           	psect	text5
  2325     0627                     __ptext5:	
  2326 ;; *************** function _LENGTHEN_PERIOD *****************
  2327 ;; Defined at:
  2328 ;;		line 340 in file "main.c"
  2329 ;; Parameters:    Size  Location     Type
  2330 ;;		None
  2331 ;; Auto vars:     Size  Location     Type
  2332 ;;		None
  2333 ;; Return value:  Size  Location     Type
  2334 ;;                  1    wreg      unsigned char 
  2335 ;; Registers used:
  2336 ;;		wreg, status,2, status,0, pclath, cstack
  2337 ;; Tracked objects:
  2338 ;;		On entry : 1F/0
  2339 ;;		On exit  : 1F/0
  2340 ;;		Unchanged: 0/0
  2341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2342 ;;      Params:         0       0       0       0
  2343 ;;      Locals:         0       0       0       0
  2344 ;;      Temps:          0       3       0       0
  2345 ;;      Totals:         0       3       0       0
  2346 ;;Total ram usage:        3 bytes
  2347 ;; Hardware stack levels used: 1
  2348 ;; Hardware stack levels required when called: 3
  2349 ;; This function calls:
  2350 ;;		___wmul
  2351 ;; This function is called by:
  2352 ;;		_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST
  2353 ;; This function uses a non-reentrant model
  2354 ;;
  2355                           
  2356     0627                     _LENGTHEN_PERIOD:	
  2357                           ;psect for function _LENGTHEN_PERIOD
  2358                           
  2359                           
  2360                           ;main.c: 341:     dTMR0_ideal = 97 - ((97 * current_symmetry) >> 7);
  2361                           
  2362                           ;incstack = 0
  2363                           ; Regs used in _LENGTHEN_PERIOD: [wreg+status,2+status,0+pclath+cstack]
  2364     0627  082D               	movf	_current_symmetry+1,w	;volatile
  2365     0628  00C7               	movwf	___wmul@multiplier+1
  2366     0629  082C               	movf	_current_symmetry,w	;volatile
  2367     062A  00C6               	movwf	___wmul@multiplier
  2368     062B  3061               	movlw	97
  2369     062C  00C8               	movwf	___wmul@multiplicand
  2370     062D  3000               	movlw	0
  2371     062E  00C9               	movwf	___wmul@multiplicand+1
  2372     062F  3187  2729  3186   	fcall	___wmul
  2373     0632  0846               	movf	?___wmul,w
  2374     0633  00CC               	movwf	??_LENGTHEN_PERIOD
  2375     0634  0847               	movf	?___wmul+1,w
  2376     0635  00CD               	movwf	??_LENGTHEN_PERIOD+1
  2377     0636  3007               	movlw	7
  2378     0637                     u1295:
  2379     0637  36CD               	lsrf	??_LENGTHEN_PERIOD+1,f
  2380     0638  0CCC               	rrf	??_LENGTHEN_PERIOD,f
  2381     0639  0B89               	decfsz	9,f
  2382     063A  2E37               	goto	u1295
  2383     063B  3061               	movlw	97
  2384     063C  00CE               	movwf	??_LENGTHEN_PERIOD+2
  2385     063D  084C               	movf	??_LENGTHEN_PERIOD,w
  2386     063E  024E               	subwf	??_LENGTHEN_PERIOD+2,w
  2387     063F  00F0               	movwf	_dTMR0_ideal	;volatile
  2388     0640  094D               	comf	??_LENGTHEN_PERIOD+1,w
  2389     0641  1803               	skipnc
  2390     0642  0A89               	incf	9,f
  2391     0643  00F1               	movwf	_dTMR0_ideal+1	;volatile
  2392                           
  2393                           ;main.c: 342:         if(raw_TMR0 < dTMR0_ideal){
  2394     0644  0872               	movf	_raw_TMR0,w	;volatile
  2395     0645  00CC               	movwf	??_LENGTHEN_PERIOD
  2396     0646  01CD               	clrf	??_LENGTHEN_PERIOD+1
  2397     0647  0871               	movf	_dTMR0_ideal+1,w	;volatile
  2398     0648  024D               	subwf	??_LENGTHEN_PERIOD+1,w
  2399     0649  1D03               	skipz
  2400     064A  2E4D               	goto	u1305
  2401     064B  0870               	movf	_dTMR0_ideal,w	;volatile
  2402     064C  024C               	subwf	??_LENGTHEN_PERIOD,w
  2403     064D                     u1305:
  2404     064D  1803               	skipnc
  2405     064E  2E5A               	goto	l1745
  2406                           
  2407                           ;main.c: 343:             TMR0_offset = (uint8_t) 128 - (dTMR0_ideal - raw_TMR0);
  2408     064F  0870               	movf	_dTMR0_ideal,w	;volatile
  2409     0650  0272               	subwf	_raw_TMR0,w
  2410     0651  3E80               	addlw	128
  2411     0652  00BE               	movwf	_TMR0_offset	;volatile
  2412                           
  2413                           ;main.c: 344:             TMR0_offset_sign = POSITIVE;
  2414     0653  3001               	movlw	1
  2415     0654  00BD               	movwf	_TMR0_offset_sign	;volatile
  2416                           
  2417                           ;main.c: 345:             prescaler_adjust = MULTIPLY_BY_TWO;
  2418     0655  3002               	movlw	2
  2419     0656  00F3               	movwf	_prescaler_adjust	;volatile
  2420                           
  2421                           ;main.c: 346:             clear_TMR0_please = YES;
  2422     0657  3001               	movlw	1
  2423     0658  00BB               	movwf	_clear_TMR0_please	;volatile
  2424                           
  2425                           ;main.c: 347:         }
  2426     0659  0008               	return
  2427     065A                     l1745:
  2428                           
  2429                           ;main.c: 349:             TMR0_offset = (uint8_t)dTMR0_ideal;
  2430     065A  0870               	movf	_dTMR0_ideal,w	;volatile
  2431     065B  00BE               	movwf	_TMR0_offset	;volatile
  2432                           
  2433                           ;main.c: 350:             TMR0_offset_sign = NEGATIVE;
  2434     065C  01BD               	clrf	_TMR0_offset_sign	;volatile
  2435                           
  2436                           ;main.c: 351:             prescaler_adjust = DO_NOTHING;
  2437     065D  01F3               	clrf	_prescaler_adjust	;volatile
  2438                           
  2439                           ;main.c: 352:             clear_TMR0_please = NO;
  2440     065E  01BB               	clrf	_clear_TMR0_please	;volatile
  2441     065F  0008               	return
  2442     0660                     __end_of_LENGTHEN_PERIOD:
  2443                           
  2444                           	psect	text6
  2445     0729                     __ptext6:	
  2446 ;; *************** function ___wmul *****************
  2447 ;; Defined at:
  2448 ;;		line 15 in file "/Applications/microchip/xc8/v2.45/pic/sources/c99/common/Umul16.c"
  2449 ;; Parameters:    Size  Location     Type
  2450 ;;  multiplier      2    0[BANK0 ] unsigned int 
  2451 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  2452 ;; Auto vars:     Size  Location     Type
  2453 ;;  product         2    4[BANK0 ] unsigned int 
  2454 ;; Return value:  Size  Location     Type
  2455 ;;                  2    0[BANK0 ] unsigned int 
  2456 ;; Registers used:
  2457 ;;		wreg, status,2, status,0
  2458 ;; Tracked objects:
  2459 ;;		On entry : 1F/0
  2460 ;;		On exit  : 1F/0
  2461 ;;		Unchanged: 0/0
  2462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2463 ;;      Params:         0       4       0       0
  2464 ;;      Locals:         0       2       0       0
  2465 ;;      Temps:          0       0       0       0
  2466 ;;      Totals:         0       6       0       0
  2467 ;;Total ram usage:        6 bytes
  2468 ;; Hardware stack levels used: 1
  2469 ;; Hardware stack levels required when called: 2
  2470 ;; This function calls:
  2471 ;;		Nothing
  2472 ;; This function is called by:
  2473 ;;		_LENGTHEN_PERIOD
  2474 ;; This function uses a non-reentrant model
  2475 ;;
  2476                           
  2477     0729                     ___wmul:	
  2478                           ;psect for function ___wmul
  2479                           
  2480                           
  2481                           ;incstack = 0
  2482                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2483     0729  01CA               	clrf	___wmul@product
  2484     072A  01CB               	clrf	___wmul@product+1
  2485     072B                     l1627:
  2486     072B  1C46               	btfss	___wmul@multiplier,0
  2487     072C  2F31               	goto	l423
  2488     072D  0848               	movf	___wmul@multiplicand,w
  2489     072E  07CA               	addwf	___wmul@product,f
  2490     072F  0849               	movf	___wmul@multiplicand+1,w
  2491     0730  3DCB               	addwfc	___wmul@product+1,f
  2492     0731                     l423:
  2493     0731  3001               	movlw	1
  2494     0732                     u1165:
  2495     0732  35C8               	lslf	___wmul@multiplicand,f
  2496     0733  0DC9               	rlf	___wmul@multiplicand+1,f
  2497     0734  0B89               	decfsz	9,f
  2498     0735  2F32               	goto	u1165
  2499     0736  3001               	movlw	1
  2500     0737                     u1175:
  2501     0737  36C7               	lsrf	___wmul@multiplier+1,f
  2502     0738  0CC6               	rrf	___wmul@multiplier,f
  2503     0739  0B89               	decfsz	9,f
  2504     073A  2F37               	goto	u1175
  2505     073B  0846               	movf	___wmul@multiplier,w
  2506     073C  0447               	iorwf	___wmul@multiplier+1,w
  2507     073D  1D03               	btfss	3,2
  2508     073E  2F2B               	goto	l1627
  2509     073F  084B               	movf	___wmul@product+1,w
  2510     0740  00C7               	movwf	?___wmul+1
  2511     0741  084A               	movf	___wmul@product,w
  2512     0742  00C6               	movwf	?___wmul
  2513     0743  0008               	return
  2514     0744                     __end_of___wmul:
  2515                           
  2516                           	psect	text7
  2517     04F5                     __ptext7:	
  2518 ;; *************** function _PROCESS_RAW_SPEED_AND_PRESCALER *****************
  2519 ;; Defined at:
  2520 ;;		line 263 in file "main.c"
  2521 ;; Parameters:    Size  Location     Type
  2522 ;;		None
  2523 ;; Auto vars:     Size  Location     Type
  2524 ;;		None
  2525 ;; Return value:  Size  Location     Type
  2526 ;;                  1    wreg      unsigned char 
  2527 ;; Registers used:
  2528 ;;		wreg, status,2, status,0, pclath, cstack
  2529 ;; Tracked objects:
  2530 ;;		On entry : 1F/0
  2531 ;;		On exit  : 1F/0
  2532 ;;		Unchanged: 0/0
  2533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2534 ;;      Params:         0       0       0       0
  2535 ;;      Locals:         0       0       0       0
  2536 ;;      Temps:          0       4       0       0
  2537 ;;      Totals:         0       4       0       0
  2538 ;;Total ram usage:        4 bytes
  2539 ;; Hardware stack levels used: 1
  2540 ;; Hardware stack levels required when called: 3
  2541 ;; This function calls:
  2542 ;;		___lmul
  2543 ;; This function is called by:
  2544 ;;		_main
  2545 ;; This function uses a non-reentrant model
  2546 ;;
  2547                           
  2548     04F5                     _PROCESS_RAW_SPEED_AND_PRESCALER:	
  2549                           ;psect for function _PROCESS_RAW_SPEED_AND_PRESCALER
  2550                           
  2551                           
  2552                           ;main.c: 264:     current_speed_linear_32 = current_speed_linear;
  2553                           
  2554                           ;incstack = 0
  2555                           ; Regs used in _PROCESS_RAW_SPEED_AND_PRESCALER: [wreg+status,2+status,0+pclath+cstack]
  2556     04F5  0832               	movf	_current_speed_linear,w	;volatile
  2557     04F6  00A4               	movwf	_current_speed_linear_32	;volatile
  2558     04F7  0833               	movf	_current_speed_linear+1,w	;volatile
  2559     04F8  00A5               	movwf	_current_speed_linear_32+1	;volatile
  2560     04F9  01A6               	clrf	_current_speed_linear_32+2	;volatile
  2561     04FA  01A7               	clrf	_current_speed_linear_32+3	;volatile
  2562                           
  2563                           ;main.c: 265:     speed_control_32 = current_speed_linear_32 * 600;;
  2564     04FB  0827               	movf	_current_speed_linear_32+3,w	;volatile
  2565     04FC  00C9               	movwf	___lmul@multiplier+3
  2566     04FD  0826               	movf	_current_speed_linear_32+2,w	;volatile
  2567     04FE  00C8               	movwf	___lmul@multiplier+2
  2568     04FF  0825               	movf	_current_speed_linear_32+1,w	;volatile
  2569     0500  00C7               	movwf	___lmul@multiplier+1
  2570     0501  0824               	movf	_current_speed_linear_32,w	;volatile
  2571     0502  00C6               	movwf	___lmul@multiplier
  2572     0503  3000               	movlw	0
  2573     0504  00CD               	movwf	___lmul@multiplicand+3
  2574     0505  3000               	movlw	0
  2575     0506  00CC               	movwf	___lmul@multiplicand+2
  2576     0507  3002               	movlw	2
  2577     0508  00CB               	movwf	___lmul@multiplicand+1
  2578     0509  3058               	movlw	88
  2579     050A  00CA               	movwf	___lmul@multiplicand
  2580     050B  3186  2660  3184   	fcall	___lmul
  2581     050E  0849               	movf	?___lmul+3,w
  2582     050F  00AB               	movwf	_speed_control_32+3	;volatile
  2583     0510  0848               	movf	?___lmul+2,w
  2584     0511  00AA               	movwf	_speed_control_32+2	;volatile
  2585     0512  0847               	movf	?___lmul+1,w
  2586     0513  00A9               	movwf	_speed_control_32+1	;volatile
  2587     0514  0846               	movf	?___lmul,w
  2588     0515  00A8               	movwf	_speed_control_32	;volatile
  2589                           
  2590                           ;main.c: 266:     speed_control_32 = speed_control_32 >> 10;
  2591     0516  0828               	movf	_speed_control_32,w	;volatile
  2592     0517  00D2               	movwf	??_PROCESS_RAW_SPEED_AND_PRESCALER
  2593     0518  0829               	movf	_speed_control_32+1,w	;volatile
  2594     0519  00D3               	movwf	??_PROCESS_RAW_SPEED_AND_PRESCALER+1
  2595     051A  082A               	movf	_speed_control_32+2,w	;volatile
  2596     051B  00D4               	movwf	??_PROCESS_RAW_SPEED_AND_PRESCALER+2
  2597     051C  082B               	movf	_speed_control_32+3,w	;volatile
  2598     051D  00D5               	movwf	??_PROCESS_RAW_SPEED_AND_PRESCALER+3
  2599     051E  300A               	movlw	10
  2600     051F                     u1365:
  2601     051F  36D5               	lsrf	??_PROCESS_RAW_SPEED_AND_PRESCALER+3,f
  2602     0520  0CD4               	rrf	??_PROCESS_RAW_SPEED_AND_PRESCALER+2,f
  2603     0521  0CD3               	rrf	??_PROCESS_RAW_SPEED_AND_PRESCALER+1,f
  2604     0522  0CD2               	rrf	??_PROCESS_RAW_SPEED_AND_PRESCALER,f
  2605     0523  0B89               	decfsz	9,f
  2606     0524  2D1F               	goto	u1365
  2607     0525  0855               	movf	??_PROCESS_RAW_SPEED_AND_PRESCALER+3,w
  2608     0526  00AB               	movwf	_speed_control_32+3	;volatile
  2609     0527  0854               	movf	??_PROCESS_RAW_SPEED_AND_PRESCALER+2,w
  2610     0528  00AA               	movwf	_speed_control_32+2	;volatile
  2611     0529  0853               	movf	??_PROCESS_RAW_SPEED_AND_PRESCALER+1,w
  2612     052A  00A9               	movwf	_speed_control_32+1	;volatile
  2613     052B  0852               	movf	??_PROCESS_RAW_SPEED_AND_PRESCALER,w
  2614     052C  00A8               	movwf	_speed_control_32	;volatile
  2615                           
  2616                           ;main.c: 267:     speed_control = (uint16_t) speed_control_32;
  2617     052D  0829               	movf	_speed_control_32+1,w	;volatile
  2618     052E  00B9               	movwf	_speed_control+1	;volatile
  2619     052F  0828               	movf	_speed_control_32,w	;volatile
  2620     0530  00B8               	movwf	_speed_control	;volatile
  2621                           
  2622                           ;main.c: 269:         if(speed_control <= (127-12)){
  2623     0531  3000               	movlw	0
  2624     0532  0239               	subwf	_speed_control+1,w	;volatile
  2625     0533  3074               	movlw	116
  2626     0534  1903               	skipnz
  2627     0535  0238               	subwf	_speed_control,w	;volatile
  2628     0536  1803               	skipnc
  2629     0537  2D3E               	goto	l1803
  2630                           
  2631                           ;main.c: 270:             raw_TMR0 = (uint8_t) speed_control + 12;
  2632     0538  0838               	movf	_speed_control,w	;volatile
  2633     0539  3E0C               	addlw	12
  2634     053A  00F2               	movwf	_raw_TMR0	;volatile
  2635                           
  2636                           ;main.c: 271:             base_prescaler_bits_index = 1;
  2637     053B  3001               	movlw	1
  2638     053C  00BC               	movwf	_base_prescaler_bits_index	;volatile
  2639                           
  2640                           ;main.c: 272:         }
  2641     053D  0008               	return
  2642     053E                     l1803:
  2643                           
  2644                           ;main.c: 274:             speed_control_subtracted = speed_control - (127-12);
  2645     053E  0838               	movf	_speed_control,w	;volatile
  2646     053F  3E8D               	addlw	141
  2647     0540  00B6               	movwf	_speed_control_subtracted	;volatile
  2648     0541  30FF               	movlw	255
  2649     0542  3D39               	addwfc	_speed_control+1,w	;volatile
  2650     0543  00B7               	movwf	_speed_control_subtracted+1	;volatile
  2651                           
  2652                           ;main.c: 275:             how_many_128 = speed_control_subtracted >> 7;
  2653     0544  0837               	movf	_speed_control_subtracted+1,w	;volatile
  2654     0545  00D3               	movwf	??_PROCESS_RAW_SPEED_AND_PRESCALER+1
  2655     0546  0836               	movf	_speed_control_subtracted,w	;volatile
  2656     0547  00D2               	movwf	??_PROCESS_RAW_SPEED_AND_PRESCALER
  2657     0548  3007               	movlw	7
  2658     0549                     u1385:
  2659     0549  36D3               	lsrf	??_PROCESS_RAW_SPEED_AND_PRESCALER+1,f
  2660     054A  0CD2               	rrf	??_PROCESS_RAW_SPEED_AND_PRESCALER,f
  2661     054B  0B89               	decfsz	9,f
  2662     054C  2D49               	goto	u1385
  2663     054D  0852               	movf	??_PROCESS_RAW_SPEED_AND_PRESCALER,w
  2664     054E  00B4               	movwf	_how_many_128	;volatile
  2665     054F  0853               	movf	??_PROCESS_RAW_SPEED_AND_PRESCALER+1,w
  2666     0550  00B5               	movwf	_how_many_128+1	;volatile
  2667                           
  2668                           ;main.c: 276:             raw_TMR0 = (uint8_t) (speed_control_subtracted - (how_many_128
      +                           << 7));
  2669     0551  0834               	movf	_how_many_128,w	;volatile
  2670     0552  00D2               	movwf	??_PROCESS_RAW_SPEED_AND_PRESCALER
  2671     0553  3006               	movlw	6
  2672     0554                     u1395:
  2673     0554  35D2               	lslf	??_PROCESS_RAW_SPEED_AND_PRESCALER,f
  2674     0555  3EFF               	addlw	-1
  2675     0556  1D03               	skipz
  2676     0557  2D54               	goto	u1395
  2677     0558  3552               	lslf	??_PROCESS_RAW_SPEED_AND_PRESCALER,w
  2678     0559  0736               	addwf	_speed_control_subtracted,w	;volatile
  2679     055A  00F2               	movwf	_raw_TMR0	;volatile
  2680                           
  2681                           ;main.c: 277:             base_prescaler_bits_index = how_many_128 + 2;
  2682     055B  0834               	movf	_how_many_128,w	;volatile
  2683     055C  3E02               	addlw	2
  2684     055D  00BC               	movwf	_base_prescaler_bits_index	;volatile
  2685     055E  0008               	return
  2686     055F                     __end_of_PROCESS_RAW_SPEED_AND_PRESCALER:
  2687                           
  2688                           	psect	text8
  2689     0660                     __ptext8:	
  2690 ;; *************** function ___lmul *****************
  2691 ;; Defined at:
  2692 ;;		line 15 in file "/Applications/microchip/xc8/v2.45/pic/sources/c99/common/Umul32.c"
  2693 ;; Parameters:    Size  Location     Type
  2694 ;;  multiplier      4    0[BANK0 ] unsigned long 
  2695 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  2696 ;; Auto vars:     Size  Location     Type
  2697 ;;  product         4    8[BANK0 ] unsigned long 
  2698 ;; Return value:  Size  Location     Type
  2699 ;;                  4    0[BANK0 ] unsigned long 
  2700 ;; Registers used:
  2701 ;;		wreg, status,2, status,0
  2702 ;; Tracked objects:
  2703 ;;		On entry : 1F/0
  2704 ;;		On exit  : 1F/0
  2705 ;;		Unchanged: 0/0
  2706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2707 ;;      Params:         0       8       0       0
  2708 ;;      Locals:         0       4       0       0
  2709 ;;      Temps:          0       0       0       0
  2710 ;;      Totals:         0      12       0       0
  2711 ;;Total ram usage:       12 bytes
  2712 ;; Hardware stack levels used: 1
  2713 ;; Hardware stack levels required when called: 2
  2714 ;; This function calls:
  2715 ;;		Nothing
  2716 ;; This function is called by:
  2717 ;;		_PROCESS_RAW_SPEED_AND_PRESCALER
  2718 ;; This function uses a non-reentrant model
  2719 ;;
  2720                           
  2721     0660                     ___lmul:	
  2722                           ;psect for function ___lmul
  2723                           
  2724                           
  2725                           ;incstack = 0
  2726                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  2727     0660  3000               	movlw	0
  2728     0661  00D1               	movwf	___lmul@product+3
  2729     0662  3000               	movlw	0
  2730     0663  00D0               	movwf	___lmul@product+2
  2731     0664  3000               	movlw	0
  2732     0665  00CF               	movwf	___lmul@product+1
  2733     0666  3000               	movlw	0
  2734     0667  00CE               	movwf	___lmul@product
  2735     0668                     l1757:
  2736     0668  1C46               	btfss	___lmul@multiplier,0
  2737     0669  2E72               	goto	l1761
  2738     066A  084A               	movf	___lmul@multiplicand,w
  2739     066B  07CE               	addwf	___lmul@product,f
  2740     066C  084B               	movf	___lmul@multiplicand+1,w
  2741     066D  3DCF               	addwfc	___lmul@product+1,f
  2742     066E  084C               	movf	___lmul@multiplicand+2,w
  2743     066F  3DD0               	addwfc	___lmul@product+2,f
  2744     0670  084D               	movf	___lmul@multiplicand+3,w
  2745     0671  3DD1               	addwfc	___lmul@product+3,f
  2746     0672                     l1761:
  2747     0672  3001               	movlw	1
  2748     0673                     u1325:
  2749     0673  35CA               	lslf	___lmul@multiplicand,f
  2750     0674  0DCB               	rlf	___lmul@multiplicand+1,f
  2751     0675  0DCC               	rlf	___lmul@multiplicand+2,f
  2752     0676  0DCD               	rlf	___lmul@multiplicand+3,f
  2753     0677  0B89               	decfsz	9,f
  2754     0678  2E73               	goto	u1325
  2755     0679  3001               	movlw	1
  2756     067A                     u1335:
  2757     067A  36C9               	lsrf	___lmul@multiplier+3,f
  2758     067B  0CC8               	rrf	___lmul@multiplier+2,f
  2759     067C  0CC7               	rrf	___lmul@multiplier+1,f
  2760     067D  0CC6               	rrf	___lmul@multiplier,f
  2761     067E  0B89               	decfsz	9,f
  2762     067F  2E7A               	goto	u1335
  2763     0680  0849               	movf	___lmul@multiplier+3,w
  2764     0681  0448               	iorwf	___lmul@multiplier+2,w
  2765     0682  0447               	iorwf	___lmul@multiplier+1,w
  2766     0683  0446               	iorwf	___lmul@multiplier,w
  2767     0684  1D03               	skipz
  2768     0685  2E68               	goto	l1757
  2769     0686  0851               	movf	___lmul@product+3,w
  2770     0687  00C9               	movwf	?___lmul+3
  2771     0688  0850               	movf	___lmul@product+2,w
  2772     0689  00C8               	movwf	?___lmul+2
  2773     068A  084F               	movf	___lmul@product+1,w
  2774     068B  00C7               	movwf	?___lmul+1
  2775     068C  084E               	movf	___lmul@product,w
  2776     068D  00C6               	movwf	?___lmul
  2777     068E  0008               	return
  2778     068F                     __end_of___lmul:
  2779                           
  2780                           	psect	text9
  2781     055F                     __ptext9:	
  2782 ;; *************** function _PROCESS_FINAL_SPEED_AND_PRESCALER *****************
  2783 ;; Defined at:
  2784 ;;		line 282 in file "main.c"
  2785 ;; Parameters:    Size  Location     Type
  2786 ;;		None
  2787 ;; Auto vars:     Size  Location     Type
  2788 ;;		None
  2789 ;; Return value:  Size  Location     Type
  2790 ;;                  1    wreg      unsigned char 
  2791 ;; Registers used:
  2792 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  2793 ;; Tracked objects:
  2794 ;;		On entry : 1F/0
  2795 ;;		On exit  : 1E/0
  2796 ;;		Unchanged: 0/0
  2797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2798 ;;      Params:         0       0       0       0
  2799 ;;      Locals:         0       0       0       0
  2800 ;;      Temps:          0       0       0       0
  2801 ;;      Totals:         0       0       0       0
  2802 ;;Total ram usage:        0 bytes
  2803 ;; Hardware stack levels used: 1
  2804 ;; Hardware stack levels required when called: 2
  2805 ;; This function calls:
  2806 ;;		Nothing
  2807 ;; This function is called by:
  2808 ;;		_main
  2809 ;; This function uses a non-reentrant model
  2810 ;;
  2811                           
  2812     055F                     _PROCESS_FINAL_SPEED_AND_PRESCALER:	
  2813                           ;psect for function _PROCESS_FINAL_SPEED_AND_PRESCALER
  2814                           
  2815                           
  2816                           ;main.c: 283:     if(clear_TMR0_please){
  2817                           
  2818                           ;incstack = 0
  2819                           ; Regs used in _PROCESS_FINAL_SPEED_AND_PRESCALER: [wreg-fsr0h+status,2+status,0+pclath]
  2820     055F  083B               	movf	_clear_TMR0_please,w	;volatile
  2821     0560  1D03               	btfss	3,2
  2822                           
  2823                           ;main.c: 284:         raw_TMR0 = 0;
  2824     0561  01F2               	clrf	_raw_TMR0	;volatile
  2825                           
  2826                           ;main.c: 286:     if((TMR0_offset_sign == POSITIVE) || (TMR0_offset_sign == DONT_CARE)){
  2827     0562  033D               	decf	_TMR0_offset_sign,w	;volatile
  2828     0563  1903               	btfsc	3,2
  2829     0564  2D69               	goto	l1815
  2830     0565  3004               	movlw	4
  2831     0566  063D               	xorwf	_TMR0_offset_sign,w	;volatile
  2832     0567  1D03               	btfss	3,2
  2833     0568  2D6C               	goto	l1817
  2834     0569                     l1815:
  2835                           
  2836                           ;main.c: 287:         final_TMR0 = raw_TMR0 + TMR0_offset;
  2837     0569  0872               	movf	_raw_TMR0,w	;volatile
  2838     056A  073E               	addwf	_TMR0_offset,w	;volatile
  2839     056B  2D71               	goto	L2
  2840     056C                     l1817:	
  2841                           ;main.c: 288:     }
  2842                           
  2843     056C  083D               	movf	_TMR0_offset_sign,w	;volatile
  2844     056D  1D03               	btfss	3,2
  2845     056E  2D72               	goto	l208
  2846                           
  2847                           ;main.c: 290:         final_TMR0 = raw_TMR0 - TMR0_offset;
  2848     056F  083E               	movf	_TMR0_offset,w	;volatile
  2849     0570  0272               	subwf	_raw_TMR0,w	;volatile
  2850     0571                     L2:
  2851     0571  00C5               	movwf	_final_TMR0	;volatile
  2852     0572                     l208:
  2853                           
  2854                           ;main.c: 292:     if(prescaler_adjust == DIVIDE_BY_TWO){
  2855     0572  0373               	decf	_prescaler_adjust,w	;volatile
  2856     0573  1D03               	btfss	3,2
  2857     0574  2D80               	goto	l1823
  2858                           
  2859                           ;main.c: 293:         OPTION_REG = prescaler_bits[base_prescaler_bits_index + 1];
  2860     0575  083C               	movf	_base_prescaler_bits_index,w	;volatile
  2861     0576  3E6D               	addlw	low ((_prescaler_bits+1)| (0+32768))
  2862     0577  0084               	movwf	4
  2863     0578  3087               	movlw	high ((_prescaler_bits+1)| (0+32768))
  2864     0579  1803               	skipnc
  2865     057A  3E01               	addlw	1
  2866     057B  0085               	movwf	5
  2867     057C  0800               	movf	0,w	;code access
  2868     057D  0021               	movlb	1	; select bank1
  2869     057E  0095               	movwf	21	;volatile
  2870                           
  2871                           ;main.c: 294:     }
  2872     057F  0008               	return
  2873     0580                     l1823:
  2874     0580  3003               	movlw	3
  2875     0581  0673               	xorwf	_prescaler_adjust,w	;volatile
  2876     0582  1D03               	btfss	3,2
  2877     0583  2D8F               	goto	l1827
  2878                           
  2879                           ;main.c: 296:         OPTION_REG = prescaler_bits[base_prescaler_bits_index + 2];
  2880     0584  083C               	movf	_base_prescaler_bits_index,w	;volatile
  2881     0585  3E6E               	addlw	low ((_prescaler_bits+2)| (0+32768))
  2882     0586  0084               	movwf	4
  2883     0587  3087               	movlw	high ((_prescaler_bits+2)| (0+32768))
  2884     0588  1803               	skipnc
  2885     0589  3E01               	addlw	1
  2886     058A  0085               	movwf	5
  2887     058B  0800               	movf	0,w	;code access
  2888     058C  0021               	movlb	1	; select bank1
  2889     058D  0095               	movwf	21	;volatile
  2890                           
  2891                           ;main.c: 297:     }
  2892     058E  0008               	return
  2893     058F                     l1827:
  2894     058F  3002               	movlw	2
  2895     0590  0673               	xorwf	_prescaler_adjust,w	;volatile
  2896     0591  1D03               	btfss	3,2
  2897     0592  2D9E               	goto	l1831
  2898                           
  2899                           ;main.c: 299:         OPTION_REG = prescaler_bits[base_prescaler_bits_index - 1];
  2900     0593  083C               	movf	_base_prescaler_bits_index,w	;volatile
  2901     0594  3E6B               	addlw	low ((_prescaler_bits+65535)| (0+32768))
  2902     0595  0084               	movwf	4
  2903     0596  3087               	movlw	high ((_prescaler_bits+65535)| (0+32768))
  2904     0597  1803               	skipnc
  2905     0598  3E01               	addlw	1
  2906     0599  0085               	movwf	5
  2907     059A  0800               	movf	0,w	;code access
  2908     059B  0021               	movlb	1	; select bank1
  2909     059C  0095               	movwf	21	;volatile
  2910                           
  2911                           ;main.c: 300:     }
  2912     059D  0008               	return
  2913     059E                     l1831:
  2914     059E  0873               	movf	_prescaler_adjust,w	;volatile
  2915     059F  1D03               	btfss	3,2
  2916     05A0  0008               	return
  2917                           
  2918                           ;main.c: 302:         OPTION_REG = prescaler_bits[base_prescaler_bits_index];
  2919     05A1  083C               	movf	_base_prescaler_bits_index,w	;volatile
  2920     05A2  3E6C               	addlw	low (_prescaler_bits| (0+32768))
  2921     05A3  0084               	movwf	4
  2922     05A4  3087               	movlw	high (_prescaler_bits| (0+32768))
  2923     05A5  1803               	skipnc
  2924     05A6  3E01               	addlw	1
  2925     05A7  0085               	movwf	5
  2926     05A8  0800               	movf	0,w	;code access
  2927     05A9  0021               	movlb	1	; select bank1
  2928     05AA  0095               	movwf	21	;volatile
  2929     05AB  0008               	return
  2930     05AC                     __end_of_PROCESS_FINAL_SPEED_AND_PRESCALER:
  2931                           
  2932                           	psect	text10
  2933     05EA                     __ptext10:	
  2934 ;; *************** function _GET_CURRENT_POT_VALUES *****************
  2935 ;; Defined at:
  2936 ;;		line 253 in file "main.c"
  2937 ;; Parameters:    Size  Location     Type
  2938 ;;		None
  2939 ;; Auto vars:     Size  Location     Type
  2940 ;;		None
  2941 ;; Return value:  Size  Location     Type
  2942 ;;                  1    wreg      unsigned char 
  2943 ;; Registers used:
  2944 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2945 ;; Tracked objects:
  2946 ;;		On entry : 1E/1
  2947 ;;		On exit  : 1F/0
  2948 ;;		Unchanged: 0/0
  2949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2950 ;;      Params:         0       0       0       0
  2951 ;;      Locals:         0       0       0       0
  2952 ;;      Temps:          0       2       0       0
  2953 ;;      Totals:         0       2       0       0
  2954 ;;Total ram usage:        2 bytes
  2955 ;; Hardware stack levels used: 1
  2956 ;; Hardware stack levels required when called: 4
  2957 ;; This function calls:
  2958 ;;		_DETERMINE_WAVESHAPE
  2959 ;;		_DO_ADC
  2960 ;; This function is called by:
  2961 ;;		_main
  2962 ;; This function uses a non-reentrant model
  2963 ;;
  2964                           
  2965     05EA                     _GET_CURRENT_POT_VALUES:	
  2966                           ;psect for function _GET_CURRENT_POT_VALUES
  2967                           
  2968                           
  2969                           ;main.c: 254:     current_waveshape = DETERMINE_WAVESHAPE();
  2970                           
  2971                           ;incstack = 0
  2972                           ; Regs used in _GET_CURRENT_POT_VALUES: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2973     05EA  3186  26E2  3185   	fcall	_DETERMINE_WAVESHAPE
  2974     05ED  00F5               	movwf	_current_waveshape	;volatile
  2975                           
  2976                           ;main.c: 255:     current_speed_linear = DO_ADC(&speed_adc_config_value);
  2977     05EE  30A5               	movlw	low (_speed_adc_config_value| (0+32768))
  2978     05EF  00C6               	movwf	DO_ADC@modifier
  2979     05F0  3087               	movlw	high (_speed_adc_config_value| (0+32768))
  2980     05F1  00C7               	movwf	DO_ADC@modifier+1
  2981     05F2  3186  268F  3185   	fcall	_DO_ADC
  2982     05F5  0847               	movf	?_DO_ADC+1,w
  2983     05F6  00B3               	movwf	_current_speed_linear+1	;volatile
  2984     05F7  0846               	movf	?_DO_ADC,w
  2985     05F8  00B2               	movwf	_current_speed_linear	;volatile
  2986                           
  2987                           ;main.c: 256:     current_depth = DO_ADC(&depth_adc_config_value);
  2988     05F9  30A4               	movlw	low (_depth_adc_config_value| (0+32768))
  2989     05FA  00C6               	movwf	DO_ADC@modifier
  2990     05FB  3087               	movlw	high (_depth_adc_config_value| (0+32768))
  2991     05FC  00C7               	movwf	DO_ADC@modifier+1
  2992     05FD  3186  268F  3185   	fcall	_DO_ADC
  2993     0600  0847               	movf	?_DO_ADC+1,w
  2994     0601  00AF               	movwf	_current_depth+1	;volatile
  2995     0602  0846               	movf	?_DO_ADC,w
  2996     0603  00AE               	movwf	_current_depth	;volatile
  2997                           
  2998                           ;main.c: 257:     current_depth = current_depth >> 2;
  2999     0604  082F               	movf	_current_depth+1,w	;volatile
  3000     0605  00CF               	movwf	??_GET_CURRENT_POT_VALUES+1
  3001     0606  082E               	movf	_current_depth,w	;volatile
  3002     0607  00CE               	movwf	??_GET_CURRENT_POT_VALUES
  3003     0608  36CF               	lsrf	??_GET_CURRENT_POT_VALUES+1,f
  3004     0609  0CCE               	rrf	??_GET_CURRENT_POT_VALUES,f
  3005     060A  36CF               	lsrf	??_GET_CURRENT_POT_VALUES+1,f
  3006     060B  0CCE               	rrf	??_GET_CURRENT_POT_VALUES,f
  3007     060C  084E               	movf	??_GET_CURRENT_POT_VALUES,w
  3008     060D  00AE               	movwf	_current_depth	;volatile
  3009     060E  084F               	movf	??_GET_CURRENT_POT_VALUES+1,w
  3010     060F  00AF               	movwf	_current_depth+1	;volatile
  3011                           
  3012                           ;main.c: 258:     current_symmetry = DO_ADC(&symmetry_adc_config_value);
  3013     0610  30A3               	movlw	low (_symmetry_adc_config_value| (0+32768))
  3014     0611  00C6               	movwf	DO_ADC@modifier
  3015     0612  3087               	movlw	high (_symmetry_adc_config_value| (0+32768))
  3016     0613  00C7               	movwf	DO_ADC@modifier+1
  3017     0614  3186  268F         	fcall	_DO_ADC
  3018     0616  0847               	movf	?_DO_ADC+1,w
  3019     0617  00AD               	movwf	_current_symmetry+1	;volatile
  3020     0618  0846               	movf	?_DO_ADC,w
  3021     0619  00AC               	movwf	_current_symmetry	;volatile
  3022                           
  3023                           ;main.c: 259:     current_symmetry = current_symmetry >> 2;
  3024     061A  082D               	movf	_current_symmetry+1,w	;volatile
  3025     061B  00CF               	movwf	??_GET_CURRENT_POT_VALUES+1
  3026     061C  082C               	movf	_current_symmetry,w	;volatile
  3027     061D  00CE               	movwf	??_GET_CURRENT_POT_VALUES
  3028     061E  36CF               	lsrf	??_GET_CURRENT_POT_VALUES+1,f
  3029     061F  0CCE               	rrf	??_GET_CURRENT_POT_VALUES,f
  3030     0620  36CF               	lsrf	??_GET_CURRENT_POT_VALUES+1,f
  3031     0621  0CCE               	rrf	??_GET_CURRENT_POT_VALUES,f
  3032     0622  084E               	movf	??_GET_CURRENT_POT_VALUES,w
  3033     0623  00AC               	movwf	_current_symmetry	;volatile
  3034     0624  084F               	movf	??_GET_CURRENT_POT_VALUES+1,w
  3035     0625  00AD               	movwf	_current_symmetry+1	;volatile
  3036     0626  0008               	return
  3037     0627                     __end_of_GET_CURRENT_POT_VALUES:
  3038                           
  3039                           	psect	text11
  3040     06E2                     __ptext11:	
  3041 ;; *************** function _DETERMINE_WAVESHAPE *****************
  3042 ;; Defined at:
  3043 ;;		line 181 in file "main.c"
  3044 ;; Parameters:    Size  Location     Type
  3045 ;;		None
  3046 ;; Auto vars:     Size  Location     Type
  3047 ;;  ADC             2    6[BANK0 ] unsigned short 
  3048 ;; Return value:  Size  Location     Type
  3049 ;;                  1    wreg      unsigned char 
  3050 ;; Registers used:
  3051 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3052 ;; Tracked objects:
  3053 ;;		On entry : 1E/1
  3054 ;;		On exit  : 1F/0
  3055 ;;		Unchanged: 0/0
  3056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3057 ;;      Params:         0       0       0       0
  3058 ;;      Locals:         0       2       0       0
  3059 ;;      Temps:          0       0       0       0
  3060 ;;      Totals:         0       2       0       0
  3061 ;;Total ram usage:        2 bytes
  3062 ;; Hardware stack levels used: 1
  3063 ;; Hardware stack levels required when called: 3
  3064 ;; This function calls:
  3065 ;;		_DO_ADC
  3066 ;; This function is called by:
  3067 ;;		_GET_CURRENT_POT_VALUES
  3068 ;; This function uses a non-reentrant model
  3069 ;;
  3070                           
  3071     06E2                     _DETERMINE_WAVESHAPE:	
  3072                           ;psect for function _DETERMINE_WAVESHAPE
  3073                           
  3074                           
  3075                           ;main.c: 182:     uint16_t ADC = DO_ADC(&waveshape_adc_config_value);
  3076                           
  3077                           ;incstack = 0
  3078                           ; Regs used in _DETERMINE_WAVESHAPE: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3079     06E2  30A6               	movlw	low (_waveshape_adc_config_value| (0+32768))
  3080     06E3  0020               	movlb	0	; select bank0
  3081     06E4  00C6               	movwf	DO_ADC@modifier
  3082     06E5  3087               	movlw	high (_waveshape_adc_config_value| (0+32768))
  3083     06E6  00C7               	movwf	DO_ADC@modifier+1
  3084     06E7  3186  268F  3186   	fcall	_DO_ADC
  3085     06EA  0847               	movf	?_DO_ADC+1,w
  3086     06EB  00CD               	movwf	DETERMINE_WAVESHAPE@ADC+1
  3087     06EC  0846               	movf	?_DO_ADC,w
  3088     06ED  00CC               	movwf	DETERMINE_WAVESHAPE@ADC
  3089                           
  3090                           ;main.c: 183:     if(ADC <= 341){
  3091     06EE  3001               	movlw	1
  3092     06EF  024D               	subwf	DETERMINE_WAVESHAPE@ADC+1,w
  3093     06F0  3056               	movlw	86
  3094     06F1  1903               	skipnz
  3095     06F2  024C               	subwf	DETERMINE_WAVESHAPE@ADC,w
  3096     06F3  1803               	skipnc
  3097     06F4  2EF7               	goto	l1661
  3098                           
  3099                           ;main.c: 184:             return 0;
  3100     06F5  3000               	movlw	0
  3101     06F6  0008               	return
  3102     06F7                     l1661:
  3103                           
  3104                           ;main.c: 186:         if (ADC <= 682){
  3105     06F7  3002               	movlw	2
  3106     06F8  024D               	subwf	DETERMINE_WAVESHAPE@ADC+1,w
  3107     06F9  30AB               	movlw	171
  3108     06FA  1903               	skipnz
  3109     06FB  024C               	subwf	DETERMINE_WAVESHAPE@ADC,w
  3110     06FC  1803               	skipnc
  3111     06FD  2F00               	goto	l1667
  3112     06FE                     l1663:
  3113                           
  3114                           ;main.c: 187:             return 1;
  3115     06FE  3001               	movlw	1
  3116     06FF  0008               	return
  3117     0700                     l1667:
  3118                           
  3119                           ;main.c: 189:         if (ADC <= 1023){
  3120     0700  3004               	movlw	4
  3121     0701  024D               	subwf	DETERMINE_WAVESHAPE@ADC+1,w
  3122     0702  3000               	movlw	0
  3123     0703  1903               	skipnz
  3124     0704  024C               	subwf	DETERMINE_WAVESHAPE@ADC,w
  3125     0705  1803               	skipnc
  3126     0706  2EFE               	goto	l1663
  3127                           
  3128                           ;main.c: 190:             return 2;
  3129     0707  3002               	movlw	2
  3130     0708  0008               	return
  3131     0709                     __end_of_DETERMINE_WAVESHAPE:
  3132                           
  3133                           	psect	text12
  3134     068F                     __ptext12:	
  3135 ;; *************** function _DO_ADC *****************
  3136 ;; Defined at:
  3137 ;;		line 167 in file "main.c"
  3138 ;; Parameters:    Size  Location     Type
  3139 ;;  modifier        2    0[BANK0 ] PTR const unsigned char 
  3140 ;;		 -> symmetry_adc_config_value(1), depth_adc_config_value(1), speed_adc_config_value(1), waveshape_adc_config_value(1
      +), 
  3141 ;; Auto vars:     Size  Location     Type
  3142 ;;  adc_result      2    3[BANK0 ] unsigned short 
  3143 ;;  temp            1    5[BANK0 ] unsigned char 
  3144 ;; Return value:  Size  Location     Type
  3145 ;;                  2    0[BANK0 ] unsigned short 
  3146 ;; Registers used:
  3147 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  3148 ;; Tracked objects:
  3149 ;;		On entry : 1F/0
  3150 ;;		On exit  : 1F/0
  3151 ;;		Unchanged: 0/0
  3152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3153 ;;      Params:         0       2       0       0
  3154 ;;      Locals:         0       3       0       0
  3155 ;;      Temps:          0       1       0       0
  3156 ;;      Totals:         0       6       0       0
  3157 ;;Total ram usage:        6 bytes
  3158 ;; Hardware stack levels used: 1
  3159 ;; Hardware stack levels required when called: 2
  3160 ;; This function calls:
  3161 ;;		Nothing
  3162 ;; This function is called by:
  3163 ;;		_DETERMINE_WAVESHAPE
  3164 ;;		_GET_CURRENT_POT_VALUES
  3165 ;; This function uses a non-reentrant model
  3166 ;;
  3167                           
  3168     068F                     _DO_ADC:	
  3169                           ;psect for function _DO_ADC
  3170                           
  3171                           
  3172                           ;main.c: 168:     ADCON0 = 0x00;
  3173                           
  3174                           ;incstack = 0
  3175                           ; Regs used in _DO_ADC: [wreg-fsr0h+status,2+status,0+pclath]
  3176     068F  0021               	movlb	1	; select bank1
  3177     0690  019D               	clrf	29	;volatile
  3178                           
  3179                           ;main.c: 170:     uint8_t temp = *modifier << 2;
  3180     0691  0020               	movlb	0	; select bank0
  3181     0692  0846               	movf	DO_ADC@modifier,w
  3182     0693  0084               	movwf	4
  3183     0694  0847               	movf	DO_ADC@modifier+1,w
  3184     0695  0085               	movwf	5
  3185     0696  0800               	movf	0,w	;code access
  3186     0697  00C8               	movwf	??_DO_ADC
  3187     0698  3001               	movlw	1
  3188     0699                     u1135:
  3189     0699  35C8               	lslf	??_DO_ADC,f
  3190     069A  3EFF               	addlw	-1
  3191     069B  1D03               	skipz
  3192     069C  2E99               	goto	u1135
  3193     069D  3548               	lslf	??_DO_ADC,w
  3194     069E  00CB               	movwf	DO_ADC@temp
  3195                           
  3196                           ;main.c: 171:     ADCON0 = ADCON0 | temp;
  3197     069F  0021               	movlb	1	; select bank1
  3198     06A0  081D               	movf	29,w	;volatile
  3199     06A1  0020               	movlb	0	; select bank0
  3200     06A2  044B               	iorwf	DO_ADC@temp,w
  3201     06A3  0021               	movlb	1	; select bank1
  3202     06A4  009D               	movwf	29	;volatile
  3203                           
  3204                           ;main.c: 172:     ADON = 1;
  3205     06A5  141D               	bsf	29,0	;volatile
  3206                           
  3207                           ;main.c: 173:     _delay((unsigned long)((0.005)*(32000000/4000.0)));
  3208     06A6  300D               	movlw	13
  3209     06A7                     u1587:
  3210     06A7  0B89               	decfsz	9,f
  3211     06A8  2EA7               	goto	u1587
  3212     06A9  0000               	nop
  3213                           
  3214                           ;main.c: 174:     GO_nDONE = 1;
  3215     06AA  0021               	movlb	1	; select bank1
  3216     06AB  149D               	bsf	29,1	;volatile
  3217     06AC                     l162:	
  3218                           ;main.c: 175:     while(GO_nDONE == 1){}
  3219                           
  3220     06AC  189D               	btfsc	29,1	;volatile
  3221     06AD  2EAC               	goto	l162
  3222                           
  3223                           ;main.c: 176:     ADON = 0;
  3224     06AE  101D               	bcf	29,0	;volatile
  3225                           
  3226                           ;main.c: 177:     uint16_t adc_result = ((ADRESH << 8) | ADRESL);
  3227     06AF  081C               	movf	28,w	;volatile
  3228     06B0  0020               	movlb	0	; select bank0
  3229     06B1  00CA               	movwf	DO_ADC@adc_result+1
  3230     06B2  0021               	movlb	1	; select bank1
  3231     06B3  081B               	movf	27,w	;volatile
  3232     06B4  0020               	movlb	0	; select bank0
  3233     06B5  00C9               	movwf	DO_ADC@adc_result
  3234                           
  3235                           ;main.c: 178:     return adc_result;
  3236     06B6  084A               	movf	DO_ADC@adc_result+1,w
  3237     06B7  00C7               	movwf	?_DO_ADC+1
  3238     06B8  0849               	movf	DO_ADC@adc_result,w
  3239     06B9  00C6               	movwf	?_DO_ADC
  3240     06BA  0008               	return
  3241     06BB                     __end_of_DO_ADC:
  3242                           
  3243                           	psect	text13
  3244     0796                     __ptext13:	
  3245 ;; *************** function _CONFIG_TMR0_INTERRUPT *****************
  3246 ;; Defined at:
  3247 ;;		line 235 in file "main.c"
  3248 ;; Parameters:    Size  Location     Type
  3249 ;;		None
  3250 ;; Auto vars:     Size  Location     Type
  3251 ;;		None
  3252 ;; Return value:  Size  Location     Type
  3253 ;;                  1    wreg      unsigned char 
  3254 ;; Registers used:
  3255 ;;		None
  3256 ;; Tracked objects:
  3257 ;;		On entry : B1F/1
  3258 ;;		On exit  : B1F/1
  3259 ;;		Unchanged: B1F/0
  3260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3261 ;;      Params:         0       0       0       0
  3262 ;;      Locals:         0       0       0       0
  3263 ;;      Temps:          0       0       0       0
  3264 ;;      Totals:         0       0       0       0
  3265 ;;Total ram usage:        0 bytes
  3266 ;; Hardware stack levels used: 1
  3267 ;; Hardware stack levels required when called: 2
  3268 ;; This function calls:
  3269 ;;		Nothing
  3270 ;; This function is called by:
  3271 ;;		_main
  3272 ;; This function uses a non-reentrant model
  3273 ;;
  3274                           
  3275     0796                     _CONFIG_TMR0_INTERRUPT:	
  3276                           ;psect for function _CONFIG_TMR0_INTERRUPT
  3277                           
  3278                           
  3279                           ;main.c: 236:     TMR0IE = 1;
  3280                           
  3281                           ;incstack = 0
  3282                           ; Regs used in _CONFIG_TMR0_INTERRUPT: []
  3283     0796  168B               	bsf	11,5	;volatile
  3284                           
  3285                           ;main.c: 237:     return 1;;	Return value of _CONFIG_TMR0_INTERRUPT is never used
  3286     0797  0008               	return
  3287     0798                     __end_of_CONFIG_TMR0_INTERRUPT:
  3288                           
  3289                           	psect	text14
  3290     0757                     __ptext14:	
  3291 ;; *************** function _CONFIG_SYSTEM *****************
  3292 ;; Defined at:
  3293 ;;		line 240 in file "main.c"
  3294 ;; Parameters:    Size  Location     Type
  3295 ;;		None
  3296 ;; Auto vars:     Size  Location     Type
  3297 ;;		None
  3298 ;; Return value:  Size  Location     Type
  3299 ;;                  1    wreg      unsigned char 
  3300 ;; Registers used:
  3301 ;;		wreg, status,2, status,0, pclath, cstack
  3302 ;; Tracked objects:
  3303 ;;		On entry : B1F/0
  3304 ;;		On exit  : B1F/0
  3305 ;;		Unchanged: B00/0
  3306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3307 ;;      Params:         0       0       0       0
  3308 ;;      Locals:         0       0       0       0
  3309 ;;      Temps:          0       0       0       0
  3310 ;;      Totals:         0       0       0       0
  3311 ;;Total ram usage:        0 bytes
  3312 ;; Hardware stack levels used: 1
  3313 ;; Hardware stack levels required when called: 3
  3314 ;; This function calls:
  3315 ;;		_CONFIG_ADC_PINS
  3316 ;;		_CONFIG_INT_OSC
  3317 ;;		_CONFIG_PORTS
  3318 ;;		_CONFIG_PWM_CCP3
  3319 ;; This function is called by:
  3320 ;;		_main
  3321 ;; This function uses a non-reentrant model
  3322 ;;
  3323                           
  3324     0757                     _CONFIG_SYSTEM:	
  3325                           ;psect for function _CONFIG_SYSTEM
  3326                           
  3327                           
  3328                           ;main.c: 241:     CONFIG_INT_OSC();
  3329                           
  3330                           ;incstack = 0
  3331                           ; Regs used in _CONFIG_SYSTEM: [wreg+status,2+status,0+pclath+cstack]
  3332     0757  3187  278A  3187   	fcall	_CONFIG_INT_OSC
  3333                           
  3334                           ;main.c: 242:     CONFIG_PORTS();
  3335     075A  3187  2763  3187   	fcall	_CONFIG_PORTS
  3336                           
  3337                           ;main.c: 243:     CONFIG_ADC_PINS();
  3338     075D  3187  2790  3187   	fcall	_CONFIG_ADC_PINS
  3339                           
  3340                           ;main.c: 244:     CONFIG_PWM_CCP3();
  3341     0760  3187  2744         	fcall	_CONFIG_PWM_CCP3
  3342     0762  0008               	return
  3343     0763                     __end_of_CONFIG_SYSTEM:
  3344                           
  3345                           	psect	text15
  3346     0744                     __ptext15:	
  3347 ;; *************** function _CONFIG_PWM_CCP3 *****************
  3348 ;; Defined at:
  3349 ;;		line 208 in file "main.c"
  3350 ;; Parameters:    Size  Location     Type
  3351 ;;		None
  3352 ;; Auto vars:     Size  Location     Type
  3353 ;;		None
  3354 ;; Return value:  Size  Location     Type
  3355 ;;                  1    wreg      unsigned char 
  3356 ;; Registers used:
  3357 ;;		wreg, status,2
  3358 ;; Tracked objects:
  3359 ;;		On entry : B1F/1
  3360 ;;		On exit  : B1F/0
  3361 ;;		Unchanged: B00/0
  3362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3363 ;;      Params:         0       0       0       0
  3364 ;;      Locals:         0       0       0       0
  3365 ;;      Temps:          0       0       0       0
  3366 ;;      Totals:         0       0       0       0
  3367 ;;Total ram usage:        0 bytes
  3368 ;; Hardware stack levels used: 1
  3369 ;; Hardware stack levels required when called: 2
  3370 ;; This function calls:
  3371 ;;		Nothing
  3372 ;; This function is called by:
  3373 ;;		_CONFIG_SYSTEM
  3374 ;; This function uses a non-reentrant model
  3375 ;;
  3376                           
  3377     0744                     _CONFIG_PWM_CCP3:	
  3378                           ;psect for function _CONFIG_PWM_CCP3
  3379                           
  3380                           
  3381                           ;main.c: 209:     SRLEN = 0;
  3382                           
  3383                           ;incstack = 0
  3384                           ; Regs used in _CONFIG_PWM_CCP3: [wreg+status,2]
  3385     0744  0022               	movlb	2	; select bank2
  3386     0745  139A               	bcf	26,7	;volatile
  3387                           
  3388                           ;main.c: 210:     C1ON = 0;
  3389     0746  1391               	bcf	17,7	;volatile
  3390                           
  3391                           ;main.c: 212:     TRISA2 = 1;
  3392     0747  0021               	movlb	1	; select bank1
  3393     0748  150C               	bsf	12,2	;volatile
  3394                           
  3395                           ;main.c: 213:     PR2 = 0xFF;
  3396     0749  30FF               	movlw	255
  3397     074A  0020               	movlb	0	; select bank0
  3398     074B  009B               	movwf	27	;volatile
  3399                           
  3400                           ;main.c: 214:     CCP3CON = CCP3CON | 0b00001111;
  3401     074C  0026               	movlb	6	; select bank6
  3402     074D  0813               	movf	19,w	;volatile
  3403     074E  380F               	iorlw	15
  3404     074F  0093               	movwf	19	;volatile
  3405                           
  3406                           ;main.c: 216:     CCPTMRS0 = 0x00;
  3407     0750  0025               	movlb	5	; select bank5
  3408     0751  019E               	clrf	30	;volatile
  3409                           
  3410                           ;main.c: 217:     TMR2IF = 0;
  3411     0752  0020               	movlb	0	; select bank0
  3412     0753  1091               	bcf	17,1	;volatile
  3413                           
  3414                           ;main.c: 218:     T2CON = T2CON | 0b00000000;
  3415     0754  081C               	movf	28,w	;volatile
  3416     0755  009C               	movwf	28	;volatile
  3417     0756  0008               	return
  3418     0757                     __end_of_CONFIG_PWM_CCP3:
  3419                           
  3420                           	psect	text16
  3421     0763                     __ptext16:	
  3422 ;; *************** function _CONFIG_PORTS *****************
  3423 ;; Defined at:
  3424 ;;		line 155 in file "main.c"
  3425 ;; Parameters:    Size  Location     Type
  3426 ;;		None
  3427 ;; Auto vars:     Size  Location     Type
  3428 ;;		None
  3429 ;; Return value:  Size  Location     Type
  3430 ;;                  1    wreg      unsigned char 
  3431 ;; Registers used:
  3432 ;;		wreg, status,2
  3433 ;; Tracked objects:
  3434 ;;		On entry : B1F/1
  3435 ;;		On exit  : B1F/4
  3436 ;;		Unchanged: B00/0
  3437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3438 ;;      Params:         0       0       0       0
  3439 ;;      Locals:         0       0       0       0
  3440 ;;      Temps:          0       0       0       0
  3441 ;;      Totals:         0       0       0       0
  3442 ;;Total ram usage:        0 bytes
  3443 ;; Hardware stack levels used: 1
  3444 ;; Hardware stack levels required when called: 2
  3445 ;; This function calls:
  3446 ;;		Nothing
  3447 ;; This function is called by:
  3448 ;;		_CONFIG_SYSTEM
  3449 ;; This function uses a non-reentrant model
  3450 ;;
  3451                           
  3452     0763                     _CONFIG_PORTS:	
  3453                           ;psect for function _CONFIG_PORTS
  3454                           
  3455                           
  3456                           ;main.c: 156:     ANSELC = 0b00001111;
  3457                           
  3458                           ;incstack = 0
  3459                           ; Regs used in _CONFIG_PORTS: [wreg+status,2]
  3460     0763  300F               	movlw	15
  3461     0764  0023               	movlb	3	; select bank3
  3462     0765  008E               	movwf	14	;volatile
  3463                           
  3464                           ;main.c: 157:     TRISC = 0b00001111;
  3465     0766  300F               	movlw	15
  3466     0767  0021               	movlb	1	; select bank1
  3467     0768  008E               	movwf	14	;volatile
  3468                           
  3469                           ;main.c: 158:     WPUC = 0b00000000;
  3470     0769  0024               	movlb	4	; select bank4
  3471     076A  018E               	clrf	14	;volatile
  3472     076B  0008               	return
  3473     076C                     __end_of_CONFIG_PORTS:
  3474                           
  3475                           	psect	text17
  3476     078A                     __ptext17:	
  3477 ;; *************** function _CONFIG_INT_OSC *****************
  3478 ;; Defined at:
  3479 ;;		line 148 in file "main.c"
  3480 ;; Parameters:    Size  Location     Type
  3481 ;;		None
  3482 ;; Auto vars:     Size  Location     Type
  3483 ;;		None
  3484 ;; Return value:  Size  Location     Type
  3485 ;;                  1    wreg      unsigned char 
  3486 ;; Registers used:
  3487 ;;		wreg
  3488 ;; Tracked objects:
  3489 ;;		On entry : B1F/0
  3490 ;;		On exit  : B1F/1
  3491 ;;		Unchanged: B00/0
  3492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3493 ;;      Params:         0       0       0       0
  3494 ;;      Locals:         0       0       0       0
  3495 ;;      Temps:          0       0       0       0
  3496 ;;      Totals:         0       0       0       0
  3497 ;;Total ram usage:        0 bytes
  3498 ;; Hardware stack levels used: 1
  3499 ;; Hardware stack levels required when called: 2
  3500 ;; This function calls:
  3501 ;;		Nothing
  3502 ;; This function is called by:
  3503 ;;		_CONFIG_SYSTEM
  3504 ;; This function uses a non-reentrant model
  3505 ;;
  3506                           
  3507     078A                     _CONFIG_INT_OSC:	
  3508                           ;psect for function _CONFIG_INT_OSC
  3509                           
  3510                           
  3511                           ;main.c: 149:     OSCCON = 0b11110000;
  3512                           
  3513                           ;incstack = 0
  3514                           ; Regs used in _CONFIG_INT_OSC: [wreg]
  3515     078A  30F0               	movlw	240
  3516     078B  0021               	movlb	1	; select bank1
  3517     078C  0099               	movwf	25	;volatile
  3518                           
  3519                           ;main.c: 150:     OSCTUNE = 0b00011111;
  3520     078D  301F               	movlw	31
  3521     078E  0098               	movwf	24	;volatile
  3522     078F  0008               	return
  3523     0790                     __end_of_CONFIG_INT_OSC:
  3524                           
  3525                           	psect	text18
  3526     0790                     __ptext18:	
  3527 ;; *************** function _CONFIG_ADC_PINS *****************
  3528 ;; Defined at:
  3529 ;;		line 162 in file "main.c"
  3530 ;; Parameters:    Size  Location     Type
  3531 ;;		None
  3532 ;; Auto vars:     Size  Location     Type
  3533 ;;		None
  3534 ;; Return value:  Size  Location     Type
  3535 ;;                  1    wreg      unsigned char 
  3536 ;; Registers used:
  3537 ;;		wreg
  3538 ;; Tracked objects:
  3539 ;;		On entry : B1F/4
  3540 ;;		On exit  : B1F/1
  3541 ;;		Unchanged: B00/0
  3542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3543 ;;      Params:         0       0       0       0
  3544 ;;      Locals:         0       0       0       0
  3545 ;;      Temps:          0       0       0       0
  3546 ;;      Totals:         0       0       0       0
  3547 ;;Total ram usage:        0 bytes
  3548 ;; Hardware stack levels used: 1
  3549 ;; Hardware stack levels required when called: 2
  3550 ;; This function calls:
  3551 ;;		Nothing
  3552 ;; This function is called by:
  3553 ;;		_CONFIG_SYSTEM
  3554 ;; This function uses a non-reentrant model
  3555 ;;
  3556                           
  3557     0790                     _CONFIG_ADC_PINS:	
  3558                           ;psect for function _CONFIG_ADC_PINS
  3559                           
  3560                           
  3561                           ;main.c: 163:     ADCON1 = 0b10100000;
  3562                           
  3563                           ;incstack = 0
  3564                           ; Regs used in _CONFIG_ADC_PINS: [wreg]
  3565     0790  30A0               	movlw	160
  3566     0791  0021               	movlb	1	; select bank1
  3567     0792  009E               	movwf	30	;volatile
  3568     0793  0008               	return
  3569     0794                     __end_of_CONFIG_ADC_PINS:
  3570                           
  3571                           	psect	intentry
  3572     0004                     __pintentry:	
  3573 ;; *************** function _INTERRUPT_InterruptManager *****************
  3574 ;; Defined at:
  3575 ;;		line 385 in file "main.c"
  3576 ;; Parameters:    Size  Location     Type
  3577 ;;		None
  3578 ;; Auto vars:     Size  Location     Type
  3579 ;;		None
  3580 ;; Return value:  Size  Location     Type
  3581 ;;                  1    wreg      void 
  3582 ;; Registers used:
  3583 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3584 ;; Tracked objects:
  3585 ;;		On entry : 0/0
  3586 ;;		On exit  : 0/0
  3587 ;;		Unchanged: 0/0
  3588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3589 ;;      Params:         0       0       0       0
  3590 ;;      Locals:         0       0       0       0
  3591 ;;      Temps:          2       0       0       0
  3592 ;;      Totals:         2       0       0       0
  3593 ;;Total ram usage:        2 bytes
  3594 ;; Hardware stack levels used: 1
  3595 ;; Hardware stack levels required when called: 1
  3596 ;; This function calls:
  3597 ;;		_SET_DUTY_CCP3
  3598 ;; This function is called by:
  3599 ;;		Interrupt level 1
  3600 ;; This function uses a non-reentrant model
  3601 ;;
  3602                           
  3603     0004                     _INTERRUPT_InterruptManager:
  3604                           
  3605                           ;incstack = 0
  3606     0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  3607                           
  3608                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3609     0005  3180               	pagesel	$
  3610                           
  3611                           ;main.c: 386:     if(TMR0IF == 1){
  3612     0006  1D0B               	btfss	11,2	;volatile
  3613     0007  28D1               	goto	i1l265
  3614                           
  3615                           ;main.c: 387:     GIE = 0;
  3616     0008  138B               	bcf	11,7	;volatile
  3617                           
  3618                           ;main.c: 388:     TMR0 = final_TMR0;
  3619     0009  0020               	movlb	0	; select bank0
  3620     000A  0845               	movf	_final_TMR0,w	;volatile
  3621     000B  0095               	movwf	21	;volatile
  3622                           
  3623                           ;main.c: 389:     LATC5 = 1;
  3624     000C  0022               	movlb	2	; select bank2
  3625     000D  168E               	bsf	14,5	;volatile
  3626                           
  3627                           ;main.c: 390:     TMR0IF = 0;
  3628     000E  110B               	bcf	11,2	;volatile
  3629                           
  3630                           ;main.c: 392:     if(current_waveshape == 0){
  3631     000F  0875               	movf	_current_waveshape,w	;volatile
  3632     0010  1D03               	btfss	3,2
  3633     0011  2823               	goto	i1l1541
  3634                           
  3635                           ;main.c: 393:         duty = tri_table_one_quadrant[current_one_quadrant_index];
  3636     0012  0874               	movf	_current_one_quadrant_index,w	;volatile
  3637     0013  00FA               	movwf	??_INTERRUPT_InterruptManager
  3638     0014  01FB               	clrf	??_INTERRUPT_InterruptManager+1
  3639     0015  35FA               	lslf	??_INTERRUPT_InterruptManager,f
  3640     0016  0DFB               	rlf	??_INTERRUPT_InterruptManager+1,f
  3641     0017  30F0               	movlw	low _tri_table_one_quadrant
  3642     0018  077A               	addwf	??_INTERRUPT_InterruptManager,w
  3643     0019  0084               	movwf	4
  3644     001A  3001               	movlw	high _tri_table_one_quadrant
  3645     001B  3D7B               	addwfc	??_INTERRUPT_InterruptManager+1,w
  3646     001C  3880               	iorlw	128
  3647     001D  0085               	movwf	5
  3648     001E  3F00               	moviw [0]fsr0
  3649     001F  0020               	movlb	0	; select bank0
  3650     0020  00C3               	movwf	_duty	;volatile
  3651     0021  3F01               	moviw [1]fsr0
  3652     0022  283F               	goto	L3
  3653     0023                     i1l1541:	
  3654                           ;main.c: 394:     }
  3655                           
  3656     0023  0375               	decf	_current_waveshape,w	;volatile
  3657     0024  1D03               	btfss	3,2
  3658     0025  2837               	goto	i1l1545
  3659                           
  3660                           ;main.c: 396:         duty = sine_table_one_quadrant[current_one_quadrant_index];
  3661     0026  0874               	movf	_current_one_quadrant_index,w	;volatile
  3662     0027  00FA               	movwf	??_INTERRUPT_InterruptManager
  3663     0028  01FB               	clrf	??_INTERRUPT_InterruptManager+1
  3664     0029  35FA               	lslf	??_INTERRUPT_InterruptManager,f
  3665     002A  0DFB               	rlf	??_INTERRUPT_InterruptManager+1,f
  3666     002B  30F2               	movlw	low _sine_table_one_quadrant
  3667     002C  077A               	addwf	??_INTERRUPT_InterruptManager,w
  3668     002D  0084               	movwf	4
  3669     002E  3002               	movlw	high _sine_table_one_quadrant
  3670     002F  3D7B               	addwfc	??_INTERRUPT_InterruptManager+1,w
  3671     0030  3880               	iorlw	128
  3672     0031  0085               	movwf	5
  3673     0032  3F00               	moviw [0]fsr0
  3674     0033  0020               	movlb	0	; select bank0
  3675     0034  00C3               	movwf	_duty	;volatile
  3676     0035  3F01               	moviw [1]fsr0
  3677     0036  283F               	goto	L3
  3678     0037                     i1l1545:	
  3679                           ;main.c: 397:     }
  3680                           
  3681     0037  3002               	movlw	2
  3682     0038  0675               	xorwf	_current_waveshape,w	;volatile
  3683     0039  1D03               	btfss	3,2
  3684     003A  2840               	goto	i1l1549
  3685                           
  3686                           ;main.c: 399:         duty = 1023;
  3687     003B  30FF               	movlw	255
  3688     003C  0020               	movlb	0	; select bank0
  3689     003D  00C3               	movwf	_duty	;volatile
  3690     003E  3003               	movlw	3
  3691     003F                     L3:
  3692     003F  00C4               	movwf	_duty+1	;volatile
  3693     0040                     i1l1549:
  3694                           
  3695                           ;main.c: 401:     if(current_one_quadrant_index == 128){
  3696     0040  3080               	movlw	128
  3697     0041  0674               	xorwf	_current_one_quadrant_index,w	;volatile
  3698     0042  1D03               	btfss	3,2
  3699     0043  2847               	goto	i1l1553
  3700                           
  3701                           ;main.c: 402:         current_quadrant = 1;
  3702     0044  3001               	movlw	1
  3703     0045  0020               	movlb	0	; select bank0
  3704     0046  00BF               	movwf	_current_quadrant	;volatile
  3705     0047                     i1l1553:
  3706                           
  3707                           ;main.c: 404:     if(current_one_quadrant_index == 0){
  3708     0047  0874               	movf	_current_one_quadrant_index,w	;volatile
  3709     0048  1D03               	btfss	3,2
  3710     0049  2853               	goto	i1l1563
  3711                           
  3712                           ;main.c: 405:         current_quadrant = 0;
  3713     004A  0020               	movlb	0	; select bank0
  3714     004B  01BF               	clrf	_current_quadrant	;volatile
  3715                           
  3716                           ;main.c: 406:         if(current_halfcycle == 0){
  3717     004C  0840               	movf	_current_halfcycle,w	;volatile
  3718     004D  1D03               	btfss	3,2
  3719     004E  2852               	goto	i1l1561
  3720                           
  3721                           ;main.c: 407:             current_halfcycle = 1;
  3722     004F  3001               	movlw	1
  3723     0050  00C0               	movwf	_current_halfcycle	;volatile
  3724                           
  3725                           ;main.c: 408:         }
  3726     0051  2853               	goto	i1l1563
  3727     0052                     i1l1561:
  3728                           
  3729                           ;main.c: 410:             current_halfcycle = 0;
  3730     0052  01C0               	clrf	_current_halfcycle	;volatile
  3731     0053                     i1l1563:
  3732                           
  3733                           ;main.c: 413:         if(current_quadrant == 0){
  3734     0053  0020               	movlb	0	; select bank0
  3735     0054  083F               	movf	_current_quadrant,w	;volatile
  3736     0055  1D03               	btfss	3,2
  3737     0056  285C               	goto	i1l1567
  3738                           
  3739                           ;main.c: 414:             current_one_quadrant_index++;
  3740     0057  3001               	movlw	1
  3741     0058  00FA               	movwf	??_INTERRUPT_InterruptManager
  3742     0059  087A               	movf	??_INTERRUPT_InterruptManager,w
  3743     005A  07F4               	addwf	_current_one_quadrant_index,f	;volatile
  3744                           
  3745                           ;main.c: 415:         }
  3746     005B  285E               	goto	i1l261
  3747     005C                     i1l1567:
  3748                           
  3749                           ;main.c: 417:             current_one_quadrant_index--;
  3750     005C  3001               	movlw	1
  3751     005D  02F4               	subwf	_current_one_quadrant_index,f	;volatile
  3752     005E                     i1l261:	
  3753                           ;main.c: 418:         }
  3754                           
  3755                           
  3756                           ;main.c: 419:         if(current_halfcycle == 1){
  3757     005E  0340               	decf	_current_halfcycle,w	;volatile
  3758     005F  1D03               	btfss	3,2
  3759     0060  286B               	goto	i1l262
  3760                           
  3761                           ;main.c: 420:         duty = 1023 - duty;
  3762     0061  30FF               	movlw	255
  3763     0062  00FA               	movwf	??_INTERRUPT_InterruptManager
  3764     0063  3003               	movlw	3
  3765     0064  00FB               	movwf	??_INTERRUPT_InterruptManager+1
  3766     0065  0843               	movf	_duty,w	;volatile
  3767     0066  027A               	subwf	??_INTERRUPT_InterruptManager,w
  3768     0067  00C3               	movwf	_duty	;volatile
  3769     0068  0844               	movf	_duty+1,w	;volatile
  3770     0069  3B7B               	subwfb	??_INTERRUPT_InterruptManager+1,w
  3771     006A  00C4               	movwf	_duty+1	;volatile
  3772     006B                     i1l262:	
  3773                           ;main.c: 421:         }
  3774                           
  3775                           
  3776                           ;main.c: 424:     if(current_depth != 0){
  3777     006B  082E               	movf	_current_depth,w	;volatile
  3778     006C  042F               	iorwf	_current_depth+1,w	;volatile
  3779     006D  1903               	btfsc	3,2
  3780     006E  28C7               	goto	i1l1575
  3781                           
  3782                           ;main.c: 425:         duty_low_byte = duty & 0xFF;
  3783     006F  0843               	movf	_duty,w	;volatile
  3784     0070  00C2               	movwf	_duty_low_byte	;volatile
  3785                           
  3786                           ;main.c: 426:         duty_high_byte = duty >> 8;
  3787     0071  0844               	movf	_duty+1,w	;volatile
  3788     0072  00C1               	movwf	_duty_high_byte	;volatile
  3789     0073  01A2               	clrf	34	;# 
  3790     0074  01A0               	clrf	32	;# 
  3791     0075  1003               	bcf	3,0	;# 
  3792     0076  082E               	movf	_current_depth,w	;# 
  3793     0077  1842               	btfsc	_duty_low_byte,0	;# 
  3794     0078  07A2               	addwf	34,f	;# 
  3795     0079  0CA2               	rrf	34,f	;# 
  3796     007A  0CA0               	rrf	32,f	;# 
  3797     007B  18C2               	btfsc	_duty_low_byte,1	;# 
  3798     007C  07A2               	addwf	34,f	;# 
  3799     007D  0CA2               	rrf	34,f	;# 
  3800     007E  0CA0               	rrf	32,f	;# 
  3801     007F  1942               	btfsc	_duty_low_byte,2	;# 
  3802     0080  07A2               	addwf	34,f	;# 
  3803     0081  0CA2               	rrf	34,f	;# 
  3804     0082  0CA0               	rrf	32,f	;# 
  3805     0083  19C2               	btfsc	_duty_low_byte,3	;# 
  3806     0084  07A2               	addwf	34,f	;# 
  3807     0085  0CA2               	rrf	34,f	;# 
  3808     0086  0CA0               	rrf	32,f	;# 
  3809     0087  1A42               	btfsc	_duty_low_byte,4	;# 
  3810     0088  07A2               	addwf	34,f	;# 
  3811     0089  0CA2               	rrf	34,f	;# 
  3812     008A  0CA0               	rrf	32,f	;# 
  3813     008B  1AC2               	btfsc	_duty_low_byte,5	;# 
  3814     008C  07A2               	addwf	34,f	;# 
  3815     008D  0CA2               	rrf	34,f	;# 
  3816     008E  0CA0               	rrf	32,f	;# 
  3817     008F  1B42               	btfsc	_duty_low_byte,6	;# 
  3818     0090  07A2               	addwf	34,f	;# 
  3819     0091  0CA2               	rrf	34,f	;# 
  3820     0092  0CA0               	rrf	32,f	;# 
  3821     0093  1BC2               	btfsc	_duty_low_byte,7	;# 
  3822     0094  07A2               	addwf	34,f	;# 
  3823     0095  0CA2               	rrf	34,f	;# 
  3824     0096  0CA0               	rrf	32,f	;# 
  3825     0097  01A1               	clrf	33	;# 
  3826     0098  1841               	btfsc	_duty_high_byte,0	;# 
  3827     0099  07A2               	addwf	34,f	;# 
  3828     009A  0CA2               	rrf	34,f	;# 
  3829     009B  0CA1               	rrf	33,f	;# 
  3830     009C  18C1               	btfsc	_duty_high_byte,1	;# 
  3831     009D  07A2               	addwf	34,f	;# 
  3832     009E  0CA2               	rrf	34,f	;# 
  3833     009F  0CA1               	rrf	33,f	;# 
  3834     00A0  1941               	btfsc	_duty_high_byte,2	;# 
  3835     00A1  07A2               	addwf	34,f	;# 
  3836     00A2  0CA2               	rrf	34,f	;# 
  3837     00A3  0CA1               	rrf	33,f	;# 
  3838     00A4  19C1               	btfsc	_duty_high_byte,3	;# 
  3839     00A5  07A2               	addwf	34,f	;# 
  3840     00A6  0CA2               	rrf	34,f	;# 
  3841     00A7  0CA1               	rrf	33,f	;# 
  3842     00A8  1A41               	btfsc	_duty_high_byte,4	;# 
  3843     00A9  07A2               	addwf	34,f	;# 
  3844     00AA  0CA2               	rrf	34,f	;# 
  3845     00AB  0CA1               	rrf	33,f	;# 
  3846     00AC  1AC1               	btfsc	_duty_high_byte,5	;# 
  3847     00AD  07A2               	addwf	34,f	;# 
  3848     00AE  0CA2               	rrf	34,f	;# 
  3849     00AF  0CA1               	rrf	33,f	;# 
  3850     00B0  1B41               	btfsc	_duty_high_byte,6	;# 
  3851     00B1  07A2               	addwf	34,f	;# 
  3852     00B2  0CA2               	rrf	34,f	;# 
  3853     00B3  0CA1               	rrf	33,f	;# 
  3854     00B4  1BC1               	btfsc	_duty_high_byte,7	;# 
  3855     00B5  07A2               	addwf	34,f	;# 
  3856     00B6  0CA2               	rrf	34,f	;# 
  3857     00B7  0CA1               	rrf	33,f	;# 
  3858                           
  3859                           ;main.c: 461:         duty = 1023 - *top_two_bytes_ptr;
  3860     00B8  0020               	movlb	0	; select bank0
  3861     00B9  0856               	movf	_top_two_bytes_ptr,w
  3862     00BA  0086               	movwf	6
  3863     00BB  0857               	movf	_top_two_bytes_ptr+1,w
  3864     00BC  0087               	movwf	7
  3865     00BD  30FF               	movlw	255
  3866     00BE  00FA               	movwf	??_INTERRUPT_InterruptManager
  3867     00BF  3003               	movlw	3
  3868     00C0  00FB               	movwf	??_INTERRUPT_InterruptManager+1
  3869     00C1  3F40               	moviw [0]fsr1
  3870     00C2  027A               	subwf	??_INTERRUPT_InterruptManager,w
  3871     00C3  00C3               	movwf	_duty	;volatile
  3872     00C4  3F41               	moviw [1]fsr1
  3873     00C5  3B7B               	subwfb	??_INTERRUPT_InterruptManager+1,w
  3874     00C6  28CA               	goto	L4
  3875     00C7                     i1l1575:	
  3876                           ;main.c: 462:     }
  3877                           
  3878                           
  3879                           ;main.c: 464:         duty = 1023;
  3880     00C7  30FF               	movlw	255
  3881     00C8  00C3               	movwf	_duty	;volatile
  3882     00C9  3003               	movlw	3
  3883     00CA                     L4:
  3884     00CA  00C4               	movwf	_duty+1	;volatile
  3885                           
  3886                           ;main.c: 468:     SET_DUTY_CCP3(&duty);
  3887     00CB  3043               	movlw	(low (_duty| 0))& (0+255)
  3888     00CC  3187  2709         	fcall	_SET_DUTY_CCP3
  3889                           
  3890                           ;main.c: 471:     LATC5 = 0;
  3891     00CE  0022               	movlb	2	; select bank2
  3892     00CF  128E               	bcf	14,5	;volatile
  3893                           
  3894                           ;main.c: 472:     GIE = 1;
  3895     00D0  178B               	bsf	11,7	;volatile
  3896     00D1                     i1l265:
  3897     00D1  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  3898     00D2  0009               	retfie
  3899     00D3                     __end_of_INTERRUPT_InterruptManager:
  3900                           
  3901                           	psect	text20
  3902     0709                     __ptext20:	
  3903 ;; *************** function _SET_DUTY_CCP3 *****************
  3904 ;; Defined at:
  3905 ;;		line 198 in file "main.c"
  3906 ;; Parameters:    Size  Location     Type
  3907 ;;  duty_ptr        1    wreg     PTR volatile unsigned sh
  3908 ;;		 -> duty(2), 
  3909 ;; Auto vars:     Size  Location     Type
  3910 ;;  duty_ptr        1    3[COMMON] PTR volatile unsigned sh
  3911 ;;		 -> duty(2), 
  3912 ;;  temp            1    2[COMMON] unsigned char 
  3913 ;; Return value:  Size  Location     Type
  3914 ;;                  1    wreg      unsigned char 
  3915 ;; Registers used:
  3916 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3917 ;; Tracked objects:
  3918 ;;		On entry : 1F/0
  3919 ;;		On exit  : 1F/6
  3920 ;;		Unchanged: 0/0
  3921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3922 ;;      Params:         0       0       0       0
  3923 ;;      Locals:         2       0       0       0
  3924 ;;      Temps:          2       0       0       0
  3925 ;;      Totals:         4       0       0       0
  3926 ;;Total ram usage:        4 bytes
  3927 ;; Hardware stack levels used: 1
  3928 ;; This function calls:
  3929 ;;		Nothing
  3930 ;; This function is called by:
  3931 ;;		_INTERRUPT_InterruptManager
  3932 ;; This function uses a non-reentrant model
  3933 ;;
  3934                           
  3935     0709                     _SET_DUTY_CCP3:	
  3936                           ;psect for function _SET_DUTY_CCP3
  3937                           
  3938                           
  3939                           ;incstack = 0
  3940                           ; Regs used in _SET_DUTY_CCP3: [wreg+fsr1l+fsr1h+status,2+status,0]
  3941                           ;SET_DUTY_CCP3@duty_ptr stored from wreg
  3942     0709  00F9               	movwf	SET_DUTY_CCP3@duty_ptr
  3943                           
  3944                           ;main.c: 200:     CCPR3L = *duty_ptr >> 2;
  3945     070A  0879               	movf	SET_DUTY_CCP3@duty_ptr,w
  3946     070B  0086               	movwf	6
  3947     070C  0187               	clrf	7
  3948     070D  3F40               	moviw [0]fsr1
  3949     070E  00F6               	movwf	??_SET_DUTY_CCP3
  3950     070F  3F41               	moviw [1]fsr1
  3951     0710  00F7               	movwf	??_SET_DUTY_CCP3+1
  3952     0711  36F7               	lsrf	??_SET_DUTY_CCP3+1,f
  3953     0712  0CF6               	rrf	??_SET_DUTY_CCP3,f
  3954     0713  36F7               	lsrf	??_SET_DUTY_CCP3+1,f
  3955     0714  0CF6               	rrf	??_SET_DUTY_CCP3,f
  3956     0715  0876               	movf	??_SET_DUTY_CCP3,w
  3957     0716  0026               	movlb	6	; select bank6
  3958     0717  0091               	movwf	17	;volatile
  3959                           
  3960                           ;main.c: 201:     uint8_t temp = *duty_ptr % 0b100;
  3961     0718  0879               	movf	SET_DUTY_CCP3@duty_ptr,w
  3962     0719  0086               	movwf	6
  3963     071A  0187               	clrf	7
  3964     071B  0801               	movf	1,w
  3965     071C  3903               	andlw	3
  3966     071D  00F8               	movwf	SET_DUTY_CCP3@temp
  3967                           
  3968                           ;main.c: 202:     CCP3CON = CCP3CON | (temp << 4);
  3969     071E  0878               	movf	SET_DUTY_CCP3@temp,w
  3970     071F  00F6               	movwf	??_SET_DUTY_CCP3
  3971     0720  3003               	movlw	3
  3972     0721                     u79_25:
  3973     0721  35F6               	lslf	??_SET_DUTY_CCP3,f
  3974     0722  3EFF               	addlw	-1
  3975     0723  1D03               	skipz
  3976     0724  2F21               	goto	u79_25
  3977     0725  3576               	lslf	??_SET_DUTY_CCP3,w
  3978     0726  0413               	iorwf	19,w	;volatile
  3979     0727  0093               	movwf	19	;volatile
  3980     0728  0008               	return
  3981     0729                     __end_of_SET_DUTY_CCP3:
  3982     007E                     btemp	set	126	;btemp
  3983     007E                     int$flags	set	126
  3984     007E                     wtemp0	set	126
  3985                           
  3986                           	psect	config
  3987                           
  3988                           ;Config register CONFIG1 @ 0x8007
  3989                           ;	Oscillator Selection
  3990                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  3991                           ;	Watchdog Timer Enable
  3992                           ;	WDTE = OFF, WDT disabled
  3993                           ;	Power-up Timer Enable
  3994                           ;	PWRTE = OFF, PWRT disabled
  3995                           ;	MCLR Pin Function Select
  3996                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  3997                           ;	Flash Program Memory Code Protection
  3998                           ;	CP = OFF, Program memory code protection is disabled
  3999                           ;	Data Memory Code Protection
  4000                           ;	CPD = OFF, Data memory code protection is disabled
  4001                           ;	Brown-out Reset Enable
  4002                           ;	BOREN = OFF, Brown-out Reset disabled
  4003                           ;	Clock Out Enable
  4004                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  4005                           ;	Internal/External Switchover
  4006                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4007                           ;	Fail-Safe Clock Monitor Enable
  4008                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4009     8007                     	org	32775
  4010     8007  09E4               	dw	2532
  4011                           
  4012                           ;Config register CONFIG2 @ 0x8008
  4013                           ;	Flash Memory Self-Write Protection
  4014                           ;	WRT = OFF, Write protection off
  4015                           ;	PLL Enable
  4016                           ;	PLLEN = ON, 4x PLL enabled
  4017                           ;	Stack Overflow/Underflow Reset Enable
  4018                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  4019                           ;	Brown-out Reset Voltage Selection
  4020                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  4021                           ;	In-Circuit Debugger Mode
  4022                           ;	DEBUG = ON, In-Circuit Debugger enabled, ICSPCLK and ICSPDAT are dedicated to the debu
      +                          gger
  4023                           ;	Low-Voltage Programming Enable
  4024                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  4025     8008                     	org	32776
  4026     8008  0FFF               	dw	4095

Data Sizes:
    Strings     0
    Constant    926
    Data        2
    BSS         44
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     16      56
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    DO_ADC@modifier	PTR const unsigned char  size(2) Largest target is 1
		 -> depth_adc_config_value(CODE[1]), speed_adc_config_value(CODE[1]), symmetry_adc_config_value(CODE[1]), waveshape_adc_config_value(CODE[1]), 

    SET_DUTY_CCP3@duty_ptr	PTR volatile unsigned short  size(1) Largest target is 2
		 -> duty(BANK0[2]), 

    TMR0_WRITE@timer_value_ptr	PTR volatile unsigned char  size(1) Largest target is 1
		 -> final_TMR0(BANK0[1]), 

    top_two_bytes_ptr	PTR unsigned short  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_SET_DUTY_CCP3

Critical Paths under _main in BANK0

    _main->_PROCESS_RAW_SPEED_AND_PRESCALER
    _PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST->_LENGTHEN_PERIOD
    _LENGTHEN_PERIOD->___wmul
    _PROCESS_RAW_SPEED_AND_PRESCALER->___lmul
    _GET_CURRENT_POT_VALUES->_DETERMINE_WAVESHAPE
    _DETERMINE_WAVESHAPE->_DO_ADC

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2004
                      _CONFIG_SYSTEM
              _CONFIG_TMR0_INTERRUPT
             _GET_CURRENT_POT_VALUES
  _PROCESS_FINAL_SPEED_AND_PRESCALER
    _PROCESS_RAW_SPEED_AND_PRESCALER
_PROCESS_TMR0_OFFSET_AND_PRESCALER_A
                         _TMR0_WRITE
                   _TURN_ON_CCP3_PWM
 ---------------------------------------------------------------------------------
 (1) _TURN_ON_CCP3_PWM                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_WRITE                                           1     1      0      67
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST             2     2      0     607
                                              9 BANK0      2     2      0
                    _LENGTHEN_PERIOD
                     _SHORTEN_PERIOD
 ---------------------------------------------------------------------------------
 (2) _SHORTEN_PERIOD                                       5     5      0     161
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) _LENGTHEN_PERIOD                                      3     3      0     316
                                              6 BANK0      3     3      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     316
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _PROCESS_RAW_SPEED_AND_PRESCALER                      4     4      0     316
                                             12 BANK0      4     4      0
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     316
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) _PROCESS_FINAL_SPEED_AND_PRESCALER                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GET_CURRENT_POT_VALUES                               2     2      0    1014
                                              8 BANK0      2     2      0
                _DETERMINE_WAVESHAPE
                             _DO_ADC
 ---------------------------------------------------------------------------------
 (2) _DETERMINE_WAVESHAPE                                  2     2      0     555
                                              6 BANK0      2     2      0
                             _DO_ADC
 ---------------------------------------------------------------------------------
 (2) _DO_ADC                                               6     4      2     459
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _CONFIG_TMR0_INTERRUPT                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CONFIG_SYSTEM                                        0     0      0       0
                    _CONFIG_ADC_PINS
                     _CONFIG_INT_OSC
                       _CONFIG_PORTS
                    _CONFIG_PWM_CCP3
 ---------------------------------------------------------------------------------
 (2) _CONFIG_PWM_CCP3                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CONFIG_PORTS                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CONFIG_INT_OSC                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CONFIG_ADC_PINS                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           2     2      0     100
                                              4 COMMON     2     2      0
                      _SET_DUTY_CCP3
 ---------------------------------------------------------------------------------
 (5) _SET_DUTY_CCP3                                        4     4      0     100
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CONFIG_SYSTEM
     _CONFIG_ADC_PINS
     _CONFIG_INT_OSC
     _CONFIG_PORTS
     _CONFIG_PWM_CCP3
   _CONFIG_TMR0_INTERRUPT
   _GET_CURRENT_POT_VALUES
     _DETERMINE_WAVESHAPE
       _DO_ADC
     _DO_ADC
   _PROCESS_FINAL_SPEED_AND_PRESCALER
   _PROCESS_RAW_SPEED_AND_PRESCALER
     ___lmul
   _PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST
     _LENGTHEN_PERIOD
       ___wmul
     _SHORTEN_PERIOD
   _TMR0_WRITE
   _TURN_ON_CCP3_PWM

 _INTERRUPT_InterruptManager (ROOT)
   _SET_DUTY_CCP3

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      44       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     10      38       6       70.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      44      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Sat Jan 20 21:37:34 2024

                                                      r1 0020  
                                                      r2 0021  
                                                      r3 0022  
                                                     _CW 0798  
                                                     _NO 079A  
                                    ___wmul@multiplicand 0048  
                                                    l208 0572  
                                                    l162 06AC  
                                                    l181 0776  
                                                    l423 0731  
                                                    _CCW 0799  
                                                    _GIE 005F  
                                                    _PR2 001B  
                                                    _YES 079B  
                                                    wreg 0009  
                                                   l1703 0497  
                                                   _C1ON 088F  
                                                   l1713 04AB  
                                                   l1803 053E  
                                                   l1627 072B  
                                                   l1661 06F7  
                                                   l1901 06D5  
                                                   l1663 06FE  
                                                   l1831 059E  
                                                   l1823 0580  
                                                   l1815 0569  
                                                   l1719 04DC  
                                                   l1817 056C  
                                                   l1761 0672  
                                                   l1745 065A  
                                                   l1667 0700  
                                                   l1827 058F  
                                                   l1757 0668  
                                                   l1861 05D0  
                                                   l1871 05DA  
                                                   l1863 05D3  
                                                   l1857 05CA  
                                                   l1849 05B7  
                                                   l1875 05E3  
                                                   l1867 05DD  
                                                   l1869 05E0  
                                                   _ADON 04E8  
                                                   u1135 0699  
                                                   u1305 064D  
                                                   u1325 0673  
                                                   u1165 0732  
                                                   u1335 067A  
                                                   u1175 0737  
                                                   u1255 04CB  
                                                   u1275 04E1  
                                                   u1365 051F  
                                                   u1295 0637  
                                                   u1385 0549  
                                                   u1395 0554  
                                                   u1587 06A7  
                                                   _TMR0 0015  
                                                   _WPUC 020E  
                                      _current_speed_log 0030  
                                                   _main 06BB  
                                                   _duty 0043  
                                                   fsr0h 0005  
                                                   fsr1h 0007  
                                                   indf0 0000  
                                                   fsr0l 0004  
                                                   indf1 0001  
                                                   fsr1l 0006  
                                                   btemp 007E  
                                      _current_waveshape 0075  
                                                   start 00D3  
                                  _CONFIG_TMR0_INTERRUPT 0796  
                                       __end_of_NEGATIVE 07A2  
                                   __end_of_CONFIG_PORTS 076C  
                                                  STATUS 0003  
                                                  ?_main 0076  
                                                  _T2CON 001C  
                                                  _LATC5 0875  
                                                  i1l261 005E  
                                                  i1l262 006B  
                                                  i1l265 00D1  
                                                  _SRLEN 08D7  
                                                  _TRISC 008E  
                                                  u79_25 0721  
                                            ?_TMR0_WRITE 0076  
                       __end_of_shorten_period_log_table 01F0  
                                    ___lmul@multiplicand 004A  
                                       __end_of_POSITIVE 07A3  
                               ??_GET_CURRENT_POT_VALUES 004E  
                                                  status 0003  
                                                  wtemp0 007E  
                             _current_one_quadrant_index 0074  
                                        __initialization 00D5  
                                           __end_of_main 06E2  
       __end_of_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST 05EA  
             ??_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST 004F  
              ?_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST 0076  
               _PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST 05AC  
                            ?_INTERRUPT_InterruptManager 0076  
                                      __end_of_DONT_CARE 079D  
                                                 ??_main 0056  
                                  __end_of_DIVIDE_BY_TWO 07A0  
                                 _speed_adc_config_value 07A5  
                                  __end_of_CONFIG_SYSTEM 0763  
                                                 _ADCON0 009D  
                                                 _ADCON1 009E  
                                                 _ADRESH 009C  
                                                 _ADRESL 009B  
                                                 _CCPR3L 0311  
                                                 _ANSELC 018E  
                                                 _DO_ADC 068F  
                                                 i1l1541 0023  
                                                 i1l1561 0052  
                                                 i1l1553 0047  
                                                 i1l1545 0037  
                                                 i1l1563 0053  
                                                 i1l1549 0040  
                                                 i1l1575 00C7  
                                                 i1l1567 005C  
                                                 _OSCCON 0099  
                                                 _TMR0IE 005D  
                                                 _TMR0IF 005A  
                                                 _TMR2IF 0089  
                                                 _TMR2ON 00E2  
                                                 _TRISA2 0462  
                                 ?_CONFIG_TMR0_INTERRUPT 0076  
                                         DO_ADC@modifier 0046  
                            __end_of_DETERMINE_WAVESHAPE 0709  
                      __end_of_symmetry_adc_config_value 07A4  
                                                 ___lmul 0660  
                                                 ___wmul 0729  
                                  __end_of_SET_DUTY_CCP3 0729  
                                      ?_TURN_ON_CCP3_PWM 0076  
                                      ??_CONFIG_ADC_PINS 0046  
                                _current_speed_linear_32 0024  
                                     ??_TURN_ON_CCP3_PWM 0046  
                                __end_of__initialization 00EA  
                                         _SHORTEN_PERIOD 0475  
                                         _DIVIDE_BY_FOUR 079D  
                                         _CONFIG_INT_OSC 078A  
                                         __pcstackCOMMON 0076  
                                           __pidataBANK0 0794  
                                            _dTMR0_ideal 0070  
                                             __end_of_CW 0799  
                                             __end_of_NO 079B  
                                 _tri_table_one_quadrant 01F0  
                                      ??_CONFIG_PWM_CCP3 0046  
                                      _top_two_bytes_ptr 0056  
                                          _current_depth 002E  
                                             __pbssBANK0 0020  
                                                ?_DO_ADC 0046  
                                 __end_of_SHORTEN_PERIOD 04F5  
                                           _CONFIG_PORTS 0763  
                                 __end_of_DIVIDE_BY_FOUR 079E  
                                 __end_of_CONFIG_INT_OSC 0790  
                                     __end_of_DO_NOTHING 07A1  
                                             __pmaintext 06BB  
                                 _GET_CURRENT_POT_VALUES 05EA  
                                                ?___lmul 0046  
                                                ?___wmul 0046  
                                             __pintentry 0004  
PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST@symmetry_status 0050  
                                                _CCP3CON 0313  
                                         ___lmul@product 004E  
                                             _final_TMR0 0045  
                                           ??_TMR0_WRITE 0046  
                                  SET_DUTY_CCP3@duty_ptr 0079  
                                                _OSCTUNE 0098  
                                _sine_table_one_quadrant 02F2  
                              TMR0_WRITE@timer_value_ptr 0046  
                                        ?_SHORTEN_PERIOD 0076  
              __end_of_PROCESS_FINAL_SPEED_AND_PRESCALER 05AC  
                    ??_PROCESS_FINAL_SPEED_AND_PRESCALER 0046  
                     ?_PROCESS_FINAL_SPEED_AND_PRESCALER 0076  
                      _PROCESS_FINAL_SPEED_AND_PRESCALER 055F  
                                        ?_CONFIG_INT_OSC 0076  
                                   _current_speed_log_32 0020  
                                     __end_of_TMR0_WRITE 0784  
                                   _current_speed_linear 0032  
                              _base_prescaler_bits_index 003C  
                                                __ptext1 0774  
                                                __ptext2 077C  
                                                __ptext3 05AC  
                                                __ptext4 0475  
                                                __ptext5 0627  
                                                __ptext6 0729  
                                                __ptext7 04F5  
                                                __ptext8 0660  
                                                __ptext9 055F  
                                        _MULTIPLY_BY_TWO 079E  
                __end_of_PROCESS_RAW_SPEED_AND_PRESCALER 055F  
                      ??_PROCESS_RAW_SPEED_AND_PRESCALER 0052  
                       ?_PROCESS_RAW_SPEED_AND_PRESCALER 0076  
                        _PROCESS_RAW_SPEED_AND_PRESCALER 04F5  
                                              _DONT_CARE 079C  
                                                clrloop0 0785  
                                   end_of_initialization 00EA  
                                ??_CONFIG_TMR0_INTERRUPT 0046  
                                          _duty_low_byte 0042  
                         __end_of_speed_adc_config_value 07A6  
                                 _depth_adc_config_value 07A4  
                                        _CONFIG_ADC_PINS 0790  
                                       _TMR0_offset_sign 003D  
                                      ??_LENGTHEN_PERIOD 004C  
                              _lengthen_period_log_table 03F4  
                                             DO_ADC@temp 004B  
                                         __end_of_DO_ADC 06BB  
                                      SET_DUTY_CCP3@temp 0078  
                                       _current_quadrant 003F  
                                __end_of_MULTIPLY_BY_TWO 079F  
                                        _CONFIG_PWM_CCP3 0744  
                                       _current_symmetry 002C  
                                         __end_of___lmul 068F  
                                         __end_of___wmul 0744  
                               _speed_control_subtracted 0036  
                                    start_initialization 00D5  
                                            __end_of_CCW 079A  
                                            __end_of_YES 079C  
                                               ??_DO_ADC 0048  
                                ?_GET_CURRENT_POT_VALUES 0076  
                        __end_of_sine_table_one_quadrant 03F4  
                                __end_of_CONFIG_ADC_PINS 0794  
                                               ??___lmul 004E  
                                               ??___wmul 004A  
                         __end_of_tri_table_one_quadrant 02F2  
                                            __pdataBANK0 0056  
                                       DO_ADC@adc_result 0049  
                                            __pbssCOMMON 0070  
                                              ___latbits 0001  
                                          _DIVIDE_BY_TWO 079F  
                                          __pcstackBANK0 0046  
                                       ??_SHORTEN_PERIOD 0046  
                                          _CONFIG_SYSTEM 0757  
                                       ??_CONFIG_INT_OSC 0046  
                         __end_of_GET_CURRENT_POT_VALUES 0627  
                               _shorten_period_log_table 00EE  
                                __end_of_CONFIG_PWM_CCP3 0757  
                                         _prescaler_bits 076C  
                           ??_INTERRUPT_InterruptManager 007A  
                                           _how_many_128 0034  
                                          _SET_DUTY_CCP3 0709  
                                               _CCPTMRS0 029E  
                                         ?_CONFIG_SYSTEM 0076  
                                       _prescaler_adjust 0073  
                                        _symmetry_status 003A  
                                               _NEGATIVE 07A1  
                                         ___wmul@product 004A  
                     __end_of_waveshape_adc_config_value 07A7  
                             _waveshape_adc_config_value 07A6  
                          __end_of_CONFIG_TMR0_INTERRUPT 0798  
                                              clear_ram0 0784  
                                               _GO_nDONE 04E9  
                                       _TURN_ON_CCP3_PWM 0774  
                                 __end_of_prescaler_bits 0774  
                                       ?_CONFIG_ADC_PINS 0076  
                                               _POSITIVE 07A2  
                                        _LENGTHEN_PERIOD 0627  
                                      ___wmul@multiplier 0046  
                                         ?_SET_DUTY_CCP3 0076  
                                      _clear_TMR0_please 003B  
                           SHORTEN_PERIOD@TMR0_raw_extra 0049  
                                      ___lmul@multiplier 0046  
                                    _DETERMINE_WAVESHAPE 06E2  
                                 DETERMINE_WAVESHAPE@ADC 004C  
                                       ?_CONFIG_PWM_CCP3 0076  
                         __end_of_depth_adc_config_value 07A5  
                      __end_of_lengthen_period_log_table 0475  
                                   ?_DETERMINE_WAVESHAPE 0076  
                                        ??_CONFIG_SYSTEM 0046  
                                       _speed_control_32 0028  
                                               __ptext10 05EA  
                                               __ptext11 06E2  
                                               __ptext20 0709  
                                               __ptext12 068F  
                                               __ptext13 0796  
                                               __ptext14 0757  
                                               __ptext15 0744  
                                               __ptext16 0763  
                                               __ptext17 078A  
                                               __ptext18 0790  
                                          ?_CONFIG_PORTS 0076  
                                         _duty_high_byte 0041  
                                          _speed_control 0038  
                                               _raw_TMR0 0072  
                                __end_of_LENGTHEN_PERIOD 0660  
                                               int$flags 007E  
                                  ??_DETERMINE_WAVESHAPE 004C  
                     __end_of_INTERRUPT_InterruptManager 00D3  
                             _INTERRUPT_InterruptManager 0004  
                                        ??_SET_DUTY_CCP3 0076  
                                             _DO_NOTHING 07A0  
                                         __pstringtext10 079C  
                                         __pstringtext11 079D  
                                         __pstringtext20 07A6  
                                         __pstringtext12 079E  
                                         __pstringtext13 079F  
                                         __pstringtext14 07A0  
                                         __pstringtext15 07A1  
                                         __pstringtext16 07A2  
                                         __pstringtext17 07A3  
                                         __pstringtext18 07A4  
                                         __pstringtext19 07A5  
                              _symmetry_adc_config_value 07A3  
                                         ??_CONFIG_PORTS 0046  
                                               intlevel1 0000  
                                          __pstringtext1 00EE  
                                          __pstringtext2 01F0  
                                          __pstringtext3 02F2  
                                          __pstringtext4 03F4  
                                          __pstringtext5 076C  
                                          __pstringtext6 0798  
                                          __pstringtext7 0799  
                                          __pstringtext8 079A  
                                          __pstringtext9 079B  
                                            _TMR0_offset 003E  
                                             _OPTION_REG 0095  
                                             _TMR0_WRITE 077C  
                               __end_of_TURN_ON_CCP3_PWM 077C  
                                      _current_halfcycle 0040  
                                       ?_LENGTHEN_PERIOD 0076  
