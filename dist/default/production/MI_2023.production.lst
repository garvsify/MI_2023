

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Sun Jan 28 12:22:50 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og9 
     1                           	processor	16F1824
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    15                           	psect	stringtext11,global,class=STRCODE,delta=2,noexec
    16                           	psect	stringtext12,global,class=STRCODE,delta=2,noexec
    17                           	psect	stringtext13,global,class=STRCODE,delta=2,noexec
    18                           	psect	stringtext14,global,class=STRCODE,delta=2,noexec
    19                           	psect	stringtext15,global,class=STRCODE,delta=2,noexec
    20                           	psect	stringtext16,global,class=STRCODE,delta=2,noexec
    21                           	psect	cinit,global,class=CODE,merge=1,delta=2
    22                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    23                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    24                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    25                           	psect	clrtext,global,class=CODE,delta=2
    26                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    27                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    28                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    29                           	psect	text1,local,class=CODE,merge=1,delta=2
    30                           	psect	text2,local,class=CODE,merge=1,delta=2
    31                           	psect	text3,local,class=CODE,merge=1,delta=2
    32                           	psect	text4,local,class=CODE,merge=1,delta=2
    33                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text6,local,class=CODE,merge=1,delta=2
    35                           	psect	text7,local,class=CODE,merge=1,delta=2
    36                           	psect	text8,local,class=CODE,merge=1,delta=2
    37                           	psect	text9,local,class=CODE,merge=1,delta=2
    38                           	psect	text10,local,class=CODE,merge=1,delta=2
    39                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    40                           	psect	text12,local,class=CODE,merge=1,delta=2
    41                           	psect	text13,local,class=CODE,merge=1,delta=2
    42                           	psect	text14,local,class=CODE,merge=1,delta=2
    43                           	psect	text15,local,class=CODE,merge=1,delta=2
    44                           	psect	text16,local,class=CODE,merge=1,delta=2
    45                           	psect	text17,local,class=CODE,merge=1,delta=2
    46                           	psect	text18,local,class=CODE,merge=1,delta=2
    47                           	psect	text19,local,class=CODE,merge=1,delta=2
    48                           	psect	text20,local,class=CODE,merge=1,delta=2
    49                           	psect	intentry,global,class=CODE,delta=2
    50                           	psect	text22,local,class=CODE,merge=1,delta=2
    51                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    52                           	dabs	1,0x7E,2
    53     0000                     
    54                           ; Generated 06/07/2023 GMT
    55                           ; 
    56                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    57                           ; All rights reserved.
    58                           ; 
    59                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    60                           ; 
    61                           ; Redistribution and use in source and binary forms, with or without modification, are
    62                           ; permitted provided that the following conditions are met:
    63                           ; 
    64                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    65                           ;        conditions and the following disclaimer.
    66                           ; 
    67                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    68                           ;        of conditions and the following disclaimer in the documentation and/or other
    69                           ;        materials provided with the distribution. Publication is not required when
    70                           ;        this file is used in an embedded application.
    71                           ; 
    72                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    73                           ;        software without specific prior written permission.
    74                           ; 
    75                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    76                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    77                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    78                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    79                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    80                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    81                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    82                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    83                           ; 
    84                           ; 
    85                           ; Code-generator required, PIC16F1824 Definitions
    86                           ; 
    87                           ; SFR Addresses
    88     0000                     	;# 
    89     0001                     	;# 
    90     0002                     	;# 
    91     0003                     	;# 
    92     0004                     	;# 
    93     0005                     	;# 
    94     0006                     	;# 
    95     0007                     	;# 
    96     0008                     	;# 
    97     0009                     	;# 
    98     000A                     	;# 
    99     000B                     	;# 
   100     000C                     	;# 
   101     000E                     	;# 
   102     0011                     	;# 
   103     0012                     	;# 
   104     0013                     	;# 
   105     0015                     	;# 
   106     0016                     	;# 
   107     0016                     	;# 
   108     0017                     	;# 
   109     0018                     	;# 
   110     0019                     	;# 
   111     001A                     	;# 
   112     001B                     	;# 
   113     001C                     	;# 
   114     001E                     	;# 
   115     001F                     	;# 
   116     008C                     	;# 
   117     008E                     	;# 
   118     0091                     	;# 
   119     0092                     	;# 
   120     0093                     	;# 
   121     0095                     	;# 
   122     0096                     	;# 
   123     0097                     	;# 
   124     0098                     	;# 
   125     0099                     	;# 
   126     009A                     	;# 
   127     009B                     	;# 
   128     009B                     	;# 
   129     009C                     	;# 
   130     009D                     	;# 
   131     009E                     	;# 
   132     010C                     	;# 
   133     010E                     	;# 
   134     0111                     	;# 
   135     0112                     	;# 
   136     0113                     	;# 
   137     0114                     	;# 
   138     0115                     	;# 
   139     0116                     	;# 
   140     0117                     	;# 
   141     0118                     	;# 
   142     0119                     	;# 
   143     011A                     	;# 
   144     011B                     	;# 
   145     011D                     	;# 
   146     011E                     	;# 
   147     018C                     	;# 
   148     018E                     	;# 
   149     0191                     	;# 
   150     0191                     	;# 
   151     0192                     	;# 
   152     0193                     	;# 
   153     0193                     	;# 
   154     0193                     	;# 
   155     0194                     	;# 
   156     0195                     	;# 
   157     0196                     	;# 
   158     0199                     	;# 
   159     019A                     	;# 
   160     019B                     	;# 
   161     019B                     	;# 
   162     019B                     	;# 
   163     019B                     	;# 
   164     019C                     	;# 
   165     019C                     	;# 
   166     019D                     	;# 
   167     019E                     	;# 
   168     019F                     	;# 
   169     020C                     	;# 
   170     020E                     	;# 
   171     0211                     	;# 
   172     0211                     	;# 
   173     0212                     	;# 
   174     0212                     	;# 
   175     0213                     	;# 
   176     0213                     	;# 
   177     0214                     	;# 
   178     0214                     	;# 
   179     0215                     	;# 
   180     0215                     	;# 
   181     0215                     	;# 
   182     0215                     	;# 
   183     0216                     	;# 
   184     0216                     	;# 
   185     0217                     	;# 
   186     0217                     	;# 
   187     0291                     	;# 
   188     0291                     	;# 
   189     0292                     	;# 
   190     0293                     	;# 
   191     0294                     	;# 
   192     0295                     	;# 
   193     0295                     	;# 
   194     0296                     	;# 
   195     0298                     	;# 
   196     0298                     	;# 
   197     0299                     	;# 
   198     029A                     	;# 
   199     029B                     	;# 
   200     029C                     	;# 
   201     029D                     	;# 
   202     029E                     	;# 
   203     029E                     	;# 
   204     0311                     	;# 
   205     0311                     	;# 
   206     0312                     	;# 
   207     0313                     	;# 
   208     0318                     	;# 
   209     0318                     	;# 
   210     0319                     	;# 
   211     031A                     	;# 
   212     038C                     	;# 
   213     038E                     	;# 
   214     0391                     	;# 
   215     0392                     	;# 
   216     0393                     	;# 
   217     039A                     	;# 
   218     039C                     	;# 
   219     039D                     	;# 
   220     039E                     	;# 
   221     039F                     	;# 
   222     0415                     	;# 
   223     0416                     	;# 
   224     0417                     	;# 
   225     041C                     	;# 
   226     041D                     	;# 
   227     041E                     	;# 
   228     0FE4                     	;# 
   229     0FE5                     	;# 
   230     0FE6                     	;# 
   231     0FE7                     	;# 
   232     0FE8                     	;# 
   233     0FE9                     	;# 
   234     0FEA                     	;# 
   235     0FEB                     	;# 
   236     0FED                     	;# 
   237     0FEE                     	;# 
   238     0FEF                     	;# 
   239     0020                     	;# 
   240     0021                     	;# 
   241     0022                     	;# 
   242     0023                     	;# 
   243     0024                     	;# 
   244     0025                     	;# 
   245     0000                     	;# 
   246     0001                     	;# 
   247     0002                     	;# 
   248     0003                     	;# 
   249     0004                     	;# 
   250     0005                     	;# 
   251     0006                     	;# 
   252     0007                     	;# 
   253     0008                     	;# 
   254     0009                     	;# 
   255     000A                     	;# 
   256     000B                     	;# 
   257     000C                     	;# 
   258     000E                     	;# 
   259     0011                     	;# 
   260     0012                     	;# 
   261     0013                     	;# 
   262     0015                     	;# 
   263     0016                     	;# 
   264     0016                     	;# 
   265     0017                     	;# 
   266     0018                     	;# 
   267     0019                     	;# 
   268     001A                     	;# 
   269     001B                     	;# 
   270     001C                     	;# 
   271     001E                     	;# 
   272     001F                     	;# 
   273     008C                     	;# 
   274     008E                     	;# 
   275     0091                     	;# 
   276     0092                     	;# 
   277     0093                     	;# 
   278     0095                     	;# 
   279     0096                     	;# 
   280     0097                     	;# 
   281     0098                     	;# 
   282     0099                     	;# 
   283     009A                     	;# 
   284     009B                     	;# 
   285     009B                     	;# 
   286     009C                     	;# 
   287     009D                     	;# 
   288     009E                     	;# 
   289     010C                     	;# 
   290     010E                     	;# 
   291     0111                     	;# 
   292     0112                     	;# 
   293     0113                     	;# 
   294     0114                     	;# 
   295     0115                     	;# 
   296     0116                     	;# 
   297     0117                     	;# 
   298     0118                     	;# 
   299     0119                     	;# 
   300     011A                     	;# 
   301     011B                     	;# 
   302     011D                     	;# 
   303     011E                     	;# 
   304     018C                     	;# 
   305     018E                     	;# 
   306     0191                     	;# 
   307     0191                     	;# 
   308     0192                     	;# 
   309     0193                     	;# 
   310     0193                     	;# 
   311     0193                     	;# 
   312     0194                     	;# 
   313     0195                     	;# 
   314     0196                     	;# 
   315     0199                     	;# 
   316     019A                     	;# 
   317     019B                     	;# 
   318     019B                     	;# 
   319     019B                     	;# 
   320     019B                     	;# 
   321     019C                     	;# 
   322     019C                     	;# 
   323     019D                     	;# 
   324     019E                     	;# 
   325     019F                     	;# 
   326     020C                     	;# 
   327     020E                     	;# 
   328     0211                     	;# 
   329     0211                     	;# 
   330     0212                     	;# 
   331     0212                     	;# 
   332     0213                     	;# 
   333     0213                     	;# 
   334     0214                     	;# 
   335     0214                     	;# 
   336     0215                     	;# 
   337     0215                     	;# 
   338     0215                     	;# 
   339     0215                     	;# 
   340     0216                     	;# 
   341     0216                     	;# 
   342     0217                     	;# 
   343     0217                     	;# 
   344     0291                     	;# 
   345     0291                     	;# 
   346     0292                     	;# 
   347     0293                     	;# 
   348     0294                     	;# 
   349     0295                     	;# 
   350     0295                     	;# 
   351     0296                     	;# 
   352     0298                     	;# 
   353     0298                     	;# 
   354     0299                     	;# 
   355     029A                     	;# 
   356     029B                     	;# 
   357     029C                     	;# 
   358     029D                     	;# 
   359     029E                     	;# 
   360     029E                     	;# 
   361     0311                     	;# 
   362     0311                     	;# 
   363     0312                     	;# 
   364     0313                     	;# 
   365     0318                     	;# 
   366     0318                     	;# 
   367     0319                     	;# 
   368     031A                     	;# 
   369     038C                     	;# 
   370     038E                     	;# 
   371     0391                     	;# 
   372     0392                     	;# 
   373     0393                     	;# 
   374     039A                     	;# 
   375     039C                     	;# 
   376     039D                     	;# 
   377     039E                     	;# 
   378     039F                     	;# 
   379     0415                     	;# 
   380     0416                     	;# 
   381     0417                     	;# 
   382     041C                     	;# 
   383     041D                     	;# 
   384     041E                     	;# 
   385     0FE4                     	;# 
   386     0FE5                     	;# 
   387     0FE6                     	;# 
   388     0FE7                     	;# 
   389     0FE8                     	;# 
   390     0FE9                     	;# 
   391     0FEA                     	;# 
   392     0FEB                     	;# 
   393     0FED                     	;# 
   394     0FEE                     	;# 
   395     0FEF                     	;# 
   396     0000                     	;# 
   397     0001                     	;# 
   398     0002                     	;# 
   399     0003                     	;# 
   400     0004                     	;# 
   401     0005                     	;# 
   402     0006                     	;# 
   403     0007                     	;# 
   404     0008                     	;# 
   405     0009                     	;# 
   406     000A                     	;# 
   407     000B                     	;# 
   408     000C                     	;# 
   409     000E                     	;# 
   410     0011                     	;# 
   411     0012                     	;# 
   412     0013                     	;# 
   413     0015                     	;# 
   414     0016                     	;# 
   415     0016                     	;# 
   416     0017                     	;# 
   417     0018                     	;# 
   418     0019                     	;# 
   419     001A                     	;# 
   420     001B                     	;# 
   421     001C                     	;# 
   422     001E                     	;# 
   423     001F                     	;# 
   424     008C                     	;# 
   425     008E                     	;# 
   426     0091                     	;# 
   427     0092                     	;# 
   428     0093                     	;# 
   429     0095                     	;# 
   430     0096                     	;# 
   431     0097                     	;# 
   432     0098                     	;# 
   433     0099                     	;# 
   434     009A                     	;# 
   435     009B                     	;# 
   436     009B                     	;# 
   437     009C                     	;# 
   438     009D                     	;# 
   439     009E                     	;# 
   440     010C                     	;# 
   441     010E                     	;# 
   442     0111                     	;# 
   443     0112                     	;# 
   444     0113                     	;# 
   445     0114                     	;# 
   446     0115                     	;# 
   447     0116                     	;# 
   448     0117                     	;# 
   449     0118                     	;# 
   450     0119                     	;# 
   451     011A                     	;# 
   452     011B                     	;# 
   453     011D                     	;# 
   454     011E                     	;# 
   455     018C                     	;# 
   456     018E                     	;# 
   457     0191                     	;# 
   458     0191                     	;# 
   459     0192                     	;# 
   460     0193                     	;# 
   461     0193                     	;# 
   462     0193                     	;# 
   463     0194                     	;# 
   464     0195                     	;# 
   465     0196                     	;# 
   466     0199                     	;# 
   467     019A                     	;# 
   468     019B                     	;# 
   469     019B                     	;# 
   470     019B                     	;# 
   471     019B                     	;# 
   472     019C                     	;# 
   473     019C                     	;# 
   474     019D                     	;# 
   475     019E                     	;# 
   476     019F                     	;# 
   477     020C                     	;# 
   478     020E                     	;# 
   479     0211                     	;# 
   480     0211                     	;# 
   481     0212                     	;# 
   482     0212                     	;# 
   483     0213                     	;# 
   484     0213                     	;# 
   485     0214                     	;# 
   486     0214                     	;# 
   487     0215                     	;# 
   488     0215                     	;# 
   489     0215                     	;# 
   490     0215                     	;# 
   491     0216                     	;# 
   492     0216                     	;# 
   493     0217                     	;# 
   494     0217                     	;# 
   495     0291                     	;# 
   496     0291                     	;# 
   497     0292                     	;# 
   498     0293                     	;# 
   499     0294                     	;# 
   500     0295                     	;# 
   501     0295                     	;# 
   502     0296                     	;# 
   503     0298                     	;# 
   504     0298                     	;# 
   505     0299                     	;# 
   506     029A                     	;# 
   507     029B                     	;# 
   508     029C                     	;# 
   509     029D                     	;# 
   510     029E                     	;# 
   511     029E                     	;# 
   512     0311                     	;# 
   513     0311                     	;# 
   514     0312                     	;# 
   515     0313                     	;# 
   516     0318                     	;# 
   517     0318                     	;# 
   518     0319                     	;# 
   519     031A                     	;# 
   520     038C                     	;# 
   521     038E                     	;# 
   522     0391                     	;# 
   523     0392                     	;# 
   524     0393                     	;# 
   525     039A                     	;# 
   526     039C                     	;# 
   527     039D                     	;# 
   528     039E                     	;# 
   529     039F                     	;# 
   530     0415                     	;# 
   531     0416                     	;# 
   532     0417                     	;# 
   533     041C                     	;# 
   534     041D                     	;# 
   535     041E                     	;# 
   536     0FE4                     	;# 
   537     0FE5                     	;# 
   538     0FE6                     	;# 
   539     0FE7                     	;# 
   540     0FE8                     	;# 
   541     0FE9                     	;# 
   542     0FEA                     	;# 
   543     0FEB                     	;# 
   544     0FED                     	;# 
   545     0FEE                     	;# 
   546     0FEF                     	;# 
   547     0000                     	;# 
   548     0001                     	;# 
   549     0002                     	;# 
   550     0003                     	;# 
   551     0004                     	;# 
   552     0005                     	;# 
   553     0006                     	;# 
   554     0007                     	;# 
   555     0008                     	;# 
   556     0009                     	;# 
   557     000A                     	;# 
   558     000B                     	;# 
   559     000C                     	;# 
   560     000E                     	;# 
   561     0011                     	;# 
   562     0012                     	;# 
   563     0013                     	;# 
   564     0015                     	;# 
   565     0016                     	;# 
   566     0016                     	;# 
   567     0017                     	;# 
   568     0018                     	;# 
   569     0019                     	;# 
   570     001A                     	;# 
   571     001B                     	;# 
   572     001C                     	;# 
   573     001E                     	;# 
   574     001F                     	;# 
   575     008C                     	;# 
   576     008E                     	;# 
   577     0091                     	;# 
   578     0092                     	;# 
   579     0093                     	;# 
   580     0095                     	;# 
   581     0096                     	;# 
   582     0097                     	;# 
   583     0098                     	;# 
   584     0099                     	;# 
   585     009A                     	;# 
   586     009B                     	;# 
   587     009B                     	;# 
   588     009C                     	;# 
   589     009D                     	;# 
   590     009E                     	;# 
   591     010C                     	;# 
   592     010E                     	;# 
   593     0111                     	;# 
   594     0112                     	;# 
   595     0113                     	;# 
   596     0114                     	;# 
   597     0115                     	;# 
   598     0116                     	;# 
   599     0117                     	;# 
   600     0118                     	;# 
   601     0119                     	;# 
   602     011A                     	;# 
   603     011B                     	;# 
   604     011D                     	;# 
   605     011E                     	;# 
   606     018C                     	;# 
   607     018E                     	;# 
   608     0191                     	;# 
   609     0191                     	;# 
   610     0192                     	;# 
   611     0193                     	;# 
   612     0193                     	;# 
   613     0193                     	;# 
   614     0194                     	;# 
   615     0195                     	;# 
   616     0196                     	;# 
   617     0199                     	;# 
   618     019A                     	;# 
   619     019B                     	;# 
   620     019B                     	;# 
   621     019B                     	;# 
   622     019B                     	;# 
   623     019C                     	;# 
   624     019C                     	;# 
   625     019D                     	;# 
   626     019E                     	;# 
   627     019F                     	;# 
   628     020C                     	;# 
   629     020E                     	;# 
   630     0211                     	;# 
   631     0211                     	;# 
   632     0212                     	;# 
   633     0212                     	;# 
   634     0213                     	;# 
   635     0213                     	;# 
   636     0214                     	;# 
   637     0214                     	;# 
   638     0215                     	;# 
   639     0215                     	;# 
   640     0215                     	;# 
   641     0215                     	;# 
   642     0216                     	;# 
   643     0216                     	;# 
   644     0217                     	;# 
   645     0217                     	;# 
   646     0291                     	;# 
   647     0291                     	;# 
   648     0292                     	;# 
   649     0293                     	;# 
   650     0294                     	;# 
   651     0295                     	;# 
   652     0295                     	;# 
   653     0296                     	;# 
   654     0298                     	;# 
   655     0298                     	;# 
   656     0299                     	;# 
   657     029A                     	;# 
   658     029B                     	;# 
   659     029C                     	;# 
   660     029D                     	;# 
   661     029E                     	;# 
   662     029E                     	;# 
   663     0311                     	;# 
   664     0311                     	;# 
   665     0312                     	;# 
   666     0313                     	;# 
   667     0318                     	;# 
   668     0318                     	;# 
   669     0319                     	;# 
   670     031A                     	;# 
   671     038C                     	;# 
   672     038E                     	;# 
   673     0391                     	;# 
   674     0392                     	;# 
   675     0393                     	;# 
   676     039A                     	;# 
   677     039C                     	;# 
   678     039D                     	;# 
   679     039E                     	;# 
   680     039F                     	;# 
   681     0415                     	;# 
   682     0416                     	;# 
   683     0417                     	;# 
   684     041C                     	;# 
   685     041D                     	;# 
   686     041E                     	;# 
   687     0FE4                     	;# 
   688     0FE5                     	;# 
   689     0FE6                     	;# 
   690     0FE7                     	;# 
   691     0FE8                     	;# 
   692     0FE9                     	;# 
   693     0FEA                     	;# 
   694     0FEB                     	;# 
   695     0FED                     	;# 
   696     0FEE                     	;# 
   697     0FEF                     	;# 
   698                           
   699                           	psect	idataBANK0
   700     069E                     __pidataBANK0:
   701                           
   702                           ;initializer for _top_two_bytes_ptr
   703     069E  3421               	retlw	33
   704     069F  3400               	retlw	0
   705                           
   706                           	psect	stringtext1
   707     00F7                     __pstringtext1:
   708     00F7                     _tri_table_one_quadrant:
   709     00F7  3400               	retlw	0
   710     00F8  3402               	retlw	2
   711     00F9  3404               	retlw	4
   712     00FA  3402               	retlw	2
   713     00FB  3408               	retlw	8
   714     00FC  3402               	retlw	2
   715     00FD  340C               	retlw	12
   716     00FE  3402               	retlw	2
   717     00FF  3410               	retlw	16
   718     0100  3402               	retlw	2
   719     0101  3414               	retlw	20
   720     0102  3402               	retlw	2
   721     0103  3418               	retlw	24
   722     0104  3402               	retlw	2
   723     0105  341C               	retlw	28
   724     0106  3402               	retlw	2
   725     0107  3420               	retlw	32
   726     0108  3402               	retlw	2
   727     0109  3424               	retlw	36
   728     010A  3402               	retlw	2
   729     010B  3428               	retlw	40
   730     010C  3402               	retlw	2
   731     010D  342C               	retlw	44
   732     010E  3402               	retlw	2
   733     010F  3430               	retlw	48
   734     0110  3402               	retlw	2
   735     0111  3434               	retlw	52
   736     0112  3402               	retlw	2
   737     0113  3438               	retlw	56
   738     0114  3402               	retlw	2
   739     0115  343C               	retlw	60
   740     0116  3402               	retlw	2
   741     0117  3440               	retlw	64
   742     0118  3402               	retlw	2
   743     0119  3444               	retlw	68
   744     011A  3402               	retlw	2
   745     011B  3448               	retlw	72
   746     011C  3402               	retlw	2
   747     011D  344C               	retlw	76
   748     011E  3402               	retlw	2
   749     011F  3450               	retlw	80
   750     0120  3402               	retlw	2
   751     0121  3454               	retlw	84
   752     0122  3402               	retlw	2
   753     0123  3458               	retlw	88
   754     0124  3402               	retlw	2
   755     0125  345C               	retlw	92
   756     0126  3402               	retlw	2
   757     0127  3460               	retlw	96
   758     0128  3402               	retlw	2
   759     0129  3464               	retlw	100
   760     012A  3402               	retlw	2
   761     012B  3468               	retlw	104
   762     012C  3402               	retlw	2
   763     012D  346C               	retlw	108
   764     012E  3402               	retlw	2
   765     012F  3470               	retlw	112
   766     0130  3402               	retlw	2
   767     0131  3474               	retlw	116
   768     0132  3402               	retlw	2
   769     0133  3478               	retlw	120
   770     0134  3402               	retlw	2
   771     0135  347C               	retlw	124
   772     0136  3402               	retlw	2
   773     0137  3480               	retlw	128
   774     0138  3402               	retlw	2
   775     0139  3484               	retlw	132
   776     013A  3402               	retlw	2
   777     013B  3488               	retlw	136
   778     013C  3402               	retlw	2
   779     013D  348C               	retlw	140
   780     013E  3402               	retlw	2
   781     013F  3490               	retlw	144
   782     0140  3402               	retlw	2
   783     0141  3494               	retlw	148
   784     0142  3402               	retlw	2
   785     0143  3498               	retlw	152
   786     0144  3402               	retlw	2
   787     0145  349C               	retlw	156
   788     0146  3402               	retlw	2
   789     0147  34A0               	retlw	160
   790     0148  3402               	retlw	2
   791     0149  34A4               	retlw	164
   792     014A  3402               	retlw	2
   793     014B  34A8               	retlw	168
   794     014C  3402               	retlw	2
   795     014D  34AC               	retlw	172
   796     014E  3402               	retlw	2
   797     014F  34B0               	retlw	176
   798     0150  3402               	retlw	2
   799     0151  34B4               	retlw	180
   800     0152  3402               	retlw	2
   801     0153  34B8               	retlw	184
   802     0154  3402               	retlw	2
   803     0155  34BC               	retlw	188
   804     0156  3402               	retlw	2
   805     0157  34C0               	retlw	192
   806     0158  3402               	retlw	2
   807     0159  34C4               	retlw	196
   808     015A  3402               	retlw	2
   809     015B  34C8               	retlw	200
   810     015C  3402               	retlw	2
   811     015D  34CC               	retlw	204
   812     015E  3402               	retlw	2
   813     015F  34D0               	retlw	208
   814     0160  3402               	retlw	2
   815     0161  34D4               	retlw	212
   816     0162  3402               	retlw	2
   817     0163  34D8               	retlw	216
   818     0164  3402               	retlw	2
   819     0165  34DC               	retlw	220
   820     0166  3402               	retlw	2
   821     0167  34E0               	retlw	224
   822     0168  3402               	retlw	2
   823     0169  34E4               	retlw	228
   824     016A  3402               	retlw	2
   825     016B  34E8               	retlw	232
   826     016C  3402               	retlw	2
   827     016D  34EC               	retlw	236
   828     016E  3402               	retlw	2
   829     016F  34F0               	retlw	240
   830     0170  3402               	retlw	2
   831     0171  34F4               	retlw	244
   832     0172  3402               	retlw	2
   833     0173  34F8               	retlw	248
   834     0174  3402               	retlw	2
   835     0175  34FB               	retlw	251
   836     0176  3402               	retlw	2
   837     0177  34FF               	retlw	255
   838     0178  3402               	retlw	2
   839     0179  3403               	retlw	3
   840     017A  3403               	retlw	3
   841     017B  3407               	retlw	7
   842     017C  3403               	retlw	3
   843     017D  340B               	retlw	11
   844     017E  3403               	retlw	3
   845     017F  340F               	retlw	15
   846     0180  3403               	retlw	3
   847     0181  3413               	retlw	19
   848     0182  3403               	retlw	3
   849     0183  3417               	retlw	23
   850     0184  3403               	retlw	3
   851     0185  341B               	retlw	27
   852     0186  3403               	retlw	3
   853     0187  341F               	retlw	31
   854     0188  3403               	retlw	3
   855     0189  3423               	retlw	35
   856     018A  3403               	retlw	3
   857     018B  3427               	retlw	39
   858     018C  3403               	retlw	3
   859     018D  342B               	retlw	43
   860     018E  3403               	retlw	3
   861     018F  342F               	retlw	47
   862     0190  3403               	retlw	3
   863     0191  3433               	retlw	51
   864     0192  3403               	retlw	3
   865     0193  3437               	retlw	55
   866     0194  3403               	retlw	3
   867     0195  343B               	retlw	59
   868     0196  3403               	retlw	3
   869     0197  343F               	retlw	63
   870     0198  3403               	retlw	3
   871     0199  3443               	retlw	67
   872     019A  3403               	retlw	3
   873     019B  3447               	retlw	71
   874     019C  3403               	retlw	3
   875     019D  344B               	retlw	75
   876     019E  3403               	retlw	3
   877     019F  344F               	retlw	79
   878     01A0  3403               	retlw	3
   879     01A1  3453               	retlw	83
   880     01A2  3403               	retlw	3
   881     01A3  3457               	retlw	87
   882     01A4  3403               	retlw	3
   883     01A5  345B               	retlw	91
   884     01A6  3403               	retlw	3
   885     01A7  345F               	retlw	95
   886     01A8  3403               	retlw	3
   887     01A9  3463               	retlw	99
   888     01AA  3403               	retlw	3
   889     01AB  3467               	retlw	103
   890     01AC  3403               	retlw	3
   891     01AD  346B               	retlw	107
   892     01AE  3403               	retlw	3
   893     01AF  346F               	retlw	111
   894     01B0  3403               	retlw	3
   895     01B1  3473               	retlw	115
   896     01B2  3403               	retlw	3
   897     01B3  3477               	retlw	119
   898     01B4  3403               	retlw	3
   899     01B5  347B               	retlw	123
   900     01B6  3403               	retlw	3
   901     01B7  347F               	retlw	127
   902     01B8  3403               	retlw	3
   903     01B9  3483               	retlw	131
   904     01BA  3403               	retlw	3
   905     01BB  3487               	retlw	135
   906     01BC  3403               	retlw	3
   907     01BD  348B               	retlw	139
   908     01BE  3403               	retlw	3
   909     01BF  348F               	retlw	143
   910     01C0  3403               	retlw	3
   911     01C1  3493               	retlw	147
   912     01C2  3403               	retlw	3
   913     01C3  3497               	retlw	151
   914     01C4  3403               	retlw	3
   915     01C5  349B               	retlw	155
   916     01C6  3403               	retlw	3
   917     01C7  349F               	retlw	159
   918     01C8  3403               	retlw	3
   919     01C9  34A3               	retlw	163
   920     01CA  3403               	retlw	3
   921     01CB  34A7               	retlw	167
   922     01CC  3403               	retlw	3
   923     01CD  34AB               	retlw	171
   924     01CE  3403               	retlw	3
   925     01CF  34AF               	retlw	175
   926     01D0  3403               	retlw	3
   927     01D1  34B3               	retlw	179
   928     01D2  3403               	retlw	3
   929     01D3  34B7               	retlw	183
   930     01D4  3403               	retlw	3
   931     01D5  34BB               	retlw	187
   932     01D6  3403               	retlw	3
   933     01D7  34BF               	retlw	191
   934     01D8  3403               	retlw	3
   935     01D9  34C3               	retlw	195
   936     01DA  3403               	retlw	3
   937     01DB  34C7               	retlw	199
   938     01DC  3403               	retlw	3
   939     01DD  34CB               	retlw	203
   940     01DE  3403               	retlw	3
   941     01DF  34CF               	retlw	207
   942     01E0  3403               	retlw	3
   943     01E1  34D3               	retlw	211
   944     01E2  3403               	retlw	3
   945     01E3  34D7               	retlw	215
   946     01E4  3403               	retlw	3
   947     01E5  34DB               	retlw	219
   948     01E6  3403               	retlw	3
   949     01E7  34DF               	retlw	223
   950     01E8  3403               	retlw	3
   951     01E9  34E3               	retlw	227
   952     01EA  3403               	retlw	3
   953     01EB  34E7               	retlw	231
   954     01EC  3403               	retlw	3
   955     01ED  34EB               	retlw	235
   956     01EE  3403               	retlw	3
   957     01EF  34EF               	retlw	239
   958     01F0  3403               	retlw	3
   959     01F1  34F3               	retlw	243
   960     01F2  3403               	retlw	3
   961     01F3  34F7               	retlw	247
   962     01F4  3403               	retlw	3
   963     01F5  34FB               	retlw	251
   964     01F6  3403               	retlw	3
   965     01F7  34FF               	retlw	255
   966     01F8  3403               	retlw	3
   967     01F9                     __end_of_tri_table_one_quadrant:
   968                           
   969                           	psect	stringtext2
   970     01F9                     __pstringtext2:
   971     01F9                     _sine_table_one_quadrant:
   972     01F9  3400               	retlw	0
   973     01FA  3402               	retlw	2
   974     01FB  3406               	retlw	6
   975     01FC  3402               	retlw	2
   976     01FD  340C               	retlw	12
   977     01FE  3402               	retlw	2
   978     01FF  3412               	retlw	18
   979     0200  3402               	retlw	2
   980     0201  3419               	retlw	25
   981     0202  3402               	retlw	2
   982     0203  341F               	retlw	31
   983     0204  3402               	retlw	2
   984     0205  3425               	retlw	37
   985     0206  3402               	retlw	2
   986     0207  342B               	retlw	43
   987     0208  3402               	retlw	2
   988     0209  3432               	retlw	50
   989     020A  3402               	retlw	2
   990     020B  3438               	retlw	56
   991     020C  3402               	retlw	2
   992     020D  343E               	retlw	62
   993     020E  3402               	retlw	2
   994     020F  3444               	retlw	68
   995     0210  3402               	retlw	2
   996     0211  344B               	retlw	75
   997     0212  3402               	retlw	2
   998     0213  3451               	retlw	81
   999     0214  3402               	retlw	2
  1000     0215  3457               	retlw	87
  1001     0216  3402               	retlw	2
  1002     0217  345D               	retlw	93
  1003     0218  3402               	retlw	2
  1004     0219  3463               	retlw	99
  1005     021A  3402               	retlw	2
  1006     021B  3469               	retlw	105
  1007     021C  3402               	retlw	2
  1008     021D  3470               	retlw	112
  1009     021E  3402               	retlw	2
  1010     021F  3476               	retlw	118
  1011     0220  3402               	retlw	2
  1012     0221  347C               	retlw	124
  1013     0222  3402               	retlw	2
  1014     0223  3482               	retlw	130
  1015     0224  3402               	retlw	2
  1016     0225  3488               	retlw	136
  1017     0226  3402               	retlw	2
  1018     0227  348E               	retlw	142
  1019     0228  3402               	retlw	2
  1020     0229  3494               	retlw	148
  1021     022A  3402               	retlw	2
  1022     022B  349A               	retlw	154
  1023     022C  3402               	retlw	2
  1024     022D  34A0               	retlw	160
  1025     022E  3402               	retlw	2
  1026     022F  34A6               	retlw	166
  1027     0230  3402               	retlw	2
  1028     0231  34AC               	retlw	172
  1029     0232  3402               	retlw	2
  1030     0233  34B2               	retlw	178
  1031     0234  3402               	retlw	2
  1032     0235  34B8               	retlw	184
  1033     0236  3402               	retlw	2
  1034     0237  34BD               	retlw	189
  1035     0238  3402               	retlw	2
  1036     0239  34C3               	retlw	195
  1037     023A  3402               	retlw	2
  1038     023B  34C9               	retlw	201
  1039     023C  3402               	retlw	2
  1040     023D  34CF               	retlw	207
  1041     023E  3402               	retlw	2
  1042     023F  34D5               	retlw	213
  1043     0240  3402               	retlw	2
  1044     0241  34DA               	retlw	218
  1045     0242  3402               	retlw	2
  1046     0243  34E0               	retlw	224
  1047     0244  3402               	retlw	2
  1048     0245  34E5               	retlw	229
  1049     0246  3402               	retlw	2
  1050     0247  34EB               	retlw	235
  1051     0248  3402               	retlw	2
  1052     0249  34F1               	retlw	241
  1053     024A  3402               	retlw	2
  1054     024B  34F6               	retlw	246
  1055     024C  3402               	retlw	2
  1056     024D  34FC               	retlw	252
  1057     024E  3402               	retlw	2
  1058     024F  3401               	retlw	1
  1059     0250  3403               	retlw	3
  1060     0251  3406               	retlw	6
  1061     0252  3403               	retlw	3
  1062     0253  340C               	retlw	12
  1063     0254  3403               	retlw	3
  1064     0255  3411               	retlw	17
  1065     0256  3403               	retlw	3
  1066     0257  3416               	retlw	22
  1067     0258  3403               	retlw	3
  1068     0259  341C               	retlw	28
  1069     025A  3403               	retlw	3
  1070     025B  3421               	retlw	33
  1071     025C  3403               	retlw	3
  1072     025D  3426               	retlw	38
  1073     025E  3403               	retlw	3
  1074     025F  342B               	retlw	43
  1075     0260  3403               	retlw	3
  1076     0261  3430               	retlw	48
  1077     0262  3403               	retlw	3
  1078     0263  3435               	retlw	53
  1079     0264  3403               	retlw	3
  1080     0265  343A               	retlw	58
  1081     0266  3403               	retlw	3
  1082     0267  343F               	retlw	63
  1083     0268  3403               	retlw	3
  1084     0269  3444               	retlw	68
  1085     026A  3403               	retlw	3
  1086     026B  3449               	retlw	73
  1087     026C  3403               	retlw	3
  1088     026D  344E               	retlw	78
  1089     026E  3403               	retlw	3
  1090     026F  3452               	retlw	82
  1091     0270  3403               	retlw	3
  1092     0271  3457               	retlw	87
  1093     0272  3403               	retlw	3
  1094     0273  345C               	retlw	92
  1095     0274  3403               	retlw	3
  1096     0275  3460               	retlw	96
  1097     0276  3403               	retlw	3
  1098     0277  3465               	retlw	101
  1099     0278  3403               	retlw	3
  1100     0279  3469               	retlw	105
  1101     027A  3403               	retlw	3
  1102     027B  346E               	retlw	110
  1103     027C  3403               	retlw	3
  1104     027D  3472               	retlw	114
  1105     027E  3403               	retlw	3
  1106     027F  3476               	retlw	118
  1107     0280  3403               	retlw	3
  1108     0281  347A               	retlw	122
  1109     0282  3403               	retlw	3
  1110     0283  347F               	retlw	127
  1111     0284  3403               	retlw	3
  1112     0285  3483               	retlw	131
  1113     0286  3403               	retlw	3
  1114     0287  3487               	retlw	135
  1115     0288  3403               	retlw	3
  1116     0289  348B               	retlw	139
  1117     028A  3403               	retlw	3
  1118     028B  348F               	retlw	143
  1119     028C  3403               	retlw	3
  1120     028D  3493               	retlw	147
  1121     028E  3403               	retlw	3
  1122     028F  3497               	retlw	151
  1123     0290  3403               	retlw	3
  1124     0291  349A               	retlw	154
  1125     0292  3403               	retlw	3
  1126     0293  349E               	retlw	158
  1127     0294  3403               	retlw	3
  1128     0295  34A2               	retlw	162
  1129     0296  3403               	retlw	3
  1130     0297  34A5               	retlw	165
  1131     0298  3403               	retlw	3
  1132     0299  34A9               	retlw	169
  1133     029A  3403               	retlw	3
  1134     029B  34AC               	retlw	172
  1135     029C  3403               	retlw	3
  1136     029D  34B0               	retlw	176
  1137     029E  3403               	retlw	3
  1138     029F  34B3               	retlw	179
  1139     02A0  3403               	retlw	3
  1140     02A1  34B6               	retlw	182
  1141     02A2  3403               	retlw	3
  1142     02A3  34B9               	retlw	185
  1143     02A4  3403               	retlw	3
  1144     02A5  34BD               	retlw	189
  1145     02A6  3403               	retlw	3
  1146     02A7  34C0               	retlw	192
  1147     02A8  3403               	retlw	3
  1148     02A9  34C3               	retlw	195
  1149     02AA  3403               	retlw	3
  1150     02AB  34C6               	retlw	198
  1151     02AC  3403               	retlw	3
  1152     02AD  34C8               	retlw	200
  1153     02AE  3403               	retlw	3
  1154     02AF  34CB               	retlw	203
  1155     02B0  3403               	retlw	3
  1156     02B1  34CE               	retlw	206
  1157     02B2  3403               	retlw	3
  1158     02B3  34D1               	retlw	209
  1159     02B4  3403               	retlw	3
  1160     02B5  34D3               	retlw	211
  1161     02B6  3403               	retlw	3
  1162     02B7  34D6               	retlw	214
  1163     02B8  3403               	retlw	3
  1164     02B9  34D8               	retlw	216
  1165     02BA  3403               	retlw	3
  1166     02BB  34DA               	retlw	218
  1167     02BC  3403               	retlw	3
  1168     02BD  34DD               	retlw	221
  1169     02BE  3403               	retlw	3
  1170     02BF  34DF               	retlw	223
  1171     02C0  3403               	retlw	3
  1172     02C1  34E1               	retlw	225
  1173     02C2  3403               	retlw	3
  1174     02C3  34E3               	retlw	227
  1175     02C4  3403               	retlw	3
  1176     02C5  34E5               	retlw	229
  1177     02C6  3403               	retlw	3
  1178     02C7  34E7               	retlw	231
  1179     02C8  3403               	retlw	3
  1180     02C9  34E9               	retlw	233
  1181     02CA  3403               	retlw	3
  1182     02CB  34EB               	retlw	235
  1183     02CC  3403               	retlw	3
  1184     02CD  34EC               	retlw	236
  1185     02CE  3403               	retlw	3
  1186     02CF  34EE               	retlw	238
  1187     02D0  3403               	retlw	3
  1188     02D1  34F0               	retlw	240
  1189     02D2  3403               	retlw	3
  1190     02D3  34F1               	retlw	241
  1191     02D4  3403               	retlw	3
  1192     02D5  34F3               	retlw	243
  1193     02D6  3403               	retlw	3
  1194     02D7  34F4               	retlw	244
  1195     02D8  3403               	retlw	3
  1196     02D9  34F5               	retlw	245
  1197     02DA  3403               	retlw	3
  1198     02DB  34F6               	retlw	246
  1199     02DC  3403               	retlw	3
  1200     02DD  34F7               	retlw	247
  1201     02DE  3403               	retlw	3
  1202     02DF  34F9               	retlw	249
  1203     02E0  3403               	retlw	3
  1204     02E1  34F9               	retlw	249
  1205     02E2  3403               	retlw	3
  1206     02E3  34FA               	retlw	250
  1207     02E4  3403               	retlw	3
  1208     02E5  34FB               	retlw	251
  1209     02E6  3403               	retlw	3
  1210     02E7  34FC               	retlw	252
  1211     02E8  3403               	retlw	3
  1212     02E9  34FD               	retlw	253
  1213     02EA  3403               	retlw	3
  1214     02EB  34FD               	retlw	253
  1215     02EC  3403               	retlw	3
  1216     02ED  34FE               	retlw	254
  1217     02EE  3403               	retlw	3
  1218     02EF  34FE               	retlw	254
  1219     02F0  3403               	retlw	3
  1220     02F1  34FE               	retlw	254
  1221     02F2  3403               	retlw	3
  1222     02F3  34FF               	retlw	255
  1223     02F4  3403               	retlw	3
  1224     02F5  34FF               	retlw	255
  1225     02F6  3403               	retlw	3
  1226     02F7  34FF               	retlw	255
  1227     02F8  3403               	retlw	3
  1228     02F9  34FF               	retlw	255
  1229     02FA  3403               	retlw	3
  1230     02FB                     __end_of_sine_table_one_quadrant:
  1231                           
  1232                           	psect	stringtext3
  1233     0676                     __pstringtext3:
  1234     0676                     _prescaler_bits:
  1235     0676  3407               	retlw	7
  1236     0677  3406               	retlw	6
  1237     0678  3405               	retlw	5
  1238     0679  3404               	retlw	4
  1239     067A  3403               	retlw	3
  1240     067B  3402               	retlw	2
  1241     067C  3401               	retlw	1
  1242     067D  3400               	retlw	0
  1243     067E                     __end_of_prescaler_bits:
  1244                           
  1245                           	psect	stringtext4
  1246     06A2                     __pstringtext4:
  1247     06A2                     _NO:
  1248     06A2  3400               	retlw	0
  1249     06A3                     __end_of_NO:
  1250                           
  1251                           	psect	stringtext5
  1252     06A3                     __pstringtext5:
  1253     06A3                     _YES:
  1254     06A3  3401               	retlw	1
  1255     06A4                     __end_of_YES:
  1256                           
  1257                           	psect	stringtext6
  1258     06A4                     __pstringtext6:
  1259     06A4                     _DONT_CARE:
  1260     06A4  3404               	retlw	4
  1261     06A5                     __end_of_DONT_CARE:
  1262                           
  1263                           	psect	stringtext7
  1264     06A5                     __pstringtext7:
  1265     06A5                     _DIVIDE_BY_FOUR:
  1266     06A5  3403               	retlw	3
  1267     06A6                     __end_of_DIVIDE_BY_FOUR:
  1268                           
  1269                           	psect	stringtext8
  1270     06A6                     __pstringtext8:
  1271     06A6                     _MULTIPLY_BY_TWO:
  1272     06A6  3402               	retlw	2
  1273     06A7                     __end_of_MULTIPLY_BY_TWO:
  1274                           
  1275                           	psect	stringtext9
  1276     06A7                     __pstringtext9:
  1277     06A7                     _DIVIDE_BY_TWO:
  1278     06A7  3401               	retlw	1
  1279     06A8                     __end_of_DIVIDE_BY_TWO:
  1280                           
  1281                           	psect	stringtext10
  1282     06A8                     __pstringtext10:
  1283     06A8                     _DO_NOTHING:
  1284     06A8  3400               	retlw	0
  1285     06A9                     __end_of_DO_NOTHING:
  1286                           
  1287                           	psect	stringtext11
  1288     06A9                     __pstringtext11:
  1289     06A9                     _NEGATIVE:
  1290     06A9  3400               	retlw	0
  1291     06AA                     __end_of_NEGATIVE:
  1292                           
  1293                           	psect	stringtext12
  1294     06AA                     __pstringtext12:
  1295     06AA                     _POSITIVE:
  1296     06AA  3401               	retlw	1
  1297     06AB                     __end_of_POSITIVE:
  1298                           
  1299                           	psect	stringtext13
  1300     06AB                     __pstringtext13:
  1301     06AB                     _symmetry_adc_config_value:
  1302     06AB  3407               	retlw	7
  1303     06AC                     __end_of_symmetry_adc_config_value:
  1304                           
  1305                           	psect	stringtext14
  1306     06AC                     __pstringtext14:
  1307     06AC                     _depth_adc_config_value:
  1308     06AC  3406               	retlw	6
  1309     06AD                     __end_of_depth_adc_config_value:
  1310                           
  1311                           	psect	stringtext15
  1312     06AD                     __pstringtext15:
  1313     06AD                     _speed_adc_config_value:
  1314     06AD  3405               	retlw	5
  1315     06AE                     __end_of_speed_adc_config_value:
  1316                           
  1317                           	psect	stringtext16
  1318     06AE                     __pstringtext16:
  1319     06AE                     _waveshape_adc_config_value:
  1320     06AE  3404               	retlw	4
  1321     06AF                     __end_of_waveshape_adc_config_value:
  1322     001C                     _T2CON	set	28
  1323     001B                     _PR2	set	27
  1324     0015                     _TMR0	set	21
  1325     00E2                     _TMR2ON	set	226
  1326     005D                     _TMR0IE	set	93
  1327     0089                     _TMR2IF	set	137
  1328     005F                     _GIE	set	95
  1329     005A                     _TMR0IF	set	90
  1330     0095                     _OPTION_REG	set	149
  1331     009B                     _ADRESL	set	155
  1332     009C                     _ADRESH	set	156
  1333     009D                     _ADCON0	set	157
  1334     009E                     _ADCON1	set	158
  1335     008E                     _TRISC	set	142
  1336     0098                     _OSCTUNE	set	152
  1337     0099                     _OSCCON	set	153
  1338     0462                     _TRISA2	set	1122
  1339     04E9                     _GO_nDONE	set	1257
  1340     04E8                     _ADON	set	1256
  1341     088F                     _C1ON	set	2191
  1342     08D7                     _SRLEN	set	2263
  1343     0875                     _LATC5	set	2165
  1344     018E                     _ANSELC	set	398
  1345     020E                     _WPUC	set	526
  1346     029E                     _CCPTMRS0	set	670
  1347     0311                     _CCPR3L	set	785
  1348     0313                     _CCP3CON	set	787
  1349                           
  1350                           	psect	cinit
  1351     00DF                     start_initialization:	
  1352                           ; #config settings
  1353                           
  1354     00DF                     __initialization:
  1355                           
  1356                           ; Initialize objects allocated to BANK0
  1357     00DF  3186  269E  3180   	fcall	__pidataBANK0	;fetch initializer
  1358     00E2  00D3               	movwf	__pdataBANK0& (0+127)
  1359     00E3  3186  269F  3180   	fcall	__pidataBANK0+1	;fetch initializer
  1360     00E6  00D4               	movwf	(__pdataBANK0+1)& (0+127)
  1361                           
  1362                           ; Clear objects allocated to COMMON
  1363     00E7  01F6               	clrf	__pbssCOMMON& (0+127)
  1364     00E8  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
  1365     00E9  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
  1366     00EA  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
  1367     00EB  01FA               	clrf	(__pbssCOMMON+4)& (0+127)
  1368                           
  1369                           ; Clear objects allocated to BANK0
  1370     00EC  3020               	movlw	low __pbssBANK0
  1371     00ED  0084               	movwf	4
  1372     00EE  3000               	movlw	high __pbssBANK0
  1373     00EF  0085               	movwf	5
  1374     00F0  3020               	movlw	32
  1375     00F1  3186  2686         	fcall	clear_ram0
  1376     00F3                     end_of_initialization:	
  1377                           ;End of C runtime variable initialization code
  1378                           
  1379     00F3                     __end_of__initialization:
  1380     00F3  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1381     00F4  0020               	movlb	0
  1382     00F5  3186  2E1A         	ljmp	_main	;jump to C main() function
  1383                           
  1384                           	psect	bssCOMMON
  1385     0076                     __pbssCOMMON:
  1386     0076                     _current_halfcycle:
  1387     0076                     	ds	1
  1388     0077                     _current_one_quadrant_index:
  1389     0077                     	ds	1
  1390     0078                     _current_waveshape:
  1391     0078                     	ds	1
  1392     0079                     _duty:
  1393     0079                     	ds	2
  1394                           
  1395                           	psect	bssBANK0
  1396     0020                     __pbssBANK0:
  1397     0020                     _speed_control_32:
  1398     0020                     	ds	4
  1399     0024                     _current_speed_linear_32:
  1400     0024                     	ds	4
  1401     0028                     _raw_TMR0:
  1402     0028                     	ds	3
  1403     002B                     _current_symmetry:
  1404     002B                     	ds	3
  1405     002E                     _final_TMR0:
  1406     002E                     	ds	3
  1407     0031                     _speed_control:
  1408     0031                     	ds	2
  1409     0033                     _current_speed_linear:
  1410     0033                     	ds	2
  1411     0035                     _current_depth:
  1412     0035                     	ds	2
  1413     0037                     _prescaler_final_index:
  1414     0037                     	ds	1
  1415     0038                     _prescaler_overflow_flag:
  1416     0038                     	ds	1
  1417     0039                     _symmetry_status:
  1418     0039                     	ds	1
  1419     003A                     _base_prescaler_bits_index:
  1420     003A                     	ds	1
  1421     003B                     _prescaler_adjust:
  1422     003B                     	ds	1
  1423     003C                     _how_many_128:
  1424     003C                     	ds	1
  1425     003D                     _duty_high_byte:
  1426     003D                     	ds	1
  1427     003E                     _duty_low_byte:
  1428     003E                     	ds	1
  1429     003F                     _current_quadrant:
  1430     003F                     	ds	1
  1431                           
  1432                           	psect	dataBANK0
  1433     0053                     __pdataBANK0:
  1434     0053                     _top_two_bytes_ptr:
  1435     0053                     	ds	2
  1436                           
  1437                           	psect	clrtext
  1438     0686                     clear_ram0:	
  1439                           ;	Called with FSR0 containing the base address, and
  1440                           ;	WREG with the size to clear
  1441                           
  1442     0686  0064               	clrwdt	;clear the watchdog before getting into this loop
  1443     0687                     clrloop0:
  1444     0687  0180               	clrf	0	;clear RAM location pointed to by FSR
  1445     0688  3101               	addfsr 0,1
  1446     0689  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1447     068A  2E87               	goto	clrloop0	;have we reached the end yet?
  1448     068B  3400               	retlw	0	;all done for this memory range, return
  1449                           
  1450                           	psect	cstackCOMMON
  1451     0070                     __pcstackCOMMON:
  1452     0070                     ?_SET_DUTY_CCP3:
  1453     0070                     ??_SET_DUTY_CCP3:	
  1454                           ; 1 bytes @ 0x0
  1455                           
  1456     0070                     ?_CONFIG_SYSTEM:	
  1457                           ; 1 bytes @ 0x0
  1458                           
  1459     0070                     ?_TURN_ON_CCP3_PWM:	
  1460                           ; 1 bytes @ 0x0
  1461                           
  1462     0070                     ?_CONFIG_TMR0_INTERRUPT:	
  1463                           ; 1 bytes @ 0x0
  1464                           
  1465     0070                     ?_GET_CURRENT_POT_VALUES:	
  1466                           ; 1 bytes @ 0x0
  1467                           
  1468     0070                     ?_PROCESS_RAW_SPEED_AND_PRESCALER:	
  1469                           ; 1 bytes @ 0x0
  1470                           
  1471     0070                     ?_PROCESS_TMR0_AND_PRESCALER_ADJUST:	
  1472                           ; 1 bytes @ 0x0
  1473                           
  1474     0070                     ?_INTERRUPT_InterruptManager:	
  1475                           ; 1 bytes @ 0x0
  1476                           
  1477     0070                     ?_main:	
  1478                           ; 1 bytes @ 0x0
  1479                           
  1480     0070                     ?_CONFIG_INT_OSC:	
  1481                           ; 1 bytes @ 0x0
  1482                           
  1483     0070                     ?_CONFIG_PORTS:	
  1484                           ; 1 bytes @ 0x0
  1485                           
  1486     0070                     ?_CONFIG_ADC_PINS:	
  1487                           ; 1 bytes @ 0x0
  1488                           
  1489     0070                     ?_CONFIG_PWM_CCP3:	
  1490                           ; 1 bytes @ 0x0
  1491                           
  1492     0070                     ?_DETERMINE_WAVESHAPE:	
  1493                           ; 1 bytes @ 0x0
  1494                           
  1495     0070                     ?_CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1:	
  1496                           ; 1 bytes @ 0x0
  1497                           
  1498     0070                     ?_TURN_PRESCALER_OFF:	
  1499                           ; 1 bytes @ 0x0
  1500                           
  1501     0070                     ?_TURN_PRESCALER_ON:	
  1502                           ; 1 bytes @ 0x0
  1503                           
  1504     0070                     ?_ADJUST_AND_SET_PRESCALER:	
  1505                           ; 1 bytes @ 0x0
  1506                           
  1507     0070                     ?_SHORTEN_PERIOD:	
  1508                           ; 1 bytes @ 0x0
  1509                           
  1510     0070                     ?_LENGTHEN_PERIOD:	
  1511                           ; 1 bytes @ 0x0
  1512                           
  1513                           
  1514                           ; 1 bytes @ 0x0
  1515     0070                     	ds	2
  1516     0072                     SET_DUTY_CCP3@temp:
  1517                           
  1518                           ; 1 bytes @ 0x2
  1519     0072                     	ds	1
  1520     0073                     SET_DUTY_CCP3@duty_ptr:
  1521                           
  1522                           ; 1 bytes @ 0x3
  1523     0073                     	ds	1
  1524     0074                     ??_INTERRUPT_InterruptManager:
  1525                           
  1526                           ; 1 bytes @ 0x4
  1527     0074                     	ds	2
  1528                           
  1529                           	psect	cstackBANK0
  1530     0040                     __pcstackBANK0:
  1531     0040                     ??_CONFIG_SYSTEM:
  1532     0040                     ??_TURN_ON_CCP3_PWM:	
  1533                           ; 1 bytes @ 0x0
  1534                           
  1535     0040                     ??_CONFIG_TMR0_INTERRUPT:	
  1536                           ; 1 bytes @ 0x0
  1537                           
  1538     0040                     ??_CONFIG_INT_OSC:	
  1539                           ; 1 bytes @ 0x0
  1540                           
  1541     0040                     ??_CONFIG_PORTS:	
  1542                           ; 1 bytes @ 0x0
  1543                           
  1544     0040                     ??_CONFIG_ADC_PINS:	
  1545                           ; 1 bytes @ 0x0
  1546                           
  1547     0040                     ??_CONFIG_PWM_CCP3:	
  1548                           ; 1 bytes @ 0x0
  1549                           
  1550     0040                     ??_CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1:	
  1551                           ; 1 bytes @ 0x0
  1552                           
  1553     0040                     ??_TURN_PRESCALER_OFF:	
  1554                           ; 1 bytes @ 0x0
  1555                           
  1556     0040                     ??_TURN_PRESCALER_ON:	
  1557                           ; 1 bytes @ 0x0
  1558                           
  1559     0040                     ?_DO_ADC:	
  1560                           ; 1 bytes @ 0x0
  1561                           
  1562     0040                     ?___tmul:	
  1563                           ; 2 bytes @ 0x0
  1564                           
  1565     0040                     ?___lmul:	
  1566                           ; 3 bytes @ 0x0
  1567                           
  1568     0040                     DO_ADC@modifier:	
  1569                           ; 4 bytes @ 0x0
  1570                           
  1571     0040                     ___tmul@multiplier:	
  1572                           ; 2 bytes @ 0x0
  1573                           
  1574     0040                     ___lmul@multiplier:	
  1575                           ; 3 bytes @ 0x0
  1576                           
  1577                           
  1578                           ; 4 bytes @ 0x0
  1579     0040                     	ds	2
  1580     0042                     ??_DO_ADC:
  1581                           
  1582                           ; 1 bytes @ 0x2
  1583     0042                     	ds	1
  1584     0043                     ??_ADJUST_AND_SET_PRESCALER:
  1585     0043                     DO_ADC@adc_result:	
  1586                           ; 1 bytes @ 0x3
  1587                           
  1588     0043                     ___tmul@multiplicand:	
  1589                           ; 2 bytes @ 0x3
  1590                           
  1591                           
  1592                           ; 3 bytes @ 0x3
  1593     0043                     	ds	1
  1594     0044                     ___lmul@multiplicand:
  1595                           
  1596                           ; 4 bytes @ 0x4
  1597     0044                     	ds	1
  1598     0045                     DO_ADC@temp:
  1599                           
  1600                           ; 1 bytes @ 0x5
  1601     0045                     	ds	1
  1602     0046                     ??_DETERMINE_WAVESHAPE:
  1603     0046                     ??___tmul:	
  1604                           ; 1 bytes @ 0x6
  1605                           
  1606     0046                     DETERMINE_WAVESHAPE@ADC:	
  1607                           ; 1 bytes @ 0x6
  1608                           
  1609     0046                     ___tmul@product:	
  1610                           ; 2 bytes @ 0x6
  1611                           
  1612                           
  1613                           ; 3 bytes @ 0x6
  1614     0046                     	ds	2
  1615     0048                     ??_GET_CURRENT_POT_VALUES:
  1616     0048                     ??___lmul:	
  1617                           ; 1 bytes @ 0x8
  1618                           
  1619     0048                     ___lmul@product:	
  1620                           ; 1 bytes @ 0x8
  1621                           
  1622                           
  1623                           ; 4 bytes @ 0x8
  1624     0048                     	ds	1
  1625     0049                     ??_SHORTEN_PERIOD:
  1626     0049                     ??_LENGTHEN_PERIOD:	
  1627                           ; 1 bytes @ 0x9
  1628                           
  1629                           
  1630                           ; 1 bytes @ 0x9
  1631     0049                     	ds	3
  1632     004C                     ??_PROCESS_RAW_SPEED_AND_PRESCALER:
  1633     004C                     SHORTEN_PERIOD@twofiftysix_minus_TMR0_final:	
  1634                           ; 1 bytes @ 0xC
  1635                           
  1636     004C                     _LENGTHEN_PERIOD$852:	
  1637                           ; 3 bytes @ 0xC
  1638                           
  1639                           
  1640                           ; 3 bytes @ 0xC
  1641     004C                     	ds	3
  1642     004F                     LENGTHEN_PERIOD@twofiftysix_minus_TMR0_final:
  1643     004F                     _SHORTEN_PERIOD$851:	
  1644                           ; 3 bytes @ 0xF
  1645                           
  1646                           
  1647                           ; 3 bytes @ 0xF
  1648     004F                     	ds	1
  1649     0050                     PROCESS_RAW_SPEED_AND_PRESCALER@speed_control_subtracted:
  1650                           
  1651                           ; 2 bytes @ 0x10
  1652     0050                     	ds	2
  1653     0052                     ??_PROCESS_TMR0_AND_PRESCALER_ADJUST:
  1654     0052                     PROCESS_TMR0_AND_PRESCALER_ADJUST@symmetry_status:	
  1655                           ; 1 bytes @ 0x12
  1656                           
  1657                           
  1658                           ; 1 bytes @ 0x12
  1659     0052                     	ds	1
  1660     0053                     ??_main:
  1661                           
  1662                           	psect	maintext
  1663     061A                     __pmaintext:	
  1664                           ; 1 bytes @ 0x13
  1665 ;;
  1666 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1667 ;;
  1668 ;; *************** function _main *****************
  1669 ;; Defined at:
  1670 ;;		line 127 in file "main.c"
  1671 ;; Parameters:    Size  Location     Type
  1672 ;;		None
  1673 ;; Auto vars:     Size  Location     Type
  1674 ;;		None
  1675 ;; Return value:  Size  Location     Type
  1676 ;;                  1    wreg      void 
  1677 ;; Registers used:
  1678 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1679 ;; Tracked objects:
  1680 ;;		On entry : B1F/0
  1681 ;;		On exit  : 1F/0
  1682 ;;		Unchanged: 0/0
  1683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1684 ;;      Params:         0       0       0       0
  1685 ;;      Locals:         0       0       0       0
  1686 ;;      Temps:          0       0       0       0
  1687 ;;      Totals:         0       0       0       0
  1688 ;;Total ram usage:        0 bytes
  1689 ;; Hardware stack levels required when called: 5
  1690 ;; This function calls:
  1691 ;;		_CONFIG_SYSTEM
  1692 ;;		_CONFIG_TMR0_INTERRUPT
  1693 ;;		_GET_CURRENT_POT_VALUES
  1694 ;;		_PROCESS_RAW_SPEED_AND_PRESCALER
  1695 ;;		_PROCESS_TMR0_AND_PRESCALER_ADJUST
  1696 ;;		_TURN_ON_CCP3_PWM
  1697 ;; This function is called by:
  1698 ;;		Startup code after reset
  1699 ;; This function uses a non-reentrant model
  1700 ;;
  1701                           
  1702     061A                     _main:	
  1703                           ;psect for function _main
  1704                           
  1705                           
  1706                           ;main.c: 129:     CONFIG_SYSTEM();
  1707                           
  1708                           ;incstack = 0
  1709                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1710     061A  3186  2661  3186   	fcall	_CONFIG_SYSTEM
  1711                           
  1712                           ;main.c: 130:     TURN_ON_CCP3_PWM();
  1713     061D  3186  267E  3186   	fcall	_TURN_ON_CCP3_PWM
  1714                           
  1715                           ;main.c: 131:     CONFIG_TMR0_INTERRUPT();
  1716     0620  3186  26A0  3186   	fcall	_CONFIG_TMR0_INTERRUPT
  1717                           
  1718                           ;main.c: 132:     GET_CURRENT_POT_VALUES();
  1719     0623  3185  250D  3186   	fcall	_GET_CURRENT_POT_VALUES
  1720                           
  1721                           ;main.c: 133:     PROCESS_RAW_SPEED_AND_PRESCALER();
  1722     0626  3183  2378  3186   	fcall	_PROCESS_RAW_SPEED_AND_PRESCALER
  1723                           
  1724                           ;main.c: 134:     PROCESS_TMR0_AND_PRESCALER_ADJUST();
  1725     0629  3183  23F4  3186   	fcall	_PROCESS_TMR0_AND_PRESCALER_ADJUST
  1726                           
  1727                           ;main.c: 135:     TMR0 = (uint8_t)final_TMR0;
  1728     062C  082E               	movf	_final_TMR0,w	;volatile
  1729     062D  0095               	movwf	21	;volatile
  1730                           
  1731                           ;main.c: 136:     GIE = 1;
  1732     062E  178B               	bsf	11,7	;volatile
  1733     062F                     l1607:
  1734                           
  1735                           ;main.c: 139:         GET_CURRENT_POT_VALUES();
  1736     062F  3185  250D  3186   	fcall	_GET_CURRENT_POT_VALUES
  1737                           
  1738                           ;main.c: 140:         PROCESS_RAW_SPEED_AND_PRESCALER();
  1739     0632  3183  2378  3186   	fcall	_PROCESS_RAW_SPEED_AND_PRESCALER
  1740                           
  1741                           ;main.c: 141:         PROCESS_TMR0_AND_PRESCALER_ADJUST();
  1742     0635  3183  23F4  3186   	fcall	_PROCESS_TMR0_AND_PRESCALER_ADJUST
  1743     0638  2E2F               	goto	l1607
  1744     0639                     __end_of_main:
  1745                           
  1746                           	psect	text1
  1747     067E                     __ptext1:	
  1748 ;; *************** function _TURN_ON_CCP3_PWM *****************
  1749 ;; Defined at:
  1750 ;;		line 73 in file "config.c"
  1751 ;; Parameters:    Size  Location     Type
  1752 ;;		None
  1753 ;; Auto vars:     Size  Location     Type
  1754 ;;		None
  1755 ;; Return value:  Size  Location     Type
  1756 ;;                  1    wreg      unsigned char 
  1757 ;; Registers used:
  1758 ;;		None
  1759 ;; Tracked objects:
  1760 ;;		On entry : B1F/0
  1761 ;;		On exit  : B1F/1
  1762 ;;		Unchanged: B00/0
  1763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1764 ;;      Params:         0       0       0       0
  1765 ;;      Locals:         0       0       0       0
  1766 ;;      Temps:          0       0       0       0
  1767 ;;      Totals:         0       0       0       0
  1768 ;;Total ram usage:        0 bytes
  1769 ;; Hardware stack levels used: 1
  1770 ;; Hardware stack levels required when called: 2
  1771 ;; This function calls:
  1772 ;;		Nothing
  1773 ;; This function is called by:
  1774 ;;		_main
  1775 ;; This function uses a non-reentrant model
  1776 ;;
  1777                           
  1778     067E                     _TURN_ON_CCP3_PWM:	
  1779                           ;psect for function _TURN_ON_CCP3_PWM
  1780                           
  1781                           
  1782                           ;config.c: 75:     TMR2IF = 0;
  1783                           
  1784                           ;incstack = 0
  1785                           ; Regs used in _TURN_ON_CCP3_PWM: []
  1786     067E  1091               	bcf	17,1	;volatile
  1787                           
  1788                           ;config.c: 76:     TMR2ON = 1;
  1789     067F  151C               	bsf	28,2	;volatile
  1790     0680                     l175:	
  1791                           ;config.c: 77:     while(TMR2IF == 0){}
  1792                           
  1793     0680  1C91               	btfss	17,1	;volatile
  1794     0681  2E80               	goto	l175
  1795                           
  1796                           ;config.c: 78:     TMR2IF = 0;
  1797     0682  1091               	bcf	17,1	;volatile
  1798                           
  1799                           ;config.c: 79:     TRISA2 = 0;
  1800     0683  0021               	movlb	1	; select bank1
  1801     0684  110C               	bcf	12,2	;volatile
  1802                           
  1803                           ;config.c: 80:     return 1;;	Return value of _TURN_ON_CCP3_PWM is never used
  1804     0685  0008               	return
  1805     0686                     __end_of_TURN_ON_CCP3_PWM:
  1806                           
  1807                           	psect	text2
  1808     03F4                     __ptext2:	
  1809 ;; *************** function _PROCESS_TMR0_AND_PRESCALER_ADJUST *****************
  1810 ;; Defined at:
  1811 ;;		line 188 in file "system.c"
  1812 ;; Parameters:    Size  Location     Type
  1813 ;;		None
  1814 ;; Auto vars:     Size  Location     Type
  1815 ;;  symmetry_sta    1   18[BANK0 ] unsigned char 
  1816 ;; Return value:  Size  Location     Type
  1817 ;;                  1    wreg      unsigned char 
  1818 ;; Registers used:
  1819 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1820 ;; Tracked objects:
  1821 ;;		On entry : 1F/0
  1822 ;;		On exit  : 1F/0
  1823 ;;		Unchanged: 0/0
  1824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1825 ;;      Params:         0       0       0       0
  1826 ;;      Locals:         0       1       0       0
  1827 ;;      Temps:          0       0       0       0
  1828 ;;      Totals:         0       1       0       0
  1829 ;;Total ram usage:        1 bytes
  1830 ;; Hardware stack levels used: 1
  1831 ;; Hardware stack levels required when called: 4
  1832 ;; This function calls:
  1833 ;;		_ADJUST_AND_SET_PRESCALER
  1834 ;;		_LENGTHEN_PERIOD
  1835 ;;		_SHORTEN_PERIOD
  1836 ;; This function is called by:
  1837 ;;		_main
  1838 ;; This function uses a non-reentrant model
  1839 ;;
  1840                           
  1841     03F4                     _PROCESS_TMR0_AND_PRESCALER_ADJUST:	
  1842                           ;psect for function _PROCESS_TMR0_AND_PRESCALER_ADJUST
  1843                           
  1844                           
  1845                           ;system.c: 190:         if(current_symmetry == 128){
  1846                           
  1847                           ;incstack = 0
  1848                           ; Regs used in _PROCESS_TMR0_AND_PRESCALER_ADJUST: [wreg-fsr0h+status,2+status,0+pclath+
      +                          cstack]
  1849     03F4  3080               	movlw	128
  1850     03F5  062B               	xorwf	_current_symmetry,w	;volatile
  1851     03F6  042C               	iorwf	_current_symmetry+1,w	;volatile
  1852     03F7  042D               	iorwf	_current_symmetry+2,w	;volatile
  1853     03F8  1D03               	btfss	3,2
  1854     03F9  2C03               	goto	l1495
  1855                           
  1856                           ;system.c: 191:             final_TMR0 = raw_TMR0;
  1857     03FA  0020               	movlb	0	; select bank0
  1858     03FB  0828               	movf	_raw_TMR0,w	;volatile
  1859     03FC  00AE               	movwf	_final_TMR0	;volatile
  1860     03FD  0829               	movf	_raw_TMR0+1,w	;volatile
  1861     03FE  00AF               	movwf	_final_TMR0+1	;volatile
  1862     03FF  082A               	movf	_raw_TMR0+2,w	;volatile
  1863     0400  00B0               	movwf	_final_TMR0+2	;volatile
  1864     0401  01BB               	clrf	_prescaler_adjust	;volatile
  1865                           
  1866                           ;system.c: 193:         }
  1867     0402  2C3D               	goto	l1525
  1868     0403                     l1495:
  1869                           
  1870                           ;system.c: 195:         uint8_t symmetry_status = 0;
  1871     0403  0020               	movlb	0	; select bank0
  1872     0404  01D2               	clrf	PROCESS_TMR0_AND_PRESCALER_ADJUST@symmetry_status
  1873                           
  1874                           ;system.c: 196:         if(current_symmetry > 128){
  1875     0405  3000               	movlw	0
  1876     0406  022D               	subwf	_current_symmetry+2,w	;volatile
  1877     0407  1D03               	skipz
  1878     0408  2C0F               	goto	u735
  1879     0409  3000               	movlw	0
  1880     040A  022C               	subwf	_current_symmetry+1,w	;volatile
  1881     040B  1D03               	skipz
  1882     040C  2C0F               	goto	u735
  1883     040D  3081               	movlw	129
  1884     040E  022B               	subwf	_current_symmetry,w	;volatile
  1885     040F                     u735:
  1886     040F  1C03               	skipc
  1887     0410  2C20               	goto	l312
  1888                           
  1889                           ;system.c: 197:             current_symmetry = 255 - current_symmetry;
  1890     0411  082B               	movf	_current_symmetry,w	;volatile
  1891     0412  3CFF               	sublw	255
  1892     0413  00AB               	movwf	_current_symmetry	;volatile
  1893     0414  082C               	movf	_current_symmetry+1,w	;volatile
  1894     0415  1C03               	skipc
  1895     0416  0F2C               	incfsz	_current_symmetry+1,w	;volatile
  1896     0417  3C00               	sublw	0
  1897     0418  00AC               	movwf	_current_symmetry+1	;volatile
  1898     0419  082D               	movf	_current_symmetry+2,w	;volatile
  1899     041A  1C03               	skipc
  1900     041B  0F2D               	incfsz	_current_symmetry+2,w	;volatile
  1901     041C  3C00               	sublw	0
  1902     041D  00AD               	movwf	_current_symmetry+2	;volatile
  1903                           
  1904                           ;system.c: 198:             symmetry_status = 1;
  1905     041E  01D2               	clrf	PROCESS_TMR0_AND_PRESCALER_ADJUST@symmetry_status
  1906     041F  0AD2               	incf	PROCESS_TMR0_AND_PRESCALER_ADJUST@symmetry_status,f
  1907     0420                     l312:	
  1908                           ;system.c: 199:         }
  1909                           
  1910                           
  1911                           ;system.c: 201:         if((current_halfcycle == 0) && (symmetry_status == 0)){
  1912     0420  0876               	movf	_current_halfcycle,w	;volatile
  1913     0421  1903               	btfsc	3,2
  1914     0422  0852               	movf	PROCESS_TMR0_AND_PRESCALER_ADJUST@symmetry_status,w
  1915     0423  1903               	btfsc	3,2
  1916     0424  2C3A               	goto	l1505
  1917                           
  1918                           ;system.c: 203:         }
  1919     0425  0876               	movf	_current_halfcycle,w	;volatile
  1920     0426  1D03               	btfss	3,2
  1921     0427  2C2F               	goto	l1513
  1922     0428  0352               	decf	PROCESS_TMR0_AND_PRESCALER_ADJUST@symmetry_status,w
  1923     0429  1D03               	btfss	3,2
  1924     042A  2C2F               	goto	l1513
  1925     042B                     l1511:
  1926                           
  1927                           ;system.c: 205:             LENGTHEN_PERIOD();
  1928     042B  3182  22FB  3183   	fcall	_LENGTHEN_PERIOD
  1929                           
  1930                           ;system.c: 206:         }
  1931     042E  2C3D               	goto	l1525
  1932     042F                     l1513:
  1933     042F  0376               	decf	_current_halfcycle,w	;volatile
  1934     0430  1903               	btfsc	3,2
  1935     0431  0852               	movf	PROCESS_TMR0_AND_PRESCALER_ADJUST@symmetry_status,w
  1936     0432  1903               	btfsc	3,2
  1937     0433  2C2B               	goto	l1511
  1938     0434  0376               	decf	_current_halfcycle,w	;volatile
  1939     0435  1D03               	btfss	3,2
  1940     0436  2C3D               	goto	l1525
  1941     0437  0352               	decf	PROCESS_TMR0_AND_PRESCALER_ADJUST@symmetry_status,w
  1942     0438  1D03               	btfss	3,2
  1943     0439  2C3D               	goto	l1525
  1944     043A                     l1505:
  1945                           
  1946                           ;system.c: 202:             SHORTEN_PERIOD();
  1947     043A  3184  24BE  3183   	fcall	_SHORTEN_PERIOD
  1948     043D                     l1525:
  1949                           
  1950                           ;system.c: 215:         ADJUST_AND_SET_PRESCALER();
  1951     043D  3184  245C  3183   	fcall	_ADJUST_AND_SET_PRESCALER
  1952                           
  1953                           ;system.c: 218:         if(prescaler_overflow_flag == 1){
  1954     0440  0020               	movlb	0	; select bank0
  1955     0441  0338               	decf	_prescaler_overflow_flag,w	;volatile
  1956     0442  1D03               	btfss	3,2
  1957     0443  2C4E               	goto	l1531
  1958                           
  1959                           ;system.c: 219:             final_TMR0 = final_TMR0 + 2;
  1960     0444  3002               	movlw	2
  1961     0445  072E               	addwf	_final_TMR0,w	;volatile
  1962     0446  00AE               	movwf	_final_TMR0	;volatile
  1963     0447  3000               	movlw	0
  1964     0448  3D2F               	addwfc	_final_TMR0+1,w	;volatile
  1965     0449  00AF               	movwf	_final_TMR0+1	;volatile
  1966     044A  3000               	movlw	0
  1967     044B  3D30               	addwfc	_final_TMR0+2,w	;volatile
  1968     044C  00B0               	movwf	_final_TMR0+2	;volatile
  1969                           
  1970                           ;system.c: 220:         }
  1971     044D  0008               	return
  1972     044E                     l1531:
  1973     044E  3007               	movlw	7
  1974     044F  0637               	xorwf	_prescaler_final_index,w	;volatile
  1975     0450  1D03               	btfss	3,2
  1976     0451  0008               	return
  1977                           
  1978                           ;system.c: 222:             final_TMR0 = final_TMR0 + 1;
  1979     0452  3001               	movlw	1
  1980     0453  072E               	addwf	_final_TMR0,w	;volatile
  1981     0454  00AE               	movwf	_final_TMR0	;volatile
  1982     0455  3000               	movlw	0
  1983     0456  3D2F               	addwfc	_final_TMR0+1,w	;volatile
  1984     0457  00AF               	movwf	_final_TMR0+1	;volatile
  1985     0458  3000               	movlw	0
  1986     0459  3D30               	addwfc	_final_TMR0+2,w	;volatile
  1987     045A  00B0               	movwf	_final_TMR0+2	;volatile
  1988     045B  0008               	return
  1989     045C                     __end_of_PROCESS_TMR0_AND_PRESCALER_ADJUST:
  1990                           
  1991                           	psect	text3
  1992     04BE                     __ptext3:	
  1993 ;; *************** function _SHORTEN_PERIOD *****************
  1994 ;; Defined at:
  1995 ;;		line 158 in file "system.c"
  1996 ;; Parameters:    Size  Location     Type
  1997 ;;		None
  1998 ;; Auto vars:     Size  Location     Type
  1999 ;;  twofiftysix_    3   12[BANK0 ] unsigned um
  2000 ;; Return value:  Size  Location     Type
  2001 ;;                  1    wreg      unsigned char 
  2002 ;; Registers used:
  2003 ;;		wreg, status,2, status,0, pclath, cstack
  2004 ;; Tracked objects:
  2005 ;;		On entry : 1F/0
  2006 ;;		On exit  : 1F/0
  2007 ;;		Unchanged: 0/0
  2008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2009 ;;      Params:         0       0       0       0
  2010 ;;      Locals:         0       6       0       0
  2011 ;;      Temps:          0       3       0       0
  2012 ;;      Totals:         0       9       0       0
  2013 ;;Total ram usage:        9 bytes
  2014 ;; Hardware stack levels used: 1
  2015 ;; Hardware stack levels required when called: 3
  2016 ;; This function calls:
  2017 ;;		___tmul
  2018 ;; This function is called by:
  2019 ;;		_PROCESS_TMR0_AND_PRESCALER_ADJUST
  2020 ;; This function uses a non-reentrant model
  2021 ;;
  2022                           
  2023     04BE                     _SHORTEN_PERIOD:	
  2024                           ;psect for function _SHORTEN_PERIOD
  2025                           
  2026                           
  2027                           ;system.c: 160:             uint24_t twofiftysix_minus_TMR0_final = (((256-raw_TMR0) * (
      +                          1024 +(24*current_symmetry))) >> 12);
  2028                           
  2029                           ;incstack = 0
  2030                           ; Regs used in _SHORTEN_PERIOD: [wreg+status,2+status,0+pclath+cstack]
  2031     04BE  082B               	movf	_current_symmetry,w	;volatile
  2032     04BF  00C0               	movwf	___tmul@multiplier
  2033     04C0  082C               	movf	_current_symmetry+1,w	;volatile
  2034     04C1  00C1               	movwf	___tmul@multiplier+1
  2035     04C2  082D               	movf	_current_symmetry+2,w	;volatile
  2036     04C3  00C2               	movwf	___tmul@multiplier+2
  2037     04C4  3018               	movlw	24
  2038     04C5  00C3               	movwf	___tmul@multiplicand
  2039     04C6  3000               	movlw	0
  2040     04C7  00C4               	movwf	___tmul@multiplicand+1
  2041     04C8  3000               	movlw	0
  2042     04C9  00C5               	movwf	___tmul@multiplicand+2
  2043     04CA  3185  25D4  3184   	fcall	___tmul
  2044     04CD  3000               	movlw	0
  2045     04CE  0740               	addwf	?___tmul,w
  2046     04CF  00CF               	movwf	_SHORTEN_PERIOD$851	;volatile
  2047     04D0  3004               	movlw	4
  2048     04D1  3D41               	addwfc	?___tmul+1,w
  2049     04D2  00D0               	movwf	_SHORTEN_PERIOD$851+1	;volatile
  2050     04D3  3000               	movlw	0
  2051     04D4  3D42               	addwfc	?___tmul+2,w
  2052     04D5  00D1               	movwf	_SHORTEN_PERIOD$851+2	;volatile
  2053                           
  2054                           ;system.c: 160:             uint24_t twofiftysix_minus_TMR0_final = (((256-raw_TMR0) * (
      +                          1024 +(24*current_symmetry))) >> 12);
  2055     04D6  084F               	movf	_SHORTEN_PERIOD$851,w	;volatile
  2056     04D7  00C0               	movwf	___tmul@multiplier
  2057     04D8  0850               	movf	_SHORTEN_PERIOD$851+1,w	;volatile
  2058     04D9  00C1               	movwf	___tmul@multiplier+1
  2059     04DA  0851               	movf	_SHORTEN_PERIOD$851+2,w	;volatile
  2060     04DB  00C2               	movwf	___tmul@multiplier+2
  2061     04DC  0828               	movf	_raw_TMR0,w	;volatile
  2062     04DD  3C00               	sublw	0
  2063     04DE  00C3               	movwf	___tmul@multiplicand
  2064     04DF  0829               	movf	_raw_TMR0+1,w	;volatile
  2065     04E0  1C03               	skipc
  2066     04E1  0F29               	incfsz	_raw_TMR0+1,w	;volatile
  2067     04E2  3C01               	sublw	1
  2068     04E3  00C4               	movwf	___tmul@multiplicand+1
  2069     04E4  082A               	movf	_raw_TMR0+2,w	;volatile
  2070     04E5  1C03               	skipc
  2071     04E6  0F2A               	incfsz	_raw_TMR0+2,w	;volatile
  2072     04E7  3C00               	sublw	0
  2073     04E8  00C5               	movwf	___tmul@multiplicand+2
  2074     04E9  3185  25D4  3184   	fcall	___tmul
  2075     04EC  0840               	movf	?___tmul,w
  2076     04ED  00C9               	movwf	??_SHORTEN_PERIOD
  2077     04EE  0841               	movf	?___tmul+1,w
  2078     04EF  00CA               	movwf	??_SHORTEN_PERIOD+1
  2079     04F0  0842               	movf	?___tmul+2,w
  2080     04F1  00CB               	movwf	??_SHORTEN_PERIOD+2
  2081     04F2  300C               	movlw	12
  2082     04F3                     u575:
  2083     04F3  36CB               	lsrf	??_SHORTEN_PERIOD+2,f
  2084     04F4  0CCA               	rrf	??_SHORTEN_PERIOD+1,f
  2085     04F5  0CC9               	rrf	??_SHORTEN_PERIOD,f
  2086     04F6  0B89               	decfsz	9,f
  2087     04F7  2CF3               	goto	u575
  2088     04F8  0849               	movf	??_SHORTEN_PERIOD,w
  2089     04F9  00CC               	movwf	SHORTEN_PERIOD@twofiftysix_minus_TMR0_final
  2090     04FA  084A               	movf	??_SHORTEN_PERIOD+1,w
  2091     04FB  00CD               	movwf	SHORTEN_PERIOD@twofiftysix_minus_TMR0_final+1
  2092     04FC  084B               	movf	??_SHORTEN_PERIOD+2,w
  2093     04FD  00CE               	movwf	SHORTEN_PERIOD@twofiftysix_minus_TMR0_final+2
  2094                           
  2095                           ;system.c: 163:         final_TMR0 = (256 - twofiftysix_minus_TMR0_final);
  2096     04FE  084C               	movf	SHORTEN_PERIOD@twofiftysix_minus_TMR0_final,w
  2097     04FF  3C00               	sublw	0
  2098     0500  00AE               	movwf	_final_TMR0	;volatile
  2099     0501  084D               	movf	SHORTEN_PERIOD@twofiftysix_minus_TMR0_final+1,w
  2100     0502  1C03               	skipc
  2101     0503  0F4D               	incfsz	SHORTEN_PERIOD@twofiftysix_minus_TMR0_final+1,w
  2102     0504  3C01               	sublw	1
  2103     0505  00AF               	movwf	_final_TMR0+1	;volatile
  2104     0506  084E               	movf	SHORTEN_PERIOD@twofiftysix_minus_TMR0_final+2,w
  2105     0507  1C03               	skipc
  2106     0508  0F4E               	incfsz	SHORTEN_PERIOD@twofiftysix_minus_TMR0_final+2,w
  2107     0509  3C00               	sublw	0
  2108     050A  00B0               	movwf	_final_TMR0+2	;volatile
  2109     050B  01BB               	clrf	_prescaler_adjust	;volatile
  2110     050C  0008               	return
  2111     050D                     __end_of_SHORTEN_PERIOD:
  2112                           
  2113                           	psect	text4
  2114     02FB                     __ptext4:	
  2115 ;; *************** function _LENGTHEN_PERIOD *****************
  2116 ;; Defined at:
  2117 ;;		line 169 in file "system.c"
  2118 ;; Parameters:    Size  Location     Type
  2119 ;;		None
  2120 ;; Auto vars:     Size  Location     Type
  2121 ;;  twofiftysix_    3   15[BANK0 ] unsigned um
  2122 ;; Return value:  Size  Location     Type
  2123 ;;                  1    wreg      unsigned char 
  2124 ;; Registers used:
  2125 ;;		wreg, status,2, status,0, pclath, cstack
  2126 ;; Tracked objects:
  2127 ;;		On entry : 1F/0
  2128 ;;		On exit  : 1F/0
  2129 ;;		Unchanged: 0/0
  2130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2131 ;;      Params:         0       0       0       0
  2132 ;;      Locals:         0       6       0       0
  2133 ;;      Temps:          0       3       0       0
  2134 ;;      Totals:         0       9       0       0
  2135 ;;Total ram usage:        9 bytes
  2136 ;; Hardware stack levels used: 1
  2137 ;; Hardware stack levels required when called: 3
  2138 ;; This function calls:
  2139 ;;		___tmul
  2140 ;; This function is called by:
  2141 ;;		_PROCESS_TMR0_AND_PRESCALER_ADJUST
  2142 ;; This function uses a non-reentrant model
  2143 ;;
  2144                           
  2145     02FB                     _LENGTHEN_PERIOD:	
  2146                           ;psect for function _LENGTHEN_PERIOD
  2147                           
  2148                           
  2149                           ;system.c: 171:             uint24_t twofiftysix_minus_TMR0_final = (((256-raw_TMR0) * (
      +                          896 -(3*current_symmetry))) >> 9);
  2150                           
  2151                           ;incstack = 0
  2152                           ; Regs used in _LENGTHEN_PERIOD: [wreg+status,2+status,0+pclath+cstack]
  2153     02FB  082B               	movf	_current_symmetry,w	;volatile
  2154     02FC  00C0               	movwf	___tmul@multiplier
  2155     02FD  082C               	movf	_current_symmetry+1,w	;volatile
  2156     02FE  00C1               	movwf	___tmul@multiplier+1
  2157     02FF  082D               	movf	_current_symmetry+2,w	;volatile
  2158     0300  00C2               	movwf	___tmul@multiplier+2
  2159     0301  30FD               	movlw	253
  2160     0302  00C3               	movwf	___tmul@multiplicand
  2161     0303  30FF               	movlw	255
  2162     0304  00C4               	movwf	___tmul@multiplicand+1
  2163     0305  30FF               	movlw	255
  2164     0306  00C5               	movwf	___tmul@multiplicand+2
  2165     0307  3185  25D4  3182   	fcall	___tmul
  2166     030A  3080               	movlw	128
  2167     030B  0740               	addwf	?___tmul,w
  2168     030C  00CC               	movwf	_LENGTHEN_PERIOD$852	;volatile
  2169     030D  3003               	movlw	3
  2170     030E  3D41               	addwfc	?___tmul+1,w
  2171     030F  00CD               	movwf	_LENGTHEN_PERIOD$852+1	;volatile
  2172     0310  3000               	movlw	0
  2173     0311  3D42               	addwfc	?___tmul+2,w
  2174     0312  00CE               	movwf	_LENGTHEN_PERIOD$852+2	;volatile
  2175                           
  2176                           ;system.c: 171:             uint24_t twofiftysix_minus_TMR0_final = (((256-raw_TMR0) * (
      +                          896 -(3*current_symmetry))) >> 9);
  2177     0313  084C               	movf	_LENGTHEN_PERIOD$852,w	;volatile
  2178     0314  00C0               	movwf	___tmul@multiplier
  2179     0315  084D               	movf	_LENGTHEN_PERIOD$852+1,w	;volatile
  2180     0316  00C1               	movwf	___tmul@multiplier+1
  2181     0317  084E               	movf	_LENGTHEN_PERIOD$852+2,w	;volatile
  2182     0318  00C2               	movwf	___tmul@multiplier+2
  2183     0319  0828               	movf	_raw_TMR0,w	;volatile
  2184     031A  3C00               	sublw	0
  2185     031B  00C3               	movwf	___tmul@multiplicand
  2186     031C  0829               	movf	_raw_TMR0+1,w	;volatile
  2187     031D  1C03               	skipc
  2188     031E  0F29               	incfsz	_raw_TMR0+1,w	;volatile
  2189     031F  3C01               	sublw	1
  2190     0320  00C4               	movwf	___tmul@multiplicand+1
  2191     0321  082A               	movf	_raw_TMR0+2,w	;volatile
  2192     0322  1C03               	skipc
  2193     0323  0F2A               	incfsz	_raw_TMR0+2,w	;volatile
  2194     0324  3C00               	sublw	0
  2195     0325  00C5               	movwf	___tmul@multiplicand+2
  2196     0326  3185  25D4  3182   	fcall	___tmul
  2197     0329  0840               	movf	?___tmul,w
  2198     032A  00C9               	movwf	??_LENGTHEN_PERIOD
  2199     032B  0841               	movf	?___tmul+1,w
  2200     032C  00CA               	movwf	??_LENGTHEN_PERIOD+1
  2201     032D  0842               	movf	?___tmul+2,w
  2202     032E  00CB               	movwf	??_LENGTHEN_PERIOD+2
  2203     032F  3009               	movlw	9
  2204     0330                     u585:
  2205     0330  36CB               	lsrf	??_LENGTHEN_PERIOD+2,f
  2206     0331  0CCA               	rrf	??_LENGTHEN_PERIOD+1,f
  2207     0332  0CC9               	rrf	??_LENGTHEN_PERIOD,f
  2208     0333  0B89               	decfsz	9,f
  2209     0334  2B30               	goto	u585
  2210     0335  0849               	movf	??_LENGTHEN_PERIOD,w
  2211     0336  00CF               	movwf	LENGTHEN_PERIOD@twofiftysix_minus_TMR0_final
  2212     0337  084A               	movf	??_LENGTHEN_PERIOD+1,w
  2213     0338  00D0               	movwf	LENGTHEN_PERIOD@twofiftysix_minus_TMR0_final+1
  2214     0339  084B               	movf	??_LENGTHEN_PERIOD+2,w
  2215     033A  00D1               	movwf	LENGTHEN_PERIOD@twofiftysix_minus_TMR0_final+2
  2216                           
  2217                           ;system.c: 174:         if(twofiftysix_minus_TMR0_final > 256){
  2218     033B  3000               	movlw	0
  2219     033C  0251               	subwf	LENGTHEN_PERIOD@twofiftysix_minus_TMR0_final+2,w
  2220     033D  1D03               	skipz
  2221     033E  2B45               	goto	u595
  2222     033F  3001               	movlw	1
  2223     0340  0250               	subwf	LENGTHEN_PERIOD@twofiftysix_minus_TMR0_final+1,w
  2224     0341  1D03               	skipz
  2225     0342  2B45               	goto	u595
  2226     0343  3001               	movlw	1
  2227     0344  024F               	subwf	LENGTHEN_PERIOD@twofiftysix_minus_TMR0_final,w
  2228     0345                     u595:
  2229     0345  1C03               	skipc
  2230     0346  2B69               	goto	l1429
  2231                           
  2232                           ;system.c: 175:             twofiftysix_minus_TMR0_final = (twofiftysix_minus_TMR0_final
      +                           >> 1);
  2233     0347  084F               	movf	LENGTHEN_PERIOD@twofiftysix_minus_TMR0_final,w
  2234     0348  00C9               	movwf	??_LENGTHEN_PERIOD
  2235     0349  0850               	movf	LENGTHEN_PERIOD@twofiftysix_minus_TMR0_final+1,w
  2236     034A  00CA               	movwf	??_LENGTHEN_PERIOD+1
  2237     034B  0851               	movf	LENGTHEN_PERIOD@twofiftysix_minus_TMR0_final+2,w
  2238     034C  00CB               	movwf	??_LENGTHEN_PERIOD+2
  2239     034D  3001               	movlw	1
  2240     034E                     u605:
  2241     034E  36CB               	lsrf	??_LENGTHEN_PERIOD+2,f
  2242     034F  0CCA               	rrf	??_LENGTHEN_PERIOD+1,f
  2243     0350  0CC9               	rrf	??_LENGTHEN_PERIOD,f
  2244     0351  0B89               	decfsz	9,f
  2245     0352  2B4E               	goto	u605
  2246     0353  0849               	movf	??_LENGTHEN_PERIOD,w
  2247     0354  00CF               	movwf	LENGTHEN_PERIOD@twofiftysix_minus_TMR0_final
  2248     0355  084A               	movf	??_LENGTHEN_PERIOD+1,w
  2249     0356  00D0               	movwf	LENGTHEN_PERIOD@twofiftysix_minus_TMR0_final+1
  2250     0357  084B               	movf	??_LENGTHEN_PERIOD+2,w
  2251     0358  00D1               	movwf	LENGTHEN_PERIOD@twofiftysix_minus_TMR0_final+2
  2252                           
  2253                           ;system.c: 176:             final_TMR0 = (256 - twofiftysix_minus_TMR0_final);
  2254     0359  084F               	movf	LENGTHEN_PERIOD@twofiftysix_minus_TMR0_final,w
  2255     035A  3C00               	sublw	0
  2256     035B  00AE               	movwf	_final_TMR0	;volatile
  2257     035C  0850               	movf	LENGTHEN_PERIOD@twofiftysix_minus_TMR0_final+1,w
  2258     035D  1C03               	skipc
  2259     035E  0F50               	incfsz	LENGTHEN_PERIOD@twofiftysix_minus_TMR0_final+1,w
  2260     035F  3C01               	sublw	1
  2261     0360  00AF               	movwf	_final_TMR0+1	;volatile
  2262     0361  0851               	movf	LENGTHEN_PERIOD@twofiftysix_minus_TMR0_final+2,w
  2263     0362  1C03               	skipc
  2264     0363  0F51               	incfsz	LENGTHEN_PERIOD@twofiftysix_minus_TMR0_final+2,w
  2265     0364  3C00               	sublw	0
  2266     0365  00B0               	movwf	_final_TMR0+2	;volatile
  2267     0366  3002               	movlw	2
  2268     0367  00BB               	movwf	_prescaler_adjust	;volatile
  2269                           
  2270                           ;system.c: 178:         }
  2271     0368  0008               	return
  2272     0369                     l1429:
  2273                           
  2274                           ;system.c: 180:             final_TMR0 = 256 - twofiftysix_minus_TMR0_final;
  2275     0369  084F               	movf	LENGTHEN_PERIOD@twofiftysix_minus_TMR0_final,w
  2276     036A  3C00               	sublw	0
  2277     036B  00AE               	movwf	_final_TMR0	;volatile
  2278     036C  0850               	movf	LENGTHEN_PERIOD@twofiftysix_minus_TMR0_final+1,w
  2279     036D  1C03               	skipc
  2280     036E  0F50               	incfsz	LENGTHEN_PERIOD@twofiftysix_minus_TMR0_final+1,w
  2281     036F  3C01               	sublw	1
  2282     0370  00AF               	movwf	_final_TMR0+1	;volatile
  2283     0371  0851               	movf	LENGTHEN_PERIOD@twofiftysix_minus_TMR0_final+2,w
  2284     0372  1C03               	skipc
  2285     0373  0F51               	incfsz	LENGTHEN_PERIOD@twofiftysix_minus_TMR0_final+2,w
  2286     0374  3C00               	sublw	0
  2287     0375  00B0               	movwf	_final_TMR0+2	;volatile
  2288     0376  01BB               	clrf	_prescaler_adjust	;volatile
  2289     0377  0008               	return
  2290     0378                     __end_of_LENGTHEN_PERIOD:
  2291                           
  2292                           	psect	text5
  2293     05D4                     __ptext5:	
  2294 ;; *************** function ___tmul *****************
  2295 ;; Defined at:
  2296 ;;		line 15 in file "/Applications/microchip/xc8/v2.45/pic/sources/c99/common/Umul24.c"
  2297 ;; Parameters:    Size  Location     Type
  2298 ;;  multiplier      3    0[BANK0 ] unsigned um
  2299 ;;  multiplicand    3    3[BANK0 ] unsigned um
  2300 ;; Auto vars:     Size  Location     Type
  2301 ;;  product         3    6[BANK0 ] unsigned um
  2302 ;; Return value:  Size  Location     Type
  2303 ;;                  3    0[BANK0 ] unsigned um
  2304 ;; Registers used:
  2305 ;;		wreg, status,2, status,0
  2306 ;; Tracked objects:
  2307 ;;		On entry : 1F/0
  2308 ;;		On exit  : 1F/0
  2309 ;;		Unchanged: 0/0
  2310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2311 ;;      Params:         0       6       0       0
  2312 ;;      Locals:         0       3       0       0
  2313 ;;      Temps:          0       0       0       0
  2314 ;;      Totals:         0       9       0       0
  2315 ;;Total ram usage:        9 bytes
  2316 ;; Hardware stack levels used: 1
  2317 ;; Hardware stack levels required when called: 2
  2318 ;; This function calls:
  2319 ;;		Nothing
  2320 ;; This function is called by:
  2321 ;;		_SHORTEN_PERIOD
  2322 ;;		_LENGTHEN_PERIOD
  2323 ;; This function uses a non-reentrant model
  2324 ;;
  2325                           
  2326     05D4                     ___tmul:	
  2327                           ;psect for function ___tmul
  2328                           
  2329                           
  2330                           ;incstack = 0
  2331                           ; Regs used in ___tmul: [wreg+status,2+status,0]
  2332     05D4  3000               	movlw	0
  2333     05D5  00C6               	movwf	___tmul@product
  2334     05D6  3000               	movlw	0
  2335     05D7  00C7               	movwf	___tmul@product+1
  2336     05D8  3000               	movlw	0
  2337     05D9  00C8               	movwf	___tmul@product+2
  2338     05DA                     l1295:
  2339     05DA  1C40               	btfss	___tmul@multiplier,0
  2340     05DB  2DE2               	goto	l1299
  2341     05DC  0843               	movf	___tmul@multiplicand,w
  2342     05DD  07C6               	addwf	___tmul@product,f
  2343     05DE  0844               	movf	___tmul@multiplicand+1,w
  2344     05DF  3DC7               	addwfc	___tmul@product+1,f
  2345     05E0  0845               	movf	___tmul@multiplicand+2,w
  2346     05E1  3DC8               	addwfc	___tmul@product+2,f
  2347     05E2                     l1299:
  2348     05E2  3001               	movlw	1
  2349     05E3                     u455:
  2350     05E3  35C3               	lslf	___tmul@multiplicand,f
  2351     05E4  0DC4               	rlf	___tmul@multiplicand+1,f
  2352     05E5  0DC5               	rlf	___tmul@multiplicand+2,f
  2353     05E6  0B89               	decfsz	9,f
  2354     05E7  2DE3               	goto	u455
  2355     05E8  3001               	movlw	1
  2356     05E9                     u465:
  2357     05E9  36C2               	lsrf	___tmul@multiplier+2,f
  2358     05EA  0CC1               	rrf	___tmul@multiplier+1,f
  2359     05EB  0CC0               	rrf	___tmul@multiplier,f
  2360     05EC  0B89               	decfsz	9,f
  2361     05ED  2DE9               	goto	u465
  2362     05EE  0842               	movf	___tmul@multiplier+2,w
  2363     05EF  0441               	iorwf	___tmul@multiplier+1,w
  2364     05F0  0440               	iorwf	___tmul@multiplier,w
  2365     05F1  1D03               	skipz
  2366     05F2  2DDA               	goto	l1295
  2367     05F3  0846               	movf	___tmul@product,w
  2368     05F4  00C0               	movwf	?___tmul
  2369     05F5  0847               	movf	___tmul@product+1,w
  2370     05F6  00C1               	movwf	?___tmul+1
  2371     05F7  0848               	movf	___tmul@product+2,w
  2372     05F8  00C2               	movwf	?___tmul+2
  2373     05F9  0008               	return
  2374     05FA                     __end_of___tmul:
  2375                           
  2376                           	psect	text6
  2377     045C                     __ptext6:	
  2378 ;; *************** function _ADJUST_AND_SET_PRESCALER *****************
  2379 ;; Defined at:
  2380 ;;		line 121 in file "system.c"
  2381 ;; Parameters:    Size  Location     Type
  2382 ;;		None
  2383 ;; Auto vars:     Size  Location     Type
  2384 ;;		None
  2385 ;; Return value:  Size  Location     Type
  2386 ;;                  1    wreg      unsigned char 
  2387 ;; Registers used:
  2388 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2389 ;; Tracked objects:
  2390 ;;		On entry : 1F/0
  2391 ;;		On exit  : 1E/0
  2392 ;;		Unchanged: 0/0
  2393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2394 ;;      Params:         0       0       0       0
  2395 ;;      Locals:         0       0       0       0
  2396 ;;      Temps:          0       0       0       0
  2397 ;;      Totals:         0       0       0       0
  2398 ;;Total ram usage:        0 bytes
  2399 ;; Hardware stack levels used: 1
  2400 ;; Hardware stack levels required when called: 3
  2401 ;; This function calls:
  2402 ;;		_CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1
  2403 ;;		_TURN_PRESCALER_OFF
  2404 ;;		_TURN_PRESCALER_ON
  2405 ;; This function is called by:
  2406 ;;		_PROCESS_TMR0_AND_PRESCALER_ADJUST
  2407 ;; This function uses a non-reentrant model
  2408 ;;
  2409                           
  2410     045C                     _ADJUST_AND_SET_PRESCALER:	
  2411                           ;psect for function _ADJUST_AND_SET_PRESCALER
  2412                           
  2413                           
  2414                           ;incstack = 0
  2415                           ; Regs used in _ADJUST_AND_SET_PRESCALER: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2416     045C  033B               	decf	_prescaler_adjust,w	;volatile
  2417     045D  1D03               	btfss	3,2
  2418     045E  2C7C               	goto	l1381
  2419                           
  2420                           ;system.c: 123:         prescaler_overflow_flag = CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1();
  2421     045F  3186  2639  3184   	fcall	_CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1
  2422     0462  0020               	movlb	0	; select bank0
  2423     0463  00B8               	movwf	_prescaler_overflow_flag	;volatile
  2424                           
  2425                           ;system.c: 124:             if(prescaler_overflow_flag){
  2426     0464  0838               	movf	_prescaler_overflow_flag,w	;volatile
  2427     0465  1903               	btfsc	3,2
  2428     0466  2C6A               	goto	l1375
  2429     0467                     l1369:
  2430                           
  2431                           ;system.c: 125:                 TURN_PRESCALER_OFF();
  2432     0467  3186  2692         	fcall	_TURN_PRESCALER_OFF
  2433     0469  0008               	return
  2434     046A                     l1375:
  2435                           
  2436                           ;system.c: 129:                 TURN_PRESCALER_ON();
  2437     046A  3186  269B         	fcall	_TURN_PRESCALER_ON
  2438                           
  2439                           ;system.c: 130:                 OPTION_REG = prescaler_bits[base_prescaler_bits_index + 
      +                          1];
  2440     046C  0020               	movlb	0	; select bank0
  2441     046D  083A               	movf	_base_prescaler_bits_index,w	;volatile
  2442     046E  3E77               	addlw	low ((_prescaler_bits+1)| (0+32768))
  2443     046F  0084               	movwf	4
  2444     0470  3086               	movlw	high ((_prescaler_bits+1)| (0+32768))
  2445     0471  1803               	skipnc
  2446     0472  3E01               	addlw	1
  2447     0473  0085               	movwf	5
  2448     0474  0800               	movf	0,w	;code access
  2449     0475  0021               	movlb	1	; select bank1
  2450     0476  0095               	movwf	21	;volatile
  2451                           
  2452                           ;system.c: 131:                 prescaler_final_index = base_prescaler_bits_index + 1;
  2453     0477  0020               	movlb	0	; select bank0
  2454     0478  083A               	movf	_base_prescaler_bits_index,w	;volatile
  2455     0479  3E01               	addlw	1
  2456     047A  00B7               	movwf	_prescaler_final_index	;volatile
  2457     047B  0008               	return
  2458     047C                     l1381:
  2459     047C  3003               	movlw	3
  2460     047D  063B               	xorwf	_prescaler_adjust,w	;volatile
  2461     047E  1D03               	btfss	3,2
  2462     047F  2C9A               	goto	l1399
  2463                           
  2464                           ;system.c: 135:         prescaler_overflow_flag = CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1();
  2465     0480  3186  2639  3184   	fcall	_CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1
  2466     0483  0020               	movlb	0	; select bank0
  2467     0484  00B8               	movwf	_prescaler_overflow_flag	;volatile
  2468                           
  2469                           ;system.c: 136:             if(prescaler_overflow_flag){
  2470     0485  0838               	movf	_prescaler_overflow_flag,w	;volatile
  2471     0486  1D03               	btfss	3,2
  2472     0487  2C67               	goto	l1369
  2473                           
  2474                           ;system.c: 141:                 TURN_PRESCALER_ON();
  2475     0488  3186  269B         	fcall	_TURN_PRESCALER_ON
  2476                           
  2477                           ;system.c: 142:                 OPTION_REG = prescaler_bits[base_prescaler_bits_index + 
      +                          2];
  2478     048A  0020               	movlb	0	; select bank0
  2479     048B  083A               	movf	_base_prescaler_bits_index,w	;volatile
  2480     048C  3E78               	addlw	low ((_prescaler_bits+2)| (0+32768))
  2481     048D  0084               	movwf	4
  2482     048E  3086               	movlw	high ((_prescaler_bits+2)| (0+32768))
  2483     048F  1803               	skipnc
  2484     0490  3E01               	addlw	1
  2485     0491  0085               	movwf	5
  2486     0492  0800               	movf	0,w	;code access
  2487     0493  0021               	movlb	1	; select bank1
  2488     0494  0095               	movwf	21	;volatile
  2489                           
  2490                           ;system.c: 143:                 prescaler_final_index = base_prescaler_bits_index + 1;
  2491     0495  0020               	movlb	0	; select bank0
  2492     0496  083A               	movf	_base_prescaler_bits_index,w	;volatile
  2493     0497  3E01               	addlw	1
  2494     0498  00B7               	movwf	_prescaler_final_index	;volatile
  2495     0499  0008               	return
  2496     049A                     l1399:
  2497     049A  3002               	movlw	2
  2498     049B  063B               	xorwf	_prescaler_adjust,w	;volatile
  2499     049C  1D03               	btfss	3,2
  2500     049D  2CAD               	goto	l1405
  2501                           
  2502                           ;system.c: 147:         OPTION_REG = prescaler_bits[base_prescaler_bits_index - 1];
  2503     049E  083A               	movf	_base_prescaler_bits_index,w	;volatile
  2504     049F  3E75               	addlw	low ((_prescaler_bits+65535)| (0+32768))
  2505     04A0  0084               	movwf	4
  2506     04A1  3086               	movlw	high ((_prescaler_bits+65535)| (0+32768))
  2507     04A2  1803               	skipnc
  2508     04A3  3E01               	addlw	1
  2509     04A4  0085               	movwf	5
  2510     04A5  0800               	movf	0,w	;code access
  2511     04A6  0021               	movlb	1	; select bank1
  2512     04A7  0095               	movwf	21	;volatile
  2513                           
  2514                           ;system.c: 148:         prescaler_final_index = base_prescaler_bits_index - 1;
  2515     04A8  0020               	movlb	0	; select bank0
  2516     04A9  083A               	movf	_base_prescaler_bits_index,w	;volatile
  2517     04AA  3EFF               	addlw	255
  2518     04AB  00B7               	movwf	_prescaler_final_index	;volatile
  2519                           
  2520                           ;system.c: 149:     }
  2521     04AC  0008               	return
  2522     04AD                     l1405:
  2523     04AD  083B               	movf	_prescaler_adjust,w	;volatile
  2524     04AE  1D03               	btfss	3,2
  2525     04AF  0008               	return
  2526                           
  2527                           ;system.c: 151:         OPTION_REG = prescaler_bits[base_prescaler_bits_index];
  2528     04B0  083A               	movf	_base_prescaler_bits_index,w	;volatile
  2529     04B1  3E76               	addlw	low (_prescaler_bits| (0+32768))
  2530     04B2  0084               	movwf	4
  2531     04B3  3086               	movlw	high (_prescaler_bits| (0+32768))
  2532     04B4  1803               	skipnc
  2533     04B5  3E01               	addlw	1
  2534     04B6  0085               	movwf	5
  2535     04B7  0800               	movf	0,w	;code access
  2536     04B8  0021               	movlb	1	; select bank1
  2537     04B9  0095               	movwf	21	;volatile
  2538                           
  2539                           ;system.c: 152:         prescaler_final_index = base_prescaler_bits_index;
  2540     04BA  0020               	movlb	0	; select bank0
  2541     04BB  083A               	movf	_base_prescaler_bits_index,w	;volatile
  2542     04BC  00B7               	movwf	_prescaler_final_index	;volatile
  2543     04BD  0008               	return
  2544     04BE                     __end_of_ADJUST_AND_SET_PRESCALER:
  2545                           
  2546                           	psect	text7
  2547     069B                     __ptext7:	
  2548 ;; *************** function _TURN_PRESCALER_ON *****************
  2549 ;; Defined at:
  2550 ;;		line 115 in file "system.c"
  2551 ;; Parameters:    Size  Location     Type
  2552 ;;		None
  2553 ;; Auto vars:     Size  Location     Type
  2554 ;;		None
  2555 ;; Return value:  Size  Location     Type
  2556 ;;                  1    wreg      unsigned char 
  2557 ;; Registers used:
  2558 ;;		status,2
  2559 ;; Tracked objects:
  2560 ;;		On entry : 1F/0
  2561 ;;		On exit  : 1F/1
  2562 ;;		Unchanged: 0/0
  2563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2564 ;;      Params:         0       0       0       0
  2565 ;;      Locals:         0       0       0       0
  2566 ;;      Temps:          0       0       0       0
  2567 ;;      Totals:         0       0       0       0
  2568 ;;Total ram usage:        0 bytes
  2569 ;; Hardware stack levels used: 1
  2570 ;; Hardware stack levels required when called: 2
  2571 ;; This function calls:
  2572 ;;		Nothing
  2573 ;; This function is called by:
  2574 ;;		_ADJUST_AND_SET_PRESCALER
  2575 ;; This function uses a non-reentrant model
  2576 ;;
  2577                           
  2578     069B                     _TURN_PRESCALER_ON:	
  2579                           ;psect for function _TURN_PRESCALER_ON
  2580                           
  2581                           
  2582                           ;system.c: 116:     OPTION_REG = OPTION_REG & (0<<3);
  2583                           
  2584                           ;incstack = 0
  2585                           ; Regs used in _TURN_PRESCALER_ON: [status,2]
  2586     069B  0021               	movlb	1	; select bank1
  2587     069C  0195               	clrf	21	;volatile
  2588     069D  0008               	return
  2589     069E                     __end_of_TURN_PRESCALER_ON:
  2590                           
  2591                           	psect	text8
  2592     0692                     __ptext8:	
  2593 ;; *************** function _TURN_PRESCALER_OFF *****************
  2594 ;; Defined at:
  2595 ;;		line 109 in file "system.c"
  2596 ;; Parameters:    Size  Location     Type
  2597 ;;		None
  2598 ;; Auto vars:     Size  Location     Type
  2599 ;;		None
  2600 ;; Return value:  Size  Location     Type
  2601 ;;                  1    wreg      unsigned char 
  2602 ;; Registers used:
  2603 ;;		wreg, status,2
  2604 ;; Tracked objects:
  2605 ;;		On entry : 1F/0
  2606 ;;		On exit  : 1F/1
  2607 ;;		Unchanged: 0/0
  2608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2609 ;;      Params:         0       0       0       0
  2610 ;;      Locals:         0       0       0       0
  2611 ;;      Temps:          0       0       0       0
  2612 ;;      Totals:         0       0       0       0
  2613 ;;Total ram usage:        0 bytes
  2614 ;; Hardware stack levels used: 1
  2615 ;; Hardware stack levels required when called: 2
  2616 ;; This function calls:
  2617 ;;		Nothing
  2618 ;; This function is called by:
  2619 ;;		_ADJUST_AND_SET_PRESCALER
  2620 ;; This function uses a non-reentrant model
  2621 ;;
  2622                           
  2623     0692                     _TURN_PRESCALER_OFF:	
  2624                           ;psect for function _TURN_PRESCALER_OFF
  2625                           
  2626                           
  2627                           ;system.c: 110:     OPTION_REG = OPTION_REG & (1<<3);
  2628                           
  2629                           ;incstack = 0
  2630                           ; Regs used in _TURN_PRESCALER_OFF: [wreg+status,2]
  2631     0692  0021               	movlb	1	; select bank1
  2632     0693  0815               	movf	21,w	;volatile
  2633     0694  3908               	andlw	8
  2634     0695  0095               	movwf	21	;volatile
  2635     0696  0008               	return
  2636     0697                     __end_of_TURN_PRESCALER_OFF:
  2637                           
  2638                           	psect	text9
  2639     0639                     __ptext9:	
  2640 ;; *************** function _CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1 *****************
  2641 ;; Defined at:
  2642 ;;		line 98 in file "system.c"
  2643 ;; Parameters:    Size  Location     Type
  2644 ;;		None
  2645 ;; Auto vars:     Size  Location     Type
  2646 ;;		None
  2647 ;; Return value:  Size  Location     Type
  2648 ;;                  1    wreg      unsigned char 
  2649 ;; Registers used:
  2650 ;;		wreg
  2651 ;; Tracked objects:
  2652 ;;		On entry : 1F/0
  2653 ;;		On exit  : 0/0
  2654 ;;		Unchanged: 0/0
  2655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2656 ;;      Params:         0       0       0       0
  2657 ;;      Locals:         0       0       0       0
  2658 ;;      Temps:          0       3       0       0
  2659 ;;      Totals:         0       3       0       0
  2660 ;;Total ram usage:        3 bytes
  2661 ;; Hardware stack levels used: 1
  2662 ;; Hardware stack levels required when called: 2
  2663 ;; This function calls:
  2664 ;;		Nothing
  2665 ;; This function is called by:
  2666 ;;		_ADJUST_AND_SET_PRESCALER
  2667 ;; This function uses a non-reentrant model
  2668 ;;
  2669                           
  2670     0639                     _CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1:	
  2671                           ;psect for function _CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1
  2672                           
  2673                           
  2674                           ;system.c: 99:     if((base_prescaler_bits_index + 1) > 7){
  2675                           
  2676                           ;incstack = 0
  2677                           ; Regs used in _CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1: [wreg]
  2678     0639  083A               	movf	_base_prescaler_bits_index,w	;volatile
  2679     063A  3E01               	addlw	1
  2680     063B  00C0               	movwf	??_CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1
  2681     063C  3000               	movlw	0
  2682     063D  1803               	skipnc
  2683     063E  3001               	movlw	1
  2684     063F  00C1               	movwf	??_CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1+1
  2685     0640  0841               	movf	??_CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1+1,w
  2686     0641  3A80               	xorlw	128
  2687     0642  00C2               	movwf	??_CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1+2
  2688     0643  3080               	movlw	128
  2689     0644  0242               	subwf	??_CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1+2,w
  2690     0645  3008               	movlw	8
  2691     0646  1903               	btfsc	3,2
  2692     0647  0240               	subwf	??_CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1,w
  2693     0648  1C03               	skipc
  2694     0649  2E4C               	goto	l1281
  2695                           
  2696                           ;system.c: 101:         return 1;
  2697     064A  3001               	movlw	1
  2698     064B  0008               	return
  2699     064C                     l1281:
  2700                           
  2701                           ;system.c: 104:         return 0;
  2702     064C  3000               	movlw	0
  2703     064D  0008               	return
  2704     064E                     __end_of_CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1:
  2705                           
  2706                           	psect	text10
  2707     0378                     __ptext10:	
  2708 ;; *************** function _PROCESS_RAW_SPEED_AND_PRESCALER *****************
  2709 ;; Defined at:
  2710 ;;		line 75 in file "system.c"
  2711 ;; Parameters:    Size  Location     Type
  2712 ;;		None
  2713 ;; Auto vars:     Size  Location     Type
  2714 ;;  speed_contro    2   16[BANK0 ] unsigned short 
  2715 ;; Return value:  Size  Location     Type
  2716 ;;                  1    wreg      unsigned char 
  2717 ;; Registers used:
  2718 ;;		wreg, status,2, status,0, pclath, cstack
  2719 ;; Tracked objects:
  2720 ;;		On entry : 1F/0
  2721 ;;		On exit  : 1F/0
  2722 ;;		Unchanged: 0/0
  2723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2724 ;;      Params:         0       0       0       0
  2725 ;;      Locals:         0       2       0       0
  2726 ;;      Temps:          0       4       0       0
  2727 ;;      Totals:         0       6       0       0
  2728 ;;Total ram usage:        6 bytes
  2729 ;; Hardware stack levels used: 1
  2730 ;; Hardware stack levels required when called: 3
  2731 ;; This function calls:
  2732 ;;		___lmul
  2733 ;; This function is called by:
  2734 ;;		_main
  2735 ;; This function uses a non-reentrant model
  2736 ;;
  2737                           
  2738     0378                     _PROCESS_RAW_SPEED_AND_PRESCALER:	
  2739                           ;psect for function _PROCESS_RAW_SPEED_AND_PRESCALER
  2740                           
  2741                           
  2742                           ;system.c: 76:     current_speed_linear_32 = current_speed_linear;
  2743                           
  2744                           ;incstack = 0
  2745                           ; Regs used in _PROCESS_RAW_SPEED_AND_PRESCALER: [wreg+status,2+status,0+pclath+cstack]
  2746     0378  0833               	movf	_current_speed_linear,w	;volatile
  2747     0379  00A4               	movwf	_current_speed_linear_32	;volatile
  2748     037A  0834               	movf	_current_speed_linear+1,w	;volatile
  2749     037B  00A5               	movwf	_current_speed_linear_32+1	;volatile
  2750     037C  01A6               	clrf	_current_speed_linear_32+2	;volatile
  2751     037D  01A7               	clrf	_current_speed_linear_32+3	;volatile
  2752                           
  2753                           ;system.c: 77:     speed_control_32 = current_speed_linear_32 * 580;;
  2754     037E  0827               	movf	_current_speed_linear_32+3,w	;volatile
  2755     037F  00C3               	movwf	___lmul@multiplier+3
  2756     0380  0826               	movf	_current_speed_linear_32+2,w	;volatile
  2757     0381  00C2               	movwf	___lmul@multiplier+2
  2758     0382  0825               	movf	_current_speed_linear_32+1,w	;volatile
  2759     0383  00C1               	movwf	___lmul@multiplier+1
  2760     0384  0824               	movf	_current_speed_linear_32,w	;volatile
  2761     0385  00C0               	movwf	___lmul@multiplier
  2762     0386  3000               	movlw	0
  2763     0387  00C7               	movwf	___lmul@multiplicand+3
  2764     0388  3000               	movlw	0
  2765     0389  00C6               	movwf	___lmul@multiplicand+2
  2766     038A  3002               	movlw	2
  2767     038B  00C5               	movwf	___lmul@multiplicand+1
  2768     038C  3044               	movlw	68
  2769     038D  00C4               	movwf	___lmul@multiplicand
  2770     038E  3185  2552  3183   	fcall	___lmul
  2771     0391  0843               	movf	?___lmul+3,w
  2772     0392  00A3               	movwf	_speed_control_32+3	;volatile
  2773     0393  0842               	movf	?___lmul+2,w
  2774     0394  00A2               	movwf	_speed_control_32+2	;volatile
  2775     0395  0841               	movf	?___lmul+1,w
  2776     0396  00A1               	movwf	_speed_control_32+1	;volatile
  2777     0397  0840               	movf	?___lmul,w
  2778     0398  00A0               	movwf	_speed_control_32	;volatile
  2779                           
  2780                           ;system.c: 78:     speed_control_32 = speed_control_32 >> 10;
  2781     0399  0820               	movf	_speed_control_32,w	;volatile
  2782     039A  00CC               	movwf	??_PROCESS_RAW_SPEED_AND_PRESCALER
  2783     039B  0821               	movf	_speed_control_32+1,w	;volatile
  2784     039C  00CD               	movwf	??_PROCESS_RAW_SPEED_AND_PRESCALER+1
  2785     039D  0822               	movf	_speed_control_32+2,w	;volatile
  2786     039E  00CE               	movwf	??_PROCESS_RAW_SPEED_AND_PRESCALER+2
  2787     039F  0823               	movf	_speed_control_32+3,w	;volatile
  2788     03A0  00CF               	movwf	??_PROCESS_RAW_SPEED_AND_PRESCALER+3
  2789     03A1  300A               	movlw	10
  2790     03A2                     u685:
  2791     03A2  36CF               	lsrf	??_PROCESS_RAW_SPEED_AND_PRESCALER+3,f
  2792     03A3  0CCE               	rrf	??_PROCESS_RAW_SPEED_AND_PRESCALER+2,f
  2793     03A4  0CCD               	rrf	??_PROCESS_RAW_SPEED_AND_PRESCALER+1,f
  2794     03A5  0CCC               	rrf	??_PROCESS_RAW_SPEED_AND_PRESCALER,f
  2795     03A6  0B89               	decfsz	9,f
  2796     03A7  2BA2               	goto	u685
  2797     03A8  084F               	movf	??_PROCESS_RAW_SPEED_AND_PRESCALER+3,w
  2798     03A9  00A3               	movwf	_speed_control_32+3	;volatile
  2799     03AA  084E               	movf	??_PROCESS_RAW_SPEED_AND_PRESCALER+2,w
  2800     03AB  00A2               	movwf	_speed_control_32+2	;volatile
  2801     03AC  084D               	movf	??_PROCESS_RAW_SPEED_AND_PRESCALER+1,w
  2802     03AD  00A1               	movwf	_speed_control_32+1	;volatile
  2803     03AE  084C               	movf	??_PROCESS_RAW_SPEED_AND_PRESCALER,w
  2804     03AF  00A0               	movwf	_speed_control_32	;volatile
  2805                           
  2806                           ;system.c: 79:     speed_control = (uint16_t) speed_control_32;
  2807     03B0  0821               	movf	_speed_control_32+1,w	;volatile
  2808     03B1  00B2               	movwf	_speed_control+1	;volatile
  2809     03B2  0820               	movf	_speed_control_32,w	;volatile
  2810     03B3  00B1               	movwf	_speed_control	;volatile
  2811                           
  2812                           ;system.c: 81:         if(speed_control <= (127-12)){
  2813     03B4  3000               	movlw	0
  2814     03B5  0232               	subwf	_speed_control+1,w	;volatile
  2815     03B6  3074               	movlw	116
  2816     03B7  1903               	skipnz
  2817     03B8  0231               	subwf	_speed_control,w	;volatile
  2818     03B9  1803               	skipnc
  2819     03BA  2BCD               	goto	l1485
  2820                           
  2821                           ;system.c: 82:             raw_TMR0 = (uint8_t) speed_control + 12;
  2822     03BB  0831               	movf	_speed_control,w	;volatile
  2823     03BC  3E0C               	addlw	12
  2824     03BD  00CC               	movwf	??_PROCESS_RAW_SPEED_AND_PRESCALER
  2825     03BE  3000               	movlw	0
  2826     03BF  1803               	skipnc
  2827     03C0  3001               	movlw	1
  2828     03C1  00CD               	movwf	??_PROCESS_RAW_SPEED_AND_PRESCALER+1
  2829     03C2  084C               	movf	??_PROCESS_RAW_SPEED_AND_PRESCALER,w
  2830     03C3  00A8               	movwf	_raw_TMR0	;volatile
  2831     03C4  084D               	movf	??_PROCESS_RAW_SPEED_AND_PRESCALER+1,w
  2832     03C5  00A9               	movwf	_raw_TMR0+1	;volatile
  2833     03C6  0D89               	rlf	9,f
  2834     03C7  3B89               	subwfb	9,f
  2835     03C8  0989               	comf	9,f
  2836     03C9  00AA               	movwf	_raw_TMR0+2	;volatile
  2837                           
  2838                           ;system.c: 83:             base_prescaler_bits_index = 1;
  2839     03CA  3001               	movlw	1
  2840     03CB  00BA               	movwf	_base_prescaler_bits_index	;volatile
  2841                           
  2842                           ;system.c: 84:         }
  2843     03CC  0008               	return
  2844     03CD                     l1485:
  2845                           
  2846                           ;system.c: 86:             uint16_t speed_control_subtracted;;system.c: 87:             
      +                          speed_control_subtracted = speed_control - (127-12);
  2847     03CD  0831               	movf	_speed_control,w	;volatile
  2848     03CE  3E8D               	addlw	141
  2849     03CF  00D0               	movwf	PROCESS_RAW_SPEED_AND_PRESCALER@speed_control_subtracted
  2850     03D0  30FF               	movlw	255
  2851     03D1  3D32               	addwfc	_speed_control+1,w	;volatile
  2852     03D2  00D1               	movwf	PROCESS_RAW_SPEED_AND_PRESCALER@speed_control_subtracted+1
  2853                           
  2854                           ;system.c: 88:             how_many_128 = (uint8_t)(speed_control_subtracted >> 7);
  2855     03D3  0851               	movf	PROCESS_RAW_SPEED_AND_PRESCALER@speed_control_subtracted+1,w
  2856     03D4  00CD               	movwf	??_PROCESS_RAW_SPEED_AND_PRESCALER+1
  2857     03D5  0850               	movf	PROCESS_RAW_SPEED_AND_PRESCALER@speed_control_subtracted,w
  2858     03D6  00CC               	movwf	??_PROCESS_RAW_SPEED_AND_PRESCALER
  2859     03D7  3007               	movlw	7
  2860     03D8                     u705:
  2861     03D8  36CD               	lsrf	??_PROCESS_RAW_SPEED_AND_PRESCALER+1,f
  2862     03D9  0CCC               	rrf	??_PROCESS_RAW_SPEED_AND_PRESCALER,f
  2863     03DA  0B89               	decfsz	9,f
  2864     03DB  2BD8               	goto	u705
  2865     03DC  084C               	movf	??_PROCESS_RAW_SPEED_AND_PRESCALER,w
  2866     03DD  00BC               	movwf	_how_many_128	;volatile
  2867                           
  2868                           ;system.c: 89:             raw_TMR0 = (uint8_t)(speed_control_subtracted - (uint16_t)(ho
      +                          w_many_128 << 7));
  2869     03DE  083C               	movf	_how_many_128,w	;volatile
  2870     03DF  00CC               	movwf	??_PROCESS_RAW_SPEED_AND_PRESCALER
  2871     03E0  3006               	movlw	6
  2872     03E1                     u715:
  2873     03E1  35CC               	lslf	??_PROCESS_RAW_SPEED_AND_PRESCALER,f
  2874     03E2  3EFF               	addlw	-1
  2875     03E3  1D03               	skipz
  2876     03E4  2BE1               	goto	u715
  2877     03E5  354C               	lslf	??_PROCESS_RAW_SPEED_AND_PRESCALER,w
  2878     03E6  0750               	addwf	PROCESS_RAW_SPEED_AND_PRESCALER@speed_control_subtracted,w
  2879     03E7  00CD               	movwf	??_PROCESS_RAW_SPEED_AND_PRESCALER+1
  2880     03E8  01CE               	clrf	??_PROCESS_RAW_SPEED_AND_PRESCALER+2
  2881     03E9  01CF               	clrf	??_PROCESS_RAW_SPEED_AND_PRESCALER+3
  2882     03EA  084D               	movf	??_PROCESS_RAW_SPEED_AND_PRESCALER+1,w
  2883     03EB  00A8               	movwf	_raw_TMR0	;volatile
  2884     03EC  084E               	movf	??_PROCESS_RAW_SPEED_AND_PRESCALER+2,w
  2885     03ED  00A9               	movwf	_raw_TMR0+1	;volatile
  2886     03EE  084F               	movf	??_PROCESS_RAW_SPEED_AND_PRESCALER+3,w
  2887     03EF  00AA               	movwf	_raw_TMR0+2	;volatile
  2888                           
  2889                           ;system.c: 92:             base_prescaler_bits_index = (uint8_t)(how_many_128 + 2);
  2890     03F0  083C               	movf	_how_many_128,w	;volatile
  2891     03F1  3E02               	addlw	2
  2892     03F2  00BA               	movwf	_base_prescaler_bits_index	;volatile
  2893     03F3  0008               	return
  2894     03F4                     __end_of_PROCESS_RAW_SPEED_AND_PRESCALER:
  2895                           
  2896                           	psect	text11
  2897     0552                     __ptext11:	
  2898 ;; *************** function ___lmul *****************
  2899 ;; Defined at:
  2900 ;;		line 15 in file "/Applications/microchip/xc8/v2.45/pic/sources/c99/common/Umul32.c"
  2901 ;; Parameters:    Size  Location     Type
  2902 ;;  multiplier      4    0[BANK0 ] unsigned long 
  2903 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  2904 ;; Auto vars:     Size  Location     Type
  2905 ;;  product         4    8[BANK0 ] unsigned long 
  2906 ;; Return value:  Size  Location     Type
  2907 ;;                  4    0[BANK0 ] unsigned long 
  2908 ;; Registers used:
  2909 ;;		wreg, status,2, status,0
  2910 ;; Tracked objects:
  2911 ;;		On entry : 1F/0
  2912 ;;		On exit  : 1F/0
  2913 ;;		Unchanged: 0/0
  2914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2915 ;;      Params:         0       8       0       0
  2916 ;;      Locals:         0       4       0       0
  2917 ;;      Temps:          0       0       0       0
  2918 ;;      Totals:         0      12       0       0
  2919 ;;Total ram usage:       12 bytes
  2920 ;; Hardware stack levels used: 1
  2921 ;; Hardware stack levels required when called: 2
  2922 ;; This function calls:
  2923 ;;		Nothing
  2924 ;; This function is called by:
  2925 ;;		_PROCESS_RAW_SPEED_AND_PRESCALER
  2926 ;; This function uses a non-reentrant model
  2927 ;;
  2928                           
  2929     0552                     ___lmul:	
  2930                           ;psect for function ___lmul
  2931                           
  2932                           
  2933                           ;incstack = 0
  2934                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  2935     0552  3000               	movlw	0
  2936     0553  00CB               	movwf	___lmul@product+3
  2937     0554  3000               	movlw	0
  2938     0555  00CA               	movwf	___lmul@product+2
  2939     0556  3000               	movlw	0
  2940     0557  00C9               	movwf	___lmul@product+1
  2941     0558  3000               	movlw	0
  2942     0559  00C8               	movwf	___lmul@product
  2943     055A                     l1437:
  2944     055A  1C40               	btfss	___lmul@multiplier,0
  2945     055B  2D64               	goto	l1441
  2946     055C  0844               	movf	___lmul@multiplicand,w
  2947     055D  07C8               	addwf	___lmul@product,f
  2948     055E  0845               	movf	___lmul@multiplicand+1,w
  2949     055F  3DC9               	addwfc	___lmul@product+1,f
  2950     0560  0846               	movf	___lmul@multiplicand+2,w
  2951     0561  3DCA               	addwfc	___lmul@product+2,f
  2952     0562  0847               	movf	___lmul@multiplicand+3,w
  2953     0563  3DCB               	addwfc	___lmul@product+3,f
  2954     0564                     l1441:
  2955     0564  3001               	movlw	1
  2956     0565                     u625:
  2957     0565  35C4               	lslf	___lmul@multiplicand,f
  2958     0566  0DC5               	rlf	___lmul@multiplicand+1,f
  2959     0567  0DC6               	rlf	___lmul@multiplicand+2,f
  2960     0568  0DC7               	rlf	___lmul@multiplicand+3,f
  2961     0569  0B89               	decfsz	9,f
  2962     056A  2D65               	goto	u625
  2963     056B  3001               	movlw	1
  2964     056C                     u635:
  2965     056C  36C3               	lsrf	___lmul@multiplier+3,f
  2966     056D  0CC2               	rrf	___lmul@multiplier+2,f
  2967     056E  0CC1               	rrf	___lmul@multiplier+1,f
  2968     056F  0CC0               	rrf	___lmul@multiplier,f
  2969     0570  0B89               	decfsz	9,f
  2970     0571  2D6C               	goto	u635
  2971     0572  0843               	movf	___lmul@multiplier+3,w
  2972     0573  0442               	iorwf	___lmul@multiplier+2,w
  2973     0574  0441               	iorwf	___lmul@multiplier+1,w
  2974     0575  0440               	iorwf	___lmul@multiplier,w
  2975     0576  1D03               	skipz
  2976     0577  2D5A               	goto	l1437
  2977     0578  084B               	movf	___lmul@product+3,w
  2978     0579  00C3               	movwf	?___lmul+3
  2979     057A  084A               	movf	___lmul@product+2,w
  2980     057B  00C2               	movwf	?___lmul+2
  2981     057C  0849               	movf	___lmul@product+1,w
  2982     057D  00C1               	movwf	?___lmul+1
  2983     057E  0848               	movf	___lmul@product,w
  2984     057F  00C0               	movwf	?___lmul
  2985     0580  0008               	return
  2986     0581                     __end_of___lmul:
  2987                           
  2988                           	psect	text12
  2989     050D                     __ptext12:	
  2990 ;; *************** function _GET_CURRENT_POT_VALUES *****************
  2991 ;; Defined at:
  2992 ;;		line 55 in file "system.c"
  2993 ;; Parameters:    Size  Location     Type
  2994 ;;		None
  2995 ;; Auto vars:     Size  Location     Type
  2996 ;;		None
  2997 ;; Return value:  Size  Location     Type
  2998 ;;                  1    wreg      unsigned char 
  2999 ;; Registers used:
  3000 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3001 ;; Tracked objects:
  3002 ;;		On entry : 1E/1
  3003 ;;		On exit  : 1F/0
  3004 ;;		Unchanged: 0/0
  3005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3006 ;;      Params:         0       0       0       0
  3007 ;;      Locals:         0       0       0       0
  3008 ;;      Temps:          0       3       0       0
  3009 ;;      Totals:         0       3       0       0
  3010 ;;Total ram usage:        3 bytes
  3011 ;; Hardware stack levels used: 1
  3012 ;; Hardware stack levels required when called: 4
  3013 ;; This function calls:
  3014 ;;		_DETERMINE_WAVESHAPE
  3015 ;;		_DO_ADC
  3016 ;; This function is called by:
  3017 ;;		_main
  3018 ;; This function uses a non-reentrant model
  3019 ;;
  3020                           
  3021     050D                     _GET_CURRENT_POT_VALUES:	
  3022                           ;psect for function _GET_CURRENT_POT_VALUES
  3023                           
  3024                           
  3025                           ;system.c: 56:     current_waveshape = DETERMINE_WAVESHAPE();
  3026                           
  3027                           ;incstack = 0
  3028                           ; Regs used in _GET_CURRENT_POT_VALUES: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3029     050D  3185  25AD  3185   	fcall	_DETERMINE_WAVESHAPE
  3030     0510  00F8               	movwf	_current_waveshape	;volatile
  3031                           
  3032                           ;system.c: 57:     current_speed_linear = DO_ADC(&speed_adc_config_value);
  3033     0511  30AD               	movlw	low (_speed_adc_config_value| (0+32768))
  3034     0512  00C0               	movwf	DO_ADC@modifier
  3035     0513  3086               	movlw	high (_speed_adc_config_value| (0+32768))
  3036     0514  00C1               	movwf	DO_ADC@modifier+1
  3037     0515  3185  2581  3185   	fcall	_DO_ADC
  3038     0518  0841               	movf	?_DO_ADC+1,w
  3039     0519  00B4               	movwf	_current_speed_linear+1	;volatile
  3040     051A  0840               	movf	?_DO_ADC,w
  3041     051B  00B3               	movwf	_current_speed_linear	;volatile
  3042                           
  3043                           ;system.c: 59:         current_depth = DO_ADC(&depth_adc_config_value);
  3044     051C  30AC               	movlw	low (_depth_adc_config_value| (0+32768))
  3045     051D  00C0               	movwf	DO_ADC@modifier
  3046     051E  3086               	movlw	high (_depth_adc_config_value| (0+32768))
  3047     051F  00C1               	movwf	DO_ADC@modifier+1
  3048     0520  3185  2581  3185   	fcall	_DO_ADC
  3049     0523  0841               	movf	?_DO_ADC+1,w
  3050     0524  00B6               	movwf	_current_depth+1	;volatile
  3051     0525  0840               	movf	?_DO_ADC,w
  3052     0526  00B5               	movwf	_current_depth	;volatile
  3053                           
  3054                           ;system.c: 60:         current_depth = current_depth >> 2;
  3055     0527  0836               	movf	_current_depth+1,w	;volatile
  3056     0528  00C9               	movwf	??_GET_CURRENT_POT_VALUES+1
  3057     0529  0835               	movf	_current_depth,w	;volatile
  3058     052A  00C8               	movwf	??_GET_CURRENT_POT_VALUES
  3059     052B  36C9               	lsrf	??_GET_CURRENT_POT_VALUES+1,f
  3060     052C  0CC8               	rrf	??_GET_CURRENT_POT_VALUES,f
  3061     052D  36C9               	lsrf	??_GET_CURRENT_POT_VALUES+1,f
  3062     052E  0CC8               	rrf	??_GET_CURRENT_POT_VALUES,f
  3063     052F  0848               	movf	??_GET_CURRENT_POT_VALUES,w
  3064     0530  00B5               	movwf	_current_depth	;volatile
  3065     0531  0849               	movf	??_GET_CURRENT_POT_VALUES+1,w
  3066     0532  00B6               	movwf	_current_depth+1	;volatile
  3067                           
  3068                           ;system.c: 63:         current_symmetry = DO_ADC(&symmetry_adc_config_value);
  3069     0533  30AB               	movlw	low (_symmetry_adc_config_value| (0+32768))
  3070     0534  00C0               	movwf	DO_ADC@modifier
  3071     0535  3086               	movlw	high (_symmetry_adc_config_value| (0+32768))
  3072     0536  00C1               	movwf	DO_ADC@modifier+1
  3073     0537  3185  2581  3185   	fcall	_DO_ADC
  3074     053A  0840               	movf	?_DO_ADC,w
  3075     053B  00AB               	movwf	_current_symmetry	;volatile
  3076     053C  0841               	movf	?_DO_ADC+1,w
  3077     053D  00AC               	movwf	_current_symmetry+1	;volatile
  3078     053E  01AD               	clrf	_current_symmetry+2	;volatile
  3079                           
  3080                           ;system.c: 65:             current_symmetry = current_symmetry >> 2;
  3081     053F  082B               	movf	_current_symmetry,w	;volatile
  3082     0540  00C8               	movwf	??_GET_CURRENT_POT_VALUES
  3083     0541  082C               	movf	_current_symmetry+1,w	;volatile
  3084     0542  00C9               	movwf	??_GET_CURRENT_POT_VALUES+1
  3085     0543  082D               	movf	_current_symmetry+2,w	;volatile
  3086     0544  00CA               	movwf	??_GET_CURRENT_POT_VALUES+2
  3087     0545  3002               	movlw	2
  3088     0546                     u675:
  3089     0546  36CA               	lsrf	??_GET_CURRENT_POT_VALUES+2,f
  3090     0547  0CC9               	rrf	??_GET_CURRENT_POT_VALUES+1,f
  3091     0548  0CC8               	rrf	??_GET_CURRENT_POT_VALUES,f
  3092     0549  0B89               	decfsz	9,f
  3093     054A  2D46               	goto	u675
  3094     054B  0848               	movf	??_GET_CURRENT_POT_VALUES,w
  3095     054C  00AB               	movwf	_current_symmetry	;volatile
  3096     054D  0849               	movf	??_GET_CURRENT_POT_VALUES+1,w
  3097     054E  00AC               	movwf	_current_symmetry+1	;volatile
  3098     054F  084A               	movf	??_GET_CURRENT_POT_VALUES+2,w
  3099     0550  00AD               	movwf	_current_symmetry+2	;volatile
  3100     0551  0008               	return
  3101     0552                     __end_of_GET_CURRENT_POT_VALUES:
  3102                           
  3103                           	psect	text13
  3104     05AD                     __ptext13:	
  3105 ;; *************** function _DETERMINE_WAVESHAPE *****************
  3106 ;; Defined at:
  3107 ;;		line 26 in file "system.c"
  3108 ;; Parameters:    Size  Location     Type
  3109 ;;		None
  3110 ;; Auto vars:     Size  Location     Type
  3111 ;;  ADC             2    6[BANK0 ] unsigned short 
  3112 ;; Return value:  Size  Location     Type
  3113 ;;                  1    wreg      unsigned char 
  3114 ;; Registers used:
  3115 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3116 ;; Tracked objects:
  3117 ;;		On entry : 1E/1
  3118 ;;		On exit  : 1F/0
  3119 ;;		Unchanged: 0/0
  3120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3121 ;;      Params:         0       0       0       0
  3122 ;;      Locals:         0       2       0       0
  3123 ;;      Temps:          0       0       0       0
  3124 ;;      Totals:         0       2       0       0
  3125 ;;Total ram usage:        2 bytes
  3126 ;; Hardware stack levels used: 1
  3127 ;; Hardware stack levels required when called: 3
  3128 ;; This function calls:
  3129 ;;		_DO_ADC
  3130 ;; This function is called by:
  3131 ;;		_GET_CURRENT_POT_VALUES
  3132 ;; This function uses a non-reentrant model
  3133 ;;
  3134                           
  3135     05AD                     _DETERMINE_WAVESHAPE:	
  3136                           ;psect for function _DETERMINE_WAVESHAPE
  3137                           
  3138                           
  3139                           ;system.c: 27:     uint16_t ADC = DO_ADC(&waveshape_adc_config_value);
  3140                           
  3141                           ;incstack = 0
  3142                           ; Regs used in _DETERMINE_WAVESHAPE: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3143     05AD  30AE               	movlw	low (_waveshape_adc_config_value| (0+32768))
  3144     05AE  0020               	movlb	0	; select bank0
  3145     05AF  00C0               	movwf	DO_ADC@modifier
  3146     05B0  3086               	movlw	high (_waveshape_adc_config_value| (0+32768))
  3147     05B1  00C1               	movwf	DO_ADC@modifier+1
  3148     05B2  3185  2581  3185   	fcall	_DO_ADC
  3149     05B5  0841               	movf	?_DO_ADC+1,w
  3150     05B6  00C7               	movwf	DETERMINE_WAVESHAPE@ADC+1
  3151     05B7  0840               	movf	?_DO_ADC,w
  3152     05B8  00C6               	movwf	DETERMINE_WAVESHAPE@ADC
  3153                           
  3154                           ;system.c: 28:     if(ADC <= 341){
  3155     05B9  3001               	movlw	1
  3156     05BA  0247               	subwf	DETERMINE_WAVESHAPE@ADC+1,w
  3157     05BB  3056               	movlw	86
  3158     05BC  1903               	skipnz
  3159     05BD  0246               	subwf	DETERMINE_WAVESHAPE@ADC,w
  3160     05BE  1803               	skipnc
  3161     05BF  2DC2               	goto	l1341
  3162                           
  3163                           ;system.c: 29:             return 0;
  3164     05C0  3000               	movlw	0
  3165     05C1  0008               	return
  3166     05C2                     l1341:
  3167                           
  3168                           ;system.c: 31:         if (ADC <= 682){
  3169     05C2  3002               	movlw	2
  3170     05C3  0247               	subwf	DETERMINE_WAVESHAPE@ADC+1,w
  3171     05C4  30AB               	movlw	171
  3172     05C5  1903               	skipnz
  3173     05C6  0246               	subwf	DETERMINE_WAVESHAPE@ADC,w
  3174     05C7  1803               	skipnc
  3175     05C8  2DCB               	goto	l1347
  3176     05C9                     l1343:
  3177                           
  3178                           ;system.c: 32:             return 1;
  3179     05C9  3001               	movlw	1
  3180     05CA  0008               	return
  3181     05CB                     l1347:
  3182                           
  3183                           ;system.c: 34:         if (ADC <= 1023){
  3184     05CB  3004               	movlw	4
  3185     05CC  0247               	subwf	DETERMINE_WAVESHAPE@ADC+1,w
  3186     05CD  3000               	movlw	0
  3187     05CE  1903               	skipnz
  3188     05CF  0246               	subwf	DETERMINE_WAVESHAPE@ADC,w
  3189     05D0  1803               	skipnc
  3190     05D1  2DC9               	goto	l1343
  3191                           
  3192                           ;system.c: 35:             return 2;
  3193     05D2  3002               	movlw	2
  3194     05D3  0008               	return
  3195     05D4                     __end_of_DETERMINE_WAVESHAPE:
  3196                           
  3197                           	psect	text14
  3198     0581                     __ptext14:	
  3199 ;; *************** function _DO_ADC *****************
  3200 ;; Defined at:
  3201 ;;		line 25 in file "config.c"
  3202 ;; Parameters:    Size  Location     Type
  3203 ;;  modifier        2    0[BANK0 ] PTR const unsigned char 
  3204 ;;		 -> symmetry_adc_config_value(1), depth_adc_config_value(1), speed_adc_config_value(1), waveshape_adc_config_value(1
      +), 
  3205 ;; Auto vars:     Size  Location     Type
  3206 ;;  adc_result      2    3[BANK0 ] unsigned short 
  3207 ;;  temp            1    5[BANK0 ] unsigned char 
  3208 ;; Return value:  Size  Location     Type
  3209 ;;                  2    0[BANK0 ] unsigned short 
  3210 ;; Registers used:
  3211 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  3212 ;; Tracked objects:
  3213 ;;		On entry : 1F/0
  3214 ;;		On exit  : 1F/0
  3215 ;;		Unchanged: 0/0
  3216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3217 ;;      Params:         0       2       0       0
  3218 ;;      Locals:         0       3       0       0
  3219 ;;      Temps:          0       1       0       0
  3220 ;;      Totals:         0       6       0       0
  3221 ;;Total ram usage:        6 bytes
  3222 ;; Hardware stack levels used: 1
  3223 ;; Hardware stack levels required when called: 2
  3224 ;; This function calls:
  3225 ;;		Nothing
  3226 ;; This function is called by:
  3227 ;;		_DETERMINE_WAVESHAPE
  3228 ;;		_GET_CURRENT_POT_VALUES
  3229 ;; This function uses a non-reentrant model
  3230 ;;
  3231                           
  3232     0581                     _DO_ADC:	
  3233                           ;psect for function _DO_ADC
  3234                           
  3235                           
  3236                           ;config.c: 26:     ADCON0 = 0x00;
  3237                           
  3238                           ;incstack = 0
  3239                           ; Regs used in _DO_ADC: [wreg-fsr0h+status,2+status,0+pclath]
  3240     0581  0021               	movlb	1	; select bank1
  3241     0582  019D               	clrf	29	;volatile
  3242                           
  3243                           ;config.c: 28:     uint8_t temp = (uint8_t)(*modifier << 2);
  3244     0583  0020               	movlb	0	; select bank0
  3245     0584  0840               	movf	DO_ADC@modifier,w
  3246     0585  0084               	movwf	4
  3247     0586  0841               	movf	DO_ADC@modifier+1,w
  3248     0587  0085               	movwf	5
  3249     0588  0800               	movf	0,w	;code access
  3250     0589  00C2               	movwf	??_DO_ADC
  3251     058A  3001               	movlw	1
  3252     058B                     u415:
  3253     058B  35C2               	lslf	??_DO_ADC,f
  3254     058C  3EFF               	addlw	-1
  3255     058D  1D03               	skipz
  3256     058E  2D8B               	goto	u415
  3257     058F  3542               	lslf	??_DO_ADC,w
  3258     0590  00C5               	movwf	DO_ADC@temp
  3259                           
  3260                           ;config.c: 29:     ADCON0 = ADCON0 | temp;
  3261     0591  0021               	movlb	1	; select bank1
  3262     0592  081D               	movf	29,w	;volatile
  3263     0593  0020               	movlb	0	; select bank0
  3264     0594  0445               	iorwf	DO_ADC@temp,w
  3265     0595  0021               	movlb	1	; select bank1
  3266     0596  009D               	movwf	29	;volatile
  3267                           
  3268                           ;config.c: 30:     ADON = 1;
  3269     0597  141D               	bsf	29,0	;volatile
  3270                           
  3271                           ;config.c: 31:     _delay((unsigned long)((0.005)*(32000000/4000.0)));
  3272     0598  300D               	movlw	13
  3273     0599                     u1077:
  3274     0599  0B89               	decfsz	9,f
  3275     059A  2D99               	goto	u1077
  3276     059B  0000               	nop
  3277                           
  3278                           ;config.c: 32:     GO_nDONE = 1;
  3279     059C  0021               	movlb	1	; select bank1
  3280     059D  149D               	bsf	29,1	;volatile
  3281     059E                     l160:	
  3282                           ;config.c: 33:     while(GO_nDONE == 1){}
  3283                           
  3284     059E  189D               	btfsc	29,1	;volatile
  3285     059F  2D9E               	goto	l160
  3286                           
  3287                           ;config.c: 34:     ADON = 0;
  3288     05A0  101D               	bcf	29,0	;volatile
  3289                           
  3290                           ;config.c: 35:     uint16_t adc_result = ((uint16_t)(ADRESH << 8) | ADRESL);
  3291     05A1  081C               	movf	28,w	;volatile
  3292     05A2  0020               	movlb	0	; select bank0
  3293     05A3  00C4               	movwf	DO_ADC@adc_result+1
  3294     05A4  0021               	movlb	1	; select bank1
  3295     05A5  081B               	movf	27,w	;volatile
  3296     05A6  0020               	movlb	0	; select bank0
  3297     05A7  00C3               	movwf	DO_ADC@adc_result
  3298                           
  3299                           ;config.c: 36:     return adc_result;
  3300     05A8  0844               	movf	DO_ADC@adc_result+1,w
  3301     05A9  00C1               	movwf	?_DO_ADC+1
  3302     05AA  0843               	movf	DO_ADC@adc_result,w
  3303     05AB  00C0               	movwf	?_DO_ADC
  3304     05AC  0008               	return
  3305     05AD                     __end_of_DO_ADC:
  3306                           
  3307                           	psect	text15
  3308     06A0                     __ptext15:	
  3309 ;; *************** function _CONFIG_TMR0_INTERRUPT *****************
  3310 ;; Defined at:
  3311 ;;		line 58 in file "config.c"
  3312 ;; Parameters:    Size  Location     Type
  3313 ;;		None
  3314 ;; Auto vars:     Size  Location     Type
  3315 ;;		None
  3316 ;; Return value:  Size  Location     Type
  3317 ;;                  1    wreg      unsigned char 
  3318 ;; Registers used:
  3319 ;;		None
  3320 ;; Tracked objects:
  3321 ;;		On entry : B1F/1
  3322 ;;		On exit  : B1F/1
  3323 ;;		Unchanged: B1F/0
  3324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3325 ;;      Params:         0       0       0       0
  3326 ;;      Locals:         0       0       0       0
  3327 ;;      Temps:          0       0       0       0
  3328 ;;      Totals:         0       0       0       0
  3329 ;;Total ram usage:        0 bytes
  3330 ;; Hardware stack levels used: 1
  3331 ;; Hardware stack levels required when called: 2
  3332 ;; This function calls:
  3333 ;;		Nothing
  3334 ;; This function is called by:
  3335 ;;		_main
  3336 ;; This function uses a non-reentrant model
  3337 ;;
  3338                           
  3339     06A0                     _CONFIG_TMR0_INTERRUPT:	
  3340                           ;psect for function _CONFIG_TMR0_INTERRUPT
  3341                           
  3342                           
  3343                           ;config.c: 59:     TMR0IE = 1;
  3344                           
  3345                           ;incstack = 0
  3346                           ; Regs used in _CONFIG_TMR0_INTERRUPT: []
  3347     06A0  168B               	bsf	11,5	;volatile
  3348                           
  3349                           ;config.c: 60:     return 1;;	Return value of _CONFIG_TMR0_INTERRUPT is never used
  3350     06A1  0008               	return
  3351     06A2                     __end_of_CONFIG_TMR0_INTERRUPT:
  3352                           
  3353                           	psect	text16
  3354     0661                     __ptext16:	
  3355 ;; *************** function _CONFIG_SYSTEM *****************
  3356 ;; Defined at:
  3357 ;;		line 64 in file "config.c"
  3358 ;; Parameters:    Size  Location     Type
  3359 ;;		None
  3360 ;; Auto vars:     Size  Location     Type
  3361 ;;		None
  3362 ;; Return value:  Size  Location     Type
  3363 ;;                  1    wreg      unsigned char 
  3364 ;; Registers used:
  3365 ;;		wreg, status,2, status,0, pclath, cstack
  3366 ;; Tracked objects:
  3367 ;;		On entry : B1F/0
  3368 ;;		On exit  : B1F/0
  3369 ;;		Unchanged: B00/0
  3370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3371 ;;      Params:         0       0       0       0
  3372 ;;      Locals:         0       0       0       0
  3373 ;;      Temps:          0       0       0       0
  3374 ;;      Totals:         0       0       0       0
  3375 ;;Total ram usage:        0 bytes
  3376 ;; Hardware stack levels used: 1
  3377 ;; Hardware stack levels required when called: 3
  3378 ;; This function calls:
  3379 ;;		_CONFIG_ADC_PINS
  3380 ;;		_CONFIG_INT_OSC
  3381 ;;		_CONFIG_PORTS
  3382 ;;		_CONFIG_PWM_CCP3
  3383 ;; This function is called by:
  3384 ;;		_main
  3385 ;; This function uses a non-reentrant model
  3386 ;;
  3387                           
  3388     0661                     _CONFIG_SYSTEM:	
  3389                           ;psect for function _CONFIG_SYSTEM
  3390                           
  3391                           
  3392                           ;config.c: 65:     CONFIG_INT_OSC();
  3393                           
  3394                           ;incstack = 0
  3395                           ; Regs used in _CONFIG_SYSTEM: [wreg+status,2+status,0+pclath+cstack]
  3396     0661  3186  268C  3186   	fcall	_CONFIG_INT_OSC
  3397                           
  3398                           ;config.c: 66:     CONFIG_PORTS();
  3399     0664  3186  266D  3186   	fcall	_CONFIG_PORTS
  3400                           
  3401                           ;config.c: 67:     CONFIG_ADC_PINS();
  3402     0667  3186  2697  3186   	fcall	_CONFIG_ADC_PINS
  3403                           
  3404                           ;config.c: 68:     CONFIG_PWM_CCP3();
  3405     066A  3186  264E         	fcall	_CONFIG_PWM_CCP3
  3406     066C  0008               	return
  3407     066D                     __end_of_CONFIG_SYSTEM:
  3408                           
  3409                           	psect	text17
  3410     064E                     __ptext17:	
  3411 ;; *************** function _CONFIG_PWM_CCP3 *****************
  3412 ;; Defined at:
  3413 ;;		line 40 in file "config.c"
  3414 ;; Parameters:    Size  Location     Type
  3415 ;;		None
  3416 ;; Auto vars:     Size  Location     Type
  3417 ;;		None
  3418 ;; Return value:  Size  Location     Type
  3419 ;;                  1    wreg      unsigned char 
  3420 ;; Registers used:
  3421 ;;		wreg, status,2
  3422 ;; Tracked objects:
  3423 ;;		On entry : B1F/1
  3424 ;;		On exit  : B1F/0
  3425 ;;		Unchanged: B00/0
  3426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3427 ;;      Params:         0       0       0       0
  3428 ;;      Locals:         0       0       0       0
  3429 ;;      Temps:          0       0       0       0
  3430 ;;      Totals:         0       0       0       0
  3431 ;;Total ram usage:        0 bytes
  3432 ;; Hardware stack levels used: 1
  3433 ;; Hardware stack levels required when called: 2
  3434 ;; This function calls:
  3435 ;;		Nothing
  3436 ;; This function is called by:
  3437 ;;		_CONFIG_SYSTEM
  3438 ;; This function uses a non-reentrant model
  3439 ;;
  3440                           
  3441     064E                     _CONFIG_PWM_CCP3:	
  3442                           ;psect for function _CONFIG_PWM_CCP3
  3443                           
  3444                           
  3445                           ;config.c: 41:     SRLEN = 0;
  3446                           
  3447                           ;incstack = 0
  3448                           ; Regs used in _CONFIG_PWM_CCP3: [wreg+status,2]
  3449     064E  0022               	movlb	2	; select bank2
  3450     064F  139A               	bcf	26,7	;volatile
  3451                           
  3452                           ;config.c: 42:     C1ON = 0;
  3453     0650  1391               	bcf	17,7	;volatile
  3454                           
  3455                           ;config.c: 44:     TRISA2 = 1;
  3456     0651  0021               	movlb	1	; select bank1
  3457     0652  150C               	bsf	12,2	;volatile
  3458                           
  3459                           ;config.c: 45:     PR2 = 0xFF;
  3460     0653  30FF               	movlw	255
  3461     0654  0020               	movlb	0	; select bank0
  3462     0655  009B               	movwf	27	;volatile
  3463                           
  3464                           ;config.c: 46:     CCP3CON = CCP3CON | 0b00001111;
  3465     0656  0026               	movlb	6	; select bank6
  3466     0657  0813               	movf	19,w	;volatile
  3467     0658  380F               	iorlw	15
  3468     0659  0093               	movwf	19	;volatile
  3469                           
  3470                           ;config.c: 48:     CCPTMRS0 = 0x00;
  3471     065A  0025               	movlb	5	; select bank5
  3472     065B  019E               	clrf	30	;volatile
  3473                           
  3474                           ;config.c: 49:     TMR2IF = 0;
  3475     065C  0020               	movlb	0	; select bank0
  3476     065D  1091               	bcf	17,1	;volatile
  3477                           
  3478                           ;config.c: 50:     T2CON = T2CON | 0b00000000;
  3479     065E  081C               	movf	28,w	;volatile
  3480     065F  009C               	movwf	28	;volatile
  3481     0660  0008               	return
  3482     0661                     __end_of_CONFIG_PWM_CCP3:
  3483                           
  3484                           	psect	text18
  3485     066D                     __ptext18:	
  3486 ;; *************** function _CONFIG_PORTS *****************
  3487 ;; Defined at:
  3488 ;;		line 11 in file "config.c"
  3489 ;; Parameters:    Size  Location     Type
  3490 ;;		None
  3491 ;; Auto vars:     Size  Location     Type
  3492 ;;		None
  3493 ;; Return value:  Size  Location     Type
  3494 ;;                  1    wreg      unsigned char 
  3495 ;; Registers used:
  3496 ;;		wreg, status,2
  3497 ;; Tracked objects:
  3498 ;;		On entry : B1F/1
  3499 ;;		On exit  : B1F/4
  3500 ;;		Unchanged: B00/0
  3501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3502 ;;      Params:         0       0       0       0
  3503 ;;      Locals:         0       0       0       0
  3504 ;;      Temps:          0       0       0       0
  3505 ;;      Totals:         0       0       0       0
  3506 ;;Total ram usage:        0 bytes
  3507 ;; Hardware stack levels used: 1
  3508 ;; Hardware stack levels required when called: 2
  3509 ;; This function calls:
  3510 ;;		Nothing
  3511 ;; This function is called by:
  3512 ;;		_CONFIG_SYSTEM
  3513 ;; This function uses a non-reentrant model
  3514 ;;
  3515                           
  3516     066D                     _CONFIG_PORTS:	
  3517                           ;psect for function _CONFIG_PORTS
  3518                           
  3519                           
  3520                           ;config.c: 12:     ANSELC = 0b00001111;
  3521                           
  3522                           ;incstack = 0
  3523                           ; Regs used in _CONFIG_PORTS: [wreg+status,2]
  3524     066D  300F               	movlw	15
  3525     066E  0023               	movlb	3	; select bank3
  3526     066F  008E               	movwf	14	;volatile
  3527                           
  3528                           ;config.c: 13:     TRISC = 0b00001111;
  3529     0670  300F               	movlw	15
  3530     0671  0021               	movlb	1	; select bank1
  3531     0672  008E               	movwf	14	;volatile
  3532                           
  3533                           ;config.c: 14:     WPUC = 0b00000000;
  3534     0673  0024               	movlb	4	; select bank4
  3535     0674  018E               	clrf	14	;volatile
  3536     0675  0008               	return
  3537     0676                     __end_of_CONFIG_PORTS:
  3538                           
  3539                           	psect	text19
  3540     068C                     __ptext19:	
  3541 ;; *************** function _CONFIG_INT_OSC *****************
  3542 ;; Defined at:
  3543 ;;		line 3 in file "config.c"
  3544 ;; Parameters:    Size  Location     Type
  3545 ;;		None
  3546 ;; Auto vars:     Size  Location     Type
  3547 ;;		None
  3548 ;; Return value:  Size  Location     Type
  3549 ;;                  1    wreg      unsigned char 
  3550 ;; Registers used:
  3551 ;;		wreg
  3552 ;; Tracked objects:
  3553 ;;		On entry : B1F/0
  3554 ;;		On exit  : B1F/1
  3555 ;;		Unchanged: B00/0
  3556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3557 ;;      Params:         0       0       0       0
  3558 ;;      Locals:         0       0       0       0
  3559 ;;      Temps:          0       0       0       0
  3560 ;;      Totals:         0       0       0       0
  3561 ;;Total ram usage:        0 bytes
  3562 ;; Hardware stack levels used: 1
  3563 ;; Hardware stack levels required when called: 2
  3564 ;; This function calls:
  3565 ;;		Nothing
  3566 ;; This function is called by:
  3567 ;;		_CONFIG_SYSTEM
  3568 ;; This function uses a non-reentrant model
  3569 ;;
  3570                           
  3571     068C                     _CONFIG_INT_OSC:	
  3572                           ;psect for function _CONFIG_INT_OSC
  3573                           
  3574                           
  3575                           ;config.c: 4:     OSCCON = 0b11110000;
  3576                           
  3577                           ;incstack = 0
  3578                           ; Regs used in _CONFIG_INT_OSC: [wreg]
  3579     068C  30F0               	movlw	240
  3580     068D  0021               	movlb	1	; select bank1
  3581     068E  0099               	movwf	25	;volatile
  3582                           
  3583                           ;config.c: 5:     OSCTUNE = 0b00011111;
  3584     068F  301F               	movlw	31
  3585     0690  0098               	movwf	24	;volatile
  3586     0691  0008               	return
  3587     0692                     __end_of_CONFIG_INT_OSC:
  3588                           
  3589                           	psect	text20
  3590     0697                     __ptext20:	
  3591 ;; *************** function _CONFIG_ADC_PINS *****************
  3592 ;; Defined at:
  3593 ;;		line 19 in file "config.c"
  3594 ;; Parameters:    Size  Location     Type
  3595 ;;		None
  3596 ;; Auto vars:     Size  Location     Type
  3597 ;;		None
  3598 ;; Return value:  Size  Location     Type
  3599 ;;                  1    wreg      unsigned char 
  3600 ;; Registers used:
  3601 ;;		wreg
  3602 ;; Tracked objects:
  3603 ;;		On entry : B1F/4
  3604 ;;		On exit  : B1F/1
  3605 ;;		Unchanged: B00/0
  3606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3607 ;;      Params:         0       0       0       0
  3608 ;;      Locals:         0       0       0       0
  3609 ;;      Temps:          0       0       0       0
  3610 ;;      Totals:         0       0       0       0
  3611 ;;Total ram usage:        0 bytes
  3612 ;; Hardware stack levels used: 1
  3613 ;; Hardware stack levels required when called: 2
  3614 ;; This function calls:
  3615 ;;		Nothing
  3616 ;; This function is called by:
  3617 ;;		_CONFIG_SYSTEM
  3618 ;; This function uses a non-reentrant model
  3619 ;;
  3620                           
  3621     0697                     _CONFIG_ADC_PINS:	
  3622                           ;psect for function _CONFIG_ADC_PINS
  3623                           
  3624                           
  3625                           ;config.c: 20:     ADCON1 = 0b10100000;
  3626                           
  3627                           ;incstack = 0
  3628                           ; Regs used in _CONFIG_ADC_PINS: [wreg]
  3629     0697  30A0               	movlw	160
  3630     0698  0021               	movlb	1	; select bank1
  3631     0699  009E               	movwf	30	;volatile
  3632     069A  0008               	return
  3633     069B                     __end_of_CONFIG_ADC_PINS:
  3634                           
  3635                           	psect	intentry
  3636     0004                     __pintentry:	
  3637 ;; *************** function _INTERRUPT_InterruptManager *****************
  3638 ;; Defined at:
  3639 ;;		line 30 in file "main.c"
  3640 ;; Parameters:    Size  Location     Type
  3641 ;;		None
  3642 ;; Auto vars:     Size  Location     Type
  3643 ;;		None
  3644 ;; Return value:  Size  Location     Type
  3645 ;;                  1    wreg      void 
  3646 ;; Registers used:
  3647 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3648 ;; Tracked objects:
  3649 ;;		On entry : 0/0
  3650 ;;		On exit  : 1D/0
  3651 ;;		Unchanged: 0/0
  3652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3653 ;;      Params:         0       0       0       0
  3654 ;;      Locals:         0       0       0       0
  3655 ;;      Temps:          2       0       0       0
  3656 ;;      Totals:         2       0       0       0
  3657 ;;Total ram usage:        2 bytes
  3658 ;; Hardware stack levels used: 1
  3659 ;; Hardware stack levels required when called: 1
  3660 ;; This function calls:
  3661 ;;		_SET_DUTY_CCP3
  3662 ;; This function is called by:
  3663 ;;		Interrupt level 1
  3664 ;; This function uses a non-reentrant model
  3665 ;;
  3666                           
  3667     0004                     _INTERRUPT_InterruptManager:
  3668                           
  3669                           ;incstack = 0
  3670     0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  3671                           
  3672                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3673     0005  3180               	pagesel	$
  3674                           
  3675                           ;main.c: 31:     TMR0 = (uint8_t)final_TMR0;
  3676     0006  0020               	movlb	0	; select bank0
  3677     0007  082E               	movf	_final_TMR0,w	;volatile
  3678     0008  0095               	movwf	21	;volatile
  3679                           
  3680                           ;main.c: 32:     if(TMR0IF == 1){
  3681     0009  1D0B               	btfss	11,2	;volatile
  3682     000A  28DB               	goto	i1l96
  3683                           
  3684                           ;main.c: 33:     GIE = 0;
  3685     000B  138B               	bcf	11,7	;volatile
  3686                           
  3687                           ;main.c: 34:     LATC5 = 1;
  3688     000C  0022               	movlb	2	; select bank2
  3689     000D  168E               	bsf	14,5	;volatile
  3690                           
  3691                           ;main.c: 35:     TMR0IF = 0;
  3692     000E  110B               	bcf	11,2	;volatile
  3693                           
  3694                           ;main.c: 37:     if(current_waveshape == 0){
  3695     000F  0878               	movf	_current_waveshape,w	;volatile
  3696     0010  1D03               	btfss	3,2
  3697     0011  2822               	goto	i1l1631
  3698                           
  3699                           ;main.c: 38:         duty = tri_table_one_quadrant[current_one_quadrant_index];
  3700     0012  0877               	movf	_current_one_quadrant_index,w	;volatile
  3701     0013  00F4               	movwf	??_INTERRUPT_InterruptManager
  3702     0014  01F5               	clrf	??_INTERRUPT_InterruptManager+1
  3703     0015  35F4               	lslf	??_INTERRUPT_InterruptManager,f
  3704     0016  0DF5               	rlf	??_INTERRUPT_InterruptManager+1,f
  3705     0017  30F7               	movlw	low _tri_table_one_quadrant
  3706     0018  0774               	addwf	??_INTERRUPT_InterruptManager,w
  3707     0019  0084               	movwf	4
  3708     001A  3000               	movlw	high _tri_table_one_quadrant
  3709     001B  3D75               	addwfc	??_INTERRUPT_InterruptManager+1,w
  3710     001C  3880               	iorlw	128
  3711     001D  0085               	movwf	5
  3712     001E  3F00               	moviw [0]fsr0
  3713     001F  00F9               	movwf	_duty	;volatile
  3714     0020  3F01               	moviw [1]fsr0
  3715     0021  283C               	goto	L1
  3716     0022                     i1l1631:	
  3717                           ;main.c: 39:     }
  3718                           
  3719     0022  0378               	decf	_current_waveshape,w	;volatile
  3720     0023  1D03               	btfss	3,2
  3721     0024  2835               	goto	i1l1635
  3722                           
  3723                           ;main.c: 41:         duty = sine_table_one_quadrant[current_one_quadrant_index];
  3724     0025  0877               	movf	_current_one_quadrant_index,w	;volatile
  3725     0026  00F4               	movwf	??_INTERRUPT_InterruptManager
  3726     0027  01F5               	clrf	??_INTERRUPT_InterruptManager+1
  3727     0028  35F4               	lslf	??_INTERRUPT_InterruptManager,f
  3728     0029  0DF5               	rlf	??_INTERRUPT_InterruptManager+1,f
  3729     002A  30F9               	movlw	low _sine_table_one_quadrant
  3730     002B  0774               	addwf	??_INTERRUPT_InterruptManager,w
  3731     002C  0084               	movwf	4
  3732     002D  3001               	movlw	high _sine_table_one_quadrant
  3733     002E  3D75               	addwfc	??_INTERRUPT_InterruptManager+1,w
  3734     002F  3880               	iorlw	128
  3735     0030  0085               	movwf	5
  3736     0031  3F00               	moviw [0]fsr0
  3737     0032  00F9               	movwf	_duty	;volatile
  3738     0033  3F01               	moviw [1]fsr0
  3739     0034  283C               	goto	L1
  3740     0035                     i1l1635:	
  3741                           ;main.c: 42:     }
  3742                           
  3743     0035  3002               	movlw	2
  3744     0036  0678               	xorwf	_current_waveshape,w	;volatile
  3745     0037  1D03               	btfss	3,2
  3746     0038  283D               	goto	i1l1639
  3747                           
  3748                           ;main.c: 44:         duty = 1023;
  3749     0039  30FF               	movlw	255
  3750     003A  00F9               	movwf	_duty	;volatile
  3751     003B  3003               	movlw	3
  3752     003C                     L1:
  3753     003C  00FA               	movwf	_duty+1	;volatile
  3754     003D                     i1l1639:
  3755                           
  3756                           ;main.c: 46:     if(current_one_quadrant_index == 128){
  3757     003D  3080               	movlw	128
  3758     003E  0677               	xorwf	_current_one_quadrant_index,w	;volatile
  3759     003F  1D03               	btfss	3,2
  3760     0040  2844               	goto	i1l1643
  3761                           
  3762                           ;main.c: 47:         current_quadrant = 1;
  3763     0041  3001               	movlw	1
  3764     0042  0020               	movlb	0	; select bank0
  3765     0043  00BF               	movwf	_current_quadrant	;volatile
  3766     0044                     i1l1643:
  3767                           
  3768                           ;main.c: 49:     if(current_one_quadrant_index == 0){
  3769     0044  0877               	movf	_current_one_quadrant_index,w	;volatile
  3770     0045  1D03               	btfss	3,2
  3771     0046  2850               	goto	i1l1653
  3772                           
  3773                           ;main.c: 50:         current_quadrant = 0;
  3774     0047  0020               	movlb	0	; select bank0
  3775     0048  01BF               	clrf	_current_quadrant	;volatile
  3776                           
  3777                           ;main.c: 51:         if(current_halfcycle == 0){
  3778     0049  0876               	movf	_current_halfcycle,w	;volatile
  3779     004A  1D03               	btfss	3,2
  3780     004B  284F               	goto	i1l1651
  3781                           
  3782                           ;main.c: 52:             current_halfcycle = 1;
  3783     004C  3001               	movlw	1
  3784     004D  00F6               	movwf	_current_halfcycle	;volatile
  3785                           
  3786                           ;main.c: 53:         }
  3787     004E  2850               	goto	i1l1653
  3788     004F                     i1l1651:
  3789                           
  3790                           ;main.c: 55:             current_halfcycle = 0;
  3791     004F  01F6               	clrf	_current_halfcycle	;volatile
  3792     0050                     i1l1653:
  3793                           
  3794                           ;main.c: 58:         if(current_quadrant == 0){
  3795     0050  0020               	movlb	0	; select bank0
  3796     0051  083F               	movf	_current_quadrant,w	;volatile
  3797     0052  1D03               	btfss	3,2
  3798     0053  2859               	goto	i1l1657
  3799                           
  3800                           ;main.c: 59:             current_one_quadrant_index++;
  3801     0054  3001               	movlw	1
  3802     0055  00F4               	movwf	??_INTERRUPT_InterruptManager
  3803     0056  0874               	movf	??_INTERRUPT_InterruptManager,w
  3804     0057  07F7               	addwf	_current_one_quadrant_index,f	;volatile
  3805                           
  3806                           ;main.c: 60:         }
  3807     0058  285B               	goto	i1l90
  3808     0059                     i1l1657:
  3809                           
  3810                           ;main.c: 62:             current_one_quadrant_index--;
  3811     0059  3001               	movlw	1
  3812     005A  02F7               	subwf	_current_one_quadrant_index,f	;volatile
  3813     005B                     i1l90:	
  3814                           ;main.c: 63:         }
  3815                           
  3816                           
  3817                           ;main.c: 64:         if(current_halfcycle == 1){
  3818     005B  0376               	decf	_current_halfcycle,w	;volatile
  3819     005C  1D03               	btfss	3,2
  3820     005D  2868               	goto	i1l91
  3821                           
  3822                           ;main.c: 65:         duty = 1023 - duty;
  3823     005E  30FF               	movlw	255
  3824     005F  00F4               	movwf	??_INTERRUPT_InterruptManager
  3825     0060  3003               	movlw	3
  3826     0061  00F5               	movwf	??_INTERRUPT_InterruptManager+1
  3827     0062  0879               	movf	_duty,w	;volatile
  3828     0063  0274               	subwf	??_INTERRUPT_InterruptManager,w
  3829     0064  00F9               	movwf	_duty	;volatile
  3830     0065  087A               	movf	_duty+1,w	;volatile
  3831     0066  3B75               	subwfb	??_INTERRUPT_InterruptManager+1,w
  3832     0067  00FA               	movwf	_duty+1	;volatile
  3833     0068                     i1l91:	
  3834                           ;main.c: 66:         }
  3835                           
  3836                           
  3837                           ;main.c: 70:         if(current_depth == 255){
  3838     0068  0A35               	incf	_current_depth,w	;volatile
  3839     0069  0436               	iorwf	_current_depth+1,w	;volatile
  3840     006A  1D03               	btfss	3,2
  3841     006B  2875               	goto	i1l1663
  3842                           
  3843                           ;main.c: 71:             duty = 1023 - duty;
  3844     006C  30FF               	movlw	255
  3845     006D  00F4               	movwf	??_INTERRUPT_InterruptManager
  3846     006E  3003               	movlw	3
  3847     006F  00F5               	movwf	??_INTERRUPT_InterruptManager+1
  3848     0070  0879               	movf	_duty,w	;volatile
  3849     0071  0274               	subwf	??_INTERRUPT_InterruptManager,w
  3850     0072  00F9               	movwf	_duty	;volatile
  3851     0073  087A               	movf	_duty+1,w	;volatile
  3852     0074  28CF               	goto	L3
  3853     0075                     i1l1663:	
  3854                           ;main.c: 72:         }
  3855                           
  3856     0075  0835               	movf	_current_depth,w	;volatile
  3857     0076  0436               	iorwf	_current_depth+1,w	;volatile
  3858     0077  1903               	btfsc	3,2
  3859     0078  28D1               	goto	i1l1669
  3860                           
  3861                           ;main.c: 74:             duty_low_byte = duty & 0xFF;
  3862     0079  0879               	movf	_duty,w	;volatile
  3863     007A  00BE               	movwf	_duty_low_byte	;volatile
  3864                           
  3865                           ;main.c: 75:             duty_high_byte = duty >> 8;
  3866     007B  087A               	movf	_duty+1,w	;volatile
  3867     007C  00BD               	movwf	_duty_high_byte	;volatile
  3868     007D  01A2               	clrf	34	;# 
  3869     007E  01A0               	clrf	32	;# 
  3870     007F  1003               	bcf	3,0	;# 
  3871     0080  0835               	movf	_current_depth,w	;# 
  3872     0081  183E               	btfsc	_duty_low_byte,0	;# 
  3873     0082  07A2               	addwf	34,f	;# 
  3874     0083  0CA2               	rrf	34,f	;# 
  3875     0084  0CA0               	rrf	32,f	;# 
  3876     0085  18BE               	btfsc	_duty_low_byte,1	;# 
  3877     0086  07A2               	addwf	34,f	;# 
  3878     0087  0CA2               	rrf	34,f	;# 
  3879     0088  0CA0               	rrf	32,f	;# 
  3880     0089  193E               	btfsc	_duty_low_byte,2	;# 
  3881     008A  07A2               	addwf	34,f	;# 
  3882     008B  0CA2               	rrf	34,f	;# 
  3883     008C  0CA0               	rrf	32,f	;# 
  3884     008D  19BE               	btfsc	_duty_low_byte,3	;# 
  3885     008E  07A2               	addwf	34,f	;# 
  3886     008F  0CA2               	rrf	34,f	;# 
  3887     0090  0CA0               	rrf	32,f	;# 
  3888     0091  1A3E               	btfsc	_duty_low_byte,4	;# 
  3889     0092  07A2               	addwf	34,f	;# 
  3890     0093  0CA2               	rrf	34,f	;# 
  3891     0094  0CA0               	rrf	32,f	;# 
  3892     0095  1ABE               	btfsc	_duty_low_byte,5	;# 
  3893     0096  07A2               	addwf	34,f	;# 
  3894     0097  0CA2               	rrf	34,f	;# 
  3895     0098  0CA0               	rrf	32,f	;# 
  3896     0099  1B3E               	btfsc	_duty_low_byte,6	;# 
  3897     009A  07A2               	addwf	34,f	;# 
  3898     009B  0CA2               	rrf	34,f	;# 
  3899     009C  0CA0               	rrf	32,f	;# 
  3900     009D  1BBE               	btfsc	_duty_low_byte,7	;# 
  3901     009E  07A2               	addwf	34,f	;# 
  3902     009F  0CA2               	rrf	34,f	;# 
  3903     00A0  0CA0               	rrf	32,f	;# 
  3904     00A1  01A1               	clrf	33	;# 
  3905     00A2  183D               	btfsc	_duty_high_byte,0	;# 
  3906     00A3  07A2               	addwf	34,f	;# 
  3907     00A4  0CA2               	rrf	34,f	;# 
  3908     00A5  0CA1               	rrf	33,f	;# 
  3909     00A6  18BD               	btfsc	_duty_high_byte,1	;# 
  3910     00A7  07A2               	addwf	34,f	;# 
  3911     00A8  0CA2               	rrf	34,f	;# 
  3912     00A9  0CA1               	rrf	33,f	;# 
  3913     00AA  193D               	btfsc	_duty_high_byte,2	;# 
  3914     00AB  07A2               	addwf	34,f	;# 
  3915     00AC  0CA2               	rrf	34,f	;# 
  3916     00AD  0CA1               	rrf	33,f	;# 
  3917     00AE  19BD               	btfsc	_duty_high_byte,3	;# 
  3918     00AF  07A2               	addwf	34,f	;# 
  3919     00B0  0CA2               	rrf	34,f	;# 
  3920     00B1  0CA1               	rrf	33,f	;# 
  3921     00B2  1A3D               	btfsc	_duty_high_byte,4	;# 
  3922     00B3  07A2               	addwf	34,f	;# 
  3923     00B4  0CA2               	rrf	34,f	;# 
  3924     00B5  0CA1               	rrf	33,f	;# 
  3925     00B6  1ABD               	btfsc	_duty_high_byte,5	;# 
  3926     00B7  07A2               	addwf	34,f	;# 
  3927     00B8  0CA2               	rrf	34,f	;# 
  3928     00B9  0CA1               	rrf	33,f	;# 
  3929     00BA  1B3D               	btfsc	_duty_high_byte,6	;# 
  3930     00BB  07A2               	addwf	34,f	;# 
  3931     00BC  0CA2               	rrf	34,f	;# 
  3932     00BD  0CA1               	rrf	33,f	;# 
  3933     00BE  1BBD               	btfsc	_duty_high_byte,7	;# 
  3934     00BF  07A2               	addwf	34,f	;# 
  3935     00C0  0CA2               	rrf	34,f	;# 
  3936     00C1  0CA1               	rrf	33,f	;# 
  3937                           
  3938                           ;main.c: 110:             duty = 1023 - *top_two_bytes_ptr;
  3939     00C2  0020               	movlb	0	; select bank0
  3940     00C3  0853               	movf	_top_two_bytes_ptr,w
  3941     00C4  0086               	movwf	6
  3942     00C5  0854               	movf	_top_two_bytes_ptr+1,w
  3943     00C6  0087               	movwf	7
  3944     00C7  30FF               	movlw	255
  3945     00C8  00F4               	movwf	??_INTERRUPT_InterruptManager
  3946     00C9  3003               	movlw	3
  3947     00CA  00F5               	movwf	??_INTERRUPT_InterruptManager+1
  3948     00CB  3F40               	moviw [0]fsr1
  3949     00CC  0274               	subwf	??_INTERRUPT_InterruptManager,w
  3950     00CD  00F9               	movwf	_duty	;volatile
  3951     00CE  3F41               	moviw [1]fsr1
  3952     00CF                     L3:
  3953     00CF  3B75               	subwfb	??_INTERRUPT_InterruptManager+1,w
  3954     00D0  28D4               	goto	L2
  3955     00D1                     i1l1669:	
  3956                           ;main.c: 111:         }
  3957                           
  3958                           
  3959                           ;main.c: 113:             duty = 1023;
  3960     00D1  30FF               	movlw	255
  3961     00D2  00F9               	movwf	_duty	;volatile
  3962     00D3  3003               	movlw	3
  3963     00D4                     L2:
  3964     00D4  00FA               	movwf	_duty+1	;volatile
  3965                           
  3966                           ;main.c: 118:     SET_DUTY_CCP3(&duty);
  3967     00D5  3079               	movlw	(low (_duty| 0))& (0+255)
  3968     00D6  3185  25FA         	fcall	_SET_DUTY_CCP3
  3969                           
  3970                           ;main.c: 121:     LATC5 = 0;
  3971     00D8  0022               	movlb	2	; select bank2
  3972     00D9  128E               	bcf	14,5	;volatile
  3973                           
  3974                           ;main.c: 122:     GIE = 1;
  3975     00DA  178B               	bsf	11,7	;volatile
  3976     00DB                     i1l96:
  3977     00DB  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  3978     00DC  0009               	retfie
  3979     00DD                     __end_of_INTERRUPT_InterruptManager:
  3980                           
  3981                           	psect	text22
  3982     05FA                     __ptext22:	
  3983 ;; *************** function _SET_DUTY_CCP3 *****************
  3984 ;; Defined at:
  3985 ;;		line 44 in file "system.c"
  3986 ;; Parameters:    Size  Location     Type
  3987 ;;  duty_ptr        1    wreg     PTR volatile unsigned sh
  3988 ;;		 -> duty(2), 
  3989 ;; Auto vars:     Size  Location     Type
  3990 ;;  duty_ptr        1    3[COMMON] PTR volatile unsigned sh
  3991 ;;		 -> duty(2), 
  3992 ;;  temp            1    2[COMMON] unsigned char 
  3993 ;; Return value:  Size  Location     Type
  3994 ;;                  1    wreg      unsigned char 
  3995 ;; Registers used:
  3996 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3997 ;; Tracked objects:
  3998 ;;		On entry : 1F/0
  3999 ;;		On exit  : 1F/6
  4000 ;;		Unchanged: 0/0
  4001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4002 ;;      Params:         0       0       0       0
  4003 ;;      Locals:         2       0       0       0
  4004 ;;      Temps:          2       0       0       0
  4005 ;;      Totals:         4       0       0       0
  4006 ;;Total ram usage:        4 bytes
  4007 ;; Hardware stack levels used: 1
  4008 ;; This function calls:
  4009 ;;		Nothing
  4010 ;; This function is called by:
  4011 ;;		_INTERRUPT_InterruptManager
  4012 ;; This function uses a non-reentrant model
  4013 ;;
  4014                           
  4015     05FA                     _SET_DUTY_CCP3:	
  4016                           ;psect for function _SET_DUTY_CCP3
  4017                           
  4018                           
  4019                           ;incstack = 0
  4020                           ; Regs used in _SET_DUTY_CCP3: [wreg+fsr1l+fsr1h+status,2+status,0]
  4021                           ;SET_DUTY_CCP3@duty_ptr stored from wreg
  4022     05FA  00F3               	movwf	SET_DUTY_CCP3@duty_ptr
  4023                           
  4024                           ;system.c: 46:     CCPR3L = (uint8_t)(*duty_ptr >> 2);
  4025     05FB  0873               	movf	SET_DUTY_CCP3@duty_ptr,w
  4026     05FC  0086               	movwf	6
  4027     05FD  0187               	clrf	7
  4028     05FE  3F40               	moviw [0]fsr1
  4029     05FF  00F0               	movwf	??_SET_DUTY_CCP3
  4030     0600  3F41               	moviw [1]fsr1
  4031     0601  00F1               	movwf	??_SET_DUTY_CCP3+1
  4032     0602  36F1               	lsrf	??_SET_DUTY_CCP3+1,f
  4033     0603  0CF0               	rrf	??_SET_DUTY_CCP3,f
  4034     0604  36F1               	lsrf	??_SET_DUTY_CCP3+1,f
  4035     0605  0CF0               	rrf	??_SET_DUTY_CCP3,f
  4036     0606  0870               	movf	??_SET_DUTY_CCP3,w
  4037     0607  0026               	movlb	6	; select bank6
  4038     0608  0091               	movwf	17	;volatile
  4039                           
  4040                           ;system.c: 47:     uint8_t temp = *duty_ptr % 0b100;
  4041     0609  0873               	movf	SET_DUTY_CCP3@duty_ptr,w
  4042     060A  0086               	movwf	6
  4043     060B  0187               	clrf	7
  4044     060C  0801               	movf	1,w
  4045     060D  3903               	andlw	3
  4046     060E  00F2               	movwf	SET_DUTY_CCP3@temp
  4047                           
  4048                           ;system.c: 48:     CCP3CON = CCP3CON | ((uint8_t)(temp << 4));
  4049     060F  0872               	movf	SET_DUTY_CCP3@temp,w
  4050     0610  00F0               	movwf	??_SET_DUTY_CCP3
  4051     0611  3003               	movlw	3
  4052     0612                     u95_25:
  4053     0612  35F0               	lslf	??_SET_DUTY_CCP3,f
  4054     0613  3EFF               	addlw	-1
  4055     0614  1D03               	skipz
  4056     0615  2E12               	goto	u95_25
  4057     0616  3570               	lslf	??_SET_DUTY_CCP3,w
  4058     0617  0413               	iorwf	19,w	;volatile
  4059     0618  0093               	movwf	19	;volatile
  4060     0619  0008               	return
  4061     061A                     __end_of_SET_DUTY_CCP3:
  4062     007E                     btemp	set	126	;btemp
  4063     007E                     int$flags	set	126
  4064     007E                     wtemp0	set	126
  4065                           
  4066                           	psect	config
  4067                           
  4068                           ;Config register CONFIG1 @ 0x8007
  4069                           ;	Oscillator Selection
  4070                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  4071                           ;	Watchdog Timer Enable
  4072                           ;	WDTE = OFF, WDT disabled
  4073                           ;	Power-up Timer Enable
  4074                           ;	PWRTE = OFF, PWRT disabled
  4075                           ;	MCLR Pin Function Select
  4076                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  4077                           ;	Flash Program Memory Code Protection
  4078                           ;	CP = OFF, Program memory code protection is disabled
  4079                           ;	Data Memory Code Protection
  4080                           ;	CPD = OFF, Data memory code protection is disabled
  4081                           ;	Brown-out Reset Enable
  4082                           ;	BOREN = OFF, Brown-out Reset disabled
  4083                           ;	Clock Out Enable
  4084                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  4085                           ;	Internal/External Switchover
  4086                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4087                           ;	Fail-Safe Clock Monitor Enable
  4088                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4089     8007                     	org	32775
  4090     8007  09E4               	dw	2532
  4091                           
  4092                           ;Config register CONFIG2 @ 0x8008
  4093                           ;	Flash Memory Self-Write Protection
  4094                           ;	WRT = OFF, Write protection off
  4095                           ;	PLL Enable
  4096                           ;	PLLEN = ON, 4x PLL enabled
  4097                           ;	Stack Overflow/Underflow Reset Enable
  4098                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  4099                           ;	Brown-out Reset Voltage Selection
  4100                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  4101                           ;	In-Circuit Debugger Mode
  4102                           ;	DEBUG = ON, In-Circuit Debugger enabled, ICSPCLK and ICSPDAT are dedicated to the debu
      +                          gger
  4103                           ;	Low-Voltage Programming Enable
  4104                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  4105     8008                     	org	32776
  4106     8008  0FFF               	dw	4095

Data Sizes:
    Strings     0
    Constant    537
    Data        2
    BSS         37
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      11
    BANK0            80     19      53
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    DO_ADC@modifier	PTR const unsigned char  size(2) Largest target is 1
		 -> depth_adc_config_value(CODE[1]), speed_adc_config_value(CODE[1]), symmetry_adc_config_value(CODE[1]), waveshape_adc_config_value(CODE[1]), 

    SET_DUTY_CCP3@duty_ptr	PTR volatile unsigned short  size(1) Largest target is 2
		 -> duty(COMMON[2]), 

    top_two_bytes_ptr	PTR unsigned short  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_SET_DUTY_CCP3

Critical Paths under _main in BANK0

    _main->_PROCESS_TMR0_AND_PRESCALER_ADJUST
    _PROCESS_TMR0_AND_PRESCALER_ADJUST->_LENGTHEN_PERIOD
    _PROCESS_TMR0_AND_PRESCALER_ADJUST->_SHORTEN_PERIOD
    _SHORTEN_PERIOD->___tmul
    _LENGTHEN_PERIOD->___tmul
    _ADJUST_AND_SET_PRESCALER->_CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1
    _PROCESS_RAW_SPEED_AND_PRESCALER->___lmul
    _GET_CURRENT_POT_VALUES->_DETERMINE_WAVESHAPE
    _DETERMINE_WAVESHAPE->_DO_ADC

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2749
                      _CONFIG_SYSTEM
              _CONFIG_TMR0_INTERRUPT
             _GET_CURRENT_POT_VALUES
    _PROCESS_RAW_SPEED_AND_PRESCALER
  _PROCESS_TMR0_AND_PRESCALER_ADJUST
                   _TURN_ON_CCP3_PWM
 ---------------------------------------------------------------------------------
 (1) _TURN_ON_CCP3_PWM                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PROCESS_TMR0_AND_PRESCALER_ADJUST                    1     1      0    1649
                                             18 BANK0      1     1      0
           _ADJUST_AND_SET_PRESCALER
                    _LENGTHEN_PERIOD
                     _SHORTEN_PERIOD
 ---------------------------------------------------------------------------------
 (2) _SHORTEN_PERIOD                                       9     9      0     746
                                              9 BANK0      9     9      0
                             ___tmul
 ---------------------------------------------------------------------------------
 (2) _LENGTHEN_PERIOD                                      9     9      0     813
                                              9 BANK0      9     9      0
                             ___tmul
 ---------------------------------------------------------------------------------
 (3) ___tmul                                               9     3      6     700
                                              0 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (2) _ADJUST_AND_SET_PRESCALER                             0     0      0       0
 _CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1
                 _TURN_PRESCALER_OFF
                  _TURN_PRESCALER_ON
 ---------------------------------------------------------------------------------
 (3) _TURN_PRESCALER_ON                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TURN_PRESCALER_OFF                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1                   3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _PROCESS_RAW_SPEED_AND_PRESCALER                      6     6      0     289
                                             12 BANK0      6     6      0
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     244
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) _GET_CURRENT_POT_VALUES                               3     3      0     811
                                              8 BANK0      3     3      0
                _DETERMINE_WAVESHAPE
                             _DO_ADC
 ---------------------------------------------------------------------------------
 (2) _DETERMINE_WAVESHAPE                                  2     2      0     439
                                              6 BANK0      2     2      0
                             _DO_ADC
 ---------------------------------------------------------------------------------
 (2) _DO_ADC                                               6     4      2     372
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _CONFIG_TMR0_INTERRUPT                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CONFIG_SYSTEM                                        0     0      0       0
                    _CONFIG_ADC_PINS
                     _CONFIG_INT_OSC
                       _CONFIG_PORTS
                    _CONFIG_PWM_CCP3
 ---------------------------------------------------------------------------------
 (2) _CONFIG_PWM_CCP3                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CONFIG_PORTS                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CONFIG_INT_OSC                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CONFIG_ADC_PINS                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           2     2      0     182
                                              4 COMMON     2     2      0
                      _SET_DUTY_CCP3
 ---------------------------------------------------------------------------------
 (5) _SET_DUTY_CCP3                                        4     4      0     182
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CONFIG_SYSTEM
     _CONFIG_ADC_PINS
     _CONFIG_INT_OSC
     _CONFIG_PORTS
     _CONFIG_PWM_CCP3
   _CONFIG_TMR0_INTERRUPT
   _GET_CURRENT_POT_VALUES
     _DETERMINE_WAVESHAPE
       _DO_ADC
     _DO_ADC
   _PROCESS_RAW_SPEED_AND_PRESCALER
     ___lmul
   _PROCESS_TMR0_AND_PRESCALER_ADJUST
     _ADJUST_AND_SET_PRESCALER
       _CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1
       _TURN_PRESCALER_OFF
       _TURN_PRESCALER_ON
     _LENGTHEN_PERIOD
       ___tmul
     _SHORTEN_PERIOD
       ___tmul
   _TURN_ON_CCP3_PWM

 _INTERRUPT_InterruptManager (ROOT)
   _SET_DUTY_CCP3

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       B       2       78.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      40       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     13      35       6       66.2%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      40      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Sun Jan 28 12:22:50 2024

                                                      r1 0020  
                                                      r2 0021  
                                                      r3 0022  
                                                     _NO 06A2  
                                                    l160 059E  
                                                    l312 0420  
                                                    l175 0680  
                                                    _GIE 005F  
                                                    _PR2 001B  
                                                    u415 058B  
                                                    u605 034E  
                                                    u455 05E3  
                                                    u625 0565  
                                                    u705 03D8  
                                                    u465 05E9  
                                                    u635 056C  
                                                    u715 03E1  
                                                    u575 04F3  
                                                    u735 040F  
                                                    u585 0330  
                                                    u675 0546  
                                                    u595 0345  
                                                    u685 03A2  
                                                    _YES 06A3  
                                                    wreg 0009  
                                                   l1341 05C2  
                                                   l1405 04AD  
                                                   l1343 05C9  
                                                   l1511 042B  
                                                   l1441 0564  
                                                   l1281 064C  
                                                   l1513 042F  
                                                   l1505 043A  
                                                   l1347 05CB  
                                                   l1531 044E  
                                                   l1437 055A  
                                                   l1381 047C  
                                                   l1429 0369  
                                                   l1525 043D  
                                                   l1375 046A  
                                                   l1295 05DA  
                                                   l1607 062F  
                                                   _C1ON 088F  
                                                   l1369 0467  
                                                   l1299 05E2  
                                                   l1485 03CD  
                                                   l1399 049A  
                                                   l1495 0403  
                                                   _ADON 04E8  
                                                   u1077 0599  
                                                   i1l90 005B  
                                                   i1l91 0068  
                                                   i1l96 00DB  
                                                   _TMR0 0015  
                                                   _WPUC 020E  
                                                   _main 061A  
                                                   _duty 0079  
                                                   fsr0h 0005  
                                                   fsr1h 0007  
                                                   indf0 0000  
                                                   fsr0l 0004  
                                                   indf1 0001  
                                                   fsr1l 0006  
                                                   btemp 007E  
                                      _current_waveshape 0078  
                                                   start 00DD  
                                  _CONFIG_TMR0_INTERRUPT 06A0  
                                       __end_of_NEGATIVE 06AA  
                                   __end_of_CONFIG_PORTS 0676  
             __end_of_CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1 064E  
                   ??_CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1 0040  
                    ?_CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1 0070  
                     _CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1 0639  
                                                  STATUS 0003  
                                                  ?_main 0070  
                                                  _T2CON 001C  
                                                  _LATC5 0875  
                                                  _SRLEN 08D7  
                                                  _TRISC 008E  
                                                  u95_25 0612  
                                    ___lmul@multiplicand 0044  
                                       __end_of_POSITIVE 06AB  
                               ??_GET_CURRENT_POT_VALUES 0048  
                                     _SHORTEN_PERIOD$851 004F  
                                                  status 0003  
                                                  wtemp0 007E  
                             _current_one_quadrant_index 0077  
                                        __initialization 00DF  
                                           __end_of_main 0639  
                            ?_INTERRUPT_InterruptManager 0070  
                                      __end_of_DONT_CARE 06A5  
                                                 ??_main 0053  
                                  __end_of_DIVIDE_BY_TWO 06A8  
                                 _speed_adc_config_value 06AD  
                                  __end_of_CONFIG_SYSTEM 066D  
                                                 _ADCON0 009D  
                                                 _ADCON1 009E  
                                                 _ADRESH 009C  
                                                 _ADRESL 009B  
                                                 _CCPR3L 0311  
                                                 _ANSELC 018E  
                                                 _DO_ADC 0581  
                                                 i1l1631 0022  
                                                 i1l1651 004F  
                                                 i1l1643 0044  
                                                 i1l1635 0035  
                                                 i1l1653 0050  
                                                 i1l1663 0075  
                                                 i1l1639 003D  
                                                 i1l1657 0059  
                                                 i1l1669 00D1  
                                                 _OSCCON 0099  
                                                 _TMR0IE 005D  
                                                 _TMR0IF 005A  
                                                 _TMR2IF 0089  
                                                 _TMR2ON 00E2  
                                                 _TRISA2 0462  
                                 ?_CONFIG_TMR0_INTERRUPT 0070  
                                         DO_ADC@modifier 0040  
                            __end_of_DETERMINE_WAVESHAPE 05D4  
                      __end_of_symmetry_adc_config_value 06AC  
                                                 ___lmul 0552  
                                                 ___tmul 05D4  
                                  __end_of_SET_DUTY_CCP3 061A  
                              ?_ADJUST_AND_SET_PRESCALER 0070  
                                      ?_TURN_ON_CCP3_PWM 0070  
                                      ??_CONFIG_ADC_PINS 0040  
                                _current_speed_linear_32 0024  
                                     ??_TURN_ON_CCP3_PWM 0040  
                                __end_of__initialization 00F3  
                                         _SHORTEN_PERIOD 04BE  
                                         _DIVIDE_BY_FOUR 06A5  
                                         _CONFIG_INT_OSC 068C  
                                         __pcstackCOMMON 0070  
                                           __pidataBANK0 069E  
                                             __end_of_NO 06A3  
                                 _tri_table_one_quadrant 00F7  
                                      ??_CONFIG_PWM_CCP3 0040  
                                      _top_two_bytes_ptr 0053  
                                          _current_depth 0035  
                                             __pbssBANK0 0020  
                                                ?_DO_ADC 0040  
                                 __end_of_SHORTEN_PERIOD 050D  
                                           _CONFIG_PORTS 066D  
                                 __end_of_DIVIDE_BY_FOUR 06A6  
                                 __end_of_CONFIG_INT_OSC 0692  
                                     __end_of_DO_NOTHING 06A9  
                                             __pmaintext 061A  
                                 _GET_CURRENT_POT_VALUES 050D  
                                                ?___lmul 0040  
                                                ?___tmul 0040  
                                             __pintentry 0004  
       PROCESS_TMR0_AND_PRESCALER_ADJUST@symmetry_status 0052  
                                                _CCP3CON 0313  
                                         ___lmul@product 0048  
                                             _final_TMR0 002E  
                                  SET_DUTY_CCP3@duty_ptr 0073  
                                                _OSCTUNE 0098  
                                _sine_table_one_quadrant 01F9  
                                        ?_SHORTEN_PERIOD 0070  
                                        ?_CONFIG_INT_OSC 0070  
                                   _current_speed_linear 0033  
                                      _TURN_PRESCALER_ON 069B  
                              _base_prescaler_bits_index 003A  
                                                __ptext1 067E  
                                                __ptext2 03F4  
                                                __ptext3 04BE  
                                                __ptext4 02FB  
                                                __ptext5 05D4  
                                                __ptext6 045C  
                                                __ptext7 069B  
                                                __ptext8 0692  
                                                __ptext9 0639  
                                     ?_TURN_PRESCALER_ON 0070  
                                        _MULTIPLY_BY_TWO 06A6  
                __end_of_PROCESS_RAW_SPEED_AND_PRESCALER 03F4  
                      ??_PROCESS_RAW_SPEED_AND_PRESCALER 004C  
                       ?_PROCESS_RAW_SPEED_AND_PRESCALER 0070  
                        _PROCESS_RAW_SPEED_AND_PRESCALER 0378  
                                              _DONT_CARE 06A4  
                                    ??_TURN_PRESCALER_ON 0040  
                                                clrloop0 0687  
                                   end_of_initialization 00F3  
                                ??_CONFIG_TMR0_INTERRUPT 0040  
                                          _duty_low_byte 003E  
                              __end_of_TURN_PRESCALER_ON 069E  
                         __end_of_speed_adc_config_value 06AE  
                       __end_of_ADJUST_AND_SET_PRESCALER 04BE  
                                 _depth_adc_config_value 06AC  
                                        _CONFIG_ADC_PINS 0697  
                                      ??_LENGTHEN_PERIOD 0049  
              __end_of_PROCESS_TMR0_AND_PRESCALER_ADJUST 045C  
                    ??_PROCESS_TMR0_AND_PRESCALER_ADJUST 0052  
                     ?_PROCESS_TMR0_AND_PRESCALER_ADJUST 0070  
                      _PROCESS_TMR0_AND_PRESCALER_ADJUST 03F4  
                                             DO_ADC@temp 0045  
                                         __end_of_DO_ADC 05AD  
                                      SET_DUTY_CCP3@temp 0072  
                                _prescaler_overflow_flag 0038  
                                       _current_quadrant 003F  
                             __end_of_TURN_PRESCALER_OFF 0697  
                                __end_of_MULTIPLY_BY_TWO 06A7  
                                        _CONFIG_PWM_CCP3 064E  
                                       _current_symmetry 002B  
                                         __end_of___lmul 0581  
                                         __end_of___tmul 05FA  
                                    start_initialization 00DF  
                                            __end_of_YES 06A4  
                                               ??_DO_ADC 0042  
                                ?_GET_CURRENT_POT_VALUES 0070  
                        __end_of_sine_table_one_quadrant 02FB  
                                __end_of_CONFIG_ADC_PINS 069B  
                                               ??___lmul 0048  
                                               ??___tmul 0046  
                         __end_of_tri_table_one_quadrant 01F9  
                                            __pdataBANK0 0053  
                                         ___tmul@product 0046  
                                       DO_ADC@adc_result 0043  
                               _ADJUST_AND_SET_PRESCALER 045C  
                                            __pbssCOMMON 0076  
                                              ___latbits 0001  
                                          _DIVIDE_BY_TWO 06A7  
                                          __pcstackBANK0 0040  
                                       ??_SHORTEN_PERIOD 0049  
                                          _CONFIG_SYSTEM 0661  
                                       ??_CONFIG_INT_OSC 0040  
                         __end_of_GET_CURRENT_POT_VALUES 0552  
                                __end_of_CONFIG_PWM_CCP3 0661  
                                         _prescaler_bits 0676  
                           ??_INTERRUPT_InterruptManager 0074  
                                           _how_many_128 003C  
                                          _SET_DUTY_CCP3 05FA  
                                               _CCPTMRS0 029E  
                                         ?_CONFIG_SYSTEM 0070  
                                       _prescaler_adjust 003B  
                                        _symmetry_status 0039  
                                               _NEGATIVE 06A9  
                     __end_of_waveshape_adc_config_value 06AF  
                             _waveshape_adc_config_value 06AE  
                          __end_of_CONFIG_TMR0_INTERRUPT 06A2  
                                              clear_ram0 0686  
                                               _GO_nDONE 04E9  
                                       _TURN_ON_CCP3_PWM 067E  
                                 __end_of_prescaler_bits 067E  
                                       ?_CONFIG_ADC_PINS 0070  
                                               _POSITIVE 06AA  
                                        _LENGTHEN_PERIOD 02FB  
                                         ?_SET_DUTY_CCP3 0070  
                                    ___tmul@multiplicand 0043  
                                      ___lmul@multiplier 0040  
                                    _DETERMINE_WAVESHAPE 05AD  
                                 DETERMINE_WAVESHAPE@ADC 0046  
                                       ?_CONFIG_PWM_CCP3 0070  
                         __end_of_depth_adc_config_value 06AD  
                                   ?_DETERMINE_WAVESHAPE 0070  
                                     _TURN_PRESCALER_OFF 0692  
                                        ??_CONFIG_SYSTEM 0040  
                                       _speed_control_32 0020  
                                               __ptext10 0378  
                                               __ptext11 0552  
                                               __ptext20 0697  
                                               __ptext12 050D  
                                               __ptext13 05AD  
                                               __ptext22 05FA  
                                               __ptext14 0581  
                                               __ptext15 06A0  
                                               __ptext16 0661  
                                               __ptext17 064E  
                                               __ptext18 066D  
                                               __ptext19 068C  
                                    ?_TURN_PRESCALER_OFF 0070  
PROCESS_RAW_SPEED_AND_PRESCALER@speed_control_subtracted 0050  
                                          ?_CONFIG_PORTS 0070  
                                         _duty_high_byte 003D  
                                          _speed_control 0031  
                                               _raw_TMR0 0028  
                                __end_of_LENGTHEN_PERIOD 0378  
                                  _prescaler_final_index 0037  
                                   ??_TURN_PRESCALER_OFF 0040  
                                               int$flags 007E  
                             ??_ADJUST_AND_SET_PRESCALER 0043  
                                  ??_DETERMINE_WAVESHAPE 0046  
                     __end_of_INTERRUPT_InterruptManager 00DD  
                             _INTERRUPT_InterruptManager 0004  
                                    _LENGTHEN_PERIOD$852 004C  
                                        ??_SET_DUTY_CCP3 0070  
                                             _DO_NOTHING 06A8  
                                         __pstringtext10 06A8  
                                         __pstringtext11 06A9  
                                         __pstringtext12 06AA  
                                         __pstringtext13 06AB  
                                         __pstringtext14 06AC  
                                         __pstringtext15 06AD  
                                         __pstringtext16 06AE  
                              _symmetry_adc_config_value 06AB  
                                         ??_CONFIG_PORTS 0040  
                                               intlevel1 0000  
                                      ___tmul@multiplier 0040  
                                          __pstringtext1 00F7  
                                          __pstringtext2 01F9  
                                          __pstringtext3 0676  
                                          __pstringtext4 06A2  
                                          __pstringtext5 06A3  
                                          __pstringtext6 06A4  
                                          __pstringtext7 06A5  
                                          __pstringtext8 06A6  
                                          __pstringtext9 06A7  
                                             _OPTION_REG 0095  
                               __end_of_TURN_ON_CCP3_PWM 0686  
                                      _current_halfcycle 0076  
            LENGTHEN_PERIOD@twofiftysix_minus_TMR0_final 004F  
             SHORTEN_PERIOD@twofiftysix_minus_TMR0_final 004C  
                                       ?_LENGTHEN_PERIOD 0070  
