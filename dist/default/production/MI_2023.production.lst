

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Wed Jan 24 13:05:34 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og9 
     1                           	processor	16F1824
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    15                           	psect	stringtext11,global,class=STRCODE,delta=2,noexec
    16                           	psect	stringtext12,global,class=STRCODE,delta=2,noexec
    17                           	psect	stringtext13,global,class=STRCODE,delta=2,noexec
    18                           	psect	stringtext14,global,class=STRCODE,delta=2,noexec
    19                           	psect	stringtext15,global,class=STRCODE,delta=2,noexec
    20                           	psect	stringtext16,global,class=STRCODE,delta=2,noexec
    21                           	psect	stringtext17,global,class=STRCODE,delta=2,noexec
    22                           	psect	stringtext18,global,class=STRCODE,delta=2,noexec
    23                           	psect	cinit,global,class=CODE,merge=1,delta=2
    24                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    25                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    26                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    27                           	psect	clrtext,global,class=CODE,delta=2
    28                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    29                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    30                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    31                           	psect	text1,local,class=CODE,merge=1,delta=2
    32                           	psect	text2,local,class=CODE,merge=1,delta=2
    33                           	psect	text3,local,class=CODE,merge=1,delta=2
    34                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text5,local,class=CODE,merge=1,delta=2
    36                           	psect	text6,local,class=CODE,merge=1,delta=2
    37                           	psect	text7,local,class=CODE,merge=1,delta=2
    38                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text9,local,class=CODE,merge=1,delta=2
    40                           	psect	text10,local,class=CODE,merge=1,delta=2
    41                           	psect	text11,local,class=CODE,merge=1,delta=2
    42                           	psect	text12,local,class=CODE,merge=1,delta=2
    43                           	psect	text13,local,class=CODE,merge=1,delta=2
    44                           	psect	text14,local,class=CODE,merge=1,delta=2
    45                           	psect	text15,local,class=CODE,merge=1,delta=2
    46                           	psect	text16,local,class=CODE,merge=1,delta=2
    47                           	psect	text17,local,class=CODE,merge=1,delta=2
    48                           	psect	text18,local,class=CODE,merge=1,delta=2
    49                           	psect	intentry,global,class=CODE,delta=2
    50                           	psect	text20,local,class=CODE,merge=1,delta=2
    51                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    52                           	dabs	1,0x7E,2
    53     0000                     
    54                           ; Generated 06/07/2023 GMT
    55                           ; 
    56                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    57                           ; All rights reserved.
    58                           ; 
    59                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    60                           ; 
    61                           ; Redistribution and use in source and binary forms, with or without modification, are
    62                           ; permitted provided that the following conditions are met:
    63                           ; 
    64                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    65                           ;        conditions and the following disclaimer.
    66                           ; 
    67                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    68                           ;        of conditions and the following disclaimer in the documentation and/or other
    69                           ;        materials provided with the distribution. Publication is not required when
    70                           ;        this file is used in an embedded application.
    71                           ; 
    72                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    73                           ;        software without specific prior written permission.
    74                           ; 
    75                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    76                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    77                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    78                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    79                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    80                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    81                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    82                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    83                           ; 
    84                           ; 
    85                           ; Code-generator required, PIC16F1824 Definitions
    86                           ; 
    87                           ; SFR Addresses
    88     0000                     	;# 
    89     0001                     	;# 
    90     0002                     	;# 
    91     0003                     	;# 
    92     0004                     	;# 
    93     0005                     	;# 
    94     0006                     	;# 
    95     0007                     	;# 
    96     0008                     	;# 
    97     0009                     	;# 
    98     000A                     	;# 
    99     000B                     	;# 
   100     000C                     	;# 
   101     000E                     	;# 
   102     0011                     	;# 
   103     0012                     	;# 
   104     0013                     	;# 
   105     0015                     	;# 
   106     0016                     	;# 
   107     0016                     	;# 
   108     0017                     	;# 
   109     0018                     	;# 
   110     0019                     	;# 
   111     001A                     	;# 
   112     001B                     	;# 
   113     001C                     	;# 
   114     001E                     	;# 
   115     001F                     	;# 
   116     008C                     	;# 
   117     008E                     	;# 
   118     0091                     	;# 
   119     0092                     	;# 
   120     0093                     	;# 
   121     0095                     	;# 
   122     0096                     	;# 
   123     0097                     	;# 
   124     0098                     	;# 
   125     0099                     	;# 
   126     009A                     	;# 
   127     009B                     	;# 
   128     009B                     	;# 
   129     009C                     	;# 
   130     009D                     	;# 
   131     009E                     	;# 
   132     010C                     	;# 
   133     010E                     	;# 
   134     0111                     	;# 
   135     0112                     	;# 
   136     0113                     	;# 
   137     0114                     	;# 
   138     0115                     	;# 
   139     0116                     	;# 
   140     0117                     	;# 
   141     0118                     	;# 
   142     0119                     	;# 
   143     011A                     	;# 
   144     011B                     	;# 
   145     011D                     	;# 
   146     011E                     	;# 
   147     018C                     	;# 
   148     018E                     	;# 
   149     0191                     	;# 
   150     0191                     	;# 
   151     0192                     	;# 
   152     0193                     	;# 
   153     0193                     	;# 
   154     0193                     	;# 
   155     0194                     	;# 
   156     0195                     	;# 
   157     0196                     	;# 
   158     0199                     	;# 
   159     019A                     	;# 
   160     019B                     	;# 
   161     019B                     	;# 
   162     019B                     	;# 
   163     019B                     	;# 
   164     019C                     	;# 
   165     019C                     	;# 
   166     019D                     	;# 
   167     019E                     	;# 
   168     019F                     	;# 
   169     020C                     	;# 
   170     020E                     	;# 
   171     0211                     	;# 
   172     0211                     	;# 
   173     0212                     	;# 
   174     0212                     	;# 
   175     0213                     	;# 
   176     0213                     	;# 
   177     0214                     	;# 
   178     0214                     	;# 
   179     0215                     	;# 
   180     0215                     	;# 
   181     0215                     	;# 
   182     0215                     	;# 
   183     0216                     	;# 
   184     0216                     	;# 
   185     0217                     	;# 
   186     0217                     	;# 
   187     0291                     	;# 
   188     0291                     	;# 
   189     0292                     	;# 
   190     0293                     	;# 
   191     0294                     	;# 
   192     0295                     	;# 
   193     0295                     	;# 
   194     0296                     	;# 
   195     0298                     	;# 
   196     0298                     	;# 
   197     0299                     	;# 
   198     029A                     	;# 
   199     029B                     	;# 
   200     029C                     	;# 
   201     029D                     	;# 
   202     029E                     	;# 
   203     029E                     	;# 
   204     0311                     	;# 
   205     0311                     	;# 
   206     0312                     	;# 
   207     0313                     	;# 
   208     0318                     	;# 
   209     0318                     	;# 
   210     0319                     	;# 
   211     031A                     	;# 
   212     038C                     	;# 
   213     038E                     	;# 
   214     0391                     	;# 
   215     0392                     	;# 
   216     0393                     	;# 
   217     039A                     	;# 
   218     039C                     	;# 
   219     039D                     	;# 
   220     039E                     	;# 
   221     039F                     	;# 
   222     0415                     	;# 
   223     0416                     	;# 
   224     0417                     	;# 
   225     041C                     	;# 
   226     041D                     	;# 
   227     041E                     	;# 
   228     0FE4                     	;# 
   229     0FE5                     	;# 
   230     0FE6                     	;# 
   231     0FE7                     	;# 
   232     0FE8                     	;# 
   233     0FE9                     	;# 
   234     0FEA                     	;# 
   235     0FEB                     	;# 
   236     0FED                     	;# 
   237     0FEE                     	;# 
   238     0FEF                     	;# 
   239     0020                     	;# 
   240     0021                     	;# 
   241     0022                     	;# 
   242     0023                     	;# 
   243     0024                     	;# 
   244     0025                     	;# 
   245     0000                     	;# 
   246     0001                     	;# 
   247     0002                     	;# 
   248     0003                     	;# 
   249     0004                     	;# 
   250     0005                     	;# 
   251     0006                     	;# 
   252     0007                     	;# 
   253     0008                     	;# 
   254     0009                     	;# 
   255     000A                     	;# 
   256     000B                     	;# 
   257     000C                     	;# 
   258     000E                     	;# 
   259     0011                     	;# 
   260     0012                     	;# 
   261     0013                     	;# 
   262     0015                     	;# 
   263     0016                     	;# 
   264     0016                     	;# 
   265     0017                     	;# 
   266     0018                     	;# 
   267     0019                     	;# 
   268     001A                     	;# 
   269     001B                     	;# 
   270     001C                     	;# 
   271     001E                     	;# 
   272     001F                     	;# 
   273     008C                     	;# 
   274     008E                     	;# 
   275     0091                     	;# 
   276     0092                     	;# 
   277     0093                     	;# 
   278     0095                     	;# 
   279     0096                     	;# 
   280     0097                     	;# 
   281     0098                     	;# 
   282     0099                     	;# 
   283     009A                     	;# 
   284     009B                     	;# 
   285     009B                     	;# 
   286     009C                     	;# 
   287     009D                     	;# 
   288     009E                     	;# 
   289     010C                     	;# 
   290     010E                     	;# 
   291     0111                     	;# 
   292     0112                     	;# 
   293     0113                     	;# 
   294     0114                     	;# 
   295     0115                     	;# 
   296     0116                     	;# 
   297     0117                     	;# 
   298     0118                     	;# 
   299     0119                     	;# 
   300     011A                     	;# 
   301     011B                     	;# 
   302     011D                     	;# 
   303     011E                     	;# 
   304     018C                     	;# 
   305     018E                     	;# 
   306     0191                     	;# 
   307     0191                     	;# 
   308     0192                     	;# 
   309     0193                     	;# 
   310     0193                     	;# 
   311     0193                     	;# 
   312     0194                     	;# 
   313     0195                     	;# 
   314     0196                     	;# 
   315     0199                     	;# 
   316     019A                     	;# 
   317     019B                     	;# 
   318     019B                     	;# 
   319     019B                     	;# 
   320     019B                     	;# 
   321     019C                     	;# 
   322     019C                     	;# 
   323     019D                     	;# 
   324     019E                     	;# 
   325     019F                     	;# 
   326     020C                     	;# 
   327     020E                     	;# 
   328     0211                     	;# 
   329     0211                     	;# 
   330     0212                     	;# 
   331     0212                     	;# 
   332     0213                     	;# 
   333     0213                     	;# 
   334     0214                     	;# 
   335     0214                     	;# 
   336     0215                     	;# 
   337     0215                     	;# 
   338     0215                     	;# 
   339     0215                     	;# 
   340     0216                     	;# 
   341     0216                     	;# 
   342     0217                     	;# 
   343     0217                     	;# 
   344     0291                     	;# 
   345     0291                     	;# 
   346     0292                     	;# 
   347     0293                     	;# 
   348     0294                     	;# 
   349     0295                     	;# 
   350     0295                     	;# 
   351     0296                     	;# 
   352     0298                     	;# 
   353     0298                     	;# 
   354     0299                     	;# 
   355     029A                     	;# 
   356     029B                     	;# 
   357     029C                     	;# 
   358     029D                     	;# 
   359     029E                     	;# 
   360     029E                     	;# 
   361     0311                     	;# 
   362     0311                     	;# 
   363     0312                     	;# 
   364     0313                     	;# 
   365     0318                     	;# 
   366     0318                     	;# 
   367     0319                     	;# 
   368     031A                     	;# 
   369     038C                     	;# 
   370     038E                     	;# 
   371     0391                     	;# 
   372     0392                     	;# 
   373     0393                     	;# 
   374     039A                     	;# 
   375     039C                     	;# 
   376     039D                     	;# 
   377     039E                     	;# 
   378     039F                     	;# 
   379     0415                     	;# 
   380     0416                     	;# 
   381     0417                     	;# 
   382     041C                     	;# 
   383     041D                     	;# 
   384     041E                     	;# 
   385     0FE4                     	;# 
   386     0FE5                     	;# 
   387     0FE6                     	;# 
   388     0FE7                     	;# 
   389     0FE8                     	;# 
   390     0FE9                     	;# 
   391     0FEA                     	;# 
   392     0FEB                     	;# 
   393     0FED                     	;# 
   394     0FEE                     	;# 
   395     0FEF                     	;# 
   396                           
   397                           	psect	idataBANK0
   398     07D9                     __pidataBANK0:
   399                           
   400                           ;initializer for _top_two_bytes_ptr
   401     07D9  3421               	retlw	33
   402     07DA  3400               	retlw	0
   403                           
   404                           	psect	stringtext1
   405     00EB                     __pstringtext1:
   406     00EB                     _shorten_period_log_table:
   407     00EB  3400               	retlw	0
   408     00EC  3401               	retlw	1
   409     00ED  34F5               	retlw	245
   410     00EE  3400               	retlw	0
   411     00EF  34EA               	retlw	234
   412     00F0  3400               	retlw	0
   413     00F1  34E0               	retlw	224
   414     00F2  3400               	retlw	0
   415     00F3  34D7               	retlw	215
   416     00F4  3400               	retlw	0
   417     00F5  34CE               	retlw	206
   418     00F6  3400               	retlw	0
   419     00F7  34C5               	retlw	197
   420     00F8  3400               	retlw	0
   421     00F9  34BC               	retlw	188
   422     00FA  3400               	retlw	0
   423     00FB  34B4               	retlw	180
   424     00FC  3400               	retlw	0
   425     00FD  34AD               	retlw	173
   426     00FE  3400               	retlw	0
   427     00FF  34A5               	retlw	165
   428     0100  3400               	retlw	0
   429     0101  349E               	retlw	158
   430     0102  3400               	retlw	0
   431     0103  3498               	retlw	152
   432     0104  3400               	retlw	0
   433     0105  3491               	retlw	145
   434     0106  3400               	retlw	0
   435     0107  348B               	retlw	139
   436     0108  3400               	retlw	0
   437     0109  3485               	retlw	133
   438     010A  3400               	retlw	0
   439     010B  347F               	retlw	127
   440     010C  3400               	retlw	0
   441     010D  347A               	retlw	122
   442     010E  3400               	retlw	0
   443     010F  3475               	retlw	117
   444     0110  3400               	retlw	0
   445     0111  3470               	retlw	112
   446     0112  3400               	retlw	0
   447     0113  346B               	retlw	107
   448     0114  3400               	retlw	0
   449     0115  3466               	retlw	102
   450     0116  3400               	retlw	0
   451     0117  3462               	retlw	98
   452     0118  3400               	retlw	0
   453     0119  345E               	retlw	94
   454     011A  3400               	retlw	0
   455     011B  345A               	retlw	90
   456     011C  3400               	retlw	0
   457     011D  3456               	retlw	86
   458     011E  3400               	retlw	0
   459     011F  3452               	retlw	82
   460     0120  3400               	retlw	0
   461     0121  344F               	retlw	79
   462     0122  3400               	retlw	0
   463     0123  344B               	retlw	75
   464     0124  3400               	retlw	0
   465     0125  3448               	retlw	72
   466     0126  3400               	retlw	0
   467     0127  3445               	retlw	69
   468     0128  3400               	retlw	0
   469     0129  3442               	retlw	66
   470     012A  3400               	retlw	0
   471     012B  343F               	retlw	63
   472     012C  3400               	retlw	0
   473     012D  343C               	retlw	60
   474     012E  3400               	retlw	0
   475     012F  343A               	retlw	58
   476     0130  3400               	retlw	0
   477     0131  3437               	retlw	55
   478     0132  3400               	retlw	0
   479     0133  3435               	retlw	53
   480     0134  3400               	retlw	0
   481     0135  3433               	retlw	51
   482     0136  3400               	retlw	0
   483     0137  3430               	retlw	48
   484     0138  3400               	retlw	0
   485     0139  342E               	retlw	46
   486     013A  3400               	retlw	0
   487     013B  342C               	retlw	44
   488     013C  3400               	retlw	0
   489     013D  342A               	retlw	42
   490     013E  3400               	retlw	0
   491     013F  3429               	retlw	41
   492     0140  3400               	retlw	0
   493     0141  3427               	retlw	39
   494     0142  3400               	retlw	0
   495     0143  3425               	retlw	37
   496     0144  3400               	retlw	0
   497     0145  3423               	retlw	35
   498     0146  3400               	retlw	0
   499     0147  3422               	retlw	34
   500     0148  3400               	retlw	0
   501     0149  3420               	retlw	32
   502     014A  3400               	retlw	0
   503     014B  341F               	retlw	31
   504     014C  3400               	retlw	0
   505     014D  341E               	retlw	30
   506     014E  3400               	retlw	0
   507     014F  341C               	retlw	28
   508     0150  3400               	retlw	0
   509     0151  341B               	retlw	27
   510     0152  3400               	retlw	0
   511     0153  341A               	retlw	26
   512     0154  3400               	retlw	0
   513     0155  3419               	retlw	25
   514     0156  3400               	retlw	0
   515     0157  3418               	retlw	24
   516     0158  3400               	retlw	0
   517     0159  3417               	retlw	23
   518     015A  3400               	retlw	0
   519     015B  3416               	retlw	22
   520     015C  3400               	retlw	0
   521     015D  3415               	retlw	21
   522     015E  3400               	retlw	0
   523     015F  3414               	retlw	20
   524     0160  3400               	retlw	0
   525     0161  3413               	retlw	19
   526     0162  3400               	retlw	0
   527     0163  3412               	retlw	18
   528     0164  3400               	retlw	0
   529     0165  3411               	retlw	17
   530     0166  3400               	retlw	0
   531     0167  3410               	retlw	16
   532     0168  3400               	retlw	0
   533     0169  3410               	retlw	16
   534     016A  3400               	retlw	0
   535     016B  340F               	retlw	15
   536     016C  3400               	retlw	0
   537     016D  340E               	retlw	14
   538     016E  3400               	retlw	0
   539     016F  340E               	retlw	14
   540     0170  3400               	retlw	0
   541     0171  340D               	retlw	13
   542     0172  3400               	retlw	0
   543     0173  340C               	retlw	12
   544     0174  3400               	retlw	0
   545     0175  340C               	retlw	12
   546     0176  3400               	retlw	0
   547     0177  340B               	retlw	11
   548     0178  3400               	retlw	0
   549     0179  340B               	retlw	11
   550     017A  3400               	retlw	0
   551     017B  340A               	retlw	10
   552     017C  3400               	retlw	0
   553     017D  340A               	retlw	10
   554     017E  3400               	retlw	0
   555     017F  3409               	retlw	9
   556     0180  3400               	retlw	0
   557     0181  3409               	retlw	9
   558     0182  3400               	retlw	0
   559     0183  3409               	retlw	9
   560     0184  3400               	retlw	0
   561     0185  3408               	retlw	8
   562     0186  3400               	retlw	0
   563     0187  3408               	retlw	8
   564     0188  3400               	retlw	0
   565     0189  3407               	retlw	7
   566     018A  3400               	retlw	0
   567     018B  3407               	retlw	7
   568     018C  3400               	retlw	0
   569     018D  3407               	retlw	7
   570     018E  3400               	retlw	0
   571     018F  3406               	retlw	6
   572     0190  3400               	retlw	0
   573     0191  3406               	retlw	6
   574     0192  3400               	retlw	0
   575     0193  3406               	retlw	6
   576     0194  3400               	retlw	0
   577     0195  3405               	retlw	5
   578     0196  3400               	retlw	0
   579     0197  3405               	retlw	5
   580     0198  3400               	retlw	0
   581     0199  3405               	retlw	5
   582     019A  3400               	retlw	0
   583     019B  3405               	retlw	5
   584     019C  3400               	retlw	0
   585     019D  3404               	retlw	4
   586     019E  3400               	retlw	0
   587     019F  3404               	retlw	4
   588     01A0  3400               	retlw	0
   589     01A1  3404               	retlw	4
   590     01A2  3400               	retlw	0
   591     01A3  3404               	retlw	4
   592     01A4  3400               	retlw	0
   593     01A5  3404               	retlw	4
   594     01A6  3400               	retlw	0
   595     01A7  3403               	retlw	3
   596     01A8  3400               	retlw	0
   597     01A9  3403               	retlw	3
   598     01AA  3400               	retlw	0
   599     01AB  3403               	retlw	3
   600     01AC  3400               	retlw	0
   601     01AD  3403               	retlw	3
   602     01AE  3400               	retlw	0
   603     01AF  3403               	retlw	3
   604     01B0  3400               	retlw	0
   605     01B1  3403               	retlw	3
   606     01B2  3400               	retlw	0
   607     01B3  3402               	retlw	2
   608     01B4  3400               	retlw	0
   609     01B5  3402               	retlw	2
   610     01B6  3400               	retlw	0
   611     01B7  3402               	retlw	2
   612     01B8  3400               	retlw	0
   613     01B9  3402               	retlw	2
   614     01BA  3400               	retlw	0
   615     01BB  3402               	retlw	2
   616     01BC  3400               	retlw	0
   617     01BD  3402               	retlw	2
   618     01BE  3400               	retlw	0
   619     01BF  3402               	retlw	2
   620     01C0  3400               	retlw	0
   621     01C1  3401               	retlw	1
   622     01C2  3400               	retlw	0
   623     01C3  3401               	retlw	1
   624     01C4  3400               	retlw	0
   625     01C5  3401               	retlw	1
   626     01C6  3400               	retlw	0
   627     01C7  3401               	retlw	1
   628     01C8  3400               	retlw	0
   629     01C9  3401               	retlw	1
   630     01CA  3400               	retlw	0
   631     01CB  3401               	retlw	1
   632     01CC  3400               	retlw	0
   633     01CD  3401               	retlw	1
   634     01CE  3400               	retlw	0
   635     01CF  3401               	retlw	1
   636     01D0  3400               	retlw	0
   637     01D1  3401               	retlw	1
   638     01D2  3400               	retlw	0
   639     01D3  3401               	retlw	1
   640     01D4  3400               	retlw	0
   641     01D5  3401               	retlw	1
   642     01D6  3400               	retlw	0
   643     01D7  3401               	retlw	1
   644     01D8  3400               	retlw	0
   645     01D9  3400               	retlw	0
   646     01DA  3400               	retlw	0
   647     01DB  3400               	retlw	0
   648     01DC  3400               	retlw	0
   649     01DD  3400               	retlw	0
   650     01DE  3400               	retlw	0
   651     01DF  3400               	retlw	0
   652     01E0  3400               	retlw	0
   653     01E1  3400               	retlw	0
   654     01E2  3400               	retlw	0
   655     01E3  3400               	retlw	0
   656     01E4  3400               	retlw	0
   657     01E5  3400               	retlw	0
   658     01E6  3400               	retlw	0
   659     01E7  3400               	retlw	0
   660     01E8  3400               	retlw	0
   661     01E9  3400               	retlw	0
   662     01EA  3400               	retlw	0
   663     01EB  3400               	retlw	0
   664     01EC  3400               	retlw	0
   665     01ED                     __end_of_shorten_period_log_table:
   666                           
   667                           	psect	stringtext2
   668     01ED                     __pstringtext2:
   669     01ED                     _tri_table_one_quadrant:
   670     01ED  3400               	retlw	0
   671     01EE  3402               	retlw	2
   672     01EF  3404               	retlw	4
   673     01F0  3402               	retlw	2
   674     01F1  3408               	retlw	8
   675     01F2  3402               	retlw	2
   676     01F3  340C               	retlw	12
   677     01F4  3402               	retlw	2
   678     01F5  3410               	retlw	16
   679     01F6  3402               	retlw	2
   680     01F7  3414               	retlw	20
   681     01F8  3402               	retlw	2
   682     01F9  3418               	retlw	24
   683     01FA  3402               	retlw	2
   684     01FB  341C               	retlw	28
   685     01FC  3402               	retlw	2
   686     01FD  3420               	retlw	32
   687     01FE  3402               	retlw	2
   688     01FF  3424               	retlw	36
   689     0200  3402               	retlw	2
   690     0201  3428               	retlw	40
   691     0202  3402               	retlw	2
   692     0203  342C               	retlw	44
   693     0204  3402               	retlw	2
   694     0205  3430               	retlw	48
   695     0206  3402               	retlw	2
   696     0207  3434               	retlw	52
   697     0208  3402               	retlw	2
   698     0209  3438               	retlw	56
   699     020A  3402               	retlw	2
   700     020B  343C               	retlw	60
   701     020C  3402               	retlw	2
   702     020D  3440               	retlw	64
   703     020E  3402               	retlw	2
   704     020F  3444               	retlw	68
   705     0210  3402               	retlw	2
   706     0211  3448               	retlw	72
   707     0212  3402               	retlw	2
   708     0213  344C               	retlw	76
   709     0214  3402               	retlw	2
   710     0215  3450               	retlw	80
   711     0216  3402               	retlw	2
   712     0217  3454               	retlw	84
   713     0218  3402               	retlw	2
   714     0219  3458               	retlw	88
   715     021A  3402               	retlw	2
   716     021B  345C               	retlw	92
   717     021C  3402               	retlw	2
   718     021D  3460               	retlw	96
   719     021E  3402               	retlw	2
   720     021F  3464               	retlw	100
   721     0220  3402               	retlw	2
   722     0221  3468               	retlw	104
   723     0222  3402               	retlw	2
   724     0223  346C               	retlw	108
   725     0224  3402               	retlw	2
   726     0225  3470               	retlw	112
   727     0226  3402               	retlw	2
   728     0227  3474               	retlw	116
   729     0228  3402               	retlw	2
   730     0229  3478               	retlw	120
   731     022A  3402               	retlw	2
   732     022B  347C               	retlw	124
   733     022C  3402               	retlw	2
   734     022D  3480               	retlw	128
   735     022E  3402               	retlw	2
   736     022F  3484               	retlw	132
   737     0230  3402               	retlw	2
   738     0231  3488               	retlw	136
   739     0232  3402               	retlw	2
   740     0233  348C               	retlw	140
   741     0234  3402               	retlw	2
   742     0235  3490               	retlw	144
   743     0236  3402               	retlw	2
   744     0237  3494               	retlw	148
   745     0238  3402               	retlw	2
   746     0239  3498               	retlw	152
   747     023A  3402               	retlw	2
   748     023B  349C               	retlw	156
   749     023C  3402               	retlw	2
   750     023D  34A0               	retlw	160
   751     023E  3402               	retlw	2
   752     023F  34A4               	retlw	164
   753     0240  3402               	retlw	2
   754     0241  34A8               	retlw	168
   755     0242  3402               	retlw	2
   756     0243  34AC               	retlw	172
   757     0244  3402               	retlw	2
   758     0245  34B0               	retlw	176
   759     0246  3402               	retlw	2
   760     0247  34B4               	retlw	180
   761     0248  3402               	retlw	2
   762     0249  34B8               	retlw	184
   763     024A  3402               	retlw	2
   764     024B  34BC               	retlw	188
   765     024C  3402               	retlw	2
   766     024D  34C0               	retlw	192
   767     024E  3402               	retlw	2
   768     024F  34C4               	retlw	196
   769     0250  3402               	retlw	2
   770     0251  34C8               	retlw	200
   771     0252  3402               	retlw	2
   772     0253  34CC               	retlw	204
   773     0254  3402               	retlw	2
   774     0255  34D0               	retlw	208
   775     0256  3402               	retlw	2
   776     0257  34D4               	retlw	212
   777     0258  3402               	retlw	2
   778     0259  34D8               	retlw	216
   779     025A  3402               	retlw	2
   780     025B  34DC               	retlw	220
   781     025C  3402               	retlw	2
   782     025D  34E0               	retlw	224
   783     025E  3402               	retlw	2
   784     025F  34E4               	retlw	228
   785     0260  3402               	retlw	2
   786     0261  34E8               	retlw	232
   787     0262  3402               	retlw	2
   788     0263  34EC               	retlw	236
   789     0264  3402               	retlw	2
   790     0265  34F0               	retlw	240
   791     0266  3402               	retlw	2
   792     0267  34F4               	retlw	244
   793     0268  3402               	retlw	2
   794     0269  34F8               	retlw	248
   795     026A  3402               	retlw	2
   796     026B  34FB               	retlw	251
   797     026C  3402               	retlw	2
   798     026D  34FF               	retlw	255
   799     026E  3402               	retlw	2
   800     026F  3403               	retlw	3
   801     0270  3403               	retlw	3
   802     0271  3407               	retlw	7
   803     0272  3403               	retlw	3
   804     0273  340B               	retlw	11
   805     0274  3403               	retlw	3
   806     0275  340F               	retlw	15
   807     0276  3403               	retlw	3
   808     0277  3413               	retlw	19
   809     0278  3403               	retlw	3
   810     0279  3417               	retlw	23
   811     027A  3403               	retlw	3
   812     027B  341B               	retlw	27
   813     027C  3403               	retlw	3
   814     027D  341F               	retlw	31
   815     027E  3403               	retlw	3
   816     027F  3423               	retlw	35
   817     0280  3403               	retlw	3
   818     0281  3427               	retlw	39
   819     0282  3403               	retlw	3
   820     0283  342B               	retlw	43
   821     0284  3403               	retlw	3
   822     0285  342F               	retlw	47
   823     0286  3403               	retlw	3
   824     0287  3433               	retlw	51
   825     0288  3403               	retlw	3
   826     0289  3437               	retlw	55
   827     028A  3403               	retlw	3
   828     028B  343B               	retlw	59
   829     028C  3403               	retlw	3
   830     028D  343F               	retlw	63
   831     028E  3403               	retlw	3
   832     028F  3443               	retlw	67
   833     0290  3403               	retlw	3
   834     0291  3447               	retlw	71
   835     0292  3403               	retlw	3
   836     0293  344B               	retlw	75
   837     0294  3403               	retlw	3
   838     0295  344F               	retlw	79
   839     0296  3403               	retlw	3
   840     0297  3453               	retlw	83
   841     0298  3403               	retlw	3
   842     0299  3457               	retlw	87
   843     029A  3403               	retlw	3
   844     029B  345B               	retlw	91
   845     029C  3403               	retlw	3
   846     029D  345F               	retlw	95
   847     029E  3403               	retlw	3
   848     029F  3463               	retlw	99
   849     02A0  3403               	retlw	3
   850     02A1  3467               	retlw	103
   851     02A2  3403               	retlw	3
   852     02A3  346B               	retlw	107
   853     02A4  3403               	retlw	3
   854     02A5  346F               	retlw	111
   855     02A6  3403               	retlw	3
   856     02A7  3473               	retlw	115
   857     02A8  3403               	retlw	3
   858     02A9  3477               	retlw	119
   859     02AA  3403               	retlw	3
   860     02AB  347B               	retlw	123
   861     02AC  3403               	retlw	3
   862     02AD  347F               	retlw	127
   863     02AE  3403               	retlw	3
   864     02AF  3483               	retlw	131
   865     02B0  3403               	retlw	3
   866     02B1  3487               	retlw	135
   867     02B2  3403               	retlw	3
   868     02B3  348B               	retlw	139
   869     02B4  3403               	retlw	3
   870     02B5  348F               	retlw	143
   871     02B6  3403               	retlw	3
   872     02B7  3493               	retlw	147
   873     02B8  3403               	retlw	3
   874     02B9  3497               	retlw	151
   875     02BA  3403               	retlw	3
   876     02BB  349B               	retlw	155
   877     02BC  3403               	retlw	3
   878     02BD  349F               	retlw	159
   879     02BE  3403               	retlw	3
   880     02BF  34A3               	retlw	163
   881     02C0  3403               	retlw	3
   882     02C1  34A7               	retlw	167
   883     02C2  3403               	retlw	3
   884     02C3  34AB               	retlw	171
   885     02C4  3403               	retlw	3
   886     02C5  34AF               	retlw	175
   887     02C6  3403               	retlw	3
   888     02C7  34B3               	retlw	179
   889     02C8  3403               	retlw	3
   890     02C9  34B7               	retlw	183
   891     02CA  3403               	retlw	3
   892     02CB  34BB               	retlw	187
   893     02CC  3403               	retlw	3
   894     02CD  34BF               	retlw	191
   895     02CE  3403               	retlw	3
   896     02CF  34C3               	retlw	195
   897     02D0  3403               	retlw	3
   898     02D1  34C7               	retlw	199
   899     02D2  3403               	retlw	3
   900     02D3  34CB               	retlw	203
   901     02D4  3403               	retlw	3
   902     02D5  34CF               	retlw	207
   903     02D6  3403               	retlw	3
   904     02D7  34D3               	retlw	211
   905     02D8  3403               	retlw	3
   906     02D9  34D7               	retlw	215
   907     02DA  3403               	retlw	3
   908     02DB  34DB               	retlw	219
   909     02DC  3403               	retlw	3
   910     02DD  34DF               	retlw	223
   911     02DE  3403               	retlw	3
   912     02DF  34E3               	retlw	227
   913     02E0  3403               	retlw	3
   914     02E1  34E7               	retlw	231
   915     02E2  3403               	retlw	3
   916     02E3  34EB               	retlw	235
   917     02E4  3403               	retlw	3
   918     02E5  34EF               	retlw	239
   919     02E6  3403               	retlw	3
   920     02E7  34F3               	retlw	243
   921     02E8  3403               	retlw	3
   922     02E9  34F7               	retlw	247
   923     02EA  3403               	retlw	3
   924     02EB  34FB               	retlw	251
   925     02EC  3403               	retlw	3
   926     02ED  34FF               	retlw	255
   927     02EE  3403               	retlw	3
   928     02EF                     __end_of_tri_table_one_quadrant:
   929                           
   930                           	psect	stringtext3
   931     02EF                     __pstringtext3:
   932     02EF                     _sine_table_one_quadrant:
   933     02EF  3400               	retlw	0
   934     02F0  3402               	retlw	2
   935     02F1  3406               	retlw	6
   936     02F2  3402               	retlw	2
   937     02F3  340C               	retlw	12
   938     02F4  3402               	retlw	2
   939     02F5  3412               	retlw	18
   940     02F6  3402               	retlw	2
   941     02F7  3419               	retlw	25
   942     02F8  3402               	retlw	2
   943     02F9  341F               	retlw	31
   944     02FA  3402               	retlw	2
   945     02FB  3425               	retlw	37
   946     02FC  3402               	retlw	2
   947     02FD  342B               	retlw	43
   948     02FE  3402               	retlw	2
   949     02FF  3432               	retlw	50
   950     0300  3402               	retlw	2
   951     0301  3438               	retlw	56
   952     0302  3402               	retlw	2
   953     0303  343E               	retlw	62
   954     0304  3402               	retlw	2
   955     0305  3444               	retlw	68
   956     0306  3402               	retlw	2
   957     0307  344B               	retlw	75
   958     0308  3402               	retlw	2
   959     0309  3451               	retlw	81
   960     030A  3402               	retlw	2
   961     030B  3457               	retlw	87
   962     030C  3402               	retlw	2
   963     030D  345D               	retlw	93
   964     030E  3402               	retlw	2
   965     030F  3463               	retlw	99
   966     0310  3402               	retlw	2
   967     0311  3469               	retlw	105
   968     0312  3402               	retlw	2
   969     0313  3470               	retlw	112
   970     0314  3402               	retlw	2
   971     0315  3476               	retlw	118
   972     0316  3402               	retlw	2
   973     0317  347C               	retlw	124
   974     0318  3402               	retlw	2
   975     0319  3482               	retlw	130
   976     031A  3402               	retlw	2
   977     031B  3488               	retlw	136
   978     031C  3402               	retlw	2
   979     031D  348E               	retlw	142
   980     031E  3402               	retlw	2
   981     031F  3494               	retlw	148
   982     0320  3402               	retlw	2
   983     0321  349A               	retlw	154
   984     0322  3402               	retlw	2
   985     0323  34A0               	retlw	160
   986     0324  3402               	retlw	2
   987     0325  34A6               	retlw	166
   988     0326  3402               	retlw	2
   989     0327  34AC               	retlw	172
   990     0328  3402               	retlw	2
   991     0329  34B2               	retlw	178
   992     032A  3402               	retlw	2
   993     032B  34B8               	retlw	184
   994     032C  3402               	retlw	2
   995     032D  34BD               	retlw	189
   996     032E  3402               	retlw	2
   997     032F  34C3               	retlw	195
   998     0330  3402               	retlw	2
   999     0331  34C9               	retlw	201
  1000     0332  3402               	retlw	2
  1001     0333  34CF               	retlw	207
  1002     0334  3402               	retlw	2
  1003     0335  34D5               	retlw	213
  1004     0336  3402               	retlw	2
  1005     0337  34DA               	retlw	218
  1006     0338  3402               	retlw	2
  1007     0339  34E0               	retlw	224
  1008     033A  3402               	retlw	2
  1009     033B  34E5               	retlw	229
  1010     033C  3402               	retlw	2
  1011     033D  34EB               	retlw	235
  1012     033E  3402               	retlw	2
  1013     033F  34F1               	retlw	241
  1014     0340  3402               	retlw	2
  1015     0341  34F6               	retlw	246
  1016     0342  3402               	retlw	2
  1017     0343  34FC               	retlw	252
  1018     0344  3402               	retlw	2
  1019     0345  3401               	retlw	1
  1020     0346  3403               	retlw	3
  1021     0347  3406               	retlw	6
  1022     0348  3403               	retlw	3
  1023     0349  340C               	retlw	12
  1024     034A  3403               	retlw	3
  1025     034B  3411               	retlw	17
  1026     034C  3403               	retlw	3
  1027     034D  3416               	retlw	22
  1028     034E  3403               	retlw	3
  1029     034F  341C               	retlw	28
  1030     0350  3403               	retlw	3
  1031     0351  3421               	retlw	33
  1032     0352  3403               	retlw	3
  1033     0353  3426               	retlw	38
  1034     0354  3403               	retlw	3
  1035     0355  342B               	retlw	43
  1036     0356  3403               	retlw	3
  1037     0357  3430               	retlw	48
  1038     0358  3403               	retlw	3
  1039     0359  3435               	retlw	53
  1040     035A  3403               	retlw	3
  1041     035B  343A               	retlw	58
  1042     035C  3403               	retlw	3
  1043     035D  343F               	retlw	63
  1044     035E  3403               	retlw	3
  1045     035F  3444               	retlw	68
  1046     0360  3403               	retlw	3
  1047     0361  3449               	retlw	73
  1048     0362  3403               	retlw	3
  1049     0363  344E               	retlw	78
  1050     0364  3403               	retlw	3
  1051     0365  3452               	retlw	82
  1052     0366  3403               	retlw	3
  1053     0367  3457               	retlw	87
  1054     0368  3403               	retlw	3
  1055     0369  345C               	retlw	92
  1056     036A  3403               	retlw	3
  1057     036B  3460               	retlw	96
  1058     036C  3403               	retlw	3
  1059     036D  3465               	retlw	101
  1060     036E  3403               	retlw	3
  1061     036F  3469               	retlw	105
  1062     0370  3403               	retlw	3
  1063     0371  346E               	retlw	110
  1064     0372  3403               	retlw	3
  1065     0373  3472               	retlw	114
  1066     0374  3403               	retlw	3
  1067     0375  3476               	retlw	118
  1068     0376  3403               	retlw	3
  1069     0377  347A               	retlw	122
  1070     0378  3403               	retlw	3
  1071     0379  347F               	retlw	127
  1072     037A  3403               	retlw	3
  1073     037B  3483               	retlw	131
  1074     037C  3403               	retlw	3
  1075     037D  3487               	retlw	135
  1076     037E  3403               	retlw	3
  1077     037F  348B               	retlw	139
  1078     0380  3403               	retlw	3
  1079     0381  348F               	retlw	143
  1080     0382  3403               	retlw	3
  1081     0383  3493               	retlw	147
  1082     0384  3403               	retlw	3
  1083     0385  3497               	retlw	151
  1084     0386  3403               	retlw	3
  1085     0387  349A               	retlw	154
  1086     0388  3403               	retlw	3
  1087     0389  349E               	retlw	158
  1088     038A  3403               	retlw	3
  1089     038B  34A2               	retlw	162
  1090     038C  3403               	retlw	3
  1091     038D  34A5               	retlw	165
  1092     038E  3403               	retlw	3
  1093     038F  34A9               	retlw	169
  1094     0390  3403               	retlw	3
  1095     0391  34AC               	retlw	172
  1096     0392  3403               	retlw	3
  1097     0393  34B0               	retlw	176
  1098     0394  3403               	retlw	3
  1099     0395  34B3               	retlw	179
  1100     0396  3403               	retlw	3
  1101     0397  34B6               	retlw	182
  1102     0398  3403               	retlw	3
  1103     0399  34B9               	retlw	185
  1104     039A  3403               	retlw	3
  1105     039B  34BD               	retlw	189
  1106     039C  3403               	retlw	3
  1107     039D  34C0               	retlw	192
  1108     039E  3403               	retlw	3
  1109     039F  34C3               	retlw	195
  1110     03A0  3403               	retlw	3
  1111     03A1  34C6               	retlw	198
  1112     03A2  3403               	retlw	3
  1113     03A3  34C8               	retlw	200
  1114     03A4  3403               	retlw	3
  1115     03A5  34CB               	retlw	203
  1116     03A6  3403               	retlw	3
  1117     03A7  34CE               	retlw	206
  1118     03A8  3403               	retlw	3
  1119     03A9  34D1               	retlw	209
  1120     03AA  3403               	retlw	3
  1121     03AB  34D3               	retlw	211
  1122     03AC  3403               	retlw	3
  1123     03AD  34D6               	retlw	214
  1124     03AE  3403               	retlw	3
  1125     03AF  34D8               	retlw	216
  1126     03B0  3403               	retlw	3
  1127     03B1  34DA               	retlw	218
  1128     03B2  3403               	retlw	3
  1129     03B3  34DD               	retlw	221
  1130     03B4  3403               	retlw	3
  1131     03B5  34DF               	retlw	223
  1132     03B6  3403               	retlw	3
  1133     03B7  34E1               	retlw	225
  1134     03B8  3403               	retlw	3
  1135     03B9  34E3               	retlw	227
  1136     03BA  3403               	retlw	3
  1137     03BB  34E5               	retlw	229
  1138     03BC  3403               	retlw	3
  1139     03BD  34E7               	retlw	231
  1140     03BE  3403               	retlw	3
  1141     03BF  34E9               	retlw	233
  1142     03C0  3403               	retlw	3
  1143     03C1  34EB               	retlw	235
  1144     03C2  3403               	retlw	3
  1145     03C3  34EC               	retlw	236
  1146     03C4  3403               	retlw	3
  1147     03C5  34EE               	retlw	238
  1148     03C6  3403               	retlw	3
  1149     03C7  34F0               	retlw	240
  1150     03C8  3403               	retlw	3
  1151     03C9  34F1               	retlw	241
  1152     03CA  3403               	retlw	3
  1153     03CB  34F3               	retlw	243
  1154     03CC  3403               	retlw	3
  1155     03CD  34F4               	retlw	244
  1156     03CE  3403               	retlw	3
  1157     03CF  34F5               	retlw	245
  1158     03D0  3403               	retlw	3
  1159     03D1  34F6               	retlw	246
  1160     03D2  3403               	retlw	3
  1161     03D3  34F7               	retlw	247
  1162     03D4  3403               	retlw	3
  1163     03D5  34F9               	retlw	249
  1164     03D6  3403               	retlw	3
  1165     03D7  34F9               	retlw	249
  1166     03D8  3403               	retlw	3
  1167     03D9  34FA               	retlw	250
  1168     03DA  3403               	retlw	3
  1169     03DB  34FB               	retlw	251
  1170     03DC  3403               	retlw	3
  1171     03DD  34FC               	retlw	252
  1172     03DE  3403               	retlw	3
  1173     03DF  34FD               	retlw	253
  1174     03E0  3403               	retlw	3
  1175     03E1  34FD               	retlw	253
  1176     03E2  3403               	retlw	3
  1177     03E3  34FE               	retlw	254
  1178     03E4  3403               	retlw	3
  1179     03E5  34FE               	retlw	254
  1180     03E6  3403               	retlw	3
  1181     03E7  34FE               	retlw	254
  1182     03E8  3403               	retlw	3
  1183     03E9  34FF               	retlw	255
  1184     03EA  3403               	retlw	3
  1185     03EB  34FF               	retlw	255
  1186     03EC  3403               	retlw	3
  1187     03ED  34FF               	retlw	255
  1188     03EE  3403               	retlw	3
  1189     03EF  34FF               	retlw	255
  1190     03F0  3403               	retlw	3
  1191     03F1                     __end_of_sine_table_one_quadrant:
  1192                           
  1193                           	psect	stringtext4
  1194     048A                     __pstringtext4:
  1195     048A                     _lengthen_period_log_table:
  1196     048A  3461               	retlw	97
  1197     048B  3461               	retlw	97
  1198     048C  3461               	retlw	97
  1199     048D  3461               	retlw	97
  1200     048E  3460               	retlw	96
  1201     048F  3460               	retlw	96
  1202     0490  3460               	retlw	96
  1203     0491  3460               	retlw	96
  1204     0492  3460               	retlw	96
  1205     0493  3460               	retlw	96
  1206     0494  345F               	retlw	95
  1207     0495  345F               	retlw	95
  1208     0496  345F               	retlw	95
  1209     0497  345F               	retlw	95
  1210     0498  345F               	retlw	95
  1211     0499  345F               	retlw	95
  1212     049A  345E               	retlw	94
  1213     049B  345E               	retlw	94
  1214     049C  345E               	retlw	94
  1215     049D  345E               	retlw	94
  1216     049E  345E               	retlw	94
  1217     049F  345D               	retlw	93
  1218     04A0  345D               	retlw	93
  1219     04A1  345D               	retlw	93
  1220     04A2  345D               	retlw	93
  1221     04A3  345D               	retlw	93
  1222     04A4  345D               	retlw	93
  1223     04A5  345C               	retlw	92
  1224     04A6  345C               	retlw	92
  1225     04A7  345C               	retlw	92
  1226     04A8  345C               	retlw	92
  1227     04A9  345C               	retlw	92
  1228     04AA  345B               	retlw	91
  1229     04AB  345B               	retlw	91
  1230     04AC  345B               	retlw	91
  1231     04AD  345B               	retlw	91
  1232     04AE  345A               	retlw	90
  1233     04AF  345A               	retlw	90
  1234     04B0  345A               	retlw	90
  1235     04B1  345A               	retlw	90
  1236     04B2  345A               	retlw	90
  1237     04B3  3459               	retlw	89
  1238     04B4  3459               	retlw	89
  1239     04B5  3459               	retlw	89
  1240     04B6  3459               	retlw	89
  1241     04B7  3458               	retlw	88
  1242     04B8  3458               	retlw	88
  1243     04B9  3458               	retlw	88
  1244     04BA  3458               	retlw	88
  1245     04BB  3457               	retlw	87
  1246     04BC  3457               	retlw	87
  1247     04BD  3457               	retlw	87
  1248     04BE  3457               	retlw	87
  1249     04BF  3456               	retlw	86
  1250     04C0  3456               	retlw	86
  1251     04C1  3456               	retlw	86
  1252     04C2  3456               	retlw	86
  1253     04C3  3455               	retlw	85
  1254     04C4  3455               	retlw	85
  1255     04C5  3455               	retlw	85
  1256     04C6  3455               	retlw	85
  1257     04C7  3454               	retlw	84
  1258     04C8  3454               	retlw	84
  1259     04C9  3454               	retlw	84
  1260     04CA  3453               	retlw	83
  1261     04CB  3453               	retlw	83
  1262     04CC  3453               	retlw	83
  1263     04CD  3452               	retlw	82
  1264     04CE  3452               	retlw	82
  1265     04CF  3452               	retlw	82
  1266     04D0  3451               	retlw	81
  1267     04D1  3451               	retlw	81
  1268     04D2  3451               	retlw	81
  1269     04D3  3450               	retlw	80
  1270     04D4  3450               	retlw	80
  1271     04D5  3450               	retlw	80
  1272     04D6  344F               	retlw	79
  1273     04D7  344F               	retlw	79
  1274     04D8  344E               	retlw	78
  1275     04D9  344E               	retlw	78
  1276     04DA  344E               	retlw	78
  1277     04DB  344D               	retlw	77
  1278     04DC  344D               	retlw	77
  1279     04DD  344C               	retlw	76
  1280     04DE  344C               	retlw	76
  1281     04DF  344C               	retlw	76
  1282     04E0  344B               	retlw	75
  1283     04E1  344B               	retlw	75
  1284     04E2  344A               	retlw	74
  1285     04E3  344A               	retlw	74
  1286     04E4  3449               	retlw	73
  1287     04E5  3449               	retlw	73
  1288     04E6  3448               	retlw	72
  1289     04E7  3448               	retlw	72
  1290     04E8  3447               	retlw	71
  1291     04E9  3446               	retlw	70
  1292     04EA  3446               	retlw	70
  1293     04EB  3445               	retlw	69
  1294     04EC  3445               	retlw	69
  1295     04ED  3444               	retlw	68
  1296     04EE  3443               	retlw	67
  1297     04EF  3443               	retlw	67
  1298     04F0  3442               	retlw	66
  1299     04F1  3441               	retlw	65
  1300     04F2  3440               	retlw	64
  1301     04F3  343F               	retlw	63
  1302     04F4  343F               	retlw	63
  1303     04F5  343E               	retlw	62
  1304     04F6  343D               	retlw	61
  1305     04F7  343C               	retlw	60
  1306     04F8  343B               	retlw	59
  1307     04F9  343A               	retlw	58
  1308     04FA  3439               	retlw	57
  1309     04FB  3437               	retlw	55
  1310     04FC  3436               	retlw	54
  1311     04FD  3435               	retlw	53
  1312     04FE  3433               	retlw	51
  1313     04FF  3432               	retlw	50
  1314     0500  3430               	retlw	48
  1315     0501  342E               	retlw	46
  1316     0502  342C               	retlw	44
  1317     0503  342A               	retlw	42
  1318     0504  3427               	retlw	39
  1319     0505  3424               	retlw	36
  1320     0506  3420               	retlw	32
  1321     0507  341C               	retlw	28
  1322     0508  3416               	retlw	22
  1323     0509  340E               	retlw	14
  1324     050A  3400               	retlw	0
  1325     050B                     __end_of_lengthen_period_log_table:
  1326                           
  1327                           	psect	stringtext5
  1328     07B1                     __pstringtext5:
  1329     07B1                     _prescaler_bits:
  1330     07B1  3407               	retlw	7
  1331     07B2  3406               	retlw	6
  1332     07B3  3405               	retlw	5
  1333     07B4  3404               	retlw	4
  1334     07B5  3403               	retlw	3
  1335     07B6  3402               	retlw	2
  1336     07B7  3401               	retlw	1
  1337     07B8  3400               	retlw	0
  1338     07B9                     __end_of_prescaler_bits:
  1339                           
  1340                           	psect	stringtext6
  1341     07DD                     __pstringtext6:
  1342     07DD                     _NO:
  1343     07DD  3400               	retlw	0
  1344     07DE                     __end_of_NO:
  1345                           
  1346                           	psect	stringtext7
  1347     07DE                     __pstringtext7:
  1348     07DE                     _YES:
  1349     07DE  3401               	retlw	1
  1350     07DF                     __end_of_YES:
  1351                           
  1352                           	psect	stringtext8
  1353     07DF                     __pstringtext8:
  1354     07DF                     _DONT_CARE:
  1355     07DF  3404               	retlw	4
  1356     07E0                     __end_of_DONT_CARE:
  1357                           
  1358                           	psect	stringtext9
  1359     07E0                     __pstringtext9:
  1360     07E0                     _DIVIDE_BY_FOUR:
  1361     07E0  3403               	retlw	3
  1362     07E1                     __end_of_DIVIDE_BY_FOUR:
  1363                           
  1364                           	psect	stringtext10
  1365     07E1                     __pstringtext10:
  1366     07E1                     _MULTIPLY_BY_TWO:
  1367     07E1  3402               	retlw	2
  1368     07E2                     __end_of_MULTIPLY_BY_TWO:
  1369                           
  1370                           	psect	stringtext11
  1371     07E2                     __pstringtext11:
  1372     07E2                     _DIVIDE_BY_TWO:
  1373     07E2  3401               	retlw	1
  1374     07E3                     __end_of_DIVIDE_BY_TWO:
  1375                           
  1376                           	psect	stringtext12
  1377     07E3                     __pstringtext12:
  1378     07E3                     _DO_NOTHING:
  1379     07E3  3400               	retlw	0
  1380     07E4                     __end_of_DO_NOTHING:
  1381                           
  1382                           	psect	stringtext13
  1383     07E4                     __pstringtext13:
  1384     07E4                     _NEGATIVE:
  1385     07E4  3400               	retlw	0
  1386     07E5                     __end_of_NEGATIVE:
  1387                           
  1388                           	psect	stringtext14
  1389     07E5                     __pstringtext14:
  1390     07E5                     _POSITIVE:
  1391     07E5  3401               	retlw	1
  1392     07E6                     __end_of_POSITIVE:
  1393                           
  1394                           	psect	stringtext15
  1395     07E6                     __pstringtext15:
  1396     07E6                     _symmetry_adc_config_value:
  1397     07E6  3407               	retlw	7
  1398     07E7                     __end_of_symmetry_adc_config_value:
  1399                           
  1400                           	psect	stringtext16
  1401     07E7                     __pstringtext16:
  1402     07E7                     _depth_adc_config_value:
  1403     07E7  3406               	retlw	6
  1404     07E8                     __end_of_depth_adc_config_value:
  1405                           
  1406                           	psect	stringtext17
  1407     07E8                     __pstringtext17:
  1408     07E8                     _speed_adc_config_value:
  1409     07E8  3405               	retlw	5
  1410     07E9                     __end_of_speed_adc_config_value:
  1411                           
  1412                           	psect	stringtext18
  1413     07E9                     __pstringtext18:
  1414     07E9                     _waveshape_adc_config_value:
  1415     07E9  3404               	retlw	4
  1416     07EA                     __end_of_waveshape_adc_config_value:
  1417     0015                     _TMR0	set	21
  1418     001C                     _T2CON	set	28
  1419     001B                     _PR2	set	27
  1420     005F                     _GIE	set	95
  1421     005A                     _TMR0IF	set	90
  1422     005D                     _TMR0IE	set	93
  1423     00E2                     _TMR2ON	set	226
  1424     0089                     _TMR2IF	set	137
  1425     0095                     _OPTION_REG	set	149
  1426     009B                     _ADRESL	set	155
  1427     009C                     _ADRESH	set	156
  1428     009D                     _ADCON0	set	157
  1429     009E                     _ADCON1	set	158
  1430     008E                     _TRISC	set	142
  1431     0098                     _OSCTUNE	set	152
  1432     0099                     _OSCCON	set	153
  1433     0462                     _TRISA2	set	1122
  1434     04E9                     _GO_nDONE	set	1257
  1435     04E8                     _ADON	set	1256
  1436     0875                     _LATC5	set	2165
  1437     088F                     _C1ON	set	2191
  1438     08D7                     _SRLEN	set	2263
  1439     018E                     _ANSELC	set	398
  1440     020E                     _WPUC	set	526
  1441     029E                     _CCPTMRS0	set	670
  1442     0313                     _CCP3CON	set	787
  1443     0311                     _CCPR3L	set	785
  1444                           
  1445                           	psect	cinit
  1446     00D2                     start_initialization:	
  1447                           ; #config settings
  1448                           
  1449     00D2                     __initialization:
  1450                           
  1451                           ; Initialize objects allocated to BANK0
  1452     00D2  3187  27D9  3180   	fcall	__pidataBANK0	;fetch initializer
  1453     00D5  00E1               	movwf	__pdataBANK0& (0+127)
  1454     00D6  3187  27DA  3180   	fcall	__pidataBANK0+1	;fetch initializer
  1455     00D9  00E2               	movwf	(__pdataBANK0+1)& (0+127)
  1456                           
  1457                           ; Clear objects allocated to COMMON
  1458     00DA  01F0               	clrf	__pbssCOMMON& (0+127)
  1459     00DB  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  1460     00DC  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  1461     00DD  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  1462     00DE  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  1463     00DF  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  1464                           
  1465                           ; Clear objects allocated to BANK0
  1466     00E0  3020               	movlw	low __pbssBANK0
  1467     00E1  0084               	movwf	4
  1468     00E2  3000               	movlw	high __pbssBANK0
  1469     00E3  0085               	movwf	5
  1470     00E4  3028               	movlw	40
  1471     00E5  3187  27C9         	fcall	clear_ram0
  1472     00E7                     end_of_initialization:	
  1473                           ;End of C runtime variable initialization code
  1474                           
  1475     00E7                     __end_of__initialization:
  1476     00E7  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1477     00E8  0020               	movlb	0
  1478     00E9  3187  2F00         	ljmp	_main	;jump to C main() function
  1479                           
  1480                           	psect	bssCOMMON
  1481     0070                     __pbssCOMMON:
  1482     0070                     _base_prescaler_bits_index:
  1483     0070                     	ds	1
  1484     0071                     _current_one_quadrant_index:
  1485     0071                     	ds	1
  1486     0072                     _current_waveshape:
  1487     0072                     	ds	1
  1488     0073                     _duty:
  1489     0073                     	ds	2
  1490     0075                     _final_TMR0:
  1491     0075                     	ds	1
  1492                           
  1493                           	psect	bssBANK0
  1494     0020                     __pbssBANK0:
  1495     0020                     _symmetry_total:
  1496     0020                     	ds	4
  1497     0024                     _current_speed_log_32:
  1498     0024                     	ds	4
  1499     0028                     _current_speed_linear_32:
  1500     0028                     	ds	4
  1501     002C                     _speed_control_32:
  1502     002C                     	ds	4
  1503     0030                     _dTMR0_ideal:
  1504     0030                     	ds	2
  1505     0032                     _current_symmetry:
  1506     0032                     	ds	2
  1507     0034                     _current_depth:
  1508     0034                     	ds	2
  1509     0036                     _current_speed_log:
  1510     0036                     	ds	2
  1511     0038                     _current_speed_linear:
  1512     0038                     	ds	2
  1513     003A                     _how_many_128:
  1514     003A                     	ds	2
  1515     003C                     _speed_control:
  1516     003C                     	ds	2
  1517     003E                     _symmetry_status:
  1518     003E                     	ds	1
  1519     003F                     _clear_TMR0_please:
  1520     003F                     	ds	1
  1521     0040                     _raw_TMR0:
  1522     0040                     	ds	1
  1523     0041                     _prescaler_adjust:
  1524     0041                     	ds	1
  1525     0042                     _TMR0_offset_sign:
  1526     0042                     	ds	1
  1527     0043                     _TMR0_offset:
  1528     0043                     	ds	1
  1529     0044                     _current_quadrant:
  1530     0044                     	ds	1
  1531     0045                     _current_halfcycle:
  1532     0045                     	ds	1
  1533     0046                     _duty_high_byte:
  1534     0046                     	ds	1
  1535     0047                     _duty_low_byte:
  1536     0047                     	ds	1
  1537                           
  1538                           	psect	dataBANK0
  1539     0061                     __pdataBANK0:
  1540     0061                     _top_two_bytes_ptr:
  1541     0061                     	ds	2
  1542                           
  1543                           	psect	clrtext
  1544     07C9                     clear_ram0:	
  1545                           ;	Called with FSR0 containing the base address, and
  1546                           ;	WREG with the size to clear
  1547                           
  1548     07C9  0064               	clrwdt	;clear the watchdog before getting into this loop
  1549     07CA                     clrloop0:
  1550     07CA  0180               	clrf	0	;clear RAM location pointed to by FSR
  1551     07CB  3101               	addfsr 0,1
  1552     07CC  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1553     07CD  2FCA               	goto	clrloop0	;have we reached the end yet?
  1554     07CE  3400               	retlw	0	;all done for this memory range, return
  1555                           
  1556                           	psect	cstackCOMMON
  1557     0076                     __pcstackCOMMON:
  1558     0076                     ?_CONFIG_INT_OSC:
  1559     0076                     ?_CONFIG_PORTS:	
  1560                           ; 1 bytes @ 0x0
  1561                           
  1562     0076                     ?_CONFIG_ADC_PINS:	
  1563                           ; 1 bytes @ 0x0
  1564                           
  1565     0076                     ?_DETERMINE_WAVESHAPE:	
  1566                           ; 1 bytes @ 0x0
  1567                           
  1568     0076                     ?_SET_DUTY_CCP3:	
  1569                           ; 1 bytes @ 0x0
  1570                           
  1571     0076                     ??_SET_DUTY_CCP3:	
  1572                           ; 1 bytes @ 0x0
  1573                           
  1574     0076                     ?_CONFIG_PWM_CCP3:	
  1575                           ; 1 bytes @ 0x0
  1576                           
  1577     0076                     ?_TURN_ON_CCP3_PWM:	
  1578                           ; 1 bytes @ 0x0
  1579                           
  1580     0076                     ?_CONFIG_TMR0_INTERRUPT:	
  1581                           ; 1 bytes @ 0x0
  1582                           
  1583     0076                     ?_CONFIG_SYSTEM:	
  1584                           ; 1 bytes @ 0x0
  1585                           
  1586     0076                     ?_TMR0_WRITE:	
  1587                           ; 1 bytes @ 0x0
  1588                           
  1589     0076                     ?_GET_CURRENT_POT_VALUES:	
  1590                           ; 1 bytes @ 0x0
  1591                           
  1592     0076                     ?_PROCESS_RAW_SPEED_AND_PRESCALER:	
  1593                           ; 1 bytes @ 0x0
  1594                           
  1595     0076                     ?_PROCESS_FINAL_SPEED_AND_PRESCALER:	
  1596                           ; 1 bytes @ 0x0
  1597                           
  1598     0076                     ?_SHORTEN_PERIOD:	
  1599                           ; 1 bytes @ 0x0
  1600                           
  1601     0076                     ?_LENGTHEN_PERIOD:	
  1602                           ; 1 bytes @ 0x0
  1603                           
  1604     0076                     ?_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST:	
  1605                           ; 1 bytes @ 0x0
  1606                           
  1607     0076                     ?_INTERRUPT_InterruptManager:	
  1608                           ; 1 bytes @ 0x0
  1609                           
  1610     0076                     ?_main:	
  1611                           ; 1 bytes @ 0x0
  1612                           
  1613                           
  1614                           ; 1 bytes @ 0x0
  1615     0076                     	ds	2
  1616     0078                     SET_DUTY_CCP3@temp:
  1617                           
  1618                           ; 1 bytes @ 0x2
  1619     0078                     	ds	1
  1620     0079                     SET_DUTY_CCP3@duty_ptr:
  1621                           
  1622                           ; 1 bytes @ 0x3
  1623     0079                     	ds	1
  1624     007A                     ??_INTERRUPT_InterruptManager:
  1625                           
  1626                           ; 1 bytes @ 0x4
  1627     007A                     	ds	2
  1628                           
  1629                           	psect	cstackBANK0
  1630     0048                     __pcstackBANK0:
  1631     0048                     ??_CONFIG_INT_OSC:
  1632     0048                     ??_CONFIG_PORTS:	
  1633                           ; 1 bytes @ 0x0
  1634                           
  1635     0048                     ??_CONFIG_ADC_PINS:	
  1636                           ; 1 bytes @ 0x0
  1637                           
  1638     0048                     ??_CONFIG_PWM_CCP3:	
  1639                           ; 1 bytes @ 0x0
  1640                           
  1641     0048                     ??_TURN_ON_CCP3_PWM:	
  1642                           ; 1 bytes @ 0x0
  1643                           
  1644     0048                     ??_CONFIG_TMR0_INTERRUPT:	
  1645                           ; 1 bytes @ 0x0
  1646                           
  1647     0048                     ??_CONFIG_SYSTEM:	
  1648                           ; 1 bytes @ 0x0
  1649                           
  1650     0048                     ??_TMR0_WRITE:	
  1651                           ; 1 bytes @ 0x0
  1652                           
  1653     0048                     ??_PROCESS_FINAL_SPEED_AND_PRESCALER:	
  1654                           ; 1 bytes @ 0x0
  1655                           
  1656     0048                     ?_DO_ADC:	
  1657                           ; 1 bytes @ 0x0
  1658                           
  1659     0048                     ?___wmul:	
  1660                           ; 2 bytes @ 0x0
  1661                           
  1662     0048                     ?___lmul:	
  1663                           ; 2 bytes @ 0x0
  1664                           
  1665     0048                     TMR0_WRITE@timer_value_ptr:	
  1666                           ; 4 bytes @ 0x0
  1667                           
  1668     0048                     DO_ADC@modifier:	
  1669                           ; 1 bytes @ 0x0
  1670                           
  1671     0048                     ___wmul@multiplier:	
  1672                           ; 2 bytes @ 0x0
  1673                           
  1674     0048                     ___lmul@multiplier:	
  1675                           ; 2 bytes @ 0x0
  1676                           
  1677                           
  1678                           ; 4 bytes @ 0x0
  1679     0048                     	ds	2
  1680     004A                     ??_DO_ADC:
  1681     004A                     ___wmul@multiplicand:	
  1682                           ; 1 bytes @ 0x2
  1683                           
  1684                           
  1685                           ; 2 bytes @ 0x2
  1686     004A                     	ds	1
  1687     004B                     DO_ADC@adc_result:
  1688                           
  1689                           ; 2 bytes @ 0x3
  1690     004B                     	ds	1
  1691     004C                     ??___wmul:
  1692     004C                     ___wmul@product:	
  1693                           ; 1 bytes @ 0x4
  1694                           
  1695     004C                     ___lmul@multiplicand:	
  1696                           ; 2 bytes @ 0x4
  1697                           
  1698                           
  1699                           ; 4 bytes @ 0x4
  1700     004C                     	ds	1
  1701     004D                     DO_ADC@temp:
  1702                           
  1703                           ; 1 bytes @ 0x5
  1704     004D                     	ds	1
  1705     004E                     ??_DETERMINE_WAVESHAPE:
  1706     004E                     DETERMINE_WAVESHAPE@ADC:	
  1707                           ; 1 bytes @ 0x6
  1708                           
  1709                           
  1710                           ; 2 bytes @ 0x6
  1711     004E                     	ds	2
  1712     0050                     ??_GET_CURRENT_POT_VALUES:
  1713     0050                     ??___lmul:	
  1714                           ; 1 bytes @ 0x8
  1715                           
  1716     0050                     ___lmul@product:	
  1717                           ; 1 bytes @ 0x8
  1718                           
  1719                           
  1720                           ; 4 bytes @ 0x8
  1721     0050                     	ds	4
  1722     0054                     ??_PROCESS_RAW_SPEED_AND_PRESCALER:
  1723     0054                     ??_SHORTEN_PERIOD:	
  1724                           ; 1 bytes @ 0xC
  1725                           
  1726     0054                     ??_LENGTHEN_PERIOD:	
  1727                           ; 1 bytes @ 0xC
  1728                           
  1729                           
  1730                           ; 1 bytes @ 0xC
  1731     0054                     	ds	4
  1732     0058                     PROCESS_RAW_SPEED_AND_PRESCALER@speed_control_subtracted:
  1733     0058                     SHORTEN_PERIOD@dTMR0_ideal:	
  1734                           ; 2 bytes @ 0x10
  1735                           
  1736     0058                     LENGTHEN_PERIOD@dTMR0_ideal:	
  1737                           ; 2 bytes @ 0x10
  1738                           
  1739                           
  1740                           ; 2 bytes @ 0x10
  1741     0058                     	ds	2
  1742     005A                     SHORTEN_PERIOD@TMR0_raw_extra:
  1743                           
  1744                           ; 2 bytes @ 0x12
  1745     005A                     	ds	2
  1746     005C                     ??_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST:
  1747                           
  1748                           ; 1 bytes @ 0x14
  1749     005C                     	ds	2
  1750     005E                     PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST@temp:
  1751                           
  1752                           ; 2 bytes @ 0x16
  1753     005E                     	ds	2
  1754     0060                     PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST@symmetry_status:
  1755                           
  1756                           ; 1 bytes @ 0x18
  1757     0060                     	ds	1
  1758     0061                     ??_main:
  1759                           
  1760                           	psect	maintext
  1761     0700                     __pmaintext:	
  1762                           ; 1 bytes @ 0x19
  1763 ;;
  1764 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1765 ;;
  1766 ;; *************** function _main *****************
  1767 ;; Defined at:
  1768 ;;		line 486 in file "main.c"
  1769 ;; Parameters:    Size  Location     Type
  1770 ;;		None
  1771 ;; Auto vars:     Size  Location     Type
  1772 ;;		None
  1773 ;; Return value:  Size  Location     Type
  1774 ;;                  1    wreg      void 
  1775 ;; Registers used:
  1776 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1777 ;; Tracked objects:
  1778 ;;		On entry : B1F/0
  1779 ;;		On exit  : 1E/0
  1780 ;;		Unchanged: 0/0
  1781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1782 ;;      Params:         0       0       0       0
  1783 ;;      Locals:         0       0       0       0
  1784 ;;      Temps:          0       0       0       0
  1785 ;;      Totals:         0       0       0       0
  1786 ;;Total ram usage:        0 bytes
  1787 ;; Hardware stack levels required when called: 5
  1788 ;; This function calls:
  1789 ;;		_CONFIG_SYSTEM
  1790 ;;		_CONFIG_TMR0_INTERRUPT
  1791 ;;		_GET_CURRENT_POT_VALUES
  1792 ;;		_PROCESS_FINAL_SPEED_AND_PRESCALER
  1793 ;;		_PROCESS_RAW_SPEED_AND_PRESCALER
  1794 ;;		_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST
  1795 ;;		_TMR0_WRITE
  1796 ;;		_TURN_ON_CCP3_PWM
  1797 ;; This function is called by:
  1798 ;;		Startup code after reset
  1799 ;; This function uses a non-reentrant model
  1800 ;;
  1801                           
  1802     0700                     _main:	
  1803                           ;psect for function _main
  1804                           
  1805                           
  1806                           ;main.c: 488:     CONFIG_SYSTEM();
  1807                           
  1808                           ;incstack = 0
  1809                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1810     0700  3187  279C  3187   	fcall	_CONFIG_SYSTEM
  1811                           
  1812                           ;main.c: 489:     TURN_ON_CCP3_PWM();
  1813     0703  3187  27B9  3187   	fcall	_TURN_ON_CCP3_PWM
  1814                           
  1815                           ;main.c: 490:     CONFIG_TMR0_INTERRUPT();
  1816     0706  3187  27DB  3187   	fcall	_CONFIG_TMR0_INTERRUPT
  1817                           
  1818                           ;main.c: 491:     GET_CURRENT_POT_VALUES();
  1819     0709  3186  2668  3187   	fcall	_GET_CURRENT_POT_VALUES
  1820                           
  1821                           ;main.c: 492:     PROCESS_RAW_SPEED_AND_PRESCALER();
  1822     070C  3185  250B  3187   	fcall	_PROCESS_RAW_SPEED_AND_PRESCALER
  1823                           
  1824                           ;main.c: 493:     PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST();
  1825     070F  3185  2578  3187   	fcall	_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST
  1826                           
  1827                           ;main.c: 494:     PROCESS_FINAL_SPEED_AND_PRESCALER();
  1828     0712  3185  25D9  3187   	fcall	_PROCESS_FINAL_SPEED_AND_PRESCALER
  1829                           
  1830                           ;main.c: 495:     TMR0_WRITE(&final_TMR0);
  1831     0715  3075               	movlw	(low (_final_TMR0| 0))& (0+255)
  1832     0716  3187  27C1  3187   	fcall	_TMR0_WRITE
  1833                           
  1834                           ;main.c: 496:     GIE = 1;
  1835     0719  178B               	bsf	11,7	;volatile
  1836     071A                     l1877:
  1837                           
  1838                           ;main.c: 500:         GET_CURRENT_POT_VALUES();
  1839     071A  3186  2668  3187   	fcall	_GET_CURRENT_POT_VALUES
  1840                           
  1841                           ;main.c: 501:         PROCESS_RAW_SPEED_AND_PRESCALER();
  1842     071D  3185  250B  3187   	fcall	_PROCESS_RAW_SPEED_AND_PRESCALER
  1843                           
  1844                           ;main.c: 502:         PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST();
  1845     0720  3185  2578  3187   	fcall	_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST
  1846                           
  1847                           ;main.c: 503:         PROCESS_FINAL_SPEED_AND_PRESCALER();
  1848     0723  3185  25D9  3187   	fcall	_PROCESS_FINAL_SPEED_AND_PRESCALER
  1849     0726  2F1A               	goto	l1877
  1850     0727                     __end_of_main:
  1851                           
  1852                           	psect	text1
  1853     07B9                     __ptext1:	
  1854 ;; *************** function _TURN_ON_CCP3_PWM *****************
  1855 ;; Defined at:
  1856 ;;		line 228 in file "main.c"
  1857 ;; Parameters:    Size  Location     Type
  1858 ;;		None
  1859 ;; Auto vars:     Size  Location     Type
  1860 ;;		None
  1861 ;; Return value:  Size  Location     Type
  1862 ;;                  1    wreg      unsigned char 
  1863 ;; Registers used:
  1864 ;;		None
  1865 ;; Tracked objects:
  1866 ;;		On entry : B1F/0
  1867 ;;		On exit  : B1F/1
  1868 ;;		Unchanged: B00/0
  1869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1870 ;;      Params:         0       0       0       0
  1871 ;;      Locals:         0       0       0       0
  1872 ;;      Temps:          0       0       0       0
  1873 ;;      Totals:         0       0       0       0
  1874 ;;Total ram usage:        0 bytes
  1875 ;; Hardware stack levels used: 1
  1876 ;; Hardware stack levels required when called: 2
  1877 ;; This function calls:
  1878 ;;		Nothing
  1879 ;; This function is called by:
  1880 ;;		_main
  1881 ;; This function uses a non-reentrant model
  1882 ;;
  1883                           
  1884     07B9                     _TURN_ON_CCP3_PWM:	
  1885                           ;psect for function _TURN_ON_CCP3_PWM
  1886                           
  1887                           
  1888                           ;main.c: 230:     TMR2IF = 0;
  1889                           
  1890                           ;incstack = 0
  1891                           ; Regs used in _TURN_ON_CCP3_PWM: []
  1892     07B9  1091               	bcf	17,1	;volatile
  1893                           
  1894                           ;main.c: 231:     TMR2ON = 1;
  1895     07BA  151C               	bsf	28,2	;volatile
  1896     07BB                     l177:	
  1897                           ;main.c: 232:     while(TMR2IF == 0){}
  1898                           
  1899     07BB  1C91               	btfss	17,1	;volatile
  1900     07BC  2FBB               	goto	l177
  1901                           
  1902                           ;main.c: 233:     TMR2IF = 0;
  1903     07BD  1091               	bcf	17,1	;volatile
  1904                           
  1905                           ;main.c: 234:     TRISA2 = 0;
  1906     07BE  0021               	movlb	1	; select bank1
  1907     07BF  110C               	bcf	12,2	;volatile
  1908                           
  1909                           ;main.c: 235:     return 1;;	Return value of _TURN_ON_CCP3_PWM is never used
  1910     07C0  0008               	return
  1911     07C1                     __end_of_TURN_ON_CCP3_PWM:
  1912                           
  1913                           	psect	text2
  1914     07C1                     __ptext2:	
  1915 ;; *************** function _TMR0_WRITE *****************
  1916 ;; Defined at:
  1917 ;;		line 251 in file "main.c"
  1918 ;; Parameters:    Size  Location     Type
  1919 ;;  timer_value_    1    wreg     PTR volatile unsigned ch
  1920 ;;		 -> final_TMR0(1), 
  1921 ;; Auto vars:     Size  Location     Type
  1922 ;;  timer_value_    1    0[BANK0 ] PTR volatile unsigned ch
  1923 ;;		 -> final_TMR0(1), 
  1924 ;; Return value:  Size  Location     Type
  1925 ;;                  1    wreg      unsigned char 
  1926 ;; Registers used:
  1927 ;;		wreg, fsr1l, fsr1h
  1928 ;; Tracked objects:
  1929 ;;		On entry : 1E/0
  1930 ;;		On exit  : 1F/0
  1931 ;;		Unchanged: 0/0
  1932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1933 ;;      Params:         0       0       0       0
  1934 ;;      Locals:         0       1       0       0
  1935 ;;      Temps:          0       0       0       0
  1936 ;;      Totals:         0       1       0       0
  1937 ;;Total ram usage:        1 bytes
  1938 ;; Hardware stack levels used: 1
  1939 ;; Hardware stack levels required when called: 2
  1940 ;; This function calls:
  1941 ;;		Nothing
  1942 ;; This function is called by:
  1943 ;;		_main
  1944 ;; This function uses a non-reentrant model
  1945 ;;
  1946                           
  1947     07C1                     _TMR0_WRITE:	
  1948                           ;psect for function _TMR0_WRITE
  1949                           
  1950                           
  1951                           ;incstack = 0
  1952                           ; Regs used in _TMR0_WRITE: [wregfsr1]
  1953                           ;TMR0_WRITE@timer_value_ptr stored from wreg
  1954     07C1  0020               	movlb	0	; select bank0
  1955     07C2  00C8               	movwf	TMR0_WRITE@timer_value_ptr
  1956                           
  1957                           ;main.c: 252:     TMR0 = (uint8_t) *timer_value_ptr;
  1958     07C3  0848               	movf	TMR0_WRITE@timer_value_ptr,w
  1959     07C4  0086               	movwf	6
  1960     07C5  0187               	clrf	7
  1961     07C6  0801               	movf	1,w
  1962     07C7  0095               	movwf	21	;volatile
  1963     07C8  0008               	return
  1964     07C9                     __end_of_TMR0_WRITE:
  1965                           
  1966                           	psect	text3
  1967     0578                     __ptext3:	
  1968 ;; *************** function _PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST *****************
  1969 ;; Defined at:
  1970 ;;		line 363 in file "main.c"
  1971 ;; Parameters:    Size  Location     Type
  1972 ;;		None
  1973 ;; Auto vars:     Size  Location     Type
  1974 ;;  temp            2   22[BANK0 ] unsigned short 
  1975 ;;  symmetry_sta    1   24[BANK0 ] unsigned char 
  1976 ;; Return value:  Size  Location     Type
  1977 ;;                  1    wreg      unsigned char 
  1978 ;; Registers used:
  1979 ;;		wreg, status,2, status,0, pclath, cstack
  1980 ;; Tracked objects:
  1981 ;;		On entry : 1F/0
  1982 ;;		On exit  : 1F/0
  1983 ;;		Unchanged: 0/0
  1984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1985 ;;      Params:         0       0       0       0
  1986 ;;      Locals:         0       3       0       0
  1987 ;;      Temps:          0       2       0       0
  1988 ;;      Totals:         0       5       0       0
  1989 ;;Total ram usage:        5 bytes
  1990 ;; Hardware stack levels used: 1
  1991 ;; Hardware stack levels required when called: 4
  1992 ;; This function calls:
  1993 ;;		_LENGTHEN_PERIOD
  1994 ;;		_SHORTEN_PERIOD
  1995 ;;		___wmul
  1996 ;; This function is called by:
  1997 ;;		_main
  1998 ;; This function uses a non-reentrant model
  1999 ;;
  2000                           
  2001     0578                     _PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST:	
  2002                           ;psect for function _PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST
  2003                           
  2004                           
  2005                           ;main.c: 364:     if(current_symmetry == 128){
  2006                           
  2007                           ;incstack = 0
  2008                           ; Regs used in _PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST: [wreg+status,2+status,0+pclath
      +                          +cstack]
  2009     0578  3080               	movlw	128
  2010     0579  0632               	xorwf	_current_symmetry,w	;volatile
  2011     057A  0433               	iorwf	_current_symmetry+1,w	;volatile
  2012     057B  1D03               	btfss	3,2
  2013     057C  2D83               	goto	l1821
  2014                           
  2015                           ;main.c: 365:         TMR0_offset = 0;
  2016     057D  01C3               	clrf	_TMR0_offset	;volatile
  2017                           
  2018                           ;main.c: 366:         TMR0_offset_sign = POSITIVE;
  2019     057E  3001               	movlw	1
  2020     057F  00C2               	movwf	_TMR0_offset_sign	;volatile
  2021                           
  2022                           ;main.c: 367:         prescaler_adjust = DO_NOTHING;
  2023     0580  01C1               	clrf	_prescaler_adjust	;volatile
  2024                           
  2025                           ;main.c: 368:         clear_TMR0_please = NO;
  2026     0581  01BF               	clrf	_clear_TMR0_please	;volatile
  2027                           
  2028                           ;main.c: 369:         return 1;;	Return value of _PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJU
      +                          ST is never used
  2029     0582  0008               	return
  2030     0583                     l1821:
  2031                           
  2032                           ;main.c: 371:     uint8_t symmetry_status = 0;
  2033     0583  01E0               	clrf	PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST@symmetry_status
  2034                           
  2035                           ;main.c: 372:     if(current_symmetry > 128){
  2036     0584  3000               	movlw	0
  2037     0585  0233               	subwf	_current_symmetry+1,w	;volatile
  2038     0586  3081               	movlw	129
  2039     0587  1903               	skipnz
  2040     0588  0232               	subwf	_current_symmetry,w	;volatile
  2041     0589  1C03               	skipc
  2042     058A  2D96               	goto	l1829
  2043                           
  2044                           ;main.c: 373:         current_symmetry = 255 - current_symmetry;
  2045     058B  30FF               	movlw	255
  2046     058C  00DC               	movwf	??_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST
  2047     058D  0832               	movf	_current_symmetry,w	;volatile
  2048     058E  025C               	subwf	??_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST,w
  2049     058F  00B2               	movwf	_current_symmetry	;volatile
  2050     0590  0933               	comf	_current_symmetry+1,w	;volatile
  2051     0591  1803               	skipnc
  2052     0592  0A89               	incf	9,f
  2053     0593  00B3               	movwf	_current_symmetry+1	;volatile
  2054                           
  2055                           ;main.c: 374:         symmetry_status = 1;
  2056     0594  01E0               	clrf	PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST@symmetry_status
  2057     0595  0AE0               	incf	PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST@symmetry_status,f
  2058     0596                     l1829:
  2059                           
  2060                           ;main.c: 377:     uint16_t temp = (uint16_t)(361 * (128 - current_symmetry));
  2061     0596  3080               	movlw	128
  2062     0597  00DC               	movwf	??_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST
  2063     0598  0832               	movf	_current_symmetry,w	;volatile
  2064     0599  025C               	subwf	??_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST,w
  2065     059A  00C8               	movwf	___wmul@multiplier
  2066     059B  0933               	comf	_current_symmetry+1,w	;volatile
  2067     059C  1803               	skipnc
  2068     059D  0A89               	incf	9,f
  2069     059E  00C9               	movwf	___wmul@multiplier+1
  2070     059F  3069               	movlw	105
  2071     05A0  00CA               	movwf	___wmul@multiplicand
  2072     05A1  3001               	movlw	1
  2073     05A2  00CB               	movwf	___wmul@multiplicand+1
  2074     05A3  3187  276E  3185   	fcall	___wmul
  2075     05A6  0849               	movf	?___wmul+1,w
  2076     05A7  00DF               	movwf	PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST@temp+1
  2077     05A8  0848               	movf	?___wmul,w
  2078     05A9  00DE               	movwf	PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST@temp
  2079                           
  2080                           ;main.c: 378:     symmetry_total = (uint32_t)(temp >> 7);
  2081     05AA  085F               	movf	PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST@temp+1,w
  2082     05AB  00DD               	movwf	??_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST+1
  2083     05AC  085E               	movf	PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST@temp,w
  2084     05AD  00DC               	movwf	??_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST
  2085     05AE  3007               	movlw	7
  2086     05AF                     u1545:
  2087     05AF  36DD               	lsrf	??_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST+1,f
  2088     05B0  0CDC               	rrf	??_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST,f
  2089     05B1  0B89               	decfsz	9,f
  2090     05B2  2DAF               	goto	u1545
  2091     05B3  085C               	movf	??_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST,w
  2092     05B4  00A0               	movwf	_symmetry_total	;volatile
  2093     05B5  085D               	movf	??_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST+1,w
  2094     05B6  00A1               	movwf	_symmetry_total+1	;volatile
  2095     05B7  01A2               	clrf	_symmetry_total+2	;volatile
  2096     05B8  01A3               	clrf	_symmetry_total+3	;volatile
  2097                           
  2098                           ;main.c: 380:     if((current_halfcycle == 0) && (symmetry_status == 0)){
  2099     05B9  0845               	movf	_current_halfcycle,w	;volatile
  2100     05BA  1D03               	btfss	3,2
  2101     05BB  2DC2               	goto	l1839
  2102     05BC  0860               	movf	PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST@symmetry_status,w
  2103     05BD  1D03               	btfss	3,2
  2104     05BE  2DC2               	goto	l1839
  2105     05BF                     l1837:
  2106                           
  2107                           ;main.c: 381:         SHORTEN_PERIOD();
  2108     05BF  3183  23F1         	fcall	_SHORTEN_PERIOD
  2109                           
  2110                           ;main.c: 382:     }
  2111     05C1  0008               	return
  2112     05C2                     l1839:
  2113     05C2  0845               	movf	_current_halfcycle,w	;volatile
  2114     05C3  1D03               	btfss	3,2
  2115     05C4  2DCF               	goto	l1845
  2116     05C5  0360               	decf	PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST@symmetry_status,w
  2117     05C6  1903               	btfsc	3,2
  2118     05C7  2DCC               	goto	l1843
  2119     05C8  2DCF               	goto	l1845
  2120     05C9                     l1847:
  2121     05C9  0860               	movf	PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST@symmetry_status,w
  2122     05CA  1D03               	btfss	3,2
  2123     05CB  2DD2               	goto	l1851
  2124     05CC                     l1843:
  2125                           
  2126                           ;main.c: 384:         LENGTHEN_PERIOD();
  2127     05CC  3186  2626         	fcall	_LENGTHEN_PERIOD
  2128                           
  2129                           ;main.c: 385:     }
  2130     05CE  0008               	return
  2131     05CF                     l1845:
  2132     05CF  0345               	decf	_current_halfcycle,w	;volatile
  2133     05D0  1903               	btfsc	3,2
  2134     05D1  2DC9               	goto	l1847
  2135     05D2                     l1851:
  2136     05D2  0345               	decf	_current_halfcycle,w	;volatile
  2137     05D3  1D03               	btfss	3,2
  2138     05D4  0008               	return
  2139     05D5  0360               	decf	PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST@symmetry_status,w
  2140     05D6  1D03               	btfss	3,2
  2141     05D7  0008               	return
  2142     05D8  2DBF               	goto	l1837
  2143     05D9                     __end_of_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST:
  2144                           
  2145                           	psect	text4
  2146     076E                     __ptext4:	
  2147 ;; *************** function ___wmul *****************
  2148 ;; Defined at:
  2149 ;;		line 15 in file "/Applications/microchip/xc8/v2.45/pic/sources/c99/common/Umul16.c"
  2150 ;; Parameters:    Size  Location     Type
  2151 ;;  multiplier      2    0[BANK0 ] unsigned int 
  2152 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  2153 ;; Auto vars:     Size  Location     Type
  2154 ;;  product         2    4[BANK0 ] unsigned int 
  2155 ;; Return value:  Size  Location     Type
  2156 ;;                  2    0[BANK0 ] unsigned int 
  2157 ;; Registers used:
  2158 ;;		wreg, status,2, status,0
  2159 ;; Tracked objects:
  2160 ;;		On entry : 1F/0
  2161 ;;		On exit  : 1F/0
  2162 ;;		Unchanged: 0/0
  2163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2164 ;;      Params:         0       4       0       0
  2165 ;;      Locals:         0       2       0       0
  2166 ;;      Temps:          0       0       0       0
  2167 ;;      Totals:         0       6       0       0
  2168 ;;Total ram usage:        6 bytes
  2169 ;; Hardware stack levels used: 1
  2170 ;; Hardware stack levels required when called: 2
  2171 ;; This function calls:
  2172 ;;		Nothing
  2173 ;; This function is called by:
  2174 ;;		_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST
  2175 ;; This function uses a non-reentrant model
  2176 ;;
  2177                           
  2178     076E                     ___wmul:	
  2179                           ;psect for function ___wmul
  2180                           
  2181                           
  2182                           ;incstack = 0
  2183                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2184     076E  01CC               	clrf	___wmul@product
  2185     076F  01CD               	clrf	___wmul@product+1
  2186     0770                     l1729:
  2187     0770  1C48               	btfss	___wmul@multiplier,0
  2188     0771  2F76               	goto	l419
  2189     0772  084A               	movf	___wmul@multiplicand,w
  2190     0773  07CC               	addwf	___wmul@product,f
  2191     0774  084B               	movf	___wmul@multiplicand+1,w
  2192     0775  3DCD               	addwfc	___wmul@product+1,f
  2193     0776                     l419:
  2194     0776  3001               	movlw	1
  2195     0777                     u1365:
  2196     0777  35CA               	lslf	___wmul@multiplicand,f
  2197     0778  0DCB               	rlf	___wmul@multiplicand+1,f
  2198     0779  0B89               	decfsz	9,f
  2199     077A  2F77               	goto	u1365
  2200     077B  3001               	movlw	1
  2201     077C                     u1375:
  2202     077C  36C9               	lsrf	___wmul@multiplier+1,f
  2203     077D  0CC8               	rrf	___wmul@multiplier,f
  2204     077E  0B89               	decfsz	9,f
  2205     077F  2F7C               	goto	u1375
  2206     0780  0848               	movf	___wmul@multiplier,w
  2207     0781  0449               	iorwf	___wmul@multiplier+1,w
  2208     0782  1D03               	btfss	3,2
  2209     0783  2F70               	goto	l1729
  2210     0784  084D               	movf	___wmul@product+1,w
  2211     0785  00C9               	movwf	?___wmul+1
  2212     0786  084C               	movf	___wmul@product,w
  2213     0787  00C8               	movwf	?___wmul
  2214     0788  0008               	return
  2215     0789                     __end_of___wmul:
  2216                           
  2217                           	psect	text5
  2218     03F1                     __ptext5:	
  2219 ;; *************** function _SHORTEN_PERIOD *****************
  2220 ;; Defined at:
  2221 ;;		line 311 in file "main.c"
  2222 ;; Parameters:    Size  Location     Type
  2223 ;;		None
  2224 ;; Auto vars:     Size  Location     Type
  2225 ;;  TMR0_raw_ext    2   18[BANK0 ] unsigned short 
  2226 ;;  dTMR0_ideal     2   16[BANK0 ] unsigned short 
  2227 ;; Return value:  Size  Location     Type
  2228 ;;                  1    wreg      unsigned char 
  2229 ;; Registers used:
  2230 ;;		wreg, status,2, status,0, pclath, cstack
  2231 ;; Tracked objects:
  2232 ;;		On entry : 1F/0
  2233 ;;		On exit  : 1F/0
  2234 ;;		Unchanged: 0/0
  2235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2236 ;;      Params:         0       0       0       0
  2237 ;;      Locals:         0       4       0       0
  2238 ;;      Temps:          0       4       0       0
  2239 ;;      Totals:         0       8       0       0
  2240 ;;Total ram usage:        8 bytes
  2241 ;; Hardware stack levels used: 1
  2242 ;; Hardware stack levels required when called: 3
  2243 ;; This function calls:
  2244 ;;		___lmul
  2245 ;; This function is called by:
  2246 ;;		_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST
  2247 ;; This function uses a non-reentrant model
  2248 ;;
  2249                           
  2250     03F1                     _SHORTEN_PERIOD:	
  2251                           ;psect for function _SHORTEN_PERIOD
  2252                           
  2253                           
  2254                           ;main.c: 312:     uint16_t dTMR0_ideal = (uint16_t)((uint32_t)(symmetry_total * 47926) >
      +                          > 16);
  2255                           
  2256                           ;incstack = 0
  2257                           ; Regs used in _SHORTEN_PERIOD: [wreg+status,2+status,0+pclath+cstack]
  2258     03F1  0823               	movf	_symmetry_total+3,w	;volatile
  2259     03F2  00CB               	movwf	___lmul@multiplier+3
  2260     03F3  0822               	movf	_symmetry_total+2,w	;volatile
  2261     03F4  00CA               	movwf	___lmul@multiplier+2
  2262     03F5  0821               	movf	_symmetry_total+1,w	;volatile
  2263     03F6  00C9               	movwf	___lmul@multiplier+1
  2264     03F7  0820               	movf	_symmetry_total,w	;volatile
  2265     03F8  00C8               	movwf	___lmul@multiplier
  2266     03F9  3000               	movlw	0
  2267     03FA  00CF               	movwf	___lmul@multiplicand+3
  2268     03FB  3000               	movlw	0
  2269     03FC  00CE               	movwf	___lmul@multiplicand+2
  2270     03FD  30BB               	movlw	187
  2271     03FE  00CD               	movwf	___lmul@multiplicand+1
  2272     03FF  3036               	movlw	54
  2273     0400  00CC               	movwf	___lmul@multiplicand
  2274     0401  3186  26A5  3183   	fcall	___lmul
  2275     0404  0848               	movf	?___lmul,w
  2276     0405  00D4               	movwf	??_SHORTEN_PERIOD
  2277     0406  0849               	movf	?___lmul+1,w
  2278     0407  00D5               	movwf	??_SHORTEN_PERIOD+1
  2279     0408  084A               	movf	?___lmul+2,w
  2280     0409  00D6               	movwf	??_SHORTEN_PERIOD+2
  2281     040A  084B               	movf	?___lmul+3,w
  2282     040B  00D7               	movwf	??_SHORTEN_PERIOD+3
  2283     040C  3010               	movlw	16
  2284     040D                     u1255:
  2285     040D  36D7               	lsrf	??_SHORTEN_PERIOD+3,f
  2286     040E  0CD6               	rrf	??_SHORTEN_PERIOD+2,f
  2287     040F  0CD5               	rrf	??_SHORTEN_PERIOD+1,f
  2288     0410  0CD4               	rrf	??_SHORTEN_PERIOD,f
  2289     0411  0B89               	decfsz	9,f
  2290     0412  2C0D               	goto	u1255
  2291     0413  0855               	movf	??_SHORTEN_PERIOD+1,w
  2292     0414  00D9               	movwf	SHORTEN_PERIOD@dTMR0_ideal+1
  2293     0415  0854               	movf	??_SHORTEN_PERIOD,w
  2294     0416  00D8               	movwf	SHORTEN_PERIOD@dTMR0_ideal
  2295                           
  2296                           ;main.c: 314:     if((dTMR0_ideal + raw_TMR0) < 128){
  2297     0417  0840               	movf	_raw_TMR0,w	;volatile
  2298     0418  0758               	addwf	SHORTEN_PERIOD@dTMR0_ideal,w
  2299     0419  00D4               	movwf	??_SHORTEN_PERIOD
  2300     041A  0859               	movf	SHORTEN_PERIOD@dTMR0_ideal+1,w
  2301     041B  1803               	skipnc
  2302     041C  0A59               	incf	SHORTEN_PERIOD@dTMR0_ideal+1,w
  2303     041D  00D5               	movwf	??_SHORTEN_PERIOD+1
  2304     041E  3000               	movlw	0
  2305     041F  0255               	subwf	??_SHORTEN_PERIOD+1,w
  2306     0420  3080               	movlw	128
  2307     0421  1903               	skipnz
  2308     0422  0254               	subwf	??_SHORTEN_PERIOD,w
  2309     0423  1803               	skipnc
  2310     0424  2C2C               	goto	l1675
  2311                           
  2312                           ;main.c: 315:         TMR0_offset = (uint8_t)dTMR0_ideal;
  2313     0425  0858               	movf	SHORTEN_PERIOD@dTMR0_ideal,w
  2314     0426  00C3               	movwf	_TMR0_offset	;volatile
  2315                           
  2316                           ;main.c: 316:         TMR0_offset_sign = POSITIVE;
  2317     0427  3001               	movlw	1
  2318     0428  00C2               	movwf	_TMR0_offset_sign	;volatile
  2319                           
  2320                           ;main.c: 317:         prescaler_adjust = DO_NOTHING;
  2321     0429  01C1               	clrf	_prescaler_adjust	;volatile
  2322                           
  2323                           ;main.c: 318:         clear_TMR0_please = NO;
  2324     042A  01BF               	clrf	_clear_TMR0_please	;volatile
  2325                           
  2326                           ;main.c: 319:     }
  2327     042B  0008               	return
  2328     042C                     l1675:
  2329     042C  0840               	movf	_raw_TMR0,w	;volatile
  2330     042D  0758               	addwf	SHORTEN_PERIOD@dTMR0_ideal,w
  2331     042E  00D4               	movwf	??_SHORTEN_PERIOD
  2332     042F  0859               	movf	SHORTEN_PERIOD@dTMR0_ideal+1,w
  2333     0430  1803               	skipnc
  2334     0431  0A59               	incf	SHORTEN_PERIOD@dTMR0_ideal+1,w
  2335     0432  00D5               	movwf	??_SHORTEN_PERIOD+1
  2336     0433  3080               	movlw	128
  2337     0434  0654               	xorwf	??_SHORTEN_PERIOD,w
  2338     0435  0455               	iorwf	??_SHORTEN_PERIOD+1,w
  2339     0436  1D03               	btfss	3,2
  2340     0437  2C40               	goto	l1685
  2341                           
  2342                           ;main.c: 321:         TMR0_offset = 0;
  2343     0438  01C3               	clrf	_TMR0_offset	;volatile
  2344                           
  2345                           ;main.c: 322:         TMR0_offset_sign = DONT_CARE;
  2346     0439  3004               	movlw	4
  2347     043A  00C2               	movwf	_TMR0_offset_sign	;volatile
  2348                           
  2349                           ;main.c: 323:         prescaler_adjust = DIVIDE_BY_TWO;
  2350     043B  3001               	movlw	1
  2351     043C                     L1:
  2352     043C  00C1               	movwf	_prescaler_adjust	;volatile
  2353                           
  2354                           ;main.c: 324:         clear_TMR0_please = YES;
  2355     043D  3001               	movlw	1
  2356     043E  00BF               	movwf	_clear_TMR0_please	;volatile
  2357                           
  2358                           ;main.c: 325:     }
  2359     043F  0008               	return
  2360     0440                     l1685:
  2361     0440  0840               	movf	_raw_TMR0,w	;volatile
  2362     0441  0758               	addwf	SHORTEN_PERIOD@dTMR0_ideal,w
  2363     0442  00D4               	movwf	??_SHORTEN_PERIOD
  2364     0443  0859               	movf	SHORTEN_PERIOD@dTMR0_ideal+1,w
  2365     0444  1803               	skipnc
  2366     0445  0A59               	incf	SHORTEN_PERIOD@dTMR0_ideal+1,w
  2367     0446  00D5               	movwf	??_SHORTEN_PERIOD+1
  2368     0447  3000               	movlw	0
  2369     0448  0255               	subwf	??_SHORTEN_PERIOD+1,w
  2370     0449  3081               	movlw	129
  2371     044A  1903               	skipnz
  2372     044B  0254               	subwf	??_SHORTEN_PERIOD,w
  2373     044C  1C03               	skipc
  2374     044D  0008               	return
  2375                           
  2376                           ;main.c: 327:         uint16_t TMR0_raw_extra = dTMR0_ideal + raw_TMR0 - 128;
  2377     044E  0840               	movf	_raw_TMR0,w	;volatile
  2378     044F  0758               	addwf	SHORTEN_PERIOD@dTMR0_ideal,w
  2379     0450  00D4               	movwf	??_SHORTEN_PERIOD
  2380     0451  0859               	movf	SHORTEN_PERIOD@dTMR0_ideal+1,w
  2381     0452  1803               	skipnc
  2382     0453  0A59               	incf	SHORTEN_PERIOD@dTMR0_ideal+1,w
  2383     0454  00D5               	movwf	??_SHORTEN_PERIOD+1
  2384     0455  0854               	movf	??_SHORTEN_PERIOD,w
  2385     0456  3E80               	addlw	128
  2386     0457  00DA               	movwf	SHORTEN_PERIOD@TMR0_raw_extra
  2387     0458  30FF               	movlw	255
  2388     0459  3D55               	addwfc	??_SHORTEN_PERIOD+1,w
  2389     045A  00DB               	movwf	SHORTEN_PERIOD@TMR0_raw_extra+1
  2390                           
  2391                           ;main.c: 328:         if(TMR0_raw_extra >> 7 == 0){
  2392     045B  085B               	movf	SHORTEN_PERIOD@TMR0_raw_extra+1,w
  2393     045C  00D5               	movwf	??_SHORTEN_PERIOD+1
  2394     045D  085A               	movf	SHORTEN_PERIOD@TMR0_raw_extra,w
  2395     045E  00D4               	movwf	??_SHORTEN_PERIOD
  2396     045F  3007               	movlw	7
  2397     0460                     u1295:
  2398     0460  36D5               	lsrf	??_SHORTEN_PERIOD+1,f
  2399     0461  0CD4               	rrf	??_SHORTEN_PERIOD,f
  2400     0462  0B89               	decfsz	9,f
  2401     0463  2C60               	goto	u1295
  2402     0464  0854               	movf	??_SHORTEN_PERIOD,w
  2403     0465  0455               	iorwf	??_SHORTEN_PERIOD+1,w
  2404     0466  1D03               	btfss	3,2
  2405     0467  2C71               	goto	l1691
  2406                           
  2407                           ;main.c: 329:             TMR0_offset = (uint8_t)TMR0_raw_extra;
  2408     0468  085A               	movf	SHORTEN_PERIOD@TMR0_raw_extra,w
  2409     0469  00C3               	movwf	_TMR0_offset	;volatile
  2410                           
  2411                           ;main.c: 330:             TMR0_offset_sign = POSITIVE;
  2412     046A  3001               	movlw	1
  2413     046B  00C2               	movwf	_TMR0_offset_sign	;volatile
  2414                           
  2415                           ;main.c: 331:             prescaler_adjust = DIVIDE_BY_TWO;
  2416     046C  3001               	movlw	1
  2417     046D  00C1               	movwf	_prescaler_adjust	;volatile
  2418                           
  2419                           ;main.c: 332:             clear_TMR0_please = YES;
  2420     046E  3001               	movlw	1
  2421     046F  00BF               	movwf	_clear_TMR0_please	;volatile
  2422                           
  2423                           ;main.c: 333:         }
  2424     0470  0008               	return
  2425     0471                     l1691:
  2426     0471  085B               	movf	SHORTEN_PERIOD@TMR0_raw_extra+1,w
  2427     0472  00D5               	movwf	??_SHORTEN_PERIOD+1
  2428     0473  085A               	movf	SHORTEN_PERIOD@TMR0_raw_extra,w
  2429     0474  00D4               	movwf	??_SHORTEN_PERIOD
  2430     0475  3007               	movlw	7
  2431     0476                     u1315:
  2432     0476  36D5               	lsrf	??_SHORTEN_PERIOD+1,f
  2433     0477  0CD4               	rrf	??_SHORTEN_PERIOD,f
  2434     0478  0B89               	decfsz	9,f
  2435     0479  2C76               	goto	u1315
  2436     047A  0354               	decf	??_SHORTEN_PERIOD,w
  2437     047B  0455               	iorwf	??_SHORTEN_PERIOD+1,w
  2438     047C  1D03               	btfss	3,2
  2439     047D  0008               	return
  2440                           
  2441                           ;main.c: 335:             TMR0_raw_extra = TMR0_raw_extra - 128;
  2442     047E  085A               	movf	SHORTEN_PERIOD@TMR0_raw_extra,w
  2443     047F  3E80               	addlw	128
  2444     0480  00DA               	movwf	SHORTEN_PERIOD@TMR0_raw_extra
  2445     0481  30FF               	movlw	255
  2446     0482  3D5B               	addwfc	SHORTEN_PERIOD@TMR0_raw_extra+1,w
  2447     0483  00DB               	movwf	SHORTEN_PERIOD@TMR0_raw_extra+1
  2448                           
  2449                           ;main.c: 336:             TMR0_offset = (uint8_t)TMR0_raw_extra;
  2450     0484  085A               	movf	SHORTEN_PERIOD@TMR0_raw_extra,w
  2451     0485  00C3               	movwf	_TMR0_offset	;volatile
  2452                           
  2453                           ;main.c: 337:             TMR0_offset_sign = POSITIVE;
  2454     0486  3001               	movlw	1
  2455     0487  00C2               	movwf	_TMR0_offset_sign	;volatile
  2456                           
  2457                           ;main.c: 338:             prescaler_adjust = DIVIDE_BY_FOUR;
  2458     0488  3003               	movlw	3
  2459     0489  2C3C               	goto	L1
  2460     048A                     __end_of_SHORTEN_PERIOD:
  2461                           
  2462                           	psect	text6
  2463     0626                     __ptext6:	
  2464 ;; *************** function _LENGTHEN_PERIOD *****************
  2465 ;; Defined at:
  2466 ;;		line 345 in file "main.c"
  2467 ;; Parameters:    Size  Location     Type
  2468 ;;		None
  2469 ;; Auto vars:     Size  Location     Type
  2470 ;;  dTMR0_ideal     2   16[BANK0 ] unsigned short 
  2471 ;; Return value:  Size  Location     Type
  2472 ;;                  1    wreg      unsigned char 
  2473 ;; Registers used:
  2474 ;;		wreg, status,2, status,0, pclath, cstack
  2475 ;; Tracked objects:
  2476 ;;		On entry : 1F/0
  2477 ;;		On exit  : 1F/0
  2478 ;;		Unchanged: 0/0
  2479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2480 ;;      Params:         0       0       0       0
  2481 ;;      Locals:         0       2       0       0
  2482 ;;      Temps:          0       4       0       0
  2483 ;;      Totals:         0       6       0       0
  2484 ;;Total ram usage:        6 bytes
  2485 ;; Hardware stack levels used: 1
  2486 ;; Hardware stack levels required when called: 3
  2487 ;; This function calls:
  2488 ;;		___lmul
  2489 ;; This function is called by:
  2490 ;;		_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST
  2491 ;; This function uses a non-reentrant model
  2492 ;;
  2493                           
  2494     0626                     _LENGTHEN_PERIOD:	
  2495                           ;psect for function _LENGTHEN_PERIOD
  2496                           
  2497                           
  2498                           ;main.c: 346:     uint16_t dTMR0_ideal = (uint16_t)((uint32_t)(symmetry_total * 17609) >
      +                          > 16);
  2499                           
  2500                           ;incstack = 0
  2501                           ; Regs used in _LENGTHEN_PERIOD: [wreg+status,2+status,0+pclath+cstack]
  2502     0626  0823               	movf	_symmetry_total+3,w	;volatile
  2503     0627  00CB               	movwf	___lmul@multiplier+3
  2504     0628  0822               	movf	_symmetry_total+2,w	;volatile
  2505     0629  00CA               	movwf	___lmul@multiplier+2
  2506     062A  0821               	movf	_symmetry_total+1,w	;volatile
  2507     062B  00C9               	movwf	___lmul@multiplier+1
  2508     062C  0820               	movf	_symmetry_total,w	;volatile
  2509     062D  00C8               	movwf	___lmul@multiplier
  2510     062E  3000               	movlw	0
  2511     062F  00CF               	movwf	___lmul@multiplicand+3
  2512     0630  3000               	movlw	0
  2513     0631  00CE               	movwf	___lmul@multiplicand+2
  2514     0632  3044               	movlw	68
  2515     0633  00CD               	movwf	___lmul@multiplicand+1
  2516     0634  30C9               	movlw	201
  2517     0635  00CC               	movwf	___lmul@multiplicand
  2518     0636  3186  26A5  3186   	fcall	___lmul
  2519     0639  0848               	movf	?___lmul,w
  2520     063A  00D4               	movwf	??_LENGTHEN_PERIOD
  2521     063B  0849               	movf	?___lmul+1,w
  2522     063C  00D5               	movwf	??_LENGTHEN_PERIOD+1
  2523     063D  084A               	movf	?___lmul+2,w
  2524     063E  00D6               	movwf	??_LENGTHEN_PERIOD+2
  2525     063F  084B               	movf	?___lmul+3,w
  2526     0640  00D7               	movwf	??_LENGTHEN_PERIOD+3
  2527     0641  3010               	movlw	16
  2528     0642                     u1335:
  2529     0642  36D7               	lsrf	??_LENGTHEN_PERIOD+3,f
  2530     0643  0CD6               	rrf	??_LENGTHEN_PERIOD+2,f
  2531     0644  0CD5               	rrf	??_LENGTHEN_PERIOD+1,f
  2532     0645  0CD4               	rrf	??_LENGTHEN_PERIOD,f
  2533     0646  0B89               	decfsz	9,f
  2534     0647  2E42               	goto	u1335
  2535     0648  0855               	movf	??_LENGTHEN_PERIOD+1,w
  2536     0649  00D9               	movwf	LENGTHEN_PERIOD@dTMR0_ideal+1
  2537     064A  0854               	movf	??_LENGTHEN_PERIOD,w
  2538     064B  00D8               	movwf	LENGTHEN_PERIOD@dTMR0_ideal
  2539                           
  2540                           ;main.c: 348:         if(raw_TMR0 < dTMR0_ideal){
  2541     064C  0840               	movf	_raw_TMR0,w	;volatile
  2542     064D  00D4               	movwf	??_LENGTHEN_PERIOD
  2543     064E  01D5               	clrf	??_LENGTHEN_PERIOD+1
  2544     064F  0859               	movf	LENGTHEN_PERIOD@dTMR0_ideal+1,w
  2545     0650  0255               	subwf	??_LENGTHEN_PERIOD+1,w
  2546     0651  1D03               	skipz
  2547     0652  2E55               	goto	u1345
  2548     0653  0858               	movf	LENGTHEN_PERIOD@dTMR0_ideal,w
  2549     0654  0254               	subwf	??_LENGTHEN_PERIOD,w
  2550     0655                     u1345:
  2551     0655  1803               	skipnc
  2552     0656  2E62               	goto	l1717
  2553                           
  2554                           ;main.c: 349:             TMR0_offset = (uint8_t)(128 - (dTMR0_ideal - raw_TMR0));
  2555     0657  0858               	movf	LENGTHEN_PERIOD@dTMR0_ideal,w
  2556     0658  0240               	subwf	_raw_TMR0,w
  2557     0659  3E80               	addlw	128
  2558     065A  00C3               	movwf	_TMR0_offset	;volatile
  2559                           
  2560                           ;main.c: 350:             TMR0_offset_sign = POSITIVE;
  2561     065B  3001               	movlw	1
  2562     065C  00C2               	movwf	_TMR0_offset_sign	;volatile
  2563                           
  2564                           ;main.c: 351:             prescaler_adjust = MULTIPLY_BY_TWO;
  2565     065D  3002               	movlw	2
  2566     065E  00C1               	movwf	_prescaler_adjust	;volatile
  2567                           
  2568                           ;main.c: 352:             clear_TMR0_please = YES;
  2569     065F  3001               	movlw	1
  2570     0660  00BF               	movwf	_clear_TMR0_please	;volatile
  2571                           
  2572                           ;main.c: 353:         }
  2573     0661  0008               	return
  2574     0662                     l1717:
  2575                           
  2576                           ;main.c: 355:             TMR0_offset = (uint8_t)dTMR0_ideal;
  2577     0662  0858               	movf	LENGTHEN_PERIOD@dTMR0_ideal,w
  2578     0663  00C3               	movwf	_TMR0_offset	;volatile
  2579                           
  2580                           ;main.c: 356:             TMR0_offset_sign = NEGATIVE;
  2581     0664  01C2               	clrf	_TMR0_offset_sign	;volatile
  2582                           
  2583                           ;main.c: 357:             prescaler_adjust = DO_NOTHING;
  2584     0665  01C1               	clrf	_prescaler_adjust	;volatile
  2585                           
  2586                           ;main.c: 358:             clear_TMR0_please = NO;
  2587     0666  01BF               	clrf	_clear_TMR0_please	;volatile
  2588     0667  0008               	return
  2589     0668                     __end_of_LENGTHEN_PERIOD:
  2590                           
  2591                           	psect	text7
  2592     050B                     __ptext7:	
  2593 ;; *************** function _PROCESS_RAW_SPEED_AND_PRESCALER *****************
  2594 ;; Defined at:
  2595 ;;		line 266 in file "main.c"
  2596 ;; Parameters:    Size  Location     Type
  2597 ;;		None
  2598 ;; Auto vars:     Size  Location     Type
  2599 ;;  speed_contro    2   16[BANK0 ] unsigned short 
  2600 ;; Return value:  Size  Location     Type
  2601 ;;                  1    wreg      unsigned char 
  2602 ;; Registers used:
  2603 ;;		wreg, status,2, status,0, pclath, cstack
  2604 ;; Tracked objects:
  2605 ;;		On entry : 1F/0
  2606 ;;		On exit  : 1F/0
  2607 ;;		Unchanged: 0/0
  2608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2609 ;;      Params:         0       0       0       0
  2610 ;;      Locals:         0       2       0       0
  2611 ;;      Temps:          0       4       0       0
  2612 ;;      Totals:         0       6       0       0
  2613 ;;Total ram usage:        6 bytes
  2614 ;; Hardware stack levels used: 1
  2615 ;; Hardware stack levels required when called: 3
  2616 ;; This function calls:
  2617 ;;		___lmul
  2618 ;; This function is called by:
  2619 ;;		_main
  2620 ;; This function uses a non-reentrant model
  2621 ;;
  2622                           
  2623     050B                     _PROCESS_RAW_SPEED_AND_PRESCALER:	
  2624                           ;psect for function _PROCESS_RAW_SPEED_AND_PRESCALER
  2625                           
  2626                           
  2627                           ;main.c: 267:     current_speed_linear_32 = current_speed_linear;
  2628                           
  2629                           ;incstack = 0
  2630                           ; Regs used in _PROCESS_RAW_SPEED_AND_PRESCALER: [wreg+status,2+status,0+pclath+cstack]
  2631     050B  0838               	movf	_current_speed_linear,w	;volatile
  2632     050C  00A8               	movwf	_current_speed_linear_32	;volatile
  2633     050D  0839               	movf	_current_speed_linear+1,w	;volatile
  2634     050E  00A9               	movwf	_current_speed_linear_32+1	;volatile
  2635     050F  01AA               	clrf	_current_speed_linear_32+2	;volatile
  2636     0510  01AB               	clrf	_current_speed_linear_32+3	;volatile
  2637                           
  2638                           ;main.c: 268:     speed_control_32 = current_speed_linear_32 * 600;;
  2639     0511  082B               	movf	_current_speed_linear_32+3,w	;volatile
  2640     0512  00CB               	movwf	___lmul@multiplier+3
  2641     0513  082A               	movf	_current_speed_linear_32+2,w	;volatile
  2642     0514  00CA               	movwf	___lmul@multiplier+2
  2643     0515  0829               	movf	_current_speed_linear_32+1,w	;volatile
  2644     0516  00C9               	movwf	___lmul@multiplier+1
  2645     0517  0828               	movf	_current_speed_linear_32,w	;volatile
  2646     0518  00C8               	movwf	___lmul@multiplier
  2647     0519  3000               	movlw	0
  2648     051A  00CF               	movwf	___lmul@multiplicand+3
  2649     051B  3000               	movlw	0
  2650     051C  00CE               	movwf	___lmul@multiplicand+2
  2651     051D  3002               	movlw	2
  2652     051E  00CD               	movwf	___lmul@multiplicand+1
  2653     051F  3058               	movlw	88
  2654     0520  00CC               	movwf	___lmul@multiplicand
  2655     0521  3186  26A5  3185   	fcall	___lmul
  2656     0524  084B               	movf	?___lmul+3,w
  2657     0525  00AF               	movwf	_speed_control_32+3	;volatile
  2658     0526  084A               	movf	?___lmul+2,w
  2659     0527  00AE               	movwf	_speed_control_32+2	;volatile
  2660     0528  0849               	movf	?___lmul+1,w
  2661     0529  00AD               	movwf	_speed_control_32+1	;volatile
  2662     052A  0848               	movf	?___lmul,w
  2663     052B  00AC               	movwf	_speed_control_32	;volatile
  2664                           
  2665                           ;main.c: 269:     speed_control_32 = speed_control_32 >> 10;
  2666     052C  082C               	movf	_speed_control_32,w	;volatile
  2667     052D  00D4               	movwf	??_PROCESS_RAW_SPEED_AND_PRESCALER
  2668     052E  082D               	movf	_speed_control_32+1,w	;volatile
  2669     052F  00D5               	movwf	??_PROCESS_RAW_SPEED_AND_PRESCALER+1
  2670     0530  082E               	movf	_speed_control_32+2,w	;volatile
  2671     0531  00D6               	movwf	??_PROCESS_RAW_SPEED_AND_PRESCALER+2
  2672     0532  082F               	movf	_speed_control_32+3,w	;volatile
  2673     0533  00D7               	movwf	??_PROCESS_RAW_SPEED_AND_PRESCALER+3
  2674     0534  300A               	movlw	10
  2675     0535                     u1405:
  2676     0535  36D7               	lsrf	??_PROCESS_RAW_SPEED_AND_PRESCALER+3,f
  2677     0536  0CD6               	rrf	??_PROCESS_RAW_SPEED_AND_PRESCALER+2,f
  2678     0537  0CD5               	rrf	??_PROCESS_RAW_SPEED_AND_PRESCALER+1,f
  2679     0538  0CD4               	rrf	??_PROCESS_RAW_SPEED_AND_PRESCALER,f
  2680     0539  0B89               	decfsz	9,f
  2681     053A  2D35               	goto	u1405
  2682     053B  0857               	movf	??_PROCESS_RAW_SPEED_AND_PRESCALER+3,w
  2683     053C  00AF               	movwf	_speed_control_32+3	;volatile
  2684     053D  0856               	movf	??_PROCESS_RAW_SPEED_AND_PRESCALER+2,w
  2685     053E  00AE               	movwf	_speed_control_32+2	;volatile
  2686     053F  0855               	movf	??_PROCESS_RAW_SPEED_AND_PRESCALER+1,w
  2687     0540  00AD               	movwf	_speed_control_32+1	;volatile
  2688     0541  0854               	movf	??_PROCESS_RAW_SPEED_AND_PRESCALER,w
  2689     0542  00AC               	movwf	_speed_control_32	;volatile
  2690                           
  2691                           ;main.c: 270:     speed_control = (uint16_t) speed_control_32;
  2692     0543  082D               	movf	_speed_control_32+1,w	;volatile
  2693     0544  00BD               	movwf	_speed_control+1	;volatile
  2694     0545  082C               	movf	_speed_control_32,w	;volatile
  2695     0546  00BC               	movwf	_speed_control	;volatile
  2696                           
  2697                           ;main.c: 272:         if(speed_control <= (127-12)){
  2698     0547  3000               	movlw	0
  2699     0548  023D               	subwf	_speed_control+1,w	;volatile
  2700     0549  3074               	movlw	116
  2701     054A  1903               	skipnz
  2702     054B  023C               	subwf	_speed_control,w	;volatile
  2703     054C  1803               	skipnc
  2704     054D  2D54               	goto	l1775
  2705                           
  2706                           ;main.c: 273:             raw_TMR0 = (uint8_t) speed_control + 12;
  2707     054E  083C               	movf	_speed_control,w	;volatile
  2708     054F  3E0C               	addlw	12
  2709     0550  00C0               	movwf	_raw_TMR0	;volatile
  2710                           
  2711                           ;main.c: 274:             base_prescaler_bits_index = 1;
  2712     0551  3001               	movlw	1
  2713     0552  00F0               	movwf	_base_prescaler_bits_index	;volatile
  2714                           
  2715                           ;main.c: 275:         }
  2716     0553  0008               	return
  2717     0554                     l1775:
  2718                           
  2719                           ;main.c: 277:             uint16_t speed_control_subtracted;;main.c: 278:             sp
      +                          eed_control_subtracted = speed_control - (127-12);
  2720     0554  083C               	movf	_speed_control,w	;volatile
  2721     0555  3E8D               	addlw	141
  2722     0556  00D8               	movwf	PROCESS_RAW_SPEED_AND_PRESCALER@speed_control_subtracted
  2723     0557  30FF               	movlw	255
  2724     0558  3D3D               	addwfc	_speed_control+1,w	;volatile
  2725     0559  00D9               	movwf	PROCESS_RAW_SPEED_AND_PRESCALER@speed_control_subtracted+1
  2726                           
  2727                           ;main.c: 279:             how_many_128 = (uint8_t)(speed_control_subtracted >> 7);
  2728     055A  0859               	movf	PROCESS_RAW_SPEED_AND_PRESCALER@speed_control_subtracted+1,w
  2729     055B  00D5               	movwf	??_PROCESS_RAW_SPEED_AND_PRESCALER+1
  2730     055C  0858               	movf	PROCESS_RAW_SPEED_AND_PRESCALER@speed_control_subtracted,w
  2731     055D  00D4               	movwf	??_PROCESS_RAW_SPEED_AND_PRESCALER
  2732     055E  3007               	movlw	7
  2733     055F                     u1425:
  2734     055F  36D5               	lsrf	??_PROCESS_RAW_SPEED_AND_PRESCALER+1,f
  2735     0560  0CD4               	rrf	??_PROCESS_RAW_SPEED_AND_PRESCALER,f
  2736     0561  0B89               	decfsz	9,f
  2737     0562  2D5F               	goto	u1425
  2738     0563  0854               	movf	??_PROCESS_RAW_SPEED_AND_PRESCALER,w
  2739     0564  00D6               	movwf	??_PROCESS_RAW_SPEED_AND_PRESCALER+2
  2740     0565  01D7               	clrf	??_PROCESS_RAW_SPEED_AND_PRESCALER+3
  2741     0566  0856               	movf	??_PROCESS_RAW_SPEED_AND_PRESCALER+2,w
  2742     0567  00BA               	movwf	_how_many_128	;volatile
  2743     0568  0857               	movf	??_PROCESS_RAW_SPEED_AND_PRESCALER+3,w
  2744     0569  00BB               	movwf	_how_many_128+1	;volatile
  2745                           
  2746                           ;main.c: 280:             raw_TMR0 = (uint8_t) (speed_control_subtracted - (how_many_128
      +                           << 7));
  2747     056A  083A               	movf	_how_many_128,w	;volatile
  2748     056B  00D4               	movwf	??_PROCESS_RAW_SPEED_AND_PRESCALER
  2749     056C  3006               	movlw	6
  2750     056D                     u1435:
  2751     056D  35D4               	lslf	??_PROCESS_RAW_SPEED_AND_PRESCALER,f
  2752     056E  3EFF               	addlw	-1
  2753     056F  1D03               	skipz
  2754     0570  2D6D               	goto	u1435
  2755     0571  3554               	lslf	??_PROCESS_RAW_SPEED_AND_PRESCALER,w
  2756     0572  0758               	addwf	PROCESS_RAW_SPEED_AND_PRESCALER@speed_control_subtracted,w
  2757     0573  00C0               	movwf	_raw_TMR0	;volatile
  2758                           
  2759                           ;main.c: 281:             base_prescaler_bits_index = (uint8_t)(how_many_128 + 2);
  2760     0574  083A               	movf	_how_many_128,w	;volatile
  2761     0575  3E02               	addlw	2
  2762     0576  00F0               	movwf	_base_prescaler_bits_index	;volatile
  2763     0577  0008               	return
  2764     0578                     __end_of_PROCESS_RAW_SPEED_AND_PRESCALER:
  2765                           
  2766                           	psect	text8
  2767     06A5                     __ptext8:	
  2768 ;; *************** function ___lmul *****************
  2769 ;; Defined at:
  2770 ;;		line 15 in file "/Applications/microchip/xc8/v2.45/pic/sources/c99/common/Umul32.c"
  2771 ;; Parameters:    Size  Location     Type
  2772 ;;  multiplier      4    0[BANK0 ] unsigned long 
  2773 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  2774 ;; Auto vars:     Size  Location     Type
  2775 ;;  product         4    8[BANK0 ] unsigned long 
  2776 ;; Return value:  Size  Location     Type
  2777 ;;                  4    0[BANK0 ] unsigned long 
  2778 ;; Registers used:
  2779 ;;		wreg, status,2, status,0
  2780 ;; Tracked objects:
  2781 ;;		On entry : 1F/0
  2782 ;;		On exit  : 1F/0
  2783 ;;		Unchanged: 0/0
  2784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2785 ;;      Params:         0       8       0       0
  2786 ;;      Locals:         0       4       0       0
  2787 ;;      Temps:          0       0       0       0
  2788 ;;      Totals:         0      12       0       0
  2789 ;;Total ram usage:       12 bytes
  2790 ;; Hardware stack levels used: 1
  2791 ;; Hardware stack levels required when called: 2
  2792 ;; This function calls:
  2793 ;;		Nothing
  2794 ;; This function is called by:
  2795 ;;		_PROCESS_RAW_SPEED_AND_PRESCALER
  2796 ;;		_SHORTEN_PERIOD
  2797 ;;		_LENGTHEN_PERIOD
  2798 ;; This function uses a non-reentrant model
  2799 ;;
  2800                           
  2801     06A5                     ___lmul:	
  2802                           ;psect for function ___lmul
  2803                           
  2804                           
  2805                           ;incstack = 0
  2806                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  2807     06A5  3000               	movlw	0
  2808     06A6  00D3               	movwf	___lmul@product+3
  2809     06A7  3000               	movlw	0
  2810     06A8  00D2               	movwf	___lmul@product+2
  2811     06A9  3000               	movlw	0
  2812     06AA  00D1               	movwf	___lmul@product+1
  2813     06AB  3000               	movlw	0
  2814     06AC  00D0               	movwf	___lmul@product
  2815     06AD                     l1597:
  2816     06AD  1C48               	btfss	___lmul@multiplier,0
  2817     06AE  2EB7               	goto	l1601
  2818     06AF  084C               	movf	___lmul@multiplicand,w
  2819     06B0  07D0               	addwf	___lmul@product,f
  2820     06B1  084D               	movf	___lmul@multiplicand+1,w
  2821     06B2  3DD1               	addwfc	___lmul@product+1,f
  2822     06B3  084E               	movf	___lmul@multiplicand+2,w
  2823     06B4  3DD2               	addwfc	___lmul@product+2,f
  2824     06B5  084F               	movf	___lmul@multiplicand+3,w
  2825     06B6  3DD3               	addwfc	___lmul@product+3,f
  2826     06B7                     l1601:
  2827     06B7  3001               	movlw	1
  2828     06B8                     u1195:
  2829     06B8  35CC               	lslf	___lmul@multiplicand,f
  2830     06B9  0DCD               	rlf	___lmul@multiplicand+1,f
  2831     06BA  0DCE               	rlf	___lmul@multiplicand+2,f
  2832     06BB  0DCF               	rlf	___lmul@multiplicand+3,f
  2833     06BC  0B89               	decfsz	9,f
  2834     06BD  2EB8               	goto	u1195
  2835     06BE  3001               	movlw	1
  2836     06BF                     u1205:
  2837     06BF  36CB               	lsrf	___lmul@multiplier+3,f
  2838     06C0  0CCA               	rrf	___lmul@multiplier+2,f
  2839     06C1  0CC9               	rrf	___lmul@multiplier+1,f
  2840     06C2  0CC8               	rrf	___lmul@multiplier,f
  2841     06C3  0B89               	decfsz	9,f
  2842     06C4  2EBF               	goto	u1205
  2843     06C5  084B               	movf	___lmul@multiplier+3,w
  2844     06C6  044A               	iorwf	___lmul@multiplier+2,w
  2845     06C7  0449               	iorwf	___lmul@multiplier+1,w
  2846     06C8  0448               	iorwf	___lmul@multiplier,w
  2847     06C9  1D03               	skipz
  2848     06CA  2EAD               	goto	l1597
  2849     06CB  0853               	movf	___lmul@product+3,w
  2850     06CC  00CB               	movwf	?___lmul+3
  2851     06CD  0852               	movf	___lmul@product+2,w
  2852     06CE  00CA               	movwf	?___lmul+2
  2853     06CF  0851               	movf	___lmul@product+1,w
  2854     06D0  00C9               	movwf	?___lmul+1
  2855     06D1  0850               	movf	___lmul@product,w
  2856     06D2  00C8               	movwf	?___lmul
  2857     06D3  0008               	return
  2858     06D4                     __end_of___lmul:
  2859                           
  2860                           	psect	text9
  2861     05D9                     __ptext9:	
  2862 ;; *************** function _PROCESS_FINAL_SPEED_AND_PRESCALER *****************
  2863 ;; Defined at:
  2864 ;;		line 286 in file "main.c"
  2865 ;; Parameters:    Size  Location     Type
  2866 ;;		None
  2867 ;; Auto vars:     Size  Location     Type
  2868 ;;		None
  2869 ;; Return value:  Size  Location     Type
  2870 ;;                  1    wreg      unsigned char 
  2871 ;; Registers used:
  2872 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  2873 ;; Tracked objects:
  2874 ;;		On entry : 1F/0
  2875 ;;		On exit  : 1E/0
  2876 ;;		Unchanged: 0/0
  2877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2878 ;;      Params:         0       0       0       0
  2879 ;;      Locals:         0       0       0       0
  2880 ;;      Temps:          0       0       0       0
  2881 ;;      Totals:         0       0       0       0
  2882 ;;Total ram usage:        0 bytes
  2883 ;; Hardware stack levels used: 1
  2884 ;; Hardware stack levels required when called: 2
  2885 ;; This function calls:
  2886 ;;		Nothing
  2887 ;; This function is called by:
  2888 ;;		_main
  2889 ;; This function uses a non-reentrant model
  2890 ;;
  2891                           
  2892     05D9                     _PROCESS_FINAL_SPEED_AND_PRESCALER:	
  2893                           ;psect for function _PROCESS_FINAL_SPEED_AND_PRESCALER
  2894                           
  2895                           
  2896                           ;main.c: 287:     if(clear_TMR0_please){
  2897                           
  2898                           ;incstack = 0
  2899                           ; Regs used in _PROCESS_FINAL_SPEED_AND_PRESCALER: [wreg-fsr0h+status,2+status,0+pclath]
  2900     05D9  083F               	movf	_clear_TMR0_please,w	;volatile
  2901     05DA  1D03               	btfss	3,2
  2902                           
  2903                           ;main.c: 288:         raw_TMR0 = 0;
  2904     05DB  01C0               	clrf	_raw_TMR0	;volatile
  2905                           
  2906                           ;main.c: 290:     if((TMR0_offset_sign == POSITIVE) || (TMR0_offset_sign == DONT_CARE)){
  2907     05DC  0342               	decf	_TMR0_offset_sign,w	;volatile
  2908     05DD  1903               	btfsc	3,2
  2909     05DE  2DE3               	goto	l1787
  2910     05DF  3004               	movlw	4
  2911     05E0  0642               	xorwf	_TMR0_offset_sign,w	;volatile
  2912     05E1  1D03               	btfss	3,2
  2913     05E2  2DE6               	goto	l1789
  2914     05E3                     l1787:
  2915                           
  2916                           ;main.c: 291:         final_TMR0 = raw_TMR0 + TMR0_offset;
  2917     05E3  0840               	movf	_raw_TMR0,w	;volatile
  2918     05E4  0743               	addwf	_TMR0_offset,w	;volatile
  2919     05E5  2DEB               	goto	L2
  2920     05E6                     l1789:	
  2921                           ;main.c: 292:     }
  2922                           
  2923     05E6  0842               	movf	_TMR0_offset_sign,w	;volatile
  2924     05E7  1D03               	btfss	3,2
  2925     05E8  2DEC               	goto	l204
  2926                           
  2927                           ;main.c: 294:         final_TMR0 = raw_TMR0 - TMR0_offset;
  2928     05E9  0843               	movf	_TMR0_offset,w	;volatile
  2929     05EA  0240               	subwf	_raw_TMR0,w	;volatile
  2930     05EB                     L2:
  2931     05EB  00F5               	movwf	_final_TMR0	;volatile
  2932     05EC                     l204:
  2933                           
  2934                           ;main.c: 296:     if(prescaler_adjust == DIVIDE_BY_TWO){
  2935     05EC  0341               	decf	_prescaler_adjust,w	;volatile
  2936     05ED  1D03               	btfss	3,2
  2937     05EE  2DFA               	goto	l1795
  2938                           
  2939                           ;main.c: 297:         OPTION_REG = prescaler_bits[base_prescaler_bits_index + 1];
  2940     05EF  0870               	movf	_base_prescaler_bits_index,w	;volatile
  2941     05F0  3EB2               	addlw	low ((_prescaler_bits+1)| (0+32768))
  2942     05F1  0084               	movwf	4
  2943     05F2  3087               	movlw	high ((_prescaler_bits+1)| (0+32768))
  2944     05F3  1803               	skipnc
  2945     05F4  3E01               	addlw	1
  2946     05F5  0085               	movwf	5
  2947     05F6  0800               	movf	0,w	;code access
  2948     05F7  0021               	movlb	1	; select bank1
  2949     05F8  0095               	movwf	21	;volatile
  2950                           
  2951                           ;main.c: 298:     }
  2952     05F9  0008               	return
  2953     05FA                     l1795:
  2954     05FA  3003               	movlw	3
  2955     05FB  0641               	xorwf	_prescaler_adjust,w	;volatile
  2956     05FC  1D03               	btfss	3,2
  2957     05FD  2E09               	goto	l1799
  2958                           
  2959                           ;main.c: 300:         OPTION_REG = prescaler_bits[base_prescaler_bits_index + 2];
  2960     05FE  0870               	movf	_base_prescaler_bits_index,w	;volatile
  2961     05FF  3EB3               	addlw	low ((_prescaler_bits+2)| (0+32768))
  2962     0600  0084               	movwf	4
  2963     0601  3087               	movlw	high ((_prescaler_bits+2)| (0+32768))
  2964     0602  1803               	skipnc
  2965     0603  3E01               	addlw	1
  2966     0604  0085               	movwf	5
  2967     0605  0800               	movf	0,w	;code access
  2968     0606  0021               	movlb	1	; select bank1
  2969     0607  0095               	movwf	21	;volatile
  2970                           
  2971                           ;main.c: 301:     }
  2972     0608  0008               	return
  2973     0609                     l1799:
  2974     0609  3002               	movlw	2
  2975     060A  0641               	xorwf	_prescaler_adjust,w	;volatile
  2976     060B  1D03               	btfss	3,2
  2977     060C  2E18               	goto	l1803
  2978                           
  2979                           ;main.c: 303:         OPTION_REG = prescaler_bits[base_prescaler_bits_index - 1];
  2980     060D  0870               	movf	_base_prescaler_bits_index,w	;volatile
  2981     060E  3EB0               	addlw	low ((_prescaler_bits+65535)| (0+32768))
  2982     060F  0084               	movwf	4
  2983     0610  3087               	movlw	high ((_prescaler_bits+65535)| (0+32768))
  2984     0611  1803               	skipnc
  2985     0612  3E01               	addlw	1
  2986     0613  0085               	movwf	5
  2987     0614  0800               	movf	0,w	;code access
  2988     0615  0021               	movlb	1	; select bank1
  2989     0616  0095               	movwf	21	;volatile
  2990                           
  2991                           ;main.c: 304:     }
  2992     0617  0008               	return
  2993     0618                     l1803:
  2994     0618  0841               	movf	_prescaler_adjust,w	;volatile
  2995     0619  1D03               	btfss	3,2
  2996     061A  0008               	return
  2997                           
  2998                           ;main.c: 306:         OPTION_REG = prescaler_bits[base_prescaler_bits_index];
  2999     061B  0870               	movf	_base_prescaler_bits_index,w	;volatile
  3000     061C  3EB1               	addlw	low (_prescaler_bits| (0+32768))
  3001     061D  0084               	movwf	4
  3002     061E  3087               	movlw	high (_prescaler_bits| (0+32768))
  3003     061F  1803               	skipnc
  3004     0620  3E01               	addlw	1
  3005     0621  0085               	movwf	5
  3006     0622  0800               	movf	0,w	;code access
  3007     0623  0021               	movlb	1	; select bank1
  3008     0624  0095               	movwf	21	;volatile
  3009     0625  0008               	return
  3010     0626                     __end_of_PROCESS_FINAL_SPEED_AND_PRESCALER:
  3011                           
  3012                           	psect	text10
  3013     0668                     __ptext10:	
  3014 ;; *************** function _GET_CURRENT_POT_VALUES *****************
  3015 ;; Defined at:
  3016 ;;		line 256 in file "main.c"
  3017 ;; Parameters:    Size  Location     Type
  3018 ;;		None
  3019 ;; Auto vars:     Size  Location     Type
  3020 ;;		None
  3021 ;; Return value:  Size  Location     Type
  3022 ;;                  1    wreg      unsigned char 
  3023 ;; Registers used:
  3024 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3025 ;; Tracked objects:
  3026 ;;		On entry : 1E/1
  3027 ;;		On exit  : 1F/0
  3028 ;;		Unchanged: 0/0
  3029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3030 ;;      Params:         0       0       0       0
  3031 ;;      Locals:         0       0       0       0
  3032 ;;      Temps:          0       2       0       0
  3033 ;;      Totals:         0       2       0       0
  3034 ;;Total ram usage:        2 bytes
  3035 ;; Hardware stack levels used: 1
  3036 ;; Hardware stack levels required when called: 4
  3037 ;; This function calls:
  3038 ;;		_DETERMINE_WAVESHAPE
  3039 ;;		_DO_ADC
  3040 ;; This function is called by:
  3041 ;;		_main
  3042 ;; This function uses a non-reentrant model
  3043 ;;
  3044                           
  3045     0668                     _GET_CURRENT_POT_VALUES:	
  3046                           ;psect for function _GET_CURRENT_POT_VALUES
  3047                           
  3048                           
  3049                           ;main.c: 257:     current_waveshape = DETERMINE_WAVESHAPE();
  3050                           
  3051                           ;incstack = 0
  3052                           ; Regs used in _GET_CURRENT_POT_VALUES: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3053     0668  3187  2727  3186   	fcall	_DETERMINE_WAVESHAPE
  3054     066B  00F2               	movwf	_current_waveshape	;volatile
  3055                           
  3056                           ;main.c: 258:     current_speed_linear = DO_ADC(&speed_adc_config_value);
  3057     066C  30E8               	movlw	low (_speed_adc_config_value| (0+32768))
  3058     066D  00C8               	movwf	DO_ADC@modifier
  3059     066E  3087               	movlw	high (_speed_adc_config_value| (0+32768))
  3060     066F  00C9               	movwf	DO_ADC@modifier+1
  3061     0670  3186  26D4  3186   	fcall	_DO_ADC
  3062     0673  0849               	movf	?_DO_ADC+1,w
  3063     0674  00B9               	movwf	_current_speed_linear+1	;volatile
  3064     0675  0848               	movf	?_DO_ADC,w
  3065     0676  00B8               	movwf	_current_speed_linear	;volatile
  3066                           
  3067                           ;main.c: 259:     current_depth = DO_ADC(&depth_adc_config_value);
  3068     0677  30E7               	movlw	low (_depth_adc_config_value| (0+32768))
  3069     0678  00C8               	movwf	DO_ADC@modifier
  3070     0679  3087               	movlw	high (_depth_adc_config_value| (0+32768))
  3071     067A  00C9               	movwf	DO_ADC@modifier+1
  3072     067B  3186  26D4  3186   	fcall	_DO_ADC
  3073     067E  0849               	movf	?_DO_ADC+1,w
  3074     067F  00B5               	movwf	_current_depth+1	;volatile
  3075     0680  0848               	movf	?_DO_ADC,w
  3076     0681  00B4               	movwf	_current_depth	;volatile
  3077                           
  3078                           ;main.c: 260:     current_depth = current_depth >> 2;
  3079     0682  0835               	movf	_current_depth+1,w	;volatile
  3080     0683  00D1               	movwf	??_GET_CURRENT_POT_VALUES+1
  3081     0684  0834               	movf	_current_depth,w	;volatile
  3082     0685  00D0               	movwf	??_GET_CURRENT_POT_VALUES
  3083     0686  36D1               	lsrf	??_GET_CURRENT_POT_VALUES+1,f
  3084     0687  0CD0               	rrf	??_GET_CURRENT_POT_VALUES,f
  3085     0688  36D1               	lsrf	??_GET_CURRENT_POT_VALUES+1,f
  3086     0689  0CD0               	rrf	??_GET_CURRENT_POT_VALUES,f
  3087     068A  0850               	movf	??_GET_CURRENT_POT_VALUES,w
  3088     068B  00B4               	movwf	_current_depth	;volatile
  3089     068C  0851               	movf	??_GET_CURRENT_POT_VALUES+1,w
  3090     068D  00B5               	movwf	_current_depth+1	;volatile
  3091                           
  3092                           ;main.c: 261:     current_symmetry = DO_ADC(&symmetry_adc_config_value);
  3093     068E  30E6               	movlw	low (_symmetry_adc_config_value| (0+32768))
  3094     068F  00C8               	movwf	DO_ADC@modifier
  3095     0690  3087               	movlw	high (_symmetry_adc_config_value| (0+32768))
  3096     0691  00C9               	movwf	DO_ADC@modifier+1
  3097     0692  3186  26D4         	fcall	_DO_ADC
  3098     0694  0849               	movf	?_DO_ADC+1,w
  3099     0695  00B3               	movwf	_current_symmetry+1	;volatile
  3100     0696  0848               	movf	?_DO_ADC,w
  3101     0697  00B2               	movwf	_current_symmetry	;volatile
  3102                           
  3103                           ;main.c: 262:     current_symmetry = current_symmetry >> 2;
  3104     0698  0833               	movf	_current_symmetry+1,w	;volatile
  3105     0699  00D1               	movwf	??_GET_CURRENT_POT_VALUES+1
  3106     069A  0832               	movf	_current_symmetry,w	;volatile
  3107     069B  00D0               	movwf	??_GET_CURRENT_POT_VALUES
  3108     069C  36D1               	lsrf	??_GET_CURRENT_POT_VALUES+1,f
  3109     069D  0CD0               	rrf	??_GET_CURRENT_POT_VALUES,f
  3110     069E  36D1               	lsrf	??_GET_CURRENT_POT_VALUES+1,f
  3111     069F  0CD0               	rrf	??_GET_CURRENT_POT_VALUES,f
  3112     06A0  0850               	movf	??_GET_CURRENT_POT_VALUES,w
  3113     06A1  00B2               	movwf	_current_symmetry	;volatile
  3114     06A2  0851               	movf	??_GET_CURRENT_POT_VALUES+1,w
  3115     06A3  00B3               	movwf	_current_symmetry+1	;volatile
  3116     06A4  0008               	return
  3117     06A5                     __end_of_GET_CURRENT_POT_VALUES:
  3118                           
  3119                           	psect	text11
  3120     0727                     __ptext11:	
  3121 ;; *************** function _DETERMINE_WAVESHAPE *****************
  3122 ;; Defined at:
  3123 ;;		line 184 in file "main.c"
  3124 ;; Parameters:    Size  Location     Type
  3125 ;;		None
  3126 ;; Auto vars:     Size  Location     Type
  3127 ;;  ADC             2    6[BANK0 ] unsigned short 
  3128 ;; Return value:  Size  Location     Type
  3129 ;;                  1    wreg      unsigned char 
  3130 ;; Registers used:
  3131 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3132 ;; Tracked objects:
  3133 ;;		On entry : 1E/1
  3134 ;;		On exit  : 1F/0
  3135 ;;		Unchanged: 0/0
  3136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3137 ;;      Params:         0       0       0       0
  3138 ;;      Locals:         0       2       0       0
  3139 ;;      Temps:          0       0       0       0
  3140 ;;      Totals:         0       2       0       0
  3141 ;;Total ram usage:        2 bytes
  3142 ;; Hardware stack levels used: 1
  3143 ;; Hardware stack levels required when called: 3
  3144 ;; This function calls:
  3145 ;;		_DO_ADC
  3146 ;; This function is called by:
  3147 ;;		_GET_CURRENT_POT_VALUES
  3148 ;; This function uses a non-reentrant model
  3149 ;;
  3150                           
  3151     0727                     _DETERMINE_WAVESHAPE:	
  3152                           ;psect for function _DETERMINE_WAVESHAPE
  3153                           
  3154                           
  3155                           ;main.c: 185:     uint16_t ADC = DO_ADC(&waveshape_adc_config_value);
  3156                           
  3157                           ;incstack = 0
  3158                           ; Regs used in _DETERMINE_WAVESHAPE: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3159     0727  30E9               	movlw	low (_waveshape_adc_config_value| (0+32768))
  3160     0728  0020               	movlb	0	; select bank0
  3161     0729  00C8               	movwf	DO_ADC@modifier
  3162     072A  3087               	movlw	high (_waveshape_adc_config_value| (0+32768))
  3163     072B  00C9               	movwf	DO_ADC@modifier+1
  3164     072C  3186  26D4  3187   	fcall	_DO_ADC
  3165     072F  0849               	movf	?_DO_ADC+1,w
  3166     0730  00CF               	movwf	DETERMINE_WAVESHAPE@ADC+1
  3167     0731  0848               	movf	?_DO_ADC,w
  3168     0732  00CE               	movwf	DETERMINE_WAVESHAPE@ADC
  3169                           
  3170                           ;main.c: 186:     if(ADC <= 341){
  3171     0733  3001               	movlw	1
  3172     0734  024F               	subwf	DETERMINE_WAVESHAPE@ADC+1,w
  3173     0735  3056               	movlw	86
  3174     0736  1903               	skipnz
  3175     0737  024E               	subwf	DETERMINE_WAVESHAPE@ADC,w
  3176     0738  1803               	skipnc
  3177     0739  2F3C               	goto	l1631
  3178                           
  3179                           ;main.c: 187:             return 0;
  3180     073A  3000               	movlw	0
  3181     073B  0008               	return
  3182     073C                     l1631:
  3183                           
  3184                           ;main.c: 189:         if (ADC <= 682){
  3185     073C  3002               	movlw	2
  3186     073D  024F               	subwf	DETERMINE_WAVESHAPE@ADC+1,w
  3187     073E  30AB               	movlw	171
  3188     073F  1903               	skipnz
  3189     0740  024E               	subwf	DETERMINE_WAVESHAPE@ADC,w
  3190     0741  1803               	skipnc
  3191     0742  2F45               	goto	l1637
  3192     0743                     l1633:
  3193                           
  3194                           ;main.c: 190:             return 1;
  3195     0743  3001               	movlw	1
  3196     0744  0008               	return
  3197     0745                     l1637:
  3198                           
  3199                           ;main.c: 192:         if (ADC <= 1023){
  3200     0745  3004               	movlw	4
  3201     0746  024F               	subwf	DETERMINE_WAVESHAPE@ADC+1,w
  3202     0747  3000               	movlw	0
  3203     0748  1903               	skipnz
  3204     0749  024E               	subwf	DETERMINE_WAVESHAPE@ADC,w
  3205     074A  1803               	skipnc
  3206     074B  2F43               	goto	l1633
  3207                           
  3208                           ;main.c: 193:             return 2;
  3209     074C  3002               	movlw	2
  3210     074D  0008               	return
  3211     074E                     __end_of_DETERMINE_WAVESHAPE:
  3212                           
  3213                           	psect	text12
  3214     06D4                     __ptext12:	
  3215 ;; *************** function _DO_ADC *****************
  3216 ;; Defined at:
  3217 ;;		line 170 in file "main.c"
  3218 ;; Parameters:    Size  Location     Type
  3219 ;;  modifier        2    0[BANK0 ] PTR const unsigned char 
  3220 ;;		 -> symmetry_adc_config_value(1), depth_adc_config_value(1), speed_adc_config_value(1), waveshape_adc_config_value(1
      +), 
  3221 ;; Auto vars:     Size  Location     Type
  3222 ;;  adc_result      2    3[BANK0 ] unsigned short 
  3223 ;;  temp            1    5[BANK0 ] unsigned char 
  3224 ;; Return value:  Size  Location     Type
  3225 ;;                  2    0[BANK0 ] unsigned short 
  3226 ;; Registers used:
  3227 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  3228 ;; Tracked objects:
  3229 ;;		On entry : 1F/0
  3230 ;;		On exit  : 1F/0
  3231 ;;		Unchanged: 0/0
  3232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3233 ;;      Params:         0       2       0       0
  3234 ;;      Locals:         0       3       0       0
  3235 ;;      Temps:          0       1       0       0
  3236 ;;      Totals:         0       6       0       0
  3237 ;;Total ram usage:        6 bytes
  3238 ;; Hardware stack levels used: 1
  3239 ;; Hardware stack levels required when called: 2
  3240 ;; This function calls:
  3241 ;;		Nothing
  3242 ;; This function is called by:
  3243 ;;		_DETERMINE_WAVESHAPE
  3244 ;;		_GET_CURRENT_POT_VALUES
  3245 ;; This function uses a non-reentrant model
  3246 ;;
  3247                           
  3248     06D4                     _DO_ADC:	
  3249                           ;psect for function _DO_ADC
  3250                           
  3251                           
  3252                           ;main.c: 171:     ADCON0 = 0x00;
  3253                           
  3254                           ;incstack = 0
  3255                           ; Regs used in _DO_ADC: [wreg-fsr0h+status,2+status,0+pclath]
  3256     06D4  0021               	movlb	1	; select bank1
  3257     06D5  019D               	clrf	29	;volatile
  3258                           
  3259                           ;main.c: 173:     uint8_t temp = (uint8_t)(*modifier << 2);
  3260     06D6  0020               	movlb	0	; select bank0
  3261     06D7  0848               	movf	DO_ADC@modifier,w
  3262     06D8  0084               	movwf	4
  3263     06D9  0849               	movf	DO_ADC@modifier+1,w
  3264     06DA  0085               	movwf	5
  3265     06DB  0800               	movf	0,w	;code access
  3266     06DC  00CA               	movwf	??_DO_ADC
  3267     06DD  3001               	movlw	1
  3268     06DE                     u1165:
  3269     06DE  35CA               	lslf	??_DO_ADC,f
  3270     06DF  3EFF               	addlw	-1
  3271     06E0  1D03               	skipz
  3272     06E1  2EDE               	goto	u1165
  3273     06E2  354A               	lslf	??_DO_ADC,w
  3274     06E3  00CD               	movwf	DO_ADC@temp
  3275                           
  3276                           ;main.c: 174:     ADCON0 = ADCON0 | temp;
  3277     06E4  0021               	movlb	1	; select bank1
  3278     06E5  081D               	movf	29,w	;volatile
  3279     06E6  0020               	movlb	0	; select bank0
  3280     06E7  044D               	iorwf	DO_ADC@temp,w
  3281     06E8  0021               	movlb	1	; select bank1
  3282     06E9  009D               	movwf	29	;volatile
  3283                           
  3284                           ;main.c: 175:     ADON = 1;
  3285     06EA  141D               	bsf	29,0	;volatile
  3286                           
  3287                           ;main.c: 176:     _delay((unsigned long)((0.005)*(32000000/4000.0)));
  3288     06EB  300D               	movlw	13
  3289     06EC                     u1637:
  3290     06EC  0B89               	decfsz	9,f
  3291     06ED  2EEC               	goto	u1637
  3292     06EE  0000               	nop
  3293                           
  3294                           ;main.c: 177:     GO_nDONE = 1;
  3295     06EF  0021               	movlb	1	; select bank1
  3296     06F0  149D               	bsf	29,1	;volatile
  3297     06F1                     l158:	
  3298                           ;main.c: 178:     while(GO_nDONE == 1){}
  3299                           
  3300     06F1  189D               	btfsc	29,1	;volatile
  3301     06F2  2EF1               	goto	l158
  3302                           
  3303                           ;main.c: 179:     ADON = 0;
  3304     06F3  101D               	bcf	29,0	;volatile
  3305                           
  3306                           ;main.c: 180:     uint16_t adc_result = ((uint16_t)(ADRESH << 8) | ADRESL);
  3307     06F4  081C               	movf	28,w	;volatile
  3308     06F5  0020               	movlb	0	; select bank0
  3309     06F6  00CC               	movwf	DO_ADC@adc_result+1
  3310     06F7  0021               	movlb	1	; select bank1
  3311     06F8  081B               	movf	27,w	;volatile
  3312     06F9  0020               	movlb	0	; select bank0
  3313     06FA  00CB               	movwf	DO_ADC@adc_result
  3314                           
  3315                           ;main.c: 181:     return adc_result;
  3316     06FB  084C               	movf	DO_ADC@adc_result+1,w
  3317     06FC  00C9               	movwf	?_DO_ADC+1
  3318     06FD  084B               	movf	DO_ADC@adc_result,w
  3319     06FE  00C8               	movwf	?_DO_ADC
  3320     06FF  0008               	return
  3321     0700                     __end_of_DO_ADC:
  3322                           
  3323                           	psect	text13
  3324     07DB                     __ptext13:	
  3325 ;; *************** function _CONFIG_TMR0_INTERRUPT *****************
  3326 ;; Defined at:
  3327 ;;		line 238 in file "main.c"
  3328 ;; Parameters:    Size  Location     Type
  3329 ;;		None
  3330 ;; Auto vars:     Size  Location     Type
  3331 ;;		None
  3332 ;; Return value:  Size  Location     Type
  3333 ;;                  1    wreg      unsigned char 
  3334 ;; Registers used:
  3335 ;;		None
  3336 ;; Tracked objects:
  3337 ;;		On entry : B1F/1
  3338 ;;		On exit  : B1F/1
  3339 ;;		Unchanged: B1F/0
  3340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3341 ;;      Params:         0       0       0       0
  3342 ;;      Locals:         0       0       0       0
  3343 ;;      Temps:          0       0       0       0
  3344 ;;      Totals:         0       0       0       0
  3345 ;;Total ram usage:        0 bytes
  3346 ;; Hardware stack levels used: 1
  3347 ;; Hardware stack levels required when called: 2
  3348 ;; This function calls:
  3349 ;;		Nothing
  3350 ;; This function is called by:
  3351 ;;		_main
  3352 ;; This function uses a non-reentrant model
  3353 ;;
  3354                           
  3355     07DB                     _CONFIG_TMR0_INTERRUPT:	
  3356                           ;psect for function _CONFIG_TMR0_INTERRUPT
  3357                           
  3358                           
  3359                           ;main.c: 239:     TMR0IE = 1;
  3360                           
  3361                           ;incstack = 0
  3362                           ; Regs used in _CONFIG_TMR0_INTERRUPT: []
  3363     07DB  168B               	bsf	11,5	;volatile
  3364                           
  3365                           ;main.c: 240:     return 1;;	Return value of _CONFIG_TMR0_INTERRUPT is never used
  3366     07DC  0008               	return
  3367     07DD                     __end_of_CONFIG_TMR0_INTERRUPT:
  3368                           
  3369                           	psect	text14
  3370     079C                     __ptext14:	
  3371 ;; *************** function _CONFIG_SYSTEM *****************
  3372 ;; Defined at:
  3373 ;;		line 243 in file "main.c"
  3374 ;; Parameters:    Size  Location     Type
  3375 ;;		None
  3376 ;; Auto vars:     Size  Location     Type
  3377 ;;		None
  3378 ;; Return value:  Size  Location     Type
  3379 ;;                  1    wreg      unsigned char 
  3380 ;; Registers used:
  3381 ;;		wreg, status,2, status,0, pclath, cstack
  3382 ;; Tracked objects:
  3383 ;;		On entry : B1F/0
  3384 ;;		On exit  : B1F/0
  3385 ;;		Unchanged: B00/0
  3386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3387 ;;      Params:         0       0       0       0
  3388 ;;      Locals:         0       0       0       0
  3389 ;;      Temps:          0       0       0       0
  3390 ;;      Totals:         0       0       0       0
  3391 ;;Total ram usage:        0 bytes
  3392 ;; Hardware stack levels used: 1
  3393 ;; Hardware stack levels required when called: 3
  3394 ;; This function calls:
  3395 ;;		_CONFIG_ADC_PINS
  3396 ;;		_CONFIG_INT_OSC
  3397 ;;		_CONFIG_PORTS
  3398 ;;		_CONFIG_PWM_CCP3
  3399 ;; This function is called by:
  3400 ;;		_main
  3401 ;; This function uses a non-reentrant model
  3402 ;;
  3403                           
  3404     079C                     _CONFIG_SYSTEM:	
  3405                           ;psect for function _CONFIG_SYSTEM
  3406                           
  3407                           
  3408                           ;main.c: 244:     CONFIG_INT_OSC();
  3409                           
  3410                           ;incstack = 0
  3411                           ; Regs used in _CONFIG_SYSTEM: [wreg+status,2+status,0+pclath+cstack]
  3412     079C  3187  27CF  3187   	fcall	_CONFIG_INT_OSC
  3413                           
  3414                           ;main.c: 245:     CONFIG_PORTS();
  3415     079F  3187  27A8  3187   	fcall	_CONFIG_PORTS
  3416                           
  3417                           ;main.c: 246:     CONFIG_ADC_PINS();
  3418     07A2  3187  27D5  3187   	fcall	_CONFIG_ADC_PINS
  3419                           
  3420                           ;main.c: 247:     CONFIG_PWM_CCP3();
  3421     07A5  3187  2789         	fcall	_CONFIG_PWM_CCP3
  3422     07A7  0008               	return
  3423     07A8                     __end_of_CONFIG_SYSTEM:
  3424                           
  3425                           	psect	text15
  3426     0789                     __ptext15:	
  3427 ;; *************** function _CONFIG_PWM_CCP3 *****************
  3428 ;; Defined at:
  3429 ;;		line 211 in file "main.c"
  3430 ;; Parameters:    Size  Location     Type
  3431 ;;		None
  3432 ;; Auto vars:     Size  Location     Type
  3433 ;;		None
  3434 ;; Return value:  Size  Location     Type
  3435 ;;                  1    wreg      unsigned char 
  3436 ;; Registers used:
  3437 ;;		wreg, status,2
  3438 ;; Tracked objects:
  3439 ;;		On entry : B1F/1
  3440 ;;		On exit  : B1F/0
  3441 ;;		Unchanged: B00/0
  3442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3443 ;;      Params:         0       0       0       0
  3444 ;;      Locals:         0       0       0       0
  3445 ;;      Temps:          0       0       0       0
  3446 ;;      Totals:         0       0       0       0
  3447 ;;Total ram usage:        0 bytes
  3448 ;; Hardware stack levels used: 1
  3449 ;; Hardware stack levels required when called: 2
  3450 ;; This function calls:
  3451 ;;		Nothing
  3452 ;; This function is called by:
  3453 ;;		_CONFIG_SYSTEM
  3454 ;; This function uses a non-reentrant model
  3455 ;;
  3456                           
  3457     0789                     _CONFIG_PWM_CCP3:	
  3458                           ;psect for function _CONFIG_PWM_CCP3
  3459                           
  3460                           
  3461                           ;main.c: 212:     SRLEN = 0;
  3462                           
  3463                           ;incstack = 0
  3464                           ; Regs used in _CONFIG_PWM_CCP3: [wreg+status,2]
  3465     0789  0022               	movlb	2	; select bank2
  3466     078A  139A               	bcf	26,7	;volatile
  3467                           
  3468                           ;main.c: 213:     C1ON = 0;
  3469     078B  1391               	bcf	17,7	;volatile
  3470                           
  3471                           ;main.c: 215:     TRISA2 = 1;
  3472     078C  0021               	movlb	1	; select bank1
  3473     078D  150C               	bsf	12,2	;volatile
  3474                           
  3475                           ;main.c: 216:     PR2 = 0xFF;
  3476     078E  30FF               	movlw	255
  3477     078F  0020               	movlb	0	; select bank0
  3478     0790  009B               	movwf	27	;volatile
  3479                           
  3480                           ;main.c: 217:     CCP3CON = CCP3CON | 0b00001111;
  3481     0791  0026               	movlb	6	; select bank6
  3482     0792  0813               	movf	19,w	;volatile
  3483     0793  380F               	iorlw	15
  3484     0794  0093               	movwf	19	;volatile
  3485                           
  3486                           ;main.c: 219:     CCPTMRS0 = 0x00;
  3487     0795  0025               	movlb	5	; select bank5
  3488     0796  019E               	clrf	30	;volatile
  3489                           
  3490                           ;main.c: 220:     TMR2IF = 0;
  3491     0797  0020               	movlb	0	; select bank0
  3492     0798  1091               	bcf	17,1	;volatile
  3493                           
  3494                           ;main.c: 221:     T2CON = T2CON | 0b00000000;
  3495     0799  081C               	movf	28,w	;volatile
  3496     079A  009C               	movwf	28	;volatile
  3497     079B  0008               	return
  3498     079C                     __end_of_CONFIG_PWM_CCP3:
  3499                           
  3500                           	psect	text16
  3501     07A8                     __ptext16:	
  3502 ;; *************** function _CONFIG_PORTS *****************
  3503 ;; Defined at:
  3504 ;;		line 158 in file "main.c"
  3505 ;; Parameters:    Size  Location     Type
  3506 ;;		None
  3507 ;; Auto vars:     Size  Location     Type
  3508 ;;		None
  3509 ;; Return value:  Size  Location     Type
  3510 ;;                  1    wreg      unsigned char 
  3511 ;; Registers used:
  3512 ;;		wreg, status,2
  3513 ;; Tracked objects:
  3514 ;;		On entry : B1F/1
  3515 ;;		On exit  : B1F/4
  3516 ;;		Unchanged: B00/0
  3517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3518 ;;      Params:         0       0       0       0
  3519 ;;      Locals:         0       0       0       0
  3520 ;;      Temps:          0       0       0       0
  3521 ;;      Totals:         0       0       0       0
  3522 ;;Total ram usage:        0 bytes
  3523 ;; Hardware stack levels used: 1
  3524 ;; Hardware stack levels required when called: 2
  3525 ;; This function calls:
  3526 ;;		Nothing
  3527 ;; This function is called by:
  3528 ;;		_CONFIG_SYSTEM
  3529 ;; This function uses a non-reentrant model
  3530 ;;
  3531                           
  3532     07A8                     _CONFIG_PORTS:	
  3533                           ;psect for function _CONFIG_PORTS
  3534                           
  3535                           
  3536                           ;main.c: 159:     ANSELC = 0b00001111;
  3537                           
  3538                           ;incstack = 0
  3539                           ; Regs used in _CONFIG_PORTS: [wreg+status,2]
  3540     07A8  300F               	movlw	15
  3541     07A9  0023               	movlb	3	; select bank3
  3542     07AA  008E               	movwf	14	;volatile
  3543                           
  3544                           ;main.c: 160:     TRISC = 0b00001111;
  3545     07AB  300F               	movlw	15
  3546     07AC  0021               	movlb	1	; select bank1
  3547     07AD  008E               	movwf	14	;volatile
  3548                           
  3549                           ;main.c: 161:     WPUC = 0b00000000;
  3550     07AE  0024               	movlb	4	; select bank4
  3551     07AF  018E               	clrf	14	;volatile
  3552     07B0  0008               	return
  3553     07B1                     __end_of_CONFIG_PORTS:
  3554                           
  3555                           	psect	text17
  3556     07CF                     __ptext17:	
  3557 ;; *************** function _CONFIG_INT_OSC *****************
  3558 ;; Defined at:
  3559 ;;		line 151 in file "main.c"
  3560 ;; Parameters:    Size  Location     Type
  3561 ;;		None
  3562 ;; Auto vars:     Size  Location     Type
  3563 ;;		None
  3564 ;; Return value:  Size  Location     Type
  3565 ;;                  1    wreg      unsigned char 
  3566 ;; Registers used:
  3567 ;;		wreg
  3568 ;; Tracked objects:
  3569 ;;		On entry : B1F/0
  3570 ;;		On exit  : B1F/1
  3571 ;;		Unchanged: B00/0
  3572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3573 ;;      Params:         0       0       0       0
  3574 ;;      Locals:         0       0       0       0
  3575 ;;      Temps:          0       0       0       0
  3576 ;;      Totals:         0       0       0       0
  3577 ;;Total ram usage:        0 bytes
  3578 ;; Hardware stack levels used: 1
  3579 ;; Hardware stack levels required when called: 2
  3580 ;; This function calls:
  3581 ;;		Nothing
  3582 ;; This function is called by:
  3583 ;;		_CONFIG_SYSTEM
  3584 ;; This function uses a non-reentrant model
  3585 ;;
  3586                           
  3587     07CF                     _CONFIG_INT_OSC:	
  3588                           ;psect for function _CONFIG_INT_OSC
  3589                           
  3590                           
  3591                           ;main.c: 152:     OSCCON = 0b11110000;
  3592                           
  3593                           ;incstack = 0
  3594                           ; Regs used in _CONFIG_INT_OSC: [wreg]
  3595     07CF  30F0               	movlw	240
  3596     07D0  0021               	movlb	1	; select bank1
  3597     07D1  0099               	movwf	25	;volatile
  3598                           
  3599                           ;main.c: 153:     OSCTUNE = 0b00011111;
  3600     07D2  301F               	movlw	31
  3601     07D3  0098               	movwf	24	;volatile
  3602     07D4  0008               	return
  3603     07D5                     __end_of_CONFIG_INT_OSC:
  3604                           
  3605                           	psect	text18
  3606     07D5                     __ptext18:	
  3607 ;; *************** function _CONFIG_ADC_PINS *****************
  3608 ;; Defined at:
  3609 ;;		line 165 in file "main.c"
  3610 ;; Parameters:    Size  Location     Type
  3611 ;;		None
  3612 ;; Auto vars:     Size  Location     Type
  3613 ;;		None
  3614 ;; Return value:  Size  Location     Type
  3615 ;;                  1    wreg      unsigned char 
  3616 ;; Registers used:
  3617 ;;		wreg
  3618 ;; Tracked objects:
  3619 ;;		On entry : B1F/4
  3620 ;;		On exit  : B1F/1
  3621 ;;		Unchanged: B00/0
  3622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3623 ;;      Params:         0       0       0       0
  3624 ;;      Locals:         0       0       0       0
  3625 ;;      Temps:          0       0       0       0
  3626 ;;      Totals:         0       0       0       0
  3627 ;;Total ram usage:        0 bytes
  3628 ;; Hardware stack levels used: 1
  3629 ;; Hardware stack levels required when called: 2
  3630 ;; This function calls:
  3631 ;;		Nothing
  3632 ;; This function is called by:
  3633 ;;		_CONFIG_SYSTEM
  3634 ;; This function uses a non-reentrant model
  3635 ;;
  3636                           
  3637     07D5                     _CONFIG_ADC_PINS:	
  3638                           ;psect for function _CONFIG_ADC_PINS
  3639                           
  3640                           
  3641                           ;main.c: 166:     ADCON1 = 0b10100000;
  3642                           
  3643                           ;incstack = 0
  3644                           ; Regs used in _CONFIG_ADC_PINS: [wreg]
  3645     07D5  30A0               	movlw	160
  3646     07D6  0021               	movlb	1	; select bank1
  3647     07D7  009E               	movwf	30	;volatile
  3648     07D8  0008               	return
  3649     07D9                     __end_of_CONFIG_ADC_PINS:
  3650                           
  3651                           	psect	intentry
  3652     0004                     __pintentry:	
  3653 ;; *************** function _INTERRUPT_InterruptManager *****************
  3654 ;; Defined at:
  3655 ;;		line 395 in file "main.c"
  3656 ;; Parameters:    Size  Location     Type
  3657 ;;		None
  3658 ;; Auto vars:     Size  Location     Type
  3659 ;;		None
  3660 ;; Return value:  Size  Location     Type
  3661 ;;                  1    wreg      void 
  3662 ;; Registers used:
  3663 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3664 ;; Tracked objects:
  3665 ;;		On entry : 0/0
  3666 ;;		On exit  : 0/0
  3667 ;;		Unchanged: 0/0
  3668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3669 ;;      Params:         0       0       0       0
  3670 ;;      Locals:         0       0       0       0
  3671 ;;      Temps:          2       0       0       0
  3672 ;;      Totals:         2       0       0       0
  3673 ;;Total ram usage:        2 bytes
  3674 ;; Hardware stack levels used: 1
  3675 ;; Hardware stack levels required when called: 1
  3676 ;; This function calls:
  3677 ;;		_SET_DUTY_CCP3
  3678 ;; This function is called by:
  3679 ;;		Interrupt level 1
  3680 ;; This function uses a non-reentrant model
  3681 ;;
  3682                           
  3683     0004                     _INTERRUPT_InterruptManager:
  3684                           
  3685                           ;incstack = 0
  3686     0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  3687                           
  3688                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3689     0005  3180               	pagesel	$
  3690                           
  3691                           ;main.c: 396:     if(TMR0IF == 1){
  3692     0006  1D0B               	btfss	11,2	;volatile
  3693     0007  28CE               	goto	i1l261
  3694                           
  3695                           ;main.c: 397:     GIE = 0;
  3696     0008  138B               	bcf	11,7	;volatile
  3697                           
  3698                           ;main.c: 398:     TMR0 = final_TMR0;
  3699     0009  0875               	movf	_final_TMR0,w	;volatile
  3700     000A  0020               	movlb	0	; select bank0
  3701     000B  0095               	movwf	21	;volatile
  3702                           
  3703                           ;main.c: 399:     LATC5 = 1;
  3704     000C  0022               	movlb	2	; select bank2
  3705     000D  168E               	bsf	14,5	;volatile
  3706                           
  3707                           ;main.c: 400:     TMR0IF = 0;
  3708     000E  110B               	bcf	11,2	;volatile
  3709                           
  3710                           ;main.c: 402:     if(current_waveshape == 0){
  3711     000F  0872               	movf	_current_waveshape,w	;volatile
  3712     0010  1D03               	btfss	3,2
  3713     0011  2822               	goto	i1l1511
  3714                           
  3715                           ;main.c: 403:         duty = tri_table_one_quadrant[current_one_quadrant_index];
  3716     0012  0871               	movf	_current_one_quadrant_index,w	;volatile
  3717     0013  00FA               	movwf	??_INTERRUPT_InterruptManager
  3718     0014  01FB               	clrf	??_INTERRUPT_InterruptManager+1
  3719     0015  35FA               	lslf	??_INTERRUPT_InterruptManager,f
  3720     0016  0DFB               	rlf	??_INTERRUPT_InterruptManager+1,f
  3721     0017  30ED               	movlw	low _tri_table_one_quadrant
  3722     0018  077A               	addwf	??_INTERRUPT_InterruptManager,w
  3723     0019  0084               	movwf	4
  3724     001A  3001               	movlw	high _tri_table_one_quadrant
  3725     001B  3D7B               	addwfc	??_INTERRUPT_InterruptManager+1,w
  3726     001C  3880               	iorlw	128
  3727     001D  0085               	movwf	5
  3728     001E  3F00               	moviw [0]fsr0
  3729     001F  00F3               	movwf	_duty	;volatile
  3730     0020  3F01               	moviw [1]fsr0
  3731     0021  283C               	goto	L3
  3732     0022                     i1l1511:	
  3733                           ;main.c: 404:     }
  3734                           
  3735     0022  0372               	decf	_current_waveshape,w	;volatile
  3736     0023  1D03               	btfss	3,2
  3737     0024  2835               	goto	i1l1515
  3738                           
  3739                           ;main.c: 406:         duty = sine_table_one_quadrant[current_one_quadrant_index];
  3740     0025  0871               	movf	_current_one_quadrant_index,w	;volatile
  3741     0026  00FA               	movwf	??_INTERRUPT_InterruptManager
  3742     0027  01FB               	clrf	??_INTERRUPT_InterruptManager+1
  3743     0028  35FA               	lslf	??_INTERRUPT_InterruptManager,f
  3744     0029  0DFB               	rlf	??_INTERRUPT_InterruptManager+1,f
  3745     002A  30EF               	movlw	low _sine_table_one_quadrant
  3746     002B  077A               	addwf	??_INTERRUPT_InterruptManager,w
  3747     002C  0084               	movwf	4
  3748     002D  3002               	movlw	high _sine_table_one_quadrant
  3749     002E  3D7B               	addwfc	??_INTERRUPT_InterruptManager+1,w
  3750     002F  3880               	iorlw	128
  3751     0030  0085               	movwf	5
  3752     0031  3F00               	moviw [0]fsr0
  3753     0032  00F3               	movwf	_duty	;volatile
  3754     0033  3F01               	moviw [1]fsr0
  3755     0034  283C               	goto	L3
  3756     0035                     i1l1515:	
  3757                           ;main.c: 407:     }
  3758                           
  3759     0035  3002               	movlw	2
  3760     0036  0672               	xorwf	_current_waveshape,w	;volatile
  3761     0037  1D03               	btfss	3,2
  3762     0038  283D               	goto	i1l1519
  3763                           
  3764                           ;main.c: 409:         duty = 1023;
  3765     0039  30FF               	movlw	255
  3766     003A  00F3               	movwf	_duty	;volatile
  3767     003B  3003               	movlw	3
  3768     003C                     L3:
  3769     003C  00F4               	movwf	_duty+1	;volatile
  3770     003D                     i1l1519:
  3771                           
  3772                           ;main.c: 411:     if(current_one_quadrant_index == 128){
  3773     003D  3080               	movlw	128
  3774     003E  0671               	xorwf	_current_one_quadrant_index,w	;volatile
  3775     003F  1D03               	btfss	3,2
  3776     0040  2844               	goto	i1l1523
  3777                           
  3778                           ;main.c: 412:         current_quadrant = 1;
  3779     0041  3001               	movlw	1
  3780     0042  0020               	movlb	0	; select bank0
  3781     0043  00C4               	movwf	_current_quadrant	;volatile
  3782     0044                     i1l1523:
  3783                           
  3784                           ;main.c: 414:     if(current_one_quadrant_index == 0){
  3785     0044  0871               	movf	_current_one_quadrant_index,w	;volatile
  3786     0045  1D03               	btfss	3,2
  3787     0046  2850               	goto	i1l1533
  3788                           
  3789                           ;main.c: 415:         current_quadrant = 0;
  3790     0047  0020               	movlb	0	; select bank0
  3791     0048  01C4               	clrf	_current_quadrant	;volatile
  3792                           
  3793                           ;main.c: 416:         if(current_halfcycle == 0){
  3794     0049  0845               	movf	_current_halfcycle,w	;volatile
  3795     004A  1D03               	btfss	3,2
  3796     004B  284F               	goto	i1l1531
  3797                           
  3798                           ;main.c: 417:             current_halfcycle = 1;
  3799     004C  3001               	movlw	1
  3800     004D  00C5               	movwf	_current_halfcycle	;volatile
  3801                           
  3802                           ;main.c: 418:         }
  3803     004E  2850               	goto	i1l1533
  3804     004F                     i1l1531:
  3805                           
  3806                           ;main.c: 420:             current_halfcycle = 0;
  3807     004F  01C5               	clrf	_current_halfcycle	;volatile
  3808     0050                     i1l1533:
  3809                           
  3810                           ;main.c: 423:         if(current_quadrant == 0){
  3811     0050  0020               	movlb	0	; select bank0
  3812     0051  0844               	movf	_current_quadrant,w	;volatile
  3813     0052  1D03               	btfss	3,2
  3814     0053  2859               	goto	i1l1537
  3815                           
  3816                           ;main.c: 424:             current_one_quadrant_index++;
  3817     0054  3001               	movlw	1
  3818     0055  00FA               	movwf	??_INTERRUPT_InterruptManager
  3819     0056  087A               	movf	??_INTERRUPT_InterruptManager,w
  3820     0057  07F1               	addwf	_current_one_quadrant_index,f	;volatile
  3821                           
  3822                           ;main.c: 425:         }
  3823     0058  285B               	goto	i1l257
  3824     0059                     i1l1537:
  3825                           
  3826                           ;main.c: 427:             current_one_quadrant_index--;
  3827     0059  3001               	movlw	1
  3828     005A  02F1               	subwf	_current_one_quadrant_index,f	;volatile
  3829     005B                     i1l257:	
  3830                           ;main.c: 428:         }
  3831                           
  3832                           
  3833                           ;main.c: 429:         if(current_halfcycle == 1){
  3834     005B  0345               	decf	_current_halfcycle,w	;volatile
  3835     005C  1D03               	btfss	3,2
  3836     005D  2868               	goto	i1l258
  3837                           
  3838                           ;main.c: 430:         duty = 1023 - duty;
  3839     005E  30FF               	movlw	255
  3840     005F  00FA               	movwf	??_INTERRUPT_InterruptManager
  3841     0060  3003               	movlw	3
  3842     0061  00FB               	movwf	??_INTERRUPT_InterruptManager+1
  3843     0062  0873               	movf	_duty,w	;volatile
  3844     0063  027A               	subwf	??_INTERRUPT_InterruptManager,w
  3845     0064  00F3               	movwf	_duty	;volatile
  3846     0065  0874               	movf	_duty+1,w	;volatile
  3847     0066  3B7B               	subwfb	??_INTERRUPT_InterruptManager+1,w
  3848     0067  00F4               	movwf	_duty+1	;volatile
  3849     0068                     i1l258:	
  3850                           ;main.c: 431:         }
  3851                           
  3852                           
  3853                           ;main.c: 434:     if(current_depth != 0){
  3854     0068  0834               	movf	_current_depth,w	;volatile
  3855     0069  0435               	iorwf	_current_depth+1,w	;volatile
  3856     006A  1903               	btfsc	3,2
  3857     006B  28C4               	goto	i1l1545
  3858                           
  3859                           ;main.c: 435:         duty_low_byte = duty & 0xFF;
  3860     006C  0873               	movf	_duty,w	;volatile
  3861     006D  00C7               	movwf	_duty_low_byte	;volatile
  3862                           
  3863                           ;main.c: 436:         duty_high_byte = duty >> 8;
  3864     006E  0874               	movf	_duty+1,w	;volatile
  3865     006F  00C6               	movwf	_duty_high_byte	;volatile
  3866     0070  01A2               	clrf	34	;# 
  3867     0071  01A0               	clrf	32	;# 
  3868     0072  1003               	bcf	3,0	;# 
  3869     0073  0834               	movf	_current_depth,w	;# 
  3870     0074  1847               	btfsc	_duty_low_byte,0	;# 
  3871     0075  07A2               	addwf	34,f	;# 
  3872     0076  0CA2               	rrf	34,f	;# 
  3873     0077  0CA0               	rrf	32,f	;# 
  3874     0078  18C7               	btfsc	_duty_low_byte,1	;# 
  3875     0079  07A2               	addwf	34,f	;# 
  3876     007A  0CA2               	rrf	34,f	;# 
  3877     007B  0CA0               	rrf	32,f	;# 
  3878     007C  1947               	btfsc	_duty_low_byte,2	;# 
  3879     007D  07A2               	addwf	34,f	;# 
  3880     007E  0CA2               	rrf	34,f	;# 
  3881     007F  0CA0               	rrf	32,f	;# 
  3882     0080  19C7               	btfsc	_duty_low_byte,3	;# 
  3883     0081  07A2               	addwf	34,f	;# 
  3884     0082  0CA2               	rrf	34,f	;# 
  3885     0083  0CA0               	rrf	32,f	;# 
  3886     0084  1A47               	btfsc	_duty_low_byte,4	;# 
  3887     0085  07A2               	addwf	34,f	;# 
  3888     0086  0CA2               	rrf	34,f	;# 
  3889     0087  0CA0               	rrf	32,f	;# 
  3890     0088  1AC7               	btfsc	_duty_low_byte,5	;# 
  3891     0089  07A2               	addwf	34,f	;# 
  3892     008A  0CA2               	rrf	34,f	;# 
  3893     008B  0CA0               	rrf	32,f	;# 
  3894     008C  1B47               	btfsc	_duty_low_byte,6	;# 
  3895     008D  07A2               	addwf	34,f	;# 
  3896     008E  0CA2               	rrf	34,f	;# 
  3897     008F  0CA0               	rrf	32,f	;# 
  3898     0090  1BC7               	btfsc	_duty_low_byte,7	;# 
  3899     0091  07A2               	addwf	34,f	;# 
  3900     0092  0CA2               	rrf	34,f	;# 
  3901     0093  0CA0               	rrf	32,f	;# 
  3902     0094  01A1               	clrf	33	;# 
  3903     0095  1846               	btfsc	_duty_high_byte,0	;# 
  3904     0096  07A2               	addwf	34,f	;# 
  3905     0097  0CA2               	rrf	34,f	;# 
  3906     0098  0CA1               	rrf	33,f	;# 
  3907     0099  18C6               	btfsc	_duty_high_byte,1	;# 
  3908     009A  07A2               	addwf	34,f	;# 
  3909     009B  0CA2               	rrf	34,f	;# 
  3910     009C  0CA1               	rrf	33,f	;# 
  3911     009D  1946               	btfsc	_duty_high_byte,2	;# 
  3912     009E  07A2               	addwf	34,f	;# 
  3913     009F  0CA2               	rrf	34,f	;# 
  3914     00A0  0CA1               	rrf	33,f	;# 
  3915     00A1  19C6               	btfsc	_duty_high_byte,3	;# 
  3916     00A2  07A2               	addwf	34,f	;# 
  3917     00A3  0CA2               	rrf	34,f	;# 
  3918     00A4  0CA1               	rrf	33,f	;# 
  3919     00A5  1A46               	btfsc	_duty_high_byte,4	;# 
  3920     00A6  07A2               	addwf	34,f	;# 
  3921     00A7  0CA2               	rrf	34,f	;# 
  3922     00A8  0CA1               	rrf	33,f	;# 
  3923     00A9  1AC6               	btfsc	_duty_high_byte,5	;# 
  3924     00AA  07A2               	addwf	34,f	;# 
  3925     00AB  0CA2               	rrf	34,f	;# 
  3926     00AC  0CA1               	rrf	33,f	;# 
  3927     00AD  1B46               	btfsc	_duty_high_byte,6	;# 
  3928     00AE  07A2               	addwf	34,f	;# 
  3929     00AF  0CA2               	rrf	34,f	;# 
  3930     00B0  0CA1               	rrf	33,f	;# 
  3931     00B1  1BC6               	btfsc	_duty_high_byte,7	;# 
  3932     00B2  07A2               	addwf	34,f	;# 
  3933     00B3  0CA2               	rrf	34,f	;# 
  3934     00B4  0CA1               	rrf	33,f	;# 
  3935                           
  3936                           ;main.c: 471:         duty = 1023 - *top_two_bytes_ptr;
  3937     00B5  0020               	movlb	0	; select bank0
  3938     00B6  0861               	movf	_top_two_bytes_ptr,w
  3939     00B7  0086               	movwf	6
  3940     00B8  0862               	movf	_top_two_bytes_ptr+1,w
  3941     00B9  0087               	movwf	7
  3942     00BA  30FF               	movlw	255
  3943     00BB  00FA               	movwf	??_INTERRUPT_InterruptManager
  3944     00BC  3003               	movlw	3
  3945     00BD  00FB               	movwf	??_INTERRUPT_InterruptManager+1
  3946     00BE  3F40               	moviw [0]fsr1
  3947     00BF  027A               	subwf	??_INTERRUPT_InterruptManager,w
  3948     00C0  00F3               	movwf	_duty	;volatile
  3949     00C1  3F41               	moviw [1]fsr1
  3950     00C2  3B7B               	subwfb	??_INTERRUPT_InterruptManager+1,w
  3951     00C3  28C7               	goto	L4
  3952     00C4                     i1l1545:	
  3953                           ;main.c: 472:     }
  3954                           
  3955                           
  3956                           ;main.c: 474:         duty = 1023;
  3957     00C4  30FF               	movlw	255
  3958     00C5  00F3               	movwf	_duty	;volatile
  3959     00C6  3003               	movlw	3
  3960     00C7                     L4:
  3961     00C7  00F4               	movwf	_duty+1	;volatile
  3962                           
  3963                           ;main.c: 478:     SET_DUTY_CCP3(&duty);
  3964     00C8  3073               	movlw	(low (_duty| 0))& (0+255)
  3965     00C9  3187  274E         	fcall	_SET_DUTY_CCP3
  3966                           
  3967                           ;main.c: 481:     LATC5 = 0;
  3968     00CB  0022               	movlb	2	; select bank2
  3969     00CC  128E               	bcf	14,5	;volatile
  3970                           
  3971                           ;main.c: 482:     GIE = 1;
  3972     00CD  178B               	bsf	11,7	;volatile
  3973     00CE                     i1l261:
  3974     00CE  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  3975     00CF  0009               	retfie
  3976     00D0                     __end_of_INTERRUPT_InterruptManager:
  3977                           
  3978                           	psect	text20
  3979     074E                     __ptext20:	
  3980 ;; *************** function _SET_DUTY_CCP3 *****************
  3981 ;; Defined at:
  3982 ;;		line 201 in file "main.c"
  3983 ;; Parameters:    Size  Location     Type
  3984 ;;  duty_ptr        1    wreg     PTR volatile unsigned sh
  3985 ;;		 -> duty(2), 
  3986 ;; Auto vars:     Size  Location     Type
  3987 ;;  duty_ptr        1    3[COMMON] PTR volatile unsigned sh
  3988 ;;		 -> duty(2), 
  3989 ;;  temp            1    2[COMMON] unsigned char 
  3990 ;; Return value:  Size  Location     Type
  3991 ;;                  1    wreg      unsigned char 
  3992 ;; Registers used:
  3993 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3994 ;; Tracked objects:
  3995 ;;		On entry : 1F/0
  3996 ;;		On exit  : 1F/6
  3997 ;;		Unchanged: 0/0
  3998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3999 ;;      Params:         0       0       0       0
  4000 ;;      Locals:         2       0       0       0
  4001 ;;      Temps:          2       0       0       0
  4002 ;;      Totals:         4       0       0       0
  4003 ;;Total ram usage:        4 bytes
  4004 ;; Hardware stack levels used: 1
  4005 ;; This function calls:
  4006 ;;		Nothing
  4007 ;; This function is called by:
  4008 ;;		_INTERRUPT_InterruptManager
  4009 ;; This function uses a non-reentrant model
  4010 ;;
  4011                           
  4012     074E                     _SET_DUTY_CCP3:	
  4013                           ;psect for function _SET_DUTY_CCP3
  4014                           
  4015                           
  4016                           ;incstack = 0
  4017                           ; Regs used in _SET_DUTY_CCP3: [wreg+fsr1l+fsr1h+status,2+status,0]
  4018                           ;SET_DUTY_CCP3@duty_ptr stored from wreg
  4019     074E  00F9               	movwf	SET_DUTY_CCP3@duty_ptr
  4020                           
  4021                           ;main.c: 203:     CCPR3L = (uint8_t)(*duty_ptr >> 2);
  4022     074F  0879               	movf	SET_DUTY_CCP3@duty_ptr,w
  4023     0750  0086               	movwf	6
  4024     0751  0187               	clrf	7
  4025     0752  3F40               	moviw [0]fsr1
  4026     0753  00F6               	movwf	??_SET_DUTY_CCP3
  4027     0754  3F41               	moviw [1]fsr1
  4028     0755  00F7               	movwf	??_SET_DUTY_CCP3+1
  4029     0756  36F7               	lsrf	??_SET_DUTY_CCP3+1,f
  4030     0757  0CF6               	rrf	??_SET_DUTY_CCP3,f
  4031     0758  36F7               	lsrf	??_SET_DUTY_CCP3+1,f
  4032     0759  0CF6               	rrf	??_SET_DUTY_CCP3,f
  4033     075A  0876               	movf	??_SET_DUTY_CCP3,w
  4034     075B  0026               	movlb	6	; select bank6
  4035     075C  0091               	movwf	17	;volatile
  4036                           
  4037                           ;main.c: 204:     uint8_t temp = *duty_ptr % 0b100;
  4038     075D  0879               	movf	SET_DUTY_CCP3@duty_ptr,w
  4039     075E  0086               	movwf	6
  4040     075F  0187               	clrf	7
  4041     0760  0801               	movf	1,w
  4042     0761  3903               	andlw	3
  4043     0762  00F8               	movwf	SET_DUTY_CCP3@temp
  4044                           
  4045                           ;main.c: 205:     CCP3CON = CCP3CON | ((uint8_t)(temp << 4));
  4046     0763  0878               	movf	SET_DUTY_CCP3@temp,w
  4047     0764  00F6               	movwf	??_SET_DUTY_CCP3
  4048     0765  3003               	movlw	3
  4049     0766                     u82_25:
  4050     0766  35F6               	lslf	??_SET_DUTY_CCP3,f
  4051     0767  3EFF               	addlw	-1
  4052     0768  1D03               	skipz
  4053     0769  2F66               	goto	u82_25
  4054     076A  3576               	lslf	??_SET_DUTY_CCP3,w
  4055     076B  0413               	iorwf	19,w	;volatile
  4056     076C  0093               	movwf	19	;volatile
  4057     076D  0008               	return
  4058     076E                     __end_of_SET_DUTY_CCP3:
  4059     007E                     btemp	set	126	;btemp
  4060     007E                     int$flags	set	126
  4061     007E                     wtemp0	set	126
  4062                           
  4063                           	psect	config
  4064                           
  4065                           ;Config register CONFIG1 @ 0x8007
  4066                           ;	Oscillator Selection
  4067                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  4068                           ;	Watchdog Timer Enable
  4069                           ;	WDTE = OFF, WDT disabled
  4070                           ;	Power-up Timer Enable
  4071                           ;	PWRTE = OFF, PWRT disabled
  4072                           ;	MCLR Pin Function Select
  4073                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  4074                           ;	Flash Program Memory Code Protection
  4075                           ;	CP = OFF, Program memory code protection is disabled
  4076                           ;	Data Memory Code Protection
  4077                           ;	CPD = OFF, Data memory code protection is disabled
  4078                           ;	Brown-out Reset Enable
  4079                           ;	BOREN = OFF, Brown-out Reset disabled
  4080                           ;	Clock Out Enable
  4081                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  4082                           ;	Internal/External Switchover
  4083                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4084                           ;	Fail-Safe Clock Monitor Enable
  4085                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4086     8007                     	org	32775
  4087     8007  09E4               	dw	2532
  4088                           
  4089                           ;Config register CONFIG2 @ 0x8008
  4090                           ;	Flash Memory Self-Write Protection
  4091                           ;	WRT = OFF, Write protection off
  4092                           ;	PLL Enable
  4093                           ;	PLLEN = ON, 4x PLL enabled
  4094                           ;	Stack Overflow/Underflow Reset Enable
  4095                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  4096                           ;	Brown-out Reset Voltage Selection
  4097                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  4098                           ;	In-Circuit Debugger Mode
  4099                           ;	DEBUG = ON, In-Circuit Debugger enabled, ICSPCLK and ICSPDAT are dedicated to the debu
      +                          gger
  4100                           ;	Low-Voltage Programming Enable
  4101                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  4102     8008                     	org	32776
  4103     8008  0FFF               	dw	4095

Data Sizes:
    Strings     0
    Constant    924
    Data        2
    BSS         46
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     25      67
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    DO_ADC@modifier	PTR const unsigned char  size(2) Largest target is 1
		 -> depth_adc_config_value(CODE[1]), speed_adc_config_value(CODE[1]), symmetry_adc_config_value(CODE[1]), waveshape_adc_config_value(CODE[1]), 

    SET_DUTY_CCP3@duty_ptr	PTR volatile unsigned short  size(1) Largest target is 2
		 -> duty(COMMON[2]), 

    TMR0_WRITE@timer_value_ptr	PTR volatile unsigned char  size(1) Largest target is 1
		 -> final_TMR0(COMMON[1]), 

    top_two_bytes_ptr	PTR unsigned short  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_SET_DUTY_CCP3

Critical Paths under _main in BANK0

    _main->_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST
    _PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST->_SHORTEN_PERIOD
    _SHORTEN_PERIOD->___lmul
    _LENGTHEN_PERIOD->___lmul
    _PROCESS_RAW_SPEED_AND_PRESCALER->___lmul
    _GET_CURRENT_POT_VALUES->_DETERMINE_WAVESHAPE
    _DETERMINE_WAVESHAPE->_DO_ADC

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    4057
                      _CONFIG_SYSTEM
              _CONFIG_TMR0_INTERRUPT
             _GET_CURRENT_POT_VALUES
  _PROCESS_FINAL_SPEED_AND_PRESCALER
    _PROCESS_RAW_SPEED_AND_PRESCALER
_PROCESS_TMR0_OFFSET_AND_PRESCALER_A
                         _TMR0_WRITE
                   _TURN_ON_CCP3_PWM
 ---------------------------------------------------------------------------------
 (1) _TURN_ON_CCP3_PWM                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_WRITE                                           1     1      0      55
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST             5     5      0    2247
                                             20 BANK0      5     5      0
                    _LENGTHEN_PERIOD
                     _SHORTEN_PERIOD
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     316
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _SHORTEN_PERIOD                                       8     8      0     995
                                             12 BANK0      8     8      0
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) _LENGTHEN_PERIOD                                      6     6      0     772
                                             12 BANK0      6     6      0
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) _PROCESS_RAW_SPEED_AND_PRESCALER                      6     6      0     741
                                             12 BANK0      6     6      0
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     676
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) _PROCESS_FINAL_SPEED_AND_PRESCALER                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GET_CURRENT_POT_VALUES                               2     2      0    1014
                                              8 BANK0      2     2      0
                _DETERMINE_WAVESHAPE
                             _DO_ADC
 ---------------------------------------------------------------------------------
 (2) _DETERMINE_WAVESHAPE                                  2     2      0     555
                                              6 BANK0      2     2      0
                             _DO_ADC
 ---------------------------------------------------------------------------------
 (2) _DO_ADC                                               6     4      2     459
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _CONFIG_TMR0_INTERRUPT                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CONFIG_SYSTEM                                        0     0      0       0
                    _CONFIG_ADC_PINS
                     _CONFIG_INT_OSC
                       _CONFIG_PORTS
                    _CONFIG_PWM_CCP3
 ---------------------------------------------------------------------------------
 (2) _CONFIG_PWM_CCP3                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CONFIG_PORTS                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CONFIG_INT_OSC                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CONFIG_ADC_PINS                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           2     2      0     100
                                              4 COMMON     2     2      0
                      _SET_DUTY_CCP3
 ---------------------------------------------------------------------------------
 (5) _SET_DUTY_CCP3                                        4     4      0     100
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CONFIG_SYSTEM
     _CONFIG_ADC_PINS
     _CONFIG_INT_OSC
     _CONFIG_PORTS
     _CONFIG_PWM_CCP3
   _CONFIG_TMR0_INTERRUPT
   _GET_CURRENT_POT_VALUES
     _DETERMINE_WAVESHAPE
       _DO_ADC
     _DO_ADC
   _PROCESS_FINAL_SPEED_AND_PRESCALER
   _PROCESS_RAW_SPEED_AND_PRESCALER
     ___lmul
   _PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST
     _LENGTHEN_PERIOD
       ___lmul
     _SHORTEN_PERIOD
       ___lmul
     ___wmul
   _TMR0_WRITE
   _TURN_ON_CCP3_PWM

 _INTERRUPT_InterruptManager (ROOT)
   _SET_DUTY_CCP3

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      4F       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     19      43       6       83.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      4F      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Wed Jan 24 13:05:34 2024

                                                      r1 0020  
                                                      r2 0021  
                                                      r3 0022  
                                                     _NO 07DD  
                                    ___wmul@multiplicand 004A  
                                                    l204 05EC  
                                                    l158 06F1  
                                                    l177 07BB  
                                                    l419 0776  
                                                    _GIE 005F  
                                                    _PR2 001B  
                                                    _YES 07DE  
                                                    wreg 0009  
                                                   l1601 06B7  
                                                   l1631 073C  
                                                   _C1ON 088F  
                                                   l1633 0743  
                                                   l1803 0618  
                                                   l1637 0745  
                                                   l1717 0662  
                                                   l1821 0583  
                                                   l1729 0770  
                                                   l1691 0471  
                                                   l1675 042C  
                                                   l1851 05D2  
                                                   l1843 05CC  
                                                   l1597 06AD  
                                                   l1685 0440  
                                                   l1845 05CF  
                                                   l1837 05BF  
                                                   l1829 0596  
                                                   l1775 0554  
                                                   l1847 05C9  
                                                   l1839 05C2  
                                                   l1795 05FA  
                                                   l1787 05E3  
                                                   l1789 05E6  
                                                   l1877 071A  
                                                   l1799 0609  
                                                   _ADON 04E8  
                                                   u1205 06BF  
                                                   u1315 0476  
                                                   u1165 06DE  
                                                   u1405 0535  
                                                   u1335 0642  
                                                   u1255 040D  
                                                   u1425 055F  
                                                   u1345 0655  
                                                   u1195 06B8  
                                                   u1435 056D  
                                                   u1365 0777  
                                                   u1295 0460  
                                                   u1375 077C  
                                                   u1545 05AF  
                                                   u1637 06EC  
                                                   _TMR0 0015  
                                                   _WPUC 020E  
                                      _current_speed_log 0036  
                                                   _main 0700  
                                                   _duty 0073  
                                                   fsr0h 0005  
                                                   fsr1h 0007  
                                                   indf0 0000  
                                                   fsr0l 0004  
                                                   indf1 0001  
                                                   fsr1l 0006  
                                                   btemp 007E  
                                      _current_waveshape 0072  
                                                   start 00D0  
                                  _CONFIG_TMR0_INTERRUPT 07DB  
                                       __end_of_NEGATIVE 07E5  
                                   __end_of_CONFIG_PORTS 07B1  
                                                  STATUS 0003  
                                                  ?_main 0076  
                                                  _T2CON 001C  
                                                  _LATC5 0875  
                                                  i1l261 00CE  
                                                  i1l257 005B  
                                                  i1l258 0068  
                                                  _SRLEN 08D7  
                                                  _TRISC 008E  
                                                  u82_25 0766  
                                            ?_TMR0_WRITE 0076  
                       __end_of_shorten_period_log_table 01ED  
                                    ___lmul@multiplicand 004C  
                                       __end_of_POSITIVE 07E6  
                               ??_GET_CURRENT_POT_VALUES 0050  
                                                  status 0003  
                                                  wtemp0 007E  
                             _current_one_quadrant_index 0071  
                                        __initialization 00D2  
                             LENGTHEN_PERIOD@dTMR0_ideal 0058  
                                           __end_of_main 0727  
       __end_of_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST 05D9  
             ??_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST 005C  
              ?_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST 0076  
               _PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST 0578  
                            ?_INTERRUPT_InterruptManager 0076  
                                      __end_of_DONT_CARE 07E0  
                                                 ??_main 0061  
                                  __end_of_DIVIDE_BY_TWO 07E3  
                                 _speed_adc_config_value 07E8  
                                  __end_of_CONFIG_SYSTEM 07A8  
                                                 _ADCON0 009D  
                                                 _ADCON1 009E  
                                                 _ADRESH 009C  
                                                 _ADRESL 009B  
                                                 _CCPR3L 0311  
                                                 _ANSELC 018E  
                                                 _DO_ADC 06D4  
                                                 i1l1511 0022  
                                                 i1l1531 004F  
                                                 i1l1523 0044  
                                                 i1l1515 0035  
                                                 i1l1533 0050  
                                                 i1l1519 003D  
                                                 i1l1545 00C4  
                                                 i1l1537 0059  
                                                 _OSCCON 0099  
                                                 _TMR0IE 005D  
                                                 _TMR0IF 005A  
                                                 _TMR2IF 0089  
                                                 _TMR2ON 00E2  
                                                 _TRISA2 0462  
                                 ?_CONFIG_TMR0_INTERRUPT 0076  
                                         DO_ADC@modifier 0048  
                            __end_of_DETERMINE_WAVESHAPE 074E  
                      __end_of_symmetry_adc_config_value 07E7  
                                                 ___lmul 06A5  
                                                 ___wmul 076E  
                                  __end_of_SET_DUTY_CCP3 076E  
                                      ?_TURN_ON_CCP3_PWM 0076  
                                      ??_CONFIG_ADC_PINS 0048  
                                _current_speed_linear_32 0028  
                                     ??_TURN_ON_CCP3_PWM 0048  
                                __end_of__initialization 00E7  
                                         _SHORTEN_PERIOD 03F1  
                                         _DIVIDE_BY_FOUR 07E0  
                                         _CONFIG_INT_OSC 07CF  
                                         __pcstackCOMMON 0076  
                                           __pidataBANK0 07D9  
                                            _dTMR0_ideal 0030  
                                             __end_of_NO 07DE  
                                 _tri_table_one_quadrant 01ED  
                                      ??_CONFIG_PWM_CCP3 0048  
                                      _top_two_bytes_ptr 0061  
                                          _current_depth 0034  
                                             __pbssBANK0 0020  
                                                ?_DO_ADC 0048  
                                 __end_of_SHORTEN_PERIOD 048A  
                                           _CONFIG_PORTS 07A8  
                                 __end_of_DIVIDE_BY_FOUR 07E1  
                                 __end_of_CONFIG_INT_OSC 07D5  
                                     __end_of_DO_NOTHING 07E4  
                                             __pmaintext 0700  
                                 _GET_CURRENT_POT_VALUES 0668  
                                                ?___lmul 0048  
                                                ?___wmul 0048  
                                             __pintentry 0004  
PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST@symmetry_status 0060  
                                                _CCP3CON 0313  
                                         ___lmul@product 0050  
                                             _final_TMR0 0075  
                                           ??_TMR0_WRITE 0048  
                                  SET_DUTY_CCP3@duty_ptr 0079  
                                                _OSCTUNE 0098  
                                _sine_table_one_quadrant 02EF  
                              TMR0_WRITE@timer_value_ptr 0048  
                                        ?_SHORTEN_PERIOD 0076  
              __end_of_PROCESS_FINAL_SPEED_AND_PRESCALER 0626  
                    ??_PROCESS_FINAL_SPEED_AND_PRESCALER 0048  
                     ?_PROCESS_FINAL_SPEED_AND_PRESCALER 0076  
                      _PROCESS_FINAL_SPEED_AND_PRESCALER 05D9  
                                        ?_CONFIG_INT_OSC 0076  
                                   _current_speed_log_32 0024  
                                     __end_of_TMR0_WRITE 07C9  
                                   _current_speed_linear 0038  
                              _base_prescaler_bits_index 0070  
                                                __ptext1 07B9  
                                                __ptext2 07C1  
                                                __ptext3 0578  
                                                __ptext4 076E  
                                                __ptext5 03F1  
                                                __ptext6 0626  
                                                __ptext7 050B  
                                                __ptext8 06A5  
                                                __ptext9 05D9  
                                        _MULTIPLY_BY_TWO 07E1  
                __end_of_PROCESS_RAW_SPEED_AND_PRESCALER 0578  
                      ??_PROCESS_RAW_SPEED_AND_PRESCALER 0054  
                       ?_PROCESS_RAW_SPEED_AND_PRESCALER 0076  
                        _PROCESS_RAW_SPEED_AND_PRESCALER 050B  
                                              _DONT_CARE 07DF  
                                                clrloop0 07CA  
                                   end_of_initialization 00E7  
                                ??_CONFIG_TMR0_INTERRUPT 0048  
                                          _duty_low_byte 0047  
                         __end_of_speed_adc_config_value 07E9  
                                 _depth_adc_config_value 07E7  
                                        _CONFIG_ADC_PINS 07D5  
                                       _TMR0_offset_sign 0042  
                                      ??_LENGTHEN_PERIOD 0054  
                              _lengthen_period_log_table 048A  
                                             DO_ADC@temp 004D  
                                         __end_of_DO_ADC 0700  
                                      SET_DUTY_CCP3@temp 0078  
                                       _current_quadrant 0044  
                                __end_of_MULTIPLY_BY_TWO 07E2  
                                        _CONFIG_PWM_CCP3 0789  
                                       _current_symmetry 0032  
                                         __end_of___lmul 06D4  
                                         __end_of___wmul 0789  
                                    start_initialization 00D2  
                                            __end_of_YES 07DF  
                                               ??_DO_ADC 004A  
                                ?_GET_CURRENT_POT_VALUES 0076  
                        __end_of_sine_table_one_quadrant 03F1  
                                __end_of_CONFIG_ADC_PINS 07D9  
                                               ??___lmul 0050  
                                               ??___wmul 004C  
                         __end_of_tri_table_one_quadrant 02EF  
                                            __pdataBANK0 0061  
                                       DO_ADC@adc_result 004B  
                                            __pbssCOMMON 0070  
                                              ___latbits 0001  
                                          _DIVIDE_BY_TWO 07E2  
                                          __pcstackBANK0 0048  
                                       ??_SHORTEN_PERIOD 0054  
                                          _CONFIG_SYSTEM 079C  
                                       ??_CONFIG_INT_OSC 0048  
                         __end_of_GET_CURRENT_POT_VALUES 06A5  
                               _shorten_period_log_table 00EB  
                                __end_of_CONFIG_PWM_CCP3 079C  
                                         _prescaler_bits 07B1  
                           ??_INTERRUPT_InterruptManager 007A  
                                           _how_many_128 003A  
                                          _SET_DUTY_CCP3 074E  
                                               _CCPTMRS0 029E  
                                         ?_CONFIG_SYSTEM 0076  
                                       _prescaler_adjust 0041  
                                        _symmetry_status 003E  
                                               _NEGATIVE 07E4  
                                         ___wmul@product 004C  
                     __end_of_waveshape_adc_config_value 07EA  
                             _waveshape_adc_config_value 07E9  
                          __end_of_CONFIG_TMR0_INTERRUPT 07DD  
                                              clear_ram0 07C9  
                                               _GO_nDONE 04E9  
                                       _TURN_ON_CCP3_PWM 07B9  
                                 __end_of_prescaler_bits 07B9  
                                       ?_CONFIG_ADC_PINS 0076  
                                               _POSITIVE 07E5  
                                        _LENGTHEN_PERIOD 0626  
                                      ___wmul@multiplier 0048  
                                         ?_SET_DUTY_CCP3 0076  
                                      _clear_TMR0_please 003F  
                           SHORTEN_PERIOD@TMR0_raw_extra 005A  
                                      ___lmul@multiplier 0048  
                                    _DETERMINE_WAVESHAPE 0727  
                                 DETERMINE_WAVESHAPE@ADC 004E  
                                       ?_CONFIG_PWM_CCP3 0076  
                         __end_of_depth_adc_config_value 07E8  
                      __end_of_lengthen_period_log_table 050B  
           PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST@temp 005E  
                                   ?_DETERMINE_WAVESHAPE 0076  
                                        ??_CONFIG_SYSTEM 0048  
                                       _speed_control_32 002C  
                                               __ptext10 0668  
                                               __ptext11 0727  
                                               __ptext20 074E  
                                               __ptext12 06D4  
                                               __ptext13 07DB  
                                               __ptext14 079C  
                                               __ptext15 0789  
                                               __ptext16 07A8  
                                               __ptext17 07CF  
                                               __ptext18 07D5  
PROCESS_RAW_SPEED_AND_PRESCALER@speed_control_subtracted 0058  
                                          ?_CONFIG_PORTS 0076  
                                         _duty_high_byte 0046  
                                          _speed_control 003C  
                                               _raw_TMR0 0040  
                                         _symmetry_total 0020  
                                __end_of_LENGTHEN_PERIOD 0668  
                                               int$flags 007E  
                                  ??_DETERMINE_WAVESHAPE 004E  
                     __end_of_INTERRUPT_InterruptManager 00D0  
                             _INTERRUPT_InterruptManager 0004  
                                        ??_SET_DUTY_CCP3 0076  
                                             _DO_NOTHING 07E3  
                                         __pstringtext10 07E1  
                                         __pstringtext11 07E2  
                                         __pstringtext12 07E3  
                                         __pstringtext13 07E4  
                                         __pstringtext14 07E5  
                                         __pstringtext15 07E6  
                                         __pstringtext16 07E7  
                                         __pstringtext17 07E8  
                                         __pstringtext18 07E9  
                              _symmetry_adc_config_value 07E6  
                                         ??_CONFIG_PORTS 0048  
                                               intlevel1 0000  
                                          __pstringtext1 00EB  
                                          __pstringtext2 01ED  
                                          __pstringtext3 02EF  
                                          __pstringtext4 048A  
                                          __pstringtext5 07B1  
                                          __pstringtext6 07DD  
                                          __pstringtext7 07DE  
                                          __pstringtext8 07DF  
                                          __pstringtext9 07E0  
                                            _TMR0_offset 0043  
                                             _OPTION_REG 0095  
                                             _TMR0_WRITE 07C1  
                              SHORTEN_PERIOD@dTMR0_ideal 0058  
                               __end_of_TURN_ON_CCP3_PWM 07C1  
                                      _current_halfcycle 0045  
                                       ?_LENGTHEN_PERIOD 0076  
