

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Mon Jan 29 20:52:50 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og9 
     1                           	processor	16F1824
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    15                           	psect	stringtext11,global,class=STRCODE,delta=2,noexec
    16                           	psect	stringtext12,global,class=STRCODE,delta=2,noexec
    17                           	psect	stringtext13,global,class=STRCODE,delta=2,noexec
    18                           	psect	stringtext14,global,class=STRCODE,delta=2,noexec
    19                           	psect	stringtext15,global,class=STRCODE,delta=2,noexec
    20                           	psect	stringtext16,global,class=STRCODE,delta=2,noexec
    21                           	psect	cinit,global,class=CODE,merge=1,delta=2
    22                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    23                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    24                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    25                           	psect	clrtext,global,class=CODE,delta=2
    26                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    27                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    28                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    29                           	psect	text1,local,class=CODE,merge=1,delta=2
    30                           	psect	text2,local,class=CODE,merge=1,delta=2
    31                           	psect	text3,local,class=CODE,merge=1,delta=2
    32                           	psect	text4,local,class=CODE,merge=1,delta=2
    33                           	psect	text5,local,class=CODE,merge=1,delta=2
    34                           	psect	text6,local,class=CODE,merge=1,delta=2
    35                           	psect	text7,local,class=CODE,merge=1,delta=2
    36                           	psect	text8,local,class=CODE,merge=1,delta=2
    37                           	psect	text9,local,class=CODE,merge=1,delta=2
    38                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text11,local,class=CODE,merge=1,delta=2
    40                           	psect	text12,local,class=CODE,merge=1,delta=2
    41                           	psect	text13,local,class=CODE,merge=1,delta=2
    42                           	psect	text14,local,class=CODE,merge=1,delta=2
    43                           	psect	text15,local,class=CODE,merge=1,delta=2
    44                           	psect	text16,local,class=CODE,merge=1,delta=2
    45                           	psect	text17,local,class=CODE,merge=1,delta=2
    46                           	psect	text18,local,class=CODE,merge=1,delta=2
    47                           	psect	text19,local,class=CODE,merge=1,delta=2
    48                           	psect	intentry,global,class=CODE,delta=2
    49                           	psect	text21,local,class=CODE,merge=1,delta=2
    50                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    51                           	dabs	1,0x7E,2
    52     0000                     
    53                           ; Generated 06/07/2023 GMT
    54                           ; 
    55                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution. Publication is not required when
    69                           ;        this file is used in an embedded application.
    70                           ; 
    71                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    72                           ;        software without specific prior written permission.
    73                           ; 
    74                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    75                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    76                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    77                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    78                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    79                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    80                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    81                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    82                           ; 
    83                           ; 
    84                           ; Code-generator required, PIC16F1824 Definitions
    85                           ; 
    86                           ; SFR Addresses
    87     0000                     	;# 
    88     0001                     	;# 
    89     0002                     	;# 
    90     0003                     	;# 
    91     0004                     	;# 
    92     0005                     	;# 
    93     0006                     	;# 
    94     0007                     	;# 
    95     0008                     	;# 
    96     0009                     	;# 
    97     000A                     	;# 
    98     000B                     	;# 
    99     000C                     	;# 
   100     000E                     	;# 
   101     0011                     	;# 
   102     0012                     	;# 
   103     0013                     	;# 
   104     0015                     	;# 
   105     0016                     	;# 
   106     0016                     	;# 
   107     0017                     	;# 
   108     0018                     	;# 
   109     0019                     	;# 
   110     001A                     	;# 
   111     001B                     	;# 
   112     001C                     	;# 
   113     001E                     	;# 
   114     001F                     	;# 
   115     008C                     	;# 
   116     008E                     	;# 
   117     0091                     	;# 
   118     0092                     	;# 
   119     0093                     	;# 
   120     0095                     	;# 
   121     0096                     	;# 
   122     0097                     	;# 
   123     0098                     	;# 
   124     0099                     	;# 
   125     009A                     	;# 
   126     009B                     	;# 
   127     009B                     	;# 
   128     009C                     	;# 
   129     009D                     	;# 
   130     009E                     	;# 
   131     010C                     	;# 
   132     010E                     	;# 
   133     0111                     	;# 
   134     0112                     	;# 
   135     0113                     	;# 
   136     0114                     	;# 
   137     0115                     	;# 
   138     0116                     	;# 
   139     0117                     	;# 
   140     0118                     	;# 
   141     0119                     	;# 
   142     011A                     	;# 
   143     011B                     	;# 
   144     011D                     	;# 
   145     011E                     	;# 
   146     018C                     	;# 
   147     018E                     	;# 
   148     0191                     	;# 
   149     0191                     	;# 
   150     0192                     	;# 
   151     0193                     	;# 
   152     0193                     	;# 
   153     0193                     	;# 
   154     0194                     	;# 
   155     0195                     	;# 
   156     0196                     	;# 
   157     0199                     	;# 
   158     019A                     	;# 
   159     019B                     	;# 
   160     019B                     	;# 
   161     019B                     	;# 
   162     019B                     	;# 
   163     019C                     	;# 
   164     019C                     	;# 
   165     019D                     	;# 
   166     019E                     	;# 
   167     019F                     	;# 
   168     020C                     	;# 
   169     020E                     	;# 
   170     0211                     	;# 
   171     0211                     	;# 
   172     0212                     	;# 
   173     0212                     	;# 
   174     0213                     	;# 
   175     0213                     	;# 
   176     0214                     	;# 
   177     0214                     	;# 
   178     0215                     	;# 
   179     0215                     	;# 
   180     0215                     	;# 
   181     0215                     	;# 
   182     0216                     	;# 
   183     0216                     	;# 
   184     0217                     	;# 
   185     0217                     	;# 
   186     0291                     	;# 
   187     0291                     	;# 
   188     0292                     	;# 
   189     0293                     	;# 
   190     0294                     	;# 
   191     0295                     	;# 
   192     0295                     	;# 
   193     0296                     	;# 
   194     0298                     	;# 
   195     0298                     	;# 
   196     0299                     	;# 
   197     029A                     	;# 
   198     029B                     	;# 
   199     029C                     	;# 
   200     029D                     	;# 
   201     029E                     	;# 
   202     029E                     	;# 
   203     0311                     	;# 
   204     0311                     	;# 
   205     0312                     	;# 
   206     0313                     	;# 
   207     0318                     	;# 
   208     0318                     	;# 
   209     0319                     	;# 
   210     031A                     	;# 
   211     038C                     	;# 
   212     038E                     	;# 
   213     0391                     	;# 
   214     0392                     	;# 
   215     0393                     	;# 
   216     039A                     	;# 
   217     039C                     	;# 
   218     039D                     	;# 
   219     039E                     	;# 
   220     039F                     	;# 
   221     0415                     	;# 
   222     0416                     	;# 
   223     0417                     	;# 
   224     041C                     	;# 
   225     041D                     	;# 
   226     041E                     	;# 
   227     0FE4                     	;# 
   228     0FE5                     	;# 
   229     0FE6                     	;# 
   230     0FE7                     	;# 
   231     0FE8                     	;# 
   232     0FE9                     	;# 
   233     0FEA                     	;# 
   234     0FEB                     	;# 
   235     0FED                     	;# 
   236     0FEE                     	;# 
   237     0FEF                     	;# 
   238     0020                     	;# 
   239     0021                     	;# 
   240     0022                     	;# 
   241     0023                     	;# 
   242     0024                     	;# 
   243     0025                     	;# 
   244     0000                     	;# 
   245     0001                     	;# 
   246     0002                     	;# 
   247     0003                     	;# 
   248     0004                     	;# 
   249     0005                     	;# 
   250     0006                     	;# 
   251     0007                     	;# 
   252     0008                     	;# 
   253     0009                     	;# 
   254     000A                     	;# 
   255     000B                     	;# 
   256     000C                     	;# 
   257     000E                     	;# 
   258     0011                     	;# 
   259     0012                     	;# 
   260     0013                     	;# 
   261     0015                     	;# 
   262     0016                     	;# 
   263     0016                     	;# 
   264     0017                     	;# 
   265     0018                     	;# 
   266     0019                     	;# 
   267     001A                     	;# 
   268     001B                     	;# 
   269     001C                     	;# 
   270     001E                     	;# 
   271     001F                     	;# 
   272     008C                     	;# 
   273     008E                     	;# 
   274     0091                     	;# 
   275     0092                     	;# 
   276     0093                     	;# 
   277     0095                     	;# 
   278     0096                     	;# 
   279     0097                     	;# 
   280     0098                     	;# 
   281     0099                     	;# 
   282     009A                     	;# 
   283     009B                     	;# 
   284     009B                     	;# 
   285     009C                     	;# 
   286     009D                     	;# 
   287     009E                     	;# 
   288     010C                     	;# 
   289     010E                     	;# 
   290     0111                     	;# 
   291     0112                     	;# 
   292     0113                     	;# 
   293     0114                     	;# 
   294     0115                     	;# 
   295     0116                     	;# 
   296     0117                     	;# 
   297     0118                     	;# 
   298     0119                     	;# 
   299     011A                     	;# 
   300     011B                     	;# 
   301     011D                     	;# 
   302     011E                     	;# 
   303     018C                     	;# 
   304     018E                     	;# 
   305     0191                     	;# 
   306     0191                     	;# 
   307     0192                     	;# 
   308     0193                     	;# 
   309     0193                     	;# 
   310     0193                     	;# 
   311     0194                     	;# 
   312     0195                     	;# 
   313     0196                     	;# 
   314     0199                     	;# 
   315     019A                     	;# 
   316     019B                     	;# 
   317     019B                     	;# 
   318     019B                     	;# 
   319     019B                     	;# 
   320     019C                     	;# 
   321     019C                     	;# 
   322     019D                     	;# 
   323     019E                     	;# 
   324     019F                     	;# 
   325     020C                     	;# 
   326     020E                     	;# 
   327     0211                     	;# 
   328     0211                     	;# 
   329     0212                     	;# 
   330     0212                     	;# 
   331     0213                     	;# 
   332     0213                     	;# 
   333     0214                     	;# 
   334     0214                     	;# 
   335     0215                     	;# 
   336     0215                     	;# 
   337     0215                     	;# 
   338     0215                     	;# 
   339     0216                     	;# 
   340     0216                     	;# 
   341     0217                     	;# 
   342     0217                     	;# 
   343     0291                     	;# 
   344     0291                     	;# 
   345     0292                     	;# 
   346     0293                     	;# 
   347     0294                     	;# 
   348     0295                     	;# 
   349     0295                     	;# 
   350     0296                     	;# 
   351     0298                     	;# 
   352     0298                     	;# 
   353     0299                     	;# 
   354     029A                     	;# 
   355     029B                     	;# 
   356     029C                     	;# 
   357     029D                     	;# 
   358     029E                     	;# 
   359     029E                     	;# 
   360     0311                     	;# 
   361     0311                     	;# 
   362     0312                     	;# 
   363     0313                     	;# 
   364     0318                     	;# 
   365     0318                     	;# 
   366     0319                     	;# 
   367     031A                     	;# 
   368     038C                     	;# 
   369     038E                     	;# 
   370     0391                     	;# 
   371     0392                     	;# 
   372     0393                     	;# 
   373     039A                     	;# 
   374     039C                     	;# 
   375     039D                     	;# 
   376     039E                     	;# 
   377     039F                     	;# 
   378     0415                     	;# 
   379     0416                     	;# 
   380     0417                     	;# 
   381     041C                     	;# 
   382     041D                     	;# 
   383     041E                     	;# 
   384     0FE4                     	;# 
   385     0FE5                     	;# 
   386     0FE6                     	;# 
   387     0FE7                     	;# 
   388     0FE8                     	;# 
   389     0FE9                     	;# 
   390     0FEA                     	;# 
   391     0FEB                     	;# 
   392     0FED                     	;# 
   393     0FEE                     	;# 
   394     0FEF                     	;# 
   395     0000                     	;# 
   396     0001                     	;# 
   397     0002                     	;# 
   398     0003                     	;# 
   399     0004                     	;# 
   400     0005                     	;# 
   401     0006                     	;# 
   402     0007                     	;# 
   403     0008                     	;# 
   404     0009                     	;# 
   405     000A                     	;# 
   406     000B                     	;# 
   407     000C                     	;# 
   408     000E                     	;# 
   409     0011                     	;# 
   410     0012                     	;# 
   411     0013                     	;# 
   412     0015                     	;# 
   413     0016                     	;# 
   414     0016                     	;# 
   415     0017                     	;# 
   416     0018                     	;# 
   417     0019                     	;# 
   418     001A                     	;# 
   419     001B                     	;# 
   420     001C                     	;# 
   421     001E                     	;# 
   422     001F                     	;# 
   423     008C                     	;# 
   424     008E                     	;# 
   425     0091                     	;# 
   426     0092                     	;# 
   427     0093                     	;# 
   428     0095                     	;# 
   429     0096                     	;# 
   430     0097                     	;# 
   431     0098                     	;# 
   432     0099                     	;# 
   433     009A                     	;# 
   434     009B                     	;# 
   435     009B                     	;# 
   436     009C                     	;# 
   437     009D                     	;# 
   438     009E                     	;# 
   439     010C                     	;# 
   440     010E                     	;# 
   441     0111                     	;# 
   442     0112                     	;# 
   443     0113                     	;# 
   444     0114                     	;# 
   445     0115                     	;# 
   446     0116                     	;# 
   447     0117                     	;# 
   448     0118                     	;# 
   449     0119                     	;# 
   450     011A                     	;# 
   451     011B                     	;# 
   452     011D                     	;# 
   453     011E                     	;# 
   454     018C                     	;# 
   455     018E                     	;# 
   456     0191                     	;# 
   457     0191                     	;# 
   458     0192                     	;# 
   459     0193                     	;# 
   460     0193                     	;# 
   461     0193                     	;# 
   462     0194                     	;# 
   463     0195                     	;# 
   464     0196                     	;# 
   465     0199                     	;# 
   466     019A                     	;# 
   467     019B                     	;# 
   468     019B                     	;# 
   469     019B                     	;# 
   470     019B                     	;# 
   471     019C                     	;# 
   472     019C                     	;# 
   473     019D                     	;# 
   474     019E                     	;# 
   475     019F                     	;# 
   476     020C                     	;# 
   477     020E                     	;# 
   478     0211                     	;# 
   479     0211                     	;# 
   480     0212                     	;# 
   481     0212                     	;# 
   482     0213                     	;# 
   483     0213                     	;# 
   484     0214                     	;# 
   485     0214                     	;# 
   486     0215                     	;# 
   487     0215                     	;# 
   488     0215                     	;# 
   489     0215                     	;# 
   490     0216                     	;# 
   491     0216                     	;# 
   492     0217                     	;# 
   493     0217                     	;# 
   494     0291                     	;# 
   495     0291                     	;# 
   496     0292                     	;# 
   497     0293                     	;# 
   498     0294                     	;# 
   499     0295                     	;# 
   500     0295                     	;# 
   501     0296                     	;# 
   502     0298                     	;# 
   503     0298                     	;# 
   504     0299                     	;# 
   505     029A                     	;# 
   506     029B                     	;# 
   507     029C                     	;# 
   508     029D                     	;# 
   509     029E                     	;# 
   510     029E                     	;# 
   511     0311                     	;# 
   512     0311                     	;# 
   513     0312                     	;# 
   514     0313                     	;# 
   515     0318                     	;# 
   516     0318                     	;# 
   517     0319                     	;# 
   518     031A                     	;# 
   519     038C                     	;# 
   520     038E                     	;# 
   521     0391                     	;# 
   522     0392                     	;# 
   523     0393                     	;# 
   524     039A                     	;# 
   525     039C                     	;# 
   526     039D                     	;# 
   527     039E                     	;# 
   528     039F                     	;# 
   529     0415                     	;# 
   530     0416                     	;# 
   531     0417                     	;# 
   532     041C                     	;# 
   533     041D                     	;# 
   534     041E                     	;# 
   535     0FE4                     	;# 
   536     0FE5                     	;# 
   537     0FE6                     	;# 
   538     0FE7                     	;# 
   539     0FE8                     	;# 
   540     0FE9                     	;# 
   541     0FEA                     	;# 
   542     0FEB                     	;# 
   543     0FED                     	;# 
   544     0FEE                     	;# 
   545     0FEF                     	;# 
   546     0000                     	;# 
   547     0001                     	;# 
   548     0002                     	;# 
   549     0003                     	;# 
   550     0004                     	;# 
   551     0005                     	;# 
   552     0006                     	;# 
   553     0007                     	;# 
   554     0008                     	;# 
   555     0009                     	;# 
   556     000A                     	;# 
   557     000B                     	;# 
   558     000C                     	;# 
   559     000E                     	;# 
   560     0011                     	;# 
   561     0012                     	;# 
   562     0013                     	;# 
   563     0015                     	;# 
   564     0016                     	;# 
   565     0016                     	;# 
   566     0017                     	;# 
   567     0018                     	;# 
   568     0019                     	;# 
   569     001A                     	;# 
   570     001B                     	;# 
   571     001C                     	;# 
   572     001E                     	;# 
   573     001F                     	;# 
   574     008C                     	;# 
   575     008E                     	;# 
   576     0091                     	;# 
   577     0092                     	;# 
   578     0093                     	;# 
   579     0095                     	;# 
   580     0096                     	;# 
   581     0097                     	;# 
   582     0098                     	;# 
   583     0099                     	;# 
   584     009A                     	;# 
   585     009B                     	;# 
   586     009B                     	;# 
   587     009C                     	;# 
   588     009D                     	;# 
   589     009E                     	;# 
   590     010C                     	;# 
   591     010E                     	;# 
   592     0111                     	;# 
   593     0112                     	;# 
   594     0113                     	;# 
   595     0114                     	;# 
   596     0115                     	;# 
   597     0116                     	;# 
   598     0117                     	;# 
   599     0118                     	;# 
   600     0119                     	;# 
   601     011A                     	;# 
   602     011B                     	;# 
   603     011D                     	;# 
   604     011E                     	;# 
   605     018C                     	;# 
   606     018E                     	;# 
   607     0191                     	;# 
   608     0191                     	;# 
   609     0192                     	;# 
   610     0193                     	;# 
   611     0193                     	;# 
   612     0193                     	;# 
   613     0194                     	;# 
   614     0195                     	;# 
   615     0196                     	;# 
   616     0199                     	;# 
   617     019A                     	;# 
   618     019B                     	;# 
   619     019B                     	;# 
   620     019B                     	;# 
   621     019B                     	;# 
   622     019C                     	;# 
   623     019C                     	;# 
   624     019D                     	;# 
   625     019E                     	;# 
   626     019F                     	;# 
   627     020C                     	;# 
   628     020E                     	;# 
   629     0211                     	;# 
   630     0211                     	;# 
   631     0212                     	;# 
   632     0212                     	;# 
   633     0213                     	;# 
   634     0213                     	;# 
   635     0214                     	;# 
   636     0214                     	;# 
   637     0215                     	;# 
   638     0215                     	;# 
   639     0215                     	;# 
   640     0215                     	;# 
   641     0216                     	;# 
   642     0216                     	;# 
   643     0217                     	;# 
   644     0217                     	;# 
   645     0291                     	;# 
   646     0291                     	;# 
   647     0292                     	;# 
   648     0293                     	;# 
   649     0294                     	;# 
   650     0295                     	;# 
   651     0295                     	;# 
   652     0296                     	;# 
   653     0298                     	;# 
   654     0298                     	;# 
   655     0299                     	;# 
   656     029A                     	;# 
   657     029B                     	;# 
   658     029C                     	;# 
   659     029D                     	;# 
   660     029E                     	;# 
   661     029E                     	;# 
   662     0311                     	;# 
   663     0311                     	;# 
   664     0312                     	;# 
   665     0313                     	;# 
   666     0318                     	;# 
   667     0318                     	;# 
   668     0319                     	;# 
   669     031A                     	;# 
   670     038C                     	;# 
   671     038E                     	;# 
   672     0391                     	;# 
   673     0392                     	;# 
   674     0393                     	;# 
   675     039A                     	;# 
   676     039C                     	;# 
   677     039D                     	;# 
   678     039E                     	;# 
   679     039F                     	;# 
   680     0415                     	;# 
   681     0416                     	;# 
   682     0417                     	;# 
   683     041C                     	;# 
   684     041D                     	;# 
   685     041E                     	;# 
   686     0FE4                     	;# 
   687     0FE5                     	;# 
   688     0FE6                     	;# 
   689     0FE7                     	;# 
   690     0FE8                     	;# 
   691     0FE9                     	;# 
   692     0FEA                     	;# 
   693     0FEB                     	;# 
   694     0FED                     	;# 
   695     0FEE                     	;# 
   696     0FEF                     	;# 
   697                           
   698                           	psect	idataBANK0
   699     06DF                     __pidataBANK0:
   700                           
   701                           ;initializer for _top_two_bytes_ptr
   702     06DF  3421               	retlw	33
   703     06E0  3400               	retlw	0
   704                           
   705                           	psect	stringtext1
   706     00F1                     __pstringtext1:
   707     00F1                     _tri_table_one_quadrant:
   708     00F1  3400               	retlw	0
   709     00F2  3402               	retlw	2
   710     00F3  3404               	retlw	4
   711     00F4  3402               	retlw	2
   712     00F5  3408               	retlw	8
   713     00F6  3402               	retlw	2
   714     00F7  340C               	retlw	12
   715     00F8  3402               	retlw	2
   716     00F9  3410               	retlw	16
   717     00FA  3402               	retlw	2
   718     00FB  3414               	retlw	20
   719     00FC  3402               	retlw	2
   720     00FD  3418               	retlw	24
   721     00FE  3402               	retlw	2
   722     00FF  341C               	retlw	28
   723     0100  3402               	retlw	2
   724     0101  3420               	retlw	32
   725     0102  3402               	retlw	2
   726     0103  3424               	retlw	36
   727     0104  3402               	retlw	2
   728     0105  3428               	retlw	40
   729     0106  3402               	retlw	2
   730     0107  342C               	retlw	44
   731     0108  3402               	retlw	2
   732     0109  3430               	retlw	48
   733     010A  3402               	retlw	2
   734     010B  3434               	retlw	52
   735     010C  3402               	retlw	2
   736     010D  3438               	retlw	56
   737     010E  3402               	retlw	2
   738     010F  343C               	retlw	60
   739     0110  3402               	retlw	2
   740     0111  3440               	retlw	64
   741     0112  3402               	retlw	2
   742     0113  3444               	retlw	68
   743     0114  3402               	retlw	2
   744     0115  3448               	retlw	72
   745     0116  3402               	retlw	2
   746     0117  344C               	retlw	76
   747     0118  3402               	retlw	2
   748     0119  3450               	retlw	80
   749     011A  3402               	retlw	2
   750     011B  3454               	retlw	84
   751     011C  3402               	retlw	2
   752     011D  3458               	retlw	88
   753     011E  3402               	retlw	2
   754     011F  345C               	retlw	92
   755     0120  3402               	retlw	2
   756     0121  3460               	retlw	96
   757     0122  3402               	retlw	2
   758     0123  3464               	retlw	100
   759     0124  3402               	retlw	2
   760     0125  3468               	retlw	104
   761     0126  3402               	retlw	2
   762     0127  346C               	retlw	108
   763     0128  3402               	retlw	2
   764     0129  3470               	retlw	112
   765     012A  3402               	retlw	2
   766     012B  3474               	retlw	116
   767     012C  3402               	retlw	2
   768     012D  3478               	retlw	120
   769     012E  3402               	retlw	2
   770     012F  347C               	retlw	124
   771     0130  3402               	retlw	2
   772     0131  3480               	retlw	128
   773     0132  3402               	retlw	2
   774     0133  3484               	retlw	132
   775     0134  3402               	retlw	2
   776     0135  3488               	retlw	136
   777     0136  3402               	retlw	2
   778     0137  348C               	retlw	140
   779     0138  3402               	retlw	2
   780     0139  3490               	retlw	144
   781     013A  3402               	retlw	2
   782     013B  3494               	retlw	148
   783     013C  3402               	retlw	2
   784     013D  3498               	retlw	152
   785     013E  3402               	retlw	2
   786     013F  349C               	retlw	156
   787     0140  3402               	retlw	2
   788     0141  34A0               	retlw	160
   789     0142  3402               	retlw	2
   790     0143  34A4               	retlw	164
   791     0144  3402               	retlw	2
   792     0145  34A8               	retlw	168
   793     0146  3402               	retlw	2
   794     0147  34AC               	retlw	172
   795     0148  3402               	retlw	2
   796     0149  34B0               	retlw	176
   797     014A  3402               	retlw	2
   798     014B  34B4               	retlw	180
   799     014C  3402               	retlw	2
   800     014D  34B8               	retlw	184
   801     014E  3402               	retlw	2
   802     014F  34BC               	retlw	188
   803     0150  3402               	retlw	2
   804     0151  34C0               	retlw	192
   805     0152  3402               	retlw	2
   806     0153  34C4               	retlw	196
   807     0154  3402               	retlw	2
   808     0155  34C8               	retlw	200
   809     0156  3402               	retlw	2
   810     0157  34CC               	retlw	204
   811     0158  3402               	retlw	2
   812     0159  34D0               	retlw	208
   813     015A  3402               	retlw	2
   814     015B  34D4               	retlw	212
   815     015C  3402               	retlw	2
   816     015D  34D8               	retlw	216
   817     015E  3402               	retlw	2
   818     015F  34DC               	retlw	220
   819     0160  3402               	retlw	2
   820     0161  34E0               	retlw	224
   821     0162  3402               	retlw	2
   822     0163  34E4               	retlw	228
   823     0164  3402               	retlw	2
   824     0165  34E8               	retlw	232
   825     0166  3402               	retlw	2
   826     0167  34EC               	retlw	236
   827     0168  3402               	retlw	2
   828     0169  34F0               	retlw	240
   829     016A  3402               	retlw	2
   830     016B  34F4               	retlw	244
   831     016C  3402               	retlw	2
   832     016D  34F8               	retlw	248
   833     016E  3402               	retlw	2
   834     016F  34FB               	retlw	251
   835     0170  3402               	retlw	2
   836     0171  34FF               	retlw	255
   837     0172  3402               	retlw	2
   838     0173  3403               	retlw	3
   839     0174  3403               	retlw	3
   840     0175  3407               	retlw	7
   841     0176  3403               	retlw	3
   842     0177  340B               	retlw	11
   843     0178  3403               	retlw	3
   844     0179  340F               	retlw	15
   845     017A  3403               	retlw	3
   846     017B  3413               	retlw	19
   847     017C  3403               	retlw	3
   848     017D  3417               	retlw	23
   849     017E  3403               	retlw	3
   850     017F  341B               	retlw	27
   851     0180  3403               	retlw	3
   852     0181  341F               	retlw	31
   853     0182  3403               	retlw	3
   854     0183  3423               	retlw	35
   855     0184  3403               	retlw	3
   856     0185  3427               	retlw	39
   857     0186  3403               	retlw	3
   858     0187  342B               	retlw	43
   859     0188  3403               	retlw	3
   860     0189  342F               	retlw	47
   861     018A  3403               	retlw	3
   862     018B  3433               	retlw	51
   863     018C  3403               	retlw	3
   864     018D  3437               	retlw	55
   865     018E  3403               	retlw	3
   866     018F  343B               	retlw	59
   867     0190  3403               	retlw	3
   868     0191  343F               	retlw	63
   869     0192  3403               	retlw	3
   870     0193  3443               	retlw	67
   871     0194  3403               	retlw	3
   872     0195  3447               	retlw	71
   873     0196  3403               	retlw	3
   874     0197  344B               	retlw	75
   875     0198  3403               	retlw	3
   876     0199  344F               	retlw	79
   877     019A  3403               	retlw	3
   878     019B  3453               	retlw	83
   879     019C  3403               	retlw	3
   880     019D  3457               	retlw	87
   881     019E  3403               	retlw	3
   882     019F  345B               	retlw	91
   883     01A0  3403               	retlw	3
   884     01A1  345F               	retlw	95
   885     01A2  3403               	retlw	3
   886     01A3  3463               	retlw	99
   887     01A4  3403               	retlw	3
   888     01A5  3467               	retlw	103
   889     01A6  3403               	retlw	3
   890     01A7  346B               	retlw	107
   891     01A8  3403               	retlw	3
   892     01A9  346F               	retlw	111
   893     01AA  3403               	retlw	3
   894     01AB  3473               	retlw	115
   895     01AC  3403               	retlw	3
   896     01AD  3477               	retlw	119
   897     01AE  3403               	retlw	3
   898     01AF  347B               	retlw	123
   899     01B0  3403               	retlw	3
   900     01B1  347F               	retlw	127
   901     01B2  3403               	retlw	3
   902     01B3  3483               	retlw	131
   903     01B4  3403               	retlw	3
   904     01B5  3487               	retlw	135
   905     01B6  3403               	retlw	3
   906     01B7  348B               	retlw	139
   907     01B8  3403               	retlw	3
   908     01B9  348F               	retlw	143
   909     01BA  3403               	retlw	3
   910     01BB  3493               	retlw	147
   911     01BC  3403               	retlw	3
   912     01BD  3497               	retlw	151
   913     01BE  3403               	retlw	3
   914     01BF  349B               	retlw	155
   915     01C0  3403               	retlw	3
   916     01C1  349F               	retlw	159
   917     01C2  3403               	retlw	3
   918     01C3  34A3               	retlw	163
   919     01C4  3403               	retlw	3
   920     01C5  34A7               	retlw	167
   921     01C6  3403               	retlw	3
   922     01C7  34AB               	retlw	171
   923     01C8  3403               	retlw	3
   924     01C9  34AF               	retlw	175
   925     01CA  3403               	retlw	3
   926     01CB  34B3               	retlw	179
   927     01CC  3403               	retlw	3
   928     01CD  34B7               	retlw	183
   929     01CE  3403               	retlw	3
   930     01CF  34BB               	retlw	187
   931     01D0  3403               	retlw	3
   932     01D1  34BF               	retlw	191
   933     01D2  3403               	retlw	3
   934     01D3  34C3               	retlw	195
   935     01D4  3403               	retlw	3
   936     01D5  34C7               	retlw	199
   937     01D6  3403               	retlw	3
   938     01D7  34CB               	retlw	203
   939     01D8  3403               	retlw	3
   940     01D9  34CF               	retlw	207
   941     01DA  3403               	retlw	3
   942     01DB  34D3               	retlw	211
   943     01DC  3403               	retlw	3
   944     01DD  34D7               	retlw	215
   945     01DE  3403               	retlw	3
   946     01DF  34DB               	retlw	219
   947     01E0  3403               	retlw	3
   948     01E1  34DF               	retlw	223
   949     01E2  3403               	retlw	3
   950     01E3  34E3               	retlw	227
   951     01E4  3403               	retlw	3
   952     01E5  34E7               	retlw	231
   953     01E6  3403               	retlw	3
   954     01E7  34EB               	retlw	235
   955     01E8  3403               	retlw	3
   956     01E9  34EF               	retlw	239
   957     01EA  3403               	retlw	3
   958     01EB  34F3               	retlw	243
   959     01EC  3403               	retlw	3
   960     01ED  34F7               	retlw	247
   961     01EE  3403               	retlw	3
   962     01EF  34FB               	retlw	251
   963     01F0  3403               	retlw	3
   964     01F1  34FF               	retlw	255
   965     01F2  3403               	retlw	3
   966     01F3                     __end_of_tri_table_one_quadrant:
   967                           
   968                           	psect	stringtext2
   969     01F3                     __pstringtext2:
   970     01F3                     _sine_table_one_quadrant:
   971     01F3  3400               	retlw	0
   972     01F4  3402               	retlw	2
   973     01F5  3406               	retlw	6
   974     01F6  3402               	retlw	2
   975     01F7  340C               	retlw	12
   976     01F8  3402               	retlw	2
   977     01F9  3412               	retlw	18
   978     01FA  3402               	retlw	2
   979     01FB  3419               	retlw	25
   980     01FC  3402               	retlw	2
   981     01FD  341F               	retlw	31
   982     01FE  3402               	retlw	2
   983     01FF  3425               	retlw	37
   984     0200  3402               	retlw	2
   985     0201  342B               	retlw	43
   986     0202  3402               	retlw	2
   987     0203  3432               	retlw	50
   988     0204  3402               	retlw	2
   989     0205  3438               	retlw	56
   990     0206  3402               	retlw	2
   991     0207  343E               	retlw	62
   992     0208  3402               	retlw	2
   993     0209  3444               	retlw	68
   994     020A  3402               	retlw	2
   995     020B  344B               	retlw	75
   996     020C  3402               	retlw	2
   997     020D  3451               	retlw	81
   998     020E  3402               	retlw	2
   999     020F  3457               	retlw	87
  1000     0210  3402               	retlw	2
  1001     0211  345D               	retlw	93
  1002     0212  3402               	retlw	2
  1003     0213  3463               	retlw	99
  1004     0214  3402               	retlw	2
  1005     0215  3469               	retlw	105
  1006     0216  3402               	retlw	2
  1007     0217  3470               	retlw	112
  1008     0218  3402               	retlw	2
  1009     0219  3476               	retlw	118
  1010     021A  3402               	retlw	2
  1011     021B  347C               	retlw	124
  1012     021C  3402               	retlw	2
  1013     021D  3482               	retlw	130
  1014     021E  3402               	retlw	2
  1015     021F  3488               	retlw	136
  1016     0220  3402               	retlw	2
  1017     0221  348E               	retlw	142
  1018     0222  3402               	retlw	2
  1019     0223  3494               	retlw	148
  1020     0224  3402               	retlw	2
  1021     0225  349A               	retlw	154
  1022     0226  3402               	retlw	2
  1023     0227  34A0               	retlw	160
  1024     0228  3402               	retlw	2
  1025     0229  34A6               	retlw	166
  1026     022A  3402               	retlw	2
  1027     022B  34AC               	retlw	172
  1028     022C  3402               	retlw	2
  1029     022D  34B2               	retlw	178
  1030     022E  3402               	retlw	2
  1031     022F  34B8               	retlw	184
  1032     0230  3402               	retlw	2
  1033     0231  34BD               	retlw	189
  1034     0232  3402               	retlw	2
  1035     0233  34C3               	retlw	195
  1036     0234  3402               	retlw	2
  1037     0235  34C9               	retlw	201
  1038     0236  3402               	retlw	2
  1039     0237  34CF               	retlw	207
  1040     0238  3402               	retlw	2
  1041     0239  34D5               	retlw	213
  1042     023A  3402               	retlw	2
  1043     023B  34DA               	retlw	218
  1044     023C  3402               	retlw	2
  1045     023D  34E0               	retlw	224
  1046     023E  3402               	retlw	2
  1047     023F  34E5               	retlw	229
  1048     0240  3402               	retlw	2
  1049     0241  34EB               	retlw	235
  1050     0242  3402               	retlw	2
  1051     0243  34F1               	retlw	241
  1052     0244  3402               	retlw	2
  1053     0245  34F6               	retlw	246
  1054     0246  3402               	retlw	2
  1055     0247  34FC               	retlw	252
  1056     0248  3402               	retlw	2
  1057     0249  3401               	retlw	1
  1058     024A  3403               	retlw	3
  1059     024B  3406               	retlw	6
  1060     024C  3403               	retlw	3
  1061     024D  340C               	retlw	12
  1062     024E  3403               	retlw	3
  1063     024F  3411               	retlw	17
  1064     0250  3403               	retlw	3
  1065     0251  3416               	retlw	22
  1066     0252  3403               	retlw	3
  1067     0253  341C               	retlw	28
  1068     0254  3403               	retlw	3
  1069     0255  3421               	retlw	33
  1070     0256  3403               	retlw	3
  1071     0257  3426               	retlw	38
  1072     0258  3403               	retlw	3
  1073     0259  342B               	retlw	43
  1074     025A  3403               	retlw	3
  1075     025B  3430               	retlw	48
  1076     025C  3403               	retlw	3
  1077     025D  3435               	retlw	53
  1078     025E  3403               	retlw	3
  1079     025F  343A               	retlw	58
  1080     0260  3403               	retlw	3
  1081     0261  343F               	retlw	63
  1082     0262  3403               	retlw	3
  1083     0263  3444               	retlw	68
  1084     0264  3403               	retlw	3
  1085     0265  3449               	retlw	73
  1086     0266  3403               	retlw	3
  1087     0267  344E               	retlw	78
  1088     0268  3403               	retlw	3
  1089     0269  3452               	retlw	82
  1090     026A  3403               	retlw	3
  1091     026B  3457               	retlw	87
  1092     026C  3403               	retlw	3
  1093     026D  345C               	retlw	92
  1094     026E  3403               	retlw	3
  1095     026F  3460               	retlw	96
  1096     0270  3403               	retlw	3
  1097     0271  3465               	retlw	101
  1098     0272  3403               	retlw	3
  1099     0273  3469               	retlw	105
  1100     0274  3403               	retlw	3
  1101     0275  346E               	retlw	110
  1102     0276  3403               	retlw	3
  1103     0277  3472               	retlw	114
  1104     0278  3403               	retlw	3
  1105     0279  3476               	retlw	118
  1106     027A  3403               	retlw	3
  1107     027B  347A               	retlw	122
  1108     027C  3403               	retlw	3
  1109     027D  347F               	retlw	127
  1110     027E  3403               	retlw	3
  1111     027F  3483               	retlw	131
  1112     0280  3403               	retlw	3
  1113     0281  3487               	retlw	135
  1114     0282  3403               	retlw	3
  1115     0283  348B               	retlw	139
  1116     0284  3403               	retlw	3
  1117     0285  348F               	retlw	143
  1118     0286  3403               	retlw	3
  1119     0287  3493               	retlw	147
  1120     0288  3403               	retlw	3
  1121     0289  3497               	retlw	151
  1122     028A  3403               	retlw	3
  1123     028B  349A               	retlw	154
  1124     028C  3403               	retlw	3
  1125     028D  349E               	retlw	158
  1126     028E  3403               	retlw	3
  1127     028F  34A2               	retlw	162
  1128     0290  3403               	retlw	3
  1129     0291  34A5               	retlw	165
  1130     0292  3403               	retlw	3
  1131     0293  34A9               	retlw	169
  1132     0294  3403               	retlw	3
  1133     0295  34AC               	retlw	172
  1134     0296  3403               	retlw	3
  1135     0297  34B0               	retlw	176
  1136     0298  3403               	retlw	3
  1137     0299  34B3               	retlw	179
  1138     029A  3403               	retlw	3
  1139     029B  34B6               	retlw	182
  1140     029C  3403               	retlw	3
  1141     029D  34B9               	retlw	185
  1142     029E  3403               	retlw	3
  1143     029F  34BD               	retlw	189
  1144     02A0  3403               	retlw	3
  1145     02A1  34C0               	retlw	192
  1146     02A2  3403               	retlw	3
  1147     02A3  34C3               	retlw	195
  1148     02A4  3403               	retlw	3
  1149     02A5  34C6               	retlw	198
  1150     02A6  3403               	retlw	3
  1151     02A7  34C8               	retlw	200
  1152     02A8  3403               	retlw	3
  1153     02A9  34CB               	retlw	203
  1154     02AA  3403               	retlw	3
  1155     02AB  34CE               	retlw	206
  1156     02AC  3403               	retlw	3
  1157     02AD  34D1               	retlw	209
  1158     02AE  3403               	retlw	3
  1159     02AF  34D3               	retlw	211
  1160     02B0  3403               	retlw	3
  1161     02B1  34D6               	retlw	214
  1162     02B2  3403               	retlw	3
  1163     02B3  34D8               	retlw	216
  1164     02B4  3403               	retlw	3
  1165     02B5  34DA               	retlw	218
  1166     02B6  3403               	retlw	3
  1167     02B7  34DD               	retlw	221
  1168     02B8  3403               	retlw	3
  1169     02B9  34DF               	retlw	223
  1170     02BA  3403               	retlw	3
  1171     02BB  34E1               	retlw	225
  1172     02BC  3403               	retlw	3
  1173     02BD  34E3               	retlw	227
  1174     02BE  3403               	retlw	3
  1175     02BF  34E5               	retlw	229
  1176     02C0  3403               	retlw	3
  1177     02C1  34E7               	retlw	231
  1178     02C2  3403               	retlw	3
  1179     02C3  34E9               	retlw	233
  1180     02C4  3403               	retlw	3
  1181     02C5  34EB               	retlw	235
  1182     02C6  3403               	retlw	3
  1183     02C7  34EC               	retlw	236
  1184     02C8  3403               	retlw	3
  1185     02C9  34EE               	retlw	238
  1186     02CA  3403               	retlw	3
  1187     02CB  34F0               	retlw	240
  1188     02CC  3403               	retlw	3
  1189     02CD  34F1               	retlw	241
  1190     02CE  3403               	retlw	3
  1191     02CF  34F3               	retlw	243
  1192     02D0  3403               	retlw	3
  1193     02D1  34F4               	retlw	244
  1194     02D2  3403               	retlw	3
  1195     02D3  34F5               	retlw	245
  1196     02D4  3403               	retlw	3
  1197     02D5  34F6               	retlw	246
  1198     02D6  3403               	retlw	3
  1199     02D7  34F7               	retlw	247
  1200     02D8  3403               	retlw	3
  1201     02D9  34F9               	retlw	249
  1202     02DA  3403               	retlw	3
  1203     02DB  34F9               	retlw	249
  1204     02DC  3403               	retlw	3
  1205     02DD  34FA               	retlw	250
  1206     02DE  3403               	retlw	3
  1207     02DF  34FB               	retlw	251
  1208     02E0  3403               	retlw	3
  1209     02E1  34FC               	retlw	252
  1210     02E2  3403               	retlw	3
  1211     02E3  34FD               	retlw	253
  1212     02E4  3403               	retlw	3
  1213     02E5  34FD               	retlw	253
  1214     02E6  3403               	retlw	3
  1215     02E7  34FE               	retlw	254
  1216     02E8  3403               	retlw	3
  1217     02E9  34FE               	retlw	254
  1218     02EA  3403               	retlw	3
  1219     02EB  34FE               	retlw	254
  1220     02EC  3403               	retlw	3
  1221     02ED  34FF               	retlw	255
  1222     02EE  3403               	retlw	3
  1223     02EF  34FF               	retlw	255
  1224     02F0  3403               	retlw	3
  1225     02F1  34FF               	retlw	255
  1226     02F2  3403               	retlw	3
  1227     02F3  34FF               	retlw	255
  1228     02F4  3403               	retlw	3
  1229     02F5                     __end_of_sine_table_one_quadrant:
  1230                           
  1231                           	psect	stringtext3
  1232     06B7                     __pstringtext3:
  1233     06B7                     _prescaler_bits:
  1234     06B7  3407               	retlw	7
  1235     06B8  3406               	retlw	6
  1236     06B9  3405               	retlw	5
  1237     06BA  3404               	retlw	4
  1238     06BB  3403               	retlw	3
  1239     06BC  3402               	retlw	2
  1240     06BD  3401               	retlw	1
  1241     06BE  3400               	retlw	0
  1242     06BF                     __end_of_prescaler_bits:
  1243                           
  1244                           	psect	stringtext4
  1245     06E3                     __pstringtext4:
  1246     06E3                     _NO:
  1247     06E3  3400               	retlw	0
  1248     06E4                     __end_of_NO:
  1249                           
  1250                           	psect	stringtext5
  1251     06E4                     __pstringtext5:
  1252     06E4                     _YES:
  1253     06E4  3401               	retlw	1
  1254     06E5                     __end_of_YES:
  1255                           
  1256                           	psect	stringtext6
  1257     06E5                     __pstringtext6:
  1258     06E5                     _DONT_CARE:
  1259     06E5  3404               	retlw	4
  1260     06E6                     __end_of_DONT_CARE:
  1261                           
  1262                           	psect	stringtext7
  1263     06E6                     __pstringtext7:
  1264     06E6                     _DIVIDE_BY_FOUR:
  1265     06E6  3403               	retlw	3
  1266     06E7                     __end_of_DIVIDE_BY_FOUR:
  1267                           
  1268                           	psect	stringtext8
  1269     06E7                     __pstringtext8:
  1270     06E7                     _MULTIPLY_BY_TWO:
  1271     06E7  3402               	retlw	2
  1272     06E8                     __end_of_MULTIPLY_BY_TWO:
  1273                           
  1274                           	psect	stringtext9
  1275     06E8                     __pstringtext9:
  1276     06E8                     _DIVIDE_BY_TWO:
  1277     06E8  3401               	retlw	1
  1278     06E9                     __end_of_DIVIDE_BY_TWO:
  1279                           
  1280                           	psect	stringtext10
  1281     06E9                     __pstringtext10:
  1282     06E9                     _DO_NOTHING:
  1283     06E9  3400               	retlw	0
  1284     06EA                     __end_of_DO_NOTHING:
  1285                           
  1286                           	psect	stringtext11
  1287     06EA                     __pstringtext11:
  1288     06EA                     _NEGATIVE:
  1289     06EA  3400               	retlw	0
  1290     06EB                     __end_of_NEGATIVE:
  1291                           
  1292                           	psect	stringtext12
  1293     06EB                     __pstringtext12:
  1294     06EB                     _POSITIVE:
  1295     06EB  3401               	retlw	1
  1296     06EC                     __end_of_POSITIVE:
  1297                           
  1298                           	psect	stringtext13
  1299     06EC                     __pstringtext13:
  1300     06EC                     _symmetry_adc_config_value:
  1301     06EC  3407               	retlw	7
  1302     06ED                     __end_of_symmetry_adc_config_value:
  1303                           
  1304                           	psect	stringtext14
  1305     06ED                     __pstringtext14:
  1306     06ED                     _depth_adc_config_value:
  1307     06ED  3406               	retlw	6
  1308     06EE                     __end_of_depth_adc_config_value:
  1309                           
  1310                           	psect	stringtext15
  1311     06EE                     __pstringtext15:
  1312     06EE                     _speed_adc_config_value:
  1313     06EE  3405               	retlw	5
  1314     06EF                     __end_of_speed_adc_config_value:
  1315                           
  1316                           	psect	stringtext16
  1317     06EF                     __pstringtext16:
  1318     06EF                     _waveshape_adc_config_value:
  1319     06EF  3404               	retlw	4
  1320     06F0                     __end_of_waveshape_adc_config_value:
  1321     001C                     _T2CON	set	28
  1322     001B                     _PR2	set	27
  1323     0015                     _TMR0	set	21
  1324     00E2                     _TMR2ON	set	226
  1325     005D                     _TMR0IE	set	93
  1326     0089                     _TMR2IF	set	137
  1327     005F                     _GIE	set	95
  1328     005A                     _TMR0IF	set	90
  1329     0095                     _OPTION_REG	set	149
  1330     009B                     _ADRESL	set	155
  1331     009C                     _ADRESH	set	156
  1332     009D                     _ADCON0	set	157
  1333     009E                     _ADCON1	set	158
  1334     008E                     _TRISC	set	142
  1335     0098                     _OSCTUNE	set	152
  1336     0099                     _OSCCON	set	153
  1337     0462                     _TRISA2	set	1122
  1338     04E9                     _GO_nDONE	set	1257
  1339     04E8                     _ADON	set	1256
  1340     088F                     _C1ON	set	2191
  1341     08D7                     _SRLEN	set	2263
  1342     018E                     _ANSELC	set	398
  1343     020E                     _WPUC	set	526
  1344     029E                     _CCPTMRS0	set	670
  1345     0311                     _CCPR3L	set	785
  1346     0313                     _CCP3CON	set	787
  1347                           
  1348                           	psect	cinit
  1349     00D9                     start_initialization:	
  1350                           ; #config settings
  1351                           
  1352     00D9                     __initialization:
  1353                           
  1354                           ; Initialize objects allocated to BANK0
  1355     00D9  3186  26DF  3180   	fcall	__pidataBANK0	;fetch initializer
  1356     00DC  00E4               	movwf	__pdataBANK0& (0+127)
  1357     00DD  3186  26E0  3180   	fcall	__pidataBANK0+1	;fetch initializer
  1358     00E0  00E5               	movwf	(__pdataBANK0+1)& (0+127)
  1359                           
  1360                           ; Clear objects allocated to COMMON
  1361     00E1  01F6               	clrf	__pbssCOMMON& (0+127)
  1362     00E2  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
  1363     00E3  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
  1364     00E4  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
  1365     00E5  01FA               	clrf	(__pbssCOMMON+4)& (0+127)
  1366                           
  1367                           ; Clear objects allocated to BANK0
  1368     00E6  3020               	movlw	low __pbssBANK0
  1369     00E7  0084               	movwf	4
  1370     00E8  3000               	movlw	high __pbssBANK0
  1371     00E9  0085               	movwf	5
  1372     00EA  3023               	movlw	35
  1373     00EB  3186  26C7         	fcall	clear_ram0
  1374     00ED                     end_of_initialization:	
  1375                           ;End of C runtime variable initialization code
  1376                           
  1377     00ED                     __end_of__initialization:
  1378     00ED  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1379     00EE  0020               	movlb	0
  1380     00EF  3186  2E5B         	ljmp	_main	;jump to C main() function
  1381                           
  1382                           	psect	bssCOMMON
  1383     0076                     __pbssCOMMON:
  1384     0076                     _current_halfcycle:
  1385     0076                     	ds	1
  1386     0077                     _current_one_quadrant_index:
  1387     0077                     	ds	1
  1388     0078                     _current_waveshape:
  1389     0078                     	ds	1
  1390     0079                     _duty:
  1391     0079                     	ds	2
  1392                           
  1393                           	psect	bssBANK0
  1394     0020                     __pbssBANK0:
  1395     0020                     _speed_control_32:
  1396     0020                     	ds	4
  1397     0024                     _raw_TMR0:
  1398     0024                     	ds	4
  1399     0028                     _current_symmetry:
  1400     0028                     	ds	4
  1401     002C                     _current_speed_linear_32:
  1402     002C                     	ds	4
  1403     0030                     _final_TMR0:
  1404     0030                     	ds	4
  1405     0034                     _speed_control:
  1406     0034                     	ds	2
  1407     0036                     _current_speed_linear:
  1408     0036                     	ds	2
  1409     0038                     _current_depth:
  1410     0038                     	ds	2
  1411     003A                     _prescaler_final_index:
  1412     003A                     	ds	1
  1413     003B                     _prescaler_overflow_flag:
  1414     003B                     	ds	1
  1415     003C                     _symmetry_status:
  1416     003C                     	ds	1
  1417     003D                     _base_prescaler_bits_index:
  1418     003D                     	ds	1
  1419     003E                     _prescaler_adjust:
  1420     003E                     	ds	1
  1421     003F                     _how_many_128:
  1422     003F                     	ds	1
  1423     0040                     _duty_high_byte:
  1424     0040                     	ds	1
  1425     0041                     _duty_low_byte:
  1426     0041                     	ds	1
  1427     0042                     _current_quadrant:
  1428     0042                     	ds	1
  1429                           
  1430                           	psect	dataBANK0
  1431     0064                     __pdataBANK0:
  1432     0064                     _top_two_bytes_ptr:
  1433     0064                     	ds	2
  1434                           
  1435                           	psect	clrtext
  1436     06C7                     clear_ram0:	
  1437                           ;	Called with FSR0 containing the base address, and
  1438                           ;	WREG with the size to clear
  1439                           
  1440     06C7  0064               	clrwdt	;clear the watchdog before getting into this loop
  1441     06C8                     clrloop0:
  1442     06C8  0180               	clrf	0	;clear RAM location pointed to by FSR
  1443     06C9  3101               	addfsr 0,1
  1444     06CA  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1445     06CB  2EC8               	goto	clrloop0	;have we reached the end yet?
  1446     06CC  3400               	retlw	0	;all done for this memory range, return
  1447                           
  1448                           	psect	cstackCOMMON
  1449     0070                     __pcstackCOMMON:
  1450     0070                     ?_SET_DUTY_CCP3:
  1451     0070                     ??_SET_DUTY_CCP3:	
  1452                           ; 1 bytes @ 0x0
  1453                           
  1454     0070                     ?_CONFIG_SYSTEM:	
  1455                           ; 1 bytes @ 0x0
  1456                           
  1457     0070                     ?_TURN_ON_CCP3_PWM:	
  1458                           ; 1 bytes @ 0x0
  1459                           
  1460     0070                     ?_CONFIG_TMR0_INTERRUPT:	
  1461                           ; 1 bytes @ 0x0
  1462                           
  1463     0070                     ?_GET_CURRENT_POT_VALUES:	
  1464                           ; 1 bytes @ 0x0
  1465                           
  1466     0070                     ?_PROCESS_RAW_SPEED_AND_PRESCALER:	
  1467                           ; 1 bytes @ 0x0
  1468                           
  1469     0070                     ?_PROCESS_TMR0_AND_PRESCALER_ADJUST:	
  1470                           ; 1 bytes @ 0x0
  1471                           
  1472     0070                     ?_INTERRUPT_InterruptManager:	
  1473                           ; 1 bytes @ 0x0
  1474                           
  1475     0070                     ?_main:	
  1476                           ; 1 bytes @ 0x0
  1477                           
  1478     0070                     ?_CONFIG_INT_OSC:	
  1479                           ; 1 bytes @ 0x0
  1480                           
  1481     0070                     ?_CONFIG_PORTS:	
  1482                           ; 1 bytes @ 0x0
  1483                           
  1484     0070                     ?_CONFIG_ADC_PINS:	
  1485                           ; 1 bytes @ 0x0
  1486                           
  1487     0070                     ?_CONFIG_PWM_CCP3:	
  1488                           ; 1 bytes @ 0x0
  1489                           
  1490     0070                     ?_DETERMINE_WAVESHAPE:	
  1491                           ; 1 bytes @ 0x0
  1492                           
  1493     0070                     ?_CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1:	
  1494                           ; 1 bytes @ 0x0
  1495                           
  1496     0070                     ?_TURN_PRESCALER_OFF:	
  1497                           ; 1 bytes @ 0x0
  1498                           
  1499     0070                     ?_TURN_PRESCALER_ON:	
  1500                           ; 1 bytes @ 0x0
  1501                           
  1502     0070                     ?_ADJUST_AND_SET_PRESCALER:	
  1503                           ; 1 bytes @ 0x0
  1504                           
  1505     0070                     ?_SHORTEN_PERIOD:	
  1506                           ; 1 bytes @ 0x0
  1507                           
  1508     0070                     ?_LENGTHEN_PERIOD:	
  1509                           ; 1 bytes @ 0x0
  1510                           
  1511                           
  1512                           ; 1 bytes @ 0x0
  1513     0070                     	ds	2
  1514     0072                     SET_DUTY_CCP3@temp:
  1515                           
  1516                           ; 1 bytes @ 0x2
  1517     0072                     	ds	1
  1518     0073                     SET_DUTY_CCP3@duty_ptr:
  1519                           
  1520                           ; 1 bytes @ 0x3
  1521     0073                     	ds	1
  1522     0074                     ??_INTERRUPT_InterruptManager:
  1523                           
  1524                           ; 1 bytes @ 0x4
  1525     0074                     	ds	2
  1526                           
  1527                           	psect	cstackBANK0
  1528     0043                     __pcstackBANK0:
  1529     0043                     ??_CONFIG_SYSTEM:
  1530     0043                     ??_TURN_ON_CCP3_PWM:	
  1531                           ; 1 bytes @ 0x0
  1532                           
  1533     0043                     ??_CONFIG_TMR0_INTERRUPT:	
  1534                           ; 1 bytes @ 0x0
  1535                           
  1536     0043                     ??_CONFIG_INT_OSC:	
  1537                           ; 1 bytes @ 0x0
  1538                           
  1539     0043                     ??_CONFIG_PORTS:	
  1540                           ; 1 bytes @ 0x0
  1541                           
  1542     0043                     ??_CONFIG_ADC_PINS:	
  1543                           ; 1 bytes @ 0x0
  1544                           
  1545     0043                     ??_CONFIG_PWM_CCP3:	
  1546                           ; 1 bytes @ 0x0
  1547                           
  1548     0043                     ??_CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1:	
  1549                           ; 1 bytes @ 0x0
  1550                           
  1551     0043                     ??_TURN_PRESCALER_OFF:	
  1552                           ; 1 bytes @ 0x0
  1553                           
  1554     0043                     ??_TURN_PRESCALER_ON:	
  1555                           ; 1 bytes @ 0x0
  1556                           
  1557     0043                     ?_DO_ADC:	
  1558                           ; 1 bytes @ 0x0
  1559                           
  1560     0043                     ?___lmul:	
  1561                           ; 2 bytes @ 0x0
  1562                           
  1563     0043                     DO_ADC@modifier:	
  1564                           ; 4 bytes @ 0x0
  1565                           
  1566     0043                     ___lmul@multiplier:	
  1567                           ; 2 bytes @ 0x0
  1568                           
  1569                           
  1570                           ; 4 bytes @ 0x0
  1571     0043                     	ds	2
  1572     0045                     ??_DO_ADC:
  1573                           
  1574                           ; 1 bytes @ 0x2
  1575     0045                     	ds	1
  1576     0046                     ??_ADJUST_AND_SET_PRESCALER:
  1577     0046                     DO_ADC@adc_result:	
  1578                           ; 1 bytes @ 0x3
  1579                           
  1580                           
  1581                           ; 2 bytes @ 0x3
  1582     0046                     	ds	1
  1583     0047                     ___lmul@multiplicand:
  1584                           
  1585                           ; 4 bytes @ 0x4
  1586     0047                     	ds	1
  1587     0048                     DO_ADC@temp:
  1588                           
  1589                           ; 1 bytes @ 0x5
  1590     0048                     	ds	1
  1591     0049                     ??_DETERMINE_WAVESHAPE:
  1592     0049                     DETERMINE_WAVESHAPE@ADC:	
  1593                           ; 1 bytes @ 0x6
  1594                           
  1595                           
  1596                           ; 2 bytes @ 0x6
  1597     0049                     	ds	2
  1598     004B                     ??_GET_CURRENT_POT_VALUES:
  1599     004B                     ??___lmul:	
  1600                           ; 1 bytes @ 0x8
  1601                           
  1602     004B                     ___lmul@product:	
  1603                           ; 1 bytes @ 0x8
  1604                           
  1605                           
  1606                           ; 4 bytes @ 0x8
  1607     004B                     	ds	4
  1608     004F                     ??_PROCESS_RAW_SPEED_AND_PRESCALER:
  1609     004F                     ??_SHORTEN_PERIOD:	
  1610                           ; 1 bytes @ 0xC
  1611                           
  1612     004F                     ??_LENGTHEN_PERIOD:	
  1613                           ; 1 bytes @ 0xC
  1614                           
  1615                           
  1616                           ; 1 bytes @ 0xC
  1617     004F                     	ds	5
  1618     0054                     PROCESS_RAW_SPEED_AND_PRESCALER@speed_control_subtracted:
  1619                           
  1620                           ; 2 bytes @ 0x11
  1621     0054                     	ds	3
  1622     0057                     SHORTEN_PERIOD@twofiftysix_minus_TMR0_final:
  1623     0057                     _LENGTHEN_PERIOD$851:	
  1624                           ; 4 bytes @ 0x14
  1625                           
  1626                           
  1627                           ; 4 bytes @ 0x14
  1628     0057                     	ds	4
  1629     005B                     LENGTHEN_PERIOD@twofiftysix_minus_TMR0_final:
  1630     005B                     _SHORTEN_PERIOD$850:	
  1631                           ; 4 bytes @ 0x18
  1632                           
  1633                           
  1634                           ; 4 bytes @ 0x18
  1635     005B                     	ds	4
  1636     005F                     ??_PROCESS_TMR0_AND_PRESCALER_ADJUST:
  1637                           
  1638                           ; 1 bytes @ 0x1C
  1639     005F                     	ds	4
  1640     0063                     PROCESS_TMR0_AND_PRESCALER_ADJUST@symmetry_status:
  1641                           
  1642                           ; 1 bytes @ 0x20
  1643     0063                     	ds	1
  1644     0064                     ??_main:
  1645                           
  1646                           	psect	maintext
  1647     065B                     __pmaintext:	
  1648                           ; 1 bytes @ 0x21
  1649 ;;
  1650 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1651 ;;
  1652 ;; *************** function _main *****************
  1653 ;; Defined at:
  1654 ;;		line 127 in file "main.c"
  1655 ;; Parameters:    Size  Location     Type
  1656 ;;		None
  1657 ;; Auto vars:     Size  Location     Type
  1658 ;;		None
  1659 ;; Return value:  Size  Location     Type
  1660 ;;                  1    wreg      void 
  1661 ;; Registers used:
  1662 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1663 ;; Tracked objects:
  1664 ;;		On entry : B1F/0
  1665 ;;		On exit  : 1F/0
  1666 ;;		Unchanged: 0/0
  1667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1668 ;;      Params:         0       0       0       0
  1669 ;;      Locals:         0       0       0       0
  1670 ;;      Temps:          0       0       0       0
  1671 ;;      Totals:         0       0       0       0
  1672 ;;Total ram usage:        0 bytes
  1673 ;; Hardware stack levels required when called: 5
  1674 ;; This function calls:
  1675 ;;		_CONFIG_SYSTEM
  1676 ;;		_CONFIG_TMR0_INTERRUPT
  1677 ;;		_GET_CURRENT_POT_VALUES
  1678 ;;		_PROCESS_RAW_SPEED_AND_PRESCALER
  1679 ;;		_PROCESS_TMR0_AND_PRESCALER_ADJUST
  1680 ;;		_TURN_ON_CCP3_PWM
  1681 ;; This function is called by:
  1682 ;;		Startup code after reset
  1683 ;; This function uses a non-reentrant model
  1684 ;;
  1685                           
  1686     065B                     _main:	
  1687                           ;psect for function _main
  1688                           
  1689                           
  1690                           ;main.c: 128:     CONFIG_SYSTEM();
  1691                           
  1692                           ;incstack = 0
  1693                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1694     065B  3186  26A2  3186   	fcall	_CONFIG_SYSTEM
  1695                           
  1696                           ;main.c: 129:     TURN_ON_CCP3_PWM();
  1697     065E  3186  26BF  3186   	fcall	_TURN_ON_CCP3_PWM
  1698                           
  1699                           ;main.c: 130:     CONFIG_TMR0_INTERRUPT();
  1700     0661  3186  26E1  3186   	fcall	_CONFIG_TMR0_INTERRUPT
  1701                           
  1702                           ;main.c: 131:     GET_CURRENT_POT_VALUES();
  1703     0664  3185  2586  3186   	fcall	_GET_CURRENT_POT_VALUES
  1704                           
  1705                           ;main.c: 132:     PROCESS_RAW_SPEED_AND_PRESCALER();
  1706     0667  3184  2434  3186   	fcall	_PROCESS_RAW_SPEED_AND_PRESCALER
  1707                           
  1708                           ;main.c: 133:     PROCESS_TMR0_AND_PRESCALER_ADJUST();
  1709     066A  3183  23A8  3186   	fcall	_PROCESS_TMR0_AND_PRESCALER_ADJUST
  1710                           
  1711                           ;main.c: 134:     TMR0 = (uint8_t)final_TMR0;
  1712     066D  0830               	movf	_final_TMR0,w	;volatile
  1713     066E  0095               	movwf	21	;volatile
  1714                           
  1715                           ;main.c: 135:     GIE = 1;
  1716     066F  178B               	bsf	11,7	;volatile
  1717     0670                     l1564:
  1718                           
  1719                           ;main.c: 138:         GET_CURRENT_POT_VALUES();
  1720     0670  3185  2586  3186   	fcall	_GET_CURRENT_POT_VALUES
  1721                           
  1722                           ;main.c: 139:         PROCESS_RAW_SPEED_AND_PRESCALER();
  1723     0673  3184  2434  3186   	fcall	_PROCESS_RAW_SPEED_AND_PRESCALER
  1724                           
  1725                           ;main.c: 140:         PROCESS_TMR0_AND_PRESCALER_ADJUST();
  1726     0676  3183  23A8  3186   	fcall	_PROCESS_TMR0_AND_PRESCALER_ADJUST
  1727     0679  2E70               	goto	l1564
  1728     067A                     __end_of_main:
  1729                           
  1730                           	psect	text1
  1731     06BF                     __ptext1:	
  1732 ;; *************** function _TURN_ON_CCP3_PWM *****************
  1733 ;; Defined at:
  1734 ;;		line 73 in file "config.c"
  1735 ;; Parameters:    Size  Location     Type
  1736 ;;		None
  1737 ;; Auto vars:     Size  Location     Type
  1738 ;;		None
  1739 ;; Return value:  Size  Location     Type
  1740 ;;                  1    wreg      unsigned char 
  1741 ;; Registers used:
  1742 ;;		None
  1743 ;; Tracked objects:
  1744 ;;		On entry : B1F/0
  1745 ;;		On exit  : B1F/1
  1746 ;;		Unchanged: B00/0
  1747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1748 ;;      Params:         0       0       0       0
  1749 ;;      Locals:         0       0       0       0
  1750 ;;      Temps:          0       0       0       0
  1751 ;;      Totals:         0       0       0       0
  1752 ;;Total ram usage:        0 bytes
  1753 ;; Hardware stack levels used: 1
  1754 ;; Hardware stack levels required when called: 2
  1755 ;; This function calls:
  1756 ;;		Nothing
  1757 ;; This function is called by:
  1758 ;;		_main
  1759 ;; This function uses a non-reentrant model
  1760 ;;
  1761                           
  1762     06BF                     _TURN_ON_CCP3_PWM:	
  1763                           ;psect for function _TURN_ON_CCP3_PWM
  1764                           
  1765                           
  1766                           ;config.c: 75:     TMR2IF = 0;
  1767                           
  1768                           ;incstack = 0
  1769                           ; Regs used in _TURN_ON_CCP3_PWM: []
  1770     06BF  1091               	bcf	17,1	;volatile
  1771                           
  1772                           ;config.c: 76:     TMR2ON = 1;
  1773     06C0  151C               	bsf	28,2	;volatile
  1774     06C1                     l174:	
  1775                           ;config.c: 77:     while(TMR2IF == 0){}
  1776                           
  1777     06C1  1C91               	btfss	17,1	;volatile
  1778     06C2  2EC1               	goto	l174
  1779                           
  1780                           ;config.c: 78:     TMR2IF = 0;
  1781     06C3  1091               	bcf	17,1	;volatile
  1782                           
  1783                           ;config.c: 79:     TRISA2 = 0;
  1784     06C4  0021               	movlb	1	; select bank1
  1785     06C5  110C               	bcf	12,2	;volatile
  1786                           
  1787                           ;config.c: 80:     return 1;;	Return value of _TURN_ON_CCP3_PWM is never used
  1788     06C6  0008               	return
  1789     06C7                     __end_of_TURN_ON_CCP3_PWM:
  1790                           
  1791                           	psect	text2
  1792     03A8                     __ptext2:	
  1793 ;; *************** function _PROCESS_TMR0_AND_PRESCALER_ADJUST *****************
  1794 ;; Defined at:
  1795 ;;		line 193 in file "system.c"
  1796 ;; Parameters:    Size  Location     Type
  1797 ;;		None
  1798 ;; Auto vars:     Size  Location     Type
  1799 ;;  symmetry_sta    1   32[BANK0 ] unsigned char 
  1800 ;; Return value:  Size  Location     Type
  1801 ;;                  1    wreg      unsigned char 
  1802 ;; Registers used:
  1803 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1804 ;; Tracked objects:
  1805 ;;		On entry : 1F/0
  1806 ;;		On exit  : 1F/0
  1807 ;;		Unchanged: 0/0
  1808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1809 ;;      Params:         0       0       0       0
  1810 ;;      Locals:         0       1       0       0
  1811 ;;      Temps:          0       4       0       0
  1812 ;;      Totals:         0       5       0       0
  1813 ;;Total ram usage:        5 bytes
  1814 ;; Hardware stack levels used: 1
  1815 ;; Hardware stack levels required when called: 4
  1816 ;; This function calls:
  1817 ;;		_ADJUST_AND_SET_PRESCALER
  1818 ;;		_LENGTHEN_PERIOD
  1819 ;;		_SHORTEN_PERIOD
  1820 ;; This function is called by:
  1821 ;;		_main
  1822 ;; This function uses a non-reentrant model
  1823 ;;
  1824                           
  1825     03A8                     _PROCESS_TMR0_AND_PRESCALER_ADJUST:	
  1826                           ;psect for function _PROCESS_TMR0_AND_PRESCALER_ADJUST
  1827                           
  1828                           
  1829                           ;system.c: 195:         if(current_symmetry == 512){
  1830                           
  1831                           ;incstack = 0
  1832                           ; Regs used in _PROCESS_TMR0_AND_PRESCALER_ADJUST: [wreg-fsr0h+status,2+status,0+pclath+
      +                          cstack]
  1833     03A8  3002               	movlw	2
  1834     03A9  0629               	xorwf	_current_symmetry+1,w	;volatile
  1835     03AA  0428               	iorwf	_current_symmetry,w	;volatile
  1836     03AB  042A               	iorwf	_current_symmetry+2,w	;volatile
  1837     03AC  042B               	iorwf	_current_symmetry+3,w	;volatile
  1838     03AD  1D03               	btfss	3,2
  1839     03AE  2BBA               	goto	l1460
  1840                           
  1841                           ;system.c: 196:             final_TMR0 = raw_TMR0;
  1842     03AF  0020               	movlb	0	; select bank0
  1843     03B0  0827               	movf	_raw_TMR0+3,w	;volatile
  1844     03B1  00B3               	movwf	_final_TMR0+3	;volatile
  1845     03B2  0826               	movf	_raw_TMR0+2,w	;volatile
  1846     03B3  00B2               	movwf	_final_TMR0+2	;volatile
  1847     03B4  0825               	movf	_raw_TMR0+1,w	;volatile
  1848     03B5  00B1               	movwf	_final_TMR0+1	;volatile
  1849     03B6  0824               	movf	_raw_TMR0,w	;volatile
  1850     03B7  00B0               	movwf	_final_TMR0	;volatile
  1851     03B8  01BE               	clrf	_prescaler_adjust	;volatile
  1852                           
  1853                           ;system.c: 198:         }
  1854     03B9  2BF7               	goto	l1484
  1855     03BA                     l1460:
  1856                           
  1857                           ;system.c: 200:             uint8_t symmetry_status = 0;
  1858     03BA  0020               	movlb	0	; select bank0
  1859     03BB  01E3               	clrf	PROCESS_TMR0_AND_PRESCALER_ADJUST@symmetry_status
  1860                           
  1861                           ;system.c: 201:             if(current_symmetry > 512){
  1862     03BC  082B               	movf	_current_symmetry+3,w	;volatile
  1863     03BD  1D03               	btfss	3,2
  1864     03BE  2BC8               	goto	l1464
  1865     03BF  082A               	movf	_current_symmetry+2,w	;volatile
  1866     03C0  1D03               	btfss	3,2
  1867     03C1  2BC8               	goto	l1464
  1868     03C2  3001               	movlw	1
  1869     03C3  0228               	subwf	_current_symmetry,w	;volatile
  1870     03C4  3002               	movlw	2
  1871     03C5  3B29               	subwfb	_current_symmetry+1,w	;volatile
  1872     03C6  1C03               	btfss	3,0
  1873     03C7  2BE3               	goto	l1468
  1874     03C8                     l1464:
  1875                           
  1876                           ;system.c: 202:                 current_symmetry = 1023 -current_symmetry;
  1877     03C8  30FF               	movlw	255
  1878     03C9  0020               	movlb	0	; select bank0
  1879     03CA  00DF               	movwf	??_PROCESS_TMR0_AND_PRESCALER_ADJUST
  1880     03CB  3003               	movlw	3
  1881     03CC  00E0               	movwf	??_PROCESS_TMR0_AND_PRESCALER_ADJUST+1
  1882     03CD  3000               	movlw	0
  1883     03CE  00E1               	movwf	??_PROCESS_TMR0_AND_PRESCALER_ADJUST+2
  1884     03CF  3000               	movlw	0
  1885     03D0  00E2               	movwf	??_PROCESS_TMR0_AND_PRESCALER_ADJUST+3
  1886     03D1  0828               	movf	_current_symmetry,w	;volatile
  1887     03D2  02DF               	subwf	??_PROCESS_TMR0_AND_PRESCALER_ADJUST,f
  1888     03D3  0829               	movf	_current_symmetry+1,w	;volatile
  1889     03D4  3BE0               	subwfb	??_PROCESS_TMR0_AND_PRESCALER_ADJUST+1,f
  1890     03D5  082A               	movf	_current_symmetry+2,w	;volatile
  1891     03D6  3BE1               	subwfb	??_PROCESS_TMR0_AND_PRESCALER_ADJUST+2,f
  1892     03D7  082B               	movf	_current_symmetry+3,w	;volatile
  1893     03D8  3BE2               	subwfb	??_PROCESS_TMR0_AND_PRESCALER_ADJUST+3,f
  1894     03D9  0862               	movf	??_PROCESS_TMR0_AND_PRESCALER_ADJUST+3,w
  1895     03DA  00AB               	movwf	_current_symmetry+3	;volatile
  1896     03DB  0861               	movf	??_PROCESS_TMR0_AND_PRESCALER_ADJUST+2,w
  1897     03DC  00AA               	movwf	_current_symmetry+2	;volatile
  1898     03DD  0860               	movf	??_PROCESS_TMR0_AND_PRESCALER_ADJUST+1,w
  1899     03DE  00A9               	movwf	_current_symmetry+1	;volatile
  1900     03DF  085F               	movf	??_PROCESS_TMR0_AND_PRESCALER_ADJUST,w
  1901     03E0  00A8               	movwf	_current_symmetry	;volatile
  1902                           
  1903                           ;system.c: 203:                 symmetry_status = 1;
  1904     03E1  01E3               	clrf	PROCESS_TMR0_AND_PRESCALER_ADJUST@symmetry_status
  1905     03E2  0AE3               	incf	PROCESS_TMR0_AND_PRESCALER_ADJUST@symmetry_status,f
  1906     03E3                     l1468:
  1907                           
  1908                           ;system.c: 205:             if(current_halfcycle == 0){
  1909     03E3  0876               	movf	_current_halfcycle,w	;volatile
  1910     03E4  1D03               	btfss	3,2
  1911     03E5  2BEE               	goto	l1476
  1912                           
  1913                           ;system.c: 206:                 if(symmetry_status == 0){
  1914     03E6  0020               	movlb	0	; select bank0
  1915     03E7  0863               	movf	PROCESS_TMR0_AND_PRESCALER_ADJUST@symmetry_status,w
  1916     03E8                     L1:
  1917     03E8  1903               	btfsc	3,2
  1918     03E9  2BF4               	goto	l1472
  1919                           
  1920                           ;system.c: 210:                     LENGTHEN_PERIOD();
  1921                           
  1922                           ;system.c: 208:                 }
  1923     03EA  3182  22F5  3183   	fcall	_LENGTHEN_PERIOD
  1924     03ED  2BF7               	goto	l1484
  1925     03EE                     l1476:
  1926     03EE  0376               	decf	_current_halfcycle,w	;volatile
  1927     03EF  1D03               	btfss	3,2
  1928     03F0  2BF7               	goto	l1484
  1929                           
  1930                           ;system.c: 214:                 if(symmetry_status == 1){
  1931     03F1  0020               	movlb	0	; select bank0
  1932     03F2  0363               	decf	PROCESS_TMR0_AND_PRESCALER_ADJUST@symmetry_status,w
  1933     03F3  2BE8               	goto	L1
  1934     03F4                     l1472:
  1935                           
  1936                           ;system.c: 207:                     SHORTEN_PERIOD();
  1937     03F4  3184  24B0  3183   	fcall	_SHORTEN_PERIOD
  1938     03F7                     l1484:
  1939                           
  1940                           ;system.c: 223:         ADJUST_AND_SET_PRESCALER();
  1941     03F7  3185  2523  3183   	fcall	_ADJUST_AND_SET_PRESCALER
  1942                           
  1943                           ;system.c: 226:         if(prescaler_overflow_flag == 1){
  1944     03FA  0020               	movlb	0	; select bank0
  1945     03FB  033B               	decf	_prescaler_overflow_flag,w	;volatile
  1946     03FC  1D03               	btfss	3,2
  1947     03FD  2C17               	goto	l1490
  1948                           
  1949                           ;system.c: 227:             final_TMR0 = final_TMR0 + 2;
  1950     03FE  3002               	movlw	2
  1951     03FF  00DF               	movwf	??_PROCESS_TMR0_AND_PRESCALER_ADJUST
  1952     0400  3000               	movlw	0
  1953     0401  00E0               	movwf	??_PROCESS_TMR0_AND_PRESCALER_ADJUST+1
  1954     0402  3000               	movlw	0
  1955     0403  00E1               	movwf	??_PROCESS_TMR0_AND_PRESCALER_ADJUST+2
  1956     0404  3000               	movlw	0
  1957     0405  00E2               	movwf	??_PROCESS_TMR0_AND_PRESCALER_ADJUST+3
  1958     0406  0830               	movf	_final_TMR0,w	;volatile
  1959     0407  07DF               	addwf	??_PROCESS_TMR0_AND_PRESCALER_ADJUST,f
  1960     0408  0831               	movf	_final_TMR0+1,w	;volatile
  1961     0409  3DE0               	addwfc	??_PROCESS_TMR0_AND_PRESCALER_ADJUST+1,f
  1962     040A  0832               	movf	_final_TMR0+2,w	;volatile
  1963     040B  3DE1               	addwfc	??_PROCESS_TMR0_AND_PRESCALER_ADJUST+2,f
  1964     040C  0833               	movf	_final_TMR0+3,w	;volatile
  1965     040D  3DE2               	addwfc	??_PROCESS_TMR0_AND_PRESCALER_ADJUST+3,f
  1966     040E  0862               	movf	??_PROCESS_TMR0_AND_PRESCALER_ADJUST+3,w
  1967     040F  00B3               	movwf	_final_TMR0+3	;volatile
  1968     0410  0861               	movf	??_PROCESS_TMR0_AND_PRESCALER_ADJUST+2,w
  1969     0411  00B2               	movwf	_final_TMR0+2	;volatile
  1970     0412  0860               	movf	??_PROCESS_TMR0_AND_PRESCALER_ADJUST+1,w
  1971     0413  00B1               	movwf	_final_TMR0+1	;volatile
  1972     0414  085F               	movf	??_PROCESS_TMR0_AND_PRESCALER_ADJUST,w
  1973     0415  00B0               	movwf	_final_TMR0	;volatile
  1974                           
  1975                           ;system.c: 228:         }
  1976     0416  0008               	return
  1977     0417                     l1490:
  1978     0417  3007               	movlw	7
  1979     0418  063A               	xorwf	_prescaler_final_index,w	;volatile
  1980     0419  1D03               	btfss	3,2
  1981     041A  0008               	return
  1982                           
  1983                           ;system.c: 230:             final_TMR0 = final_TMR0 + 1;
  1984     041B  3001               	movlw	1
  1985     041C  00DF               	movwf	??_PROCESS_TMR0_AND_PRESCALER_ADJUST
  1986     041D  3000               	movlw	0
  1987     041E  00E0               	movwf	??_PROCESS_TMR0_AND_PRESCALER_ADJUST+1
  1988     041F  3000               	movlw	0
  1989     0420  00E1               	movwf	??_PROCESS_TMR0_AND_PRESCALER_ADJUST+2
  1990     0421  3000               	movlw	0
  1991     0422  00E2               	movwf	??_PROCESS_TMR0_AND_PRESCALER_ADJUST+3
  1992     0423  0830               	movf	_final_TMR0,w	;volatile
  1993     0424  07DF               	addwf	??_PROCESS_TMR0_AND_PRESCALER_ADJUST,f
  1994     0425  0831               	movf	_final_TMR0+1,w	;volatile
  1995     0426  3DE0               	addwfc	??_PROCESS_TMR0_AND_PRESCALER_ADJUST+1,f
  1996     0427  0832               	movf	_final_TMR0+2,w	;volatile
  1997     0428  3DE1               	addwfc	??_PROCESS_TMR0_AND_PRESCALER_ADJUST+2,f
  1998     0429  0833               	movf	_final_TMR0+3,w	;volatile
  1999     042A  3DE2               	addwfc	??_PROCESS_TMR0_AND_PRESCALER_ADJUST+3,f
  2000     042B  0862               	movf	??_PROCESS_TMR0_AND_PRESCALER_ADJUST+3,w
  2001     042C  00B3               	movwf	_final_TMR0+3	;volatile
  2002     042D  0861               	movf	??_PROCESS_TMR0_AND_PRESCALER_ADJUST+2,w
  2003     042E  00B2               	movwf	_final_TMR0+2	;volatile
  2004     042F  0860               	movf	??_PROCESS_TMR0_AND_PRESCALER_ADJUST+1,w
  2005     0430  00B1               	movwf	_final_TMR0+1	;volatile
  2006     0431  085F               	movf	??_PROCESS_TMR0_AND_PRESCALER_ADJUST,w
  2007     0432  00B0               	movwf	_final_TMR0	;volatile
  2008     0433  0008               	return
  2009     0434                     __end_of_PROCESS_TMR0_AND_PRESCALER_ADJUST:
  2010                           
  2011                           	psect	text3
  2012     04B0                     __ptext3:	
  2013 ;; *************** function _SHORTEN_PERIOD *****************
  2014 ;; Defined at:
  2015 ;;		line 158 in file "system.c"
  2016 ;; Parameters:    Size  Location     Type
  2017 ;;		None
  2018 ;; Auto vars:     Size  Location     Type
  2019 ;;  twofiftysix_    4   20[BANK0 ] unsigned long 
  2020 ;; Return value:  Size  Location     Type
  2021 ;;                  1    wreg      unsigned char 
  2022 ;; Registers used:
  2023 ;;		wreg, status,2, status,0, pclath, cstack
  2024 ;; Tracked objects:
  2025 ;;		On entry : 1F/0
  2026 ;;		On exit  : 1F/0
  2027 ;;		Unchanged: 0/0
  2028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2029 ;;      Params:         0       0       0       0
  2030 ;;      Locals:         0       8       0       0
  2031 ;;      Temps:          0       8       0       0
  2032 ;;      Totals:         0      16       0       0
  2033 ;;Total ram usage:       16 bytes
  2034 ;; Hardware stack levels used: 1
  2035 ;; Hardware stack levels required when called: 3
  2036 ;; This function calls:
  2037 ;;		___lmul
  2038 ;; This function is called by:
  2039 ;;		_PROCESS_TMR0_AND_PRESCALER_ADJUST
  2040 ;; This function uses a non-reentrant model
  2041 ;;
  2042                           
  2043     04B0                     _SHORTEN_PERIOD:	
  2044                           ;psect for function _SHORTEN_PERIOD
  2045                           
  2046                           
  2047                           ;system.c: 163:             uint32_t twofiftysix_minus_TMR0_final = (((256-raw_TMR0)*(40
      +                          96 +(24*current_symmetry)))>>14);
  2048                           
  2049                           ;incstack = 0
  2050                           ; Regs used in _SHORTEN_PERIOD: [wreg+status,2+status,0+pclath+cstack]
  2051     04B0  082B               	movf	_current_symmetry+3,w	;volatile
  2052     04B1  00C6               	movwf	___lmul@multiplier+3
  2053     04B2  082A               	movf	_current_symmetry+2,w	;volatile
  2054     04B3  00C5               	movwf	___lmul@multiplier+2
  2055     04B4  0829               	movf	_current_symmetry+1,w	;volatile
  2056     04B5  00C4               	movwf	___lmul@multiplier+1
  2057     04B6  0828               	movf	_current_symmetry,w	;volatile
  2058     04B7  00C3               	movwf	___lmul@multiplier
  2059     04B8  3000               	movlw	0
  2060     04B9  00CA               	movwf	___lmul@multiplicand+3
  2061     04BA  3000               	movlw	0
  2062     04BB  00C9               	movwf	___lmul@multiplicand+2
  2063     04BC  3000               	movlw	0
  2064     04BD  00C8               	movwf	___lmul@multiplicand+1
  2065     04BE  3018               	movlw	24
  2066     04BF  00C7               	movwf	___lmul@multiplicand
  2067     04C0  3185  25B9  3184   	fcall	___lmul
  2068     04C3  3000               	movlw	0
  2069     04C4  0743               	addwf	?___lmul,w
  2070     04C5  00DB               	movwf	_SHORTEN_PERIOD$850	;volatile
  2071     04C6  3010               	movlw	16
  2072     04C7  3D44               	addwfc	?___lmul+1,w
  2073     04C8  00DC               	movwf	_SHORTEN_PERIOD$850+1	;volatile
  2074     04C9  3000               	movlw	0
  2075     04CA  3D45               	addwfc	?___lmul+2,w
  2076     04CB  00DD               	movwf	_SHORTEN_PERIOD$850+2	;volatile
  2077     04CC  3000               	movlw	0
  2078     04CD  3D46               	addwfc	?___lmul+3,w
  2079     04CE  00DE               	movwf	_SHORTEN_PERIOD$850+3	;volatile
  2080                           
  2081                           ;system.c: 163:             uint32_t twofiftysix_minus_TMR0_final = (((256-raw_TMR0)*(40
      +                          96 +(24*current_symmetry)))>>14);
  2082     04CF  085E               	movf	_SHORTEN_PERIOD$850+3,w	;volatile
  2083     04D0  00C6               	movwf	___lmul@multiplier+3
  2084     04D1  085D               	movf	_SHORTEN_PERIOD$850+2,w	;volatile
  2085     04D2  00C5               	movwf	___lmul@multiplier+2
  2086     04D3  085C               	movf	_SHORTEN_PERIOD$850+1,w	;volatile
  2087     04D4  00C4               	movwf	___lmul@multiplier+1
  2088     04D5  085B               	movf	_SHORTEN_PERIOD$850,w	;volatile
  2089     04D6  00C3               	movwf	___lmul@multiplier
  2090     04D7  3000               	movlw	0
  2091     04D8  00CF               	movwf	??_SHORTEN_PERIOD
  2092     04D9  3001               	movlw	1
  2093     04DA  00D0               	movwf	??_SHORTEN_PERIOD+1
  2094     04DB  3000               	movlw	0
  2095     04DC  00D1               	movwf	??_SHORTEN_PERIOD+2
  2096     04DD  3000               	movlw	0
  2097     04DE  00D2               	movwf	??_SHORTEN_PERIOD+3
  2098     04DF  0824               	movf	_raw_TMR0,w	;volatile
  2099     04E0  02CF               	subwf	??_SHORTEN_PERIOD,f
  2100     04E1  0825               	movf	_raw_TMR0+1,w	;volatile
  2101     04E2  3BD0               	subwfb	??_SHORTEN_PERIOD+1,f
  2102     04E3  0826               	movf	_raw_TMR0+2,w	;volatile
  2103     04E4  3BD1               	subwfb	??_SHORTEN_PERIOD+2,f
  2104     04E5  0827               	movf	_raw_TMR0+3,w	;volatile
  2105     04E6  3BD2               	subwfb	??_SHORTEN_PERIOD+3,f
  2106     04E7  0852               	movf	??_SHORTEN_PERIOD+3,w
  2107     04E8  00CA               	movwf	___lmul@multiplicand+3
  2108     04E9  0851               	movf	??_SHORTEN_PERIOD+2,w
  2109     04EA  00C9               	movwf	___lmul@multiplicand+2
  2110     04EB  0850               	movf	??_SHORTEN_PERIOD+1,w
  2111     04EC  00C8               	movwf	___lmul@multiplicand+1
  2112     04ED  084F               	movf	??_SHORTEN_PERIOD,w
  2113     04EE  00C7               	movwf	___lmul@multiplicand
  2114     04EF  3185  25B9  3184   	fcall	___lmul
  2115     04F2  0843               	movf	?___lmul,w
  2116     04F3  00D3               	movwf	??_SHORTEN_PERIOD+4
  2117     04F4  0844               	movf	?___lmul+1,w
  2118     04F5  00D4               	movwf	??_SHORTEN_PERIOD+5
  2119     04F6  0845               	movf	?___lmul+2,w
  2120     04F7  00D5               	movwf	??_SHORTEN_PERIOD+6
  2121     04F8  0846               	movf	?___lmul+3,w
  2122     04F9  00D6               	movwf	??_SHORTEN_PERIOD+7
  2123     04FA  300E               	movlw	14
  2124     04FB                     u505:
  2125     04FB  36D6               	lsrf	??_SHORTEN_PERIOD+7,f
  2126     04FC  0CD5               	rrf	??_SHORTEN_PERIOD+6,f
  2127     04FD  0CD4               	rrf	??_SHORTEN_PERIOD+5,f
  2128     04FE  0CD3               	rrf	??_SHORTEN_PERIOD+4,f
  2129     04FF  0B89               	decfsz	9,f
  2130     0500  2CFB               	goto	u505
  2131     0501  0856               	movf	??_SHORTEN_PERIOD+7,w
  2132     0502  00DA               	movwf	SHORTEN_PERIOD@twofiftysix_minus_TMR0_final+3
  2133     0503  0855               	movf	??_SHORTEN_PERIOD+6,w
  2134     0504  00D9               	movwf	SHORTEN_PERIOD@twofiftysix_minus_TMR0_final+2
  2135     0505  0854               	movf	??_SHORTEN_PERIOD+5,w
  2136     0506  00D8               	movwf	SHORTEN_PERIOD@twofiftysix_minus_TMR0_final+1
  2137     0507  0853               	movf	??_SHORTEN_PERIOD+4,w
  2138     0508  00D7               	movwf	SHORTEN_PERIOD@twofiftysix_minus_TMR0_final
  2139                           
  2140                           ;system.c: 166:         final_TMR0 = (256-twofiftysix_minus_TMR0_final);
  2141     0509  3000               	movlw	0
  2142     050A  00CF               	movwf	??_SHORTEN_PERIOD
  2143     050B  3001               	movlw	1
  2144     050C  00D0               	movwf	??_SHORTEN_PERIOD+1
  2145     050D  3000               	movlw	0
  2146     050E  00D1               	movwf	??_SHORTEN_PERIOD+2
  2147     050F  3000               	movlw	0
  2148     0510  00D2               	movwf	??_SHORTEN_PERIOD+3
  2149     0511  0857               	movf	SHORTEN_PERIOD@twofiftysix_minus_TMR0_final,w
  2150     0512  02CF               	subwf	??_SHORTEN_PERIOD,f
  2151     0513  0858               	movf	SHORTEN_PERIOD@twofiftysix_minus_TMR0_final+1,w
  2152     0514  3BD0               	subwfb	??_SHORTEN_PERIOD+1,f
  2153     0515  0859               	movf	SHORTEN_PERIOD@twofiftysix_minus_TMR0_final+2,w
  2154     0516  3BD1               	subwfb	??_SHORTEN_PERIOD+2,f
  2155     0517  085A               	movf	SHORTEN_PERIOD@twofiftysix_minus_TMR0_final+3,w
  2156     0518  3BD2               	subwfb	??_SHORTEN_PERIOD+3,f
  2157     0519  0852               	movf	??_SHORTEN_PERIOD+3,w
  2158     051A  00B3               	movwf	_final_TMR0+3	;volatile
  2159     051B  0851               	movf	??_SHORTEN_PERIOD+2,w
  2160     051C  00B2               	movwf	_final_TMR0+2	;volatile
  2161     051D  0850               	movf	??_SHORTEN_PERIOD+1,w
  2162     051E  00B1               	movwf	_final_TMR0+1	;volatile
  2163     051F  084F               	movf	??_SHORTEN_PERIOD,w
  2164     0520  00B0               	movwf	_final_TMR0	;volatile
  2165     0521  01BE               	clrf	_prescaler_adjust	;volatile
  2166     0522  0008               	return
  2167     0523                     __end_of_SHORTEN_PERIOD:
  2168                           
  2169                           	psect	text4
  2170     02F5                     __ptext4:	
  2171 ;; *************** function _LENGTHEN_PERIOD *****************
  2172 ;; Defined at:
  2173 ;;		line 171 in file "system.c"
  2174 ;; Parameters:    Size  Location     Type
  2175 ;;		None
  2176 ;; Auto vars:     Size  Location     Type
  2177 ;;  twofiftysix_    4   24[BANK0 ] unsigned long 
  2178 ;; Return value:  Size  Location     Type
  2179 ;;                  1    wreg      unsigned char 
  2180 ;; Registers used:
  2181 ;;		wreg, status,2, status,0, pclath, cstack
  2182 ;; Tracked objects:
  2183 ;;		On entry : 1F/0
  2184 ;;		On exit  : 1F/0
  2185 ;;		Unchanged: 0/0
  2186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2187 ;;      Params:         0       0       0       0
  2188 ;;      Locals:         0       8       0       0
  2189 ;;      Temps:          0       8       0       0
  2190 ;;      Totals:         0      16       0       0
  2191 ;;Total ram usage:       16 bytes
  2192 ;; Hardware stack levels used: 1
  2193 ;; Hardware stack levels required when called: 3
  2194 ;; This function calls:
  2195 ;;		___lmul
  2196 ;; This function is called by:
  2197 ;;		_PROCESS_TMR0_AND_PRESCALER_ADJUST
  2198 ;; This function uses a non-reentrant model
  2199 ;;
  2200                           
  2201     02F5                     _LENGTHEN_PERIOD:	
  2202                           ;psect for function _LENGTHEN_PERIOD
  2203                           
  2204                           
  2205                           ;system.c: 176:             uint32_t twofiftysix_minus_TMR0_final = (((256-raw_TMR0)*(35
      +                          84 -(3*current_symmetry)))>>11);
  2206                           
  2207                           ;incstack = 0
  2208                           ; Regs used in _LENGTHEN_PERIOD: [wreg+status,2+status,0+pclath+cstack]
  2209     02F5  082B               	movf	_current_symmetry+3,w	;volatile
  2210     02F6  00C6               	movwf	___lmul@multiplier+3
  2211     02F7  082A               	movf	_current_symmetry+2,w	;volatile
  2212     02F8  00C5               	movwf	___lmul@multiplier+2
  2213     02F9  0829               	movf	_current_symmetry+1,w	;volatile
  2214     02FA  00C4               	movwf	___lmul@multiplier+1
  2215     02FB  0828               	movf	_current_symmetry,w	;volatile
  2216     02FC  00C3               	movwf	___lmul@multiplier
  2217     02FD  30FF               	movlw	255
  2218     02FE  00CA               	movwf	___lmul@multiplicand+3
  2219     02FF  30FF               	movlw	255
  2220     0300  00C9               	movwf	___lmul@multiplicand+2
  2221     0301  30FF               	movlw	255
  2222     0302  00C8               	movwf	___lmul@multiplicand+1
  2223     0303  30FD               	movlw	253
  2224     0304  00C7               	movwf	___lmul@multiplicand
  2225     0305  3185  25B9  3182   	fcall	___lmul
  2226     0308  3000               	movlw	0
  2227     0309  0743               	addwf	?___lmul,w
  2228     030A  00D7               	movwf	_LENGTHEN_PERIOD$851	;volatile
  2229     030B  300E               	movlw	14
  2230     030C  3D44               	addwfc	?___lmul+1,w
  2231     030D  00D8               	movwf	_LENGTHEN_PERIOD$851+1	;volatile
  2232     030E  3000               	movlw	0
  2233     030F  3D45               	addwfc	?___lmul+2,w
  2234     0310  00D9               	movwf	_LENGTHEN_PERIOD$851+2	;volatile
  2235     0311  3000               	movlw	0
  2236     0312  3D46               	addwfc	?___lmul+3,w
  2237     0313  00DA               	movwf	_LENGTHEN_PERIOD$851+3	;volatile
  2238                           
  2239                           ;system.c: 176:             uint32_t twofiftysix_minus_TMR0_final = (((256-raw_TMR0)*(35
      +                          84 -(3*current_symmetry)))>>11);
  2240     0314  085A               	movf	_LENGTHEN_PERIOD$851+3,w	;volatile
  2241     0315  00C6               	movwf	___lmul@multiplier+3
  2242     0316  0859               	movf	_LENGTHEN_PERIOD$851+2,w	;volatile
  2243     0317  00C5               	movwf	___lmul@multiplier+2
  2244     0318  0858               	movf	_LENGTHEN_PERIOD$851+1,w	;volatile
  2245     0319  00C4               	movwf	___lmul@multiplier+1
  2246     031A  0857               	movf	_LENGTHEN_PERIOD$851,w	;volatile
  2247     031B  00C3               	movwf	___lmul@multiplier
  2248     031C  3000               	movlw	0
  2249     031D  00CF               	movwf	??_LENGTHEN_PERIOD
  2250     031E  3001               	movlw	1
  2251     031F  00D0               	movwf	??_LENGTHEN_PERIOD+1
  2252     0320  3000               	movlw	0
  2253     0321  00D1               	movwf	??_LENGTHEN_PERIOD+2
  2254     0322  3000               	movlw	0
  2255     0323  00D2               	movwf	??_LENGTHEN_PERIOD+3
  2256     0324  0824               	movf	_raw_TMR0,w	;volatile
  2257     0325  02CF               	subwf	??_LENGTHEN_PERIOD,f
  2258     0326  0825               	movf	_raw_TMR0+1,w	;volatile
  2259     0327  3BD0               	subwfb	??_LENGTHEN_PERIOD+1,f
  2260     0328  0826               	movf	_raw_TMR0+2,w	;volatile
  2261     0329  3BD1               	subwfb	??_LENGTHEN_PERIOD+2,f
  2262     032A  0827               	movf	_raw_TMR0+3,w	;volatile
  2263     032B  3BD2               	subwfb	??_LENGTHEN_PERIOD+3,f
  2264     032C  0852               	movf	??_LENGTHEN_PERIOD+3,w
  2265     032D  00CA               	movwf	___lmul@multiplicand+3
  2266     032E  0851               	movf	??_LENGTHEN_PERIOD+2,w
  2267     032F  00C9               	movwf	___lmul@multiplicand+2
  2268     0330  0850               	movf	??_LENGTHEN_PERIOD+1,w
  2269     0331  00C8               	movwf	___lmul@multiplicand+1
  2270     0332  084F               	movf	??_LENGTHEN_PERIOD,w
  2271     0333  00C7               	movwf	___lmul@multiplicand
  2272     0334  3185  25B9  3182   	fcall	___lmul
  2273     0337  0843               	movf	?___lmul,w
  2274     0338  00D3               	movwf	??_LENGTHEN_PERIOD+4
  2275     0339  0844               	movf	?___lmul+1,w
  2276     033A  00D4               	movwf	??_LENGTHEN_PERIOD+5
  2277     033B  0845               	movf	?___lmul+2,w
  2278     033C  00D5               	movwf	??_LENGTHEN_PERIOD+6
  2279     033D  0846               	movf	?___lmul+3,w
  2280     033E  00D6               	movwf	??_LENGTHEN_PERIOD+7
  2281     033F  300B               	movlw	11
  2282     0340                     u515:
  2283     0340  36D6               	lsrf	??_LENGTHEN_PERIOD+7,f
  2284     0341  0CD5               	rrf	??_LENGTHEN_PERIOD+6,f
  2285     0342  0CD4               	rrf	??_LENGTHEN_PERIOD+5,f
  2286     0343  0CD3               	rrf	??_LENGTHEN_PERIOD+4,f
  2287     0344  0B89               	decfsz	9,f
  2288     0345  2B40               	goto	u515
  2289     0346  0856               	movf	??_LENGTHEN_PERIOD+7,w
  2290     0347  00DE               	movwf	LENGTHEN_PERIOD@twofiftysix_minus_TMR0_final+3
  2291     0348  0855               	movf	??_LENGTHEN_PERIOD+6,w
  2292     0349  00DD               	movwf	LENGTHEN_PERIOD@twofiftysix_minus_TMR0_final+2
  2293     034A  0854               	movf	??_LENGTHEN_PERIOD+5,w
  2294     034B  00DC               	movwf	LENGTHEN_PERIOD@twofiftysix_minus_TMR0_final+1
  2295     034C  0853               	movf	??_LENGTHEN_PERIOD+4,w
  2296     034D  00DB               	movwf	LENGTHEN_PERIOD@twofiftysix_minus_TMR0_final
  2297                           
  2298                           ;system.c: 179:         if(twofiftysix_minus_TMR0_final > 256){
  2299     034E  085E               	movf	LENGTHEN_PERIOD@twofiftysix_minus_TMR0_final+3,w
  2300     034F  1D03               	btfss	3,2
  2301     0350  2B5A               	goto	l1402
  2302     0351  085D               	movf	LENGTHEN_PERIOD@twofiftysix_minus_TMR0_final+2,w
  2303     0352  1D03               	btfss	3,2
  2304     0353  2B5A               	goto	l1402
  2305     0354  3001               	movlw	1
  2306     0355  025B               	subwf	LENGTHEN_PERIOD@twofiftysix_minus_TMR0_final,w
  2307     0356  3001               	movlw	1
  2308     0357  3B5C               	subwfb	LENGTHEN_PERIOD@twofiftysix_minus_TMR0_final+1,w
  2309     0358  1C03               	btfss	3,0
  2310     0359  2B8D               	goto	l1408
  2311     035A                     l1402:
  2312                           
  2313                           ;system.c: 180:             twofiftysix_minus_TMR0_final = (twofiftysix_minus_TMR0_final
      +                           >> 1);
  2314     035A  0020               	movlb	0	; select bank0
  2315     035B  085B               	movf	LENGTHEN_PERIOD@twofiftysix_minus_TMR0_final,w
  2316     035C  00CF               	movwf	??_LENGTHEN_PERIOD
  2317     035D  085C               	movf	LENGTHEN_PERIOD@twofiftysix_minus_TMR0_final+1,w
  2318     035E  00D0               	movwf	??_LENGTHEN_PERIOD+1
  2319     035F  085D               	movf	LENGTHEN_PERIOD@twofiftysix_minus_TMR0_final+2,w
  2320     0360  00D1               	movwf	??_LENGTHEN_PERIOD+2
  2321     0361  085E               	movf	LENGTHEN_PERIOD@twofiftysix_minus_TMR0_final+3,w
  2322     0362  00D2               	movwf	??_LENGTHEN_PERIOD+3
  2323     0363  3001               	movlw	1
  2324     0364                     u535:
  2325     0364  36D2               	lsrf	??_LENGTHEN_PERIOD+3,f
  2326     0365  0CD1               	rrf	??_LENGTHEN_PERIOD+2,f
  2327     0366  0CD0               	rrf	??_LENGTHEN_PERIOD+1,f
  2328     0367  0CCF               	rrf	??_LENGTHEN_PERIOD,f
  2329     0368  0B89               	decfsz	9,f
  2330     0369  2B64               	goto	u535
  2331     036A  0852               	movf	??_LENGTHEN_PERIOD+3,w
  2332     036B  00DE               	movwf	LENGTHEN_PERIOD@twofiftysix_minus_TMR0_final+3
  2333     036C  0851               	movf	??_LENGTHEN_PERIOD+2,w
  2334     036D  00DD               	movwf	LENGTHEN_PERIOD@twofiftysix_minus_TMR0_final+2
  2335     036E  0850               	movf	??_LENGTHEN_PERIOD+1,w
  2336     036F  00DC               	movwf	LENGTHEN_PERIOD@twofiftysix_minus_TMR0_final+1
  2337     0370  084F               	movf	??_LENGTHEN_PERIOD,w
  2338     0371  00DB               	movwf	LENGTHEN_PERIOD@twofiftysix_minus_TMR0_final
  2339                           
  2340                           ;system.c: 181:             final_TMR0 = (256-twofiftysix_minus_TMR0_final);
  2341     0372  3000               	movlw	0
  2342     0373  00CF               	movwf	??_LENGTHEN_PERIOD
  2343     0374  3001               	movlw	1
  2344     0375  00D0               	movwf	??_LENGTHEN_PERIOD+1
  2345     0376  3000               	movlw	0
  2346     0377  00D1               	movwf	??_LENGTHEN_PERIOD+2
  2347     0378  3000               	movlw	0
  2348     0379  00D2               	movwf	??_LENGTHEN_PERIOD+3
  2349     037A  085B               	movf	LENGTHEN_PERIOD@twofiftysix_minus_TMR0_final,w
  2350     037B  02CF               	subwf	??_LENGTHEN_PERIOD,f
  2351     037C  085C               	movf	LENGTHEN_PERIOD@twofiftysix_minus_TMR0_final+1,w
  2352     037D  3BD0               	subwfb	??_LENGTHEN_PERIOD+1,f
  2353     037E  085D               	movf	LENGTHEN_PERIOD@twofiftysix_minus_TMR0_final+2,w
  2354     037F  3BD1               	subwfb	??_LENGTHEN_PERIOD+2,f
  2355     0380  085E               	movf	LENGTHEN_PERIOD@twofiftysix_minus_TMR0_final+3,w
  2356     0381  3BD2               	subwfb	??_LENGTHEN_PERIOD+3,f
  2357     0382  0852               	movf	??_LENGTHEN_PERIOD+3,w
  2358     0383  00B3               	movwf	_final_TMR0+3	;volatile
  2359     0384  0851               	movf	??_LENGTHEN_PERIOD+2,w
  2360     0385  00B2               	movwf	_final_TMR0+2	;volatile
  2361     0386  0850               	movf	??_LENGTHEN_PERIOD+1,w
  2362     0387  00B1               	movwf	_final_TMR0+1	;volatile
  2363     0388  084F               	movf	??_LENGTHEN_PERIOD,w
  2364     0389  00B0               	movwf	_final_TMR0	;volatile
  2365     038A  3002               	movlw	2
  2366     038B  00BE               	movwf	_prescaler_adjust	;volatile
  2367                           
  2368                           ;system.c: 183:         }
  2369     038C  0008               	return
  2370     038D                     l1408:
  2371                           
  2372                           ;system.c: 185:             final_TMR0 = 256-twofiftysix_minus_TMR0_final;
  2373     038D  3000               	movlw	0
  2374     038E  0020               	movlb	0	; select bank0
  2375     038F  00CF               	movwf	??_LENGTHEN_PERIOD
  2376     0390  3001               	movlw	1
  2377     0391  00D0               	movwf	??_LENGTHEN_PERIOD+1
  2378     0392  3000               	movlw	0
  2379     0393  00D1               	movwf	??_LENGTHEN_PERIOD+2
  2380     0394  3000               	movlw	0
  2381     0395  00D2               	movwf	??_LENGTHEN_PERIOD+3
  2382     0396  085B               	movf	LENGTHEN_PERIOD@twofiftysix_minus_TMR0_final,w
  2383     0397  02CF               	subwf	??_LENGTHEN_PERIOD,f
  2384     0398  085C               	movf	LENGTHEN_PERIOD@twofiftysix_minus_TMR0_final+1,w
  2385     0399  3BD0               	subwfb	??_LENGTHEN_PERIOD+1,f
  2386     039A  085D               	movf	LENGTHEN_PERIOD@twofiftysix_minus_TMR0_final+2,w
  2387     039B  3BD1               	subwfb	??_LENGTHEN_PERIOD+2,f
  2388     039C  085E               	movf	LENGTHEN_PERIOD@twofiftysix_minus_TMR0_final+3,w
  2389     039D  3BD2               	subwfb	??_LENGTHEN_PERIOD+3,f
  2390     039E  0852               	movf	??_LENGTHEN_PERIOD+3,w
  2391     039F  00B3               	movwf	_final_TMR0+3	;volatile
  2392     03A0  0851               	movf	??_LENGTHEN_PERIOD+2,w
  2393     03A1  00B2               	movwf	_final_TMR0+2	;volatile
  2394     03A2  0850               	movf	??_LENGTHEN_PERIOD+1,w
  2395     03A3  00B1               	movwf	_final_TMR0+1	;volatile
  2396     03A4  084F               	movf	??_LENGTHEN_PERIOD,w
  2397     03A5  00B0               	movwf	_final_TMR0	;volatile
  2398     03A6  01BE               	clrf	_prescaler_adjust	;volatile
  2399     03A7  0008               	return
  2400     03A8                     __end_of_LENGTHEN_PERIOD:
  2401                           
  2402                           	psect	text5
  2403     0523                     __ptext5:	
  2404 ;; *************** function _ADJUST_AND_SET_PRESCALER *****************
  2405 ;; Defined at:
  2406 ;;		line 121 in file "system.c"
  2407 ;; Parameters:    Size  Location     Type
  2408 ;;		None
  2409 ;; Auto vars:     Size  Location     Type
  2410 ;;		None
  2411 ;; Return value:  Size  Location     Type
  2412 ;;                  1    wreg      unsigned char 
  2413 ;; Registers used:
  2414 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2415 ;; Tracked objects:
  2416 ;;		On entry : 0/0
  2417 ;;		On exit  : 1E/0
  2418 ;;		Unchanged: 0/0
  2419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2420 ;;      Params:         0       0       0       0
  2421 ;;      Locals:         0       0       0       0
  2422 ;;      Temps:          0       0       0       0
  2423 ;;      Totals:         0       0       0       0
  2424 ;;Total ram usage:        0 bytes
  2425 ;; Hardware stack levels used: 1
  2426 ;; Hardware stack levels required when called: 3
  2427 ;; This function calls:
  2428 ;;		_CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1
  2429 ;;		_TURN_PRESCALER_OFF
  2430 ;;		_TURN_PRESCALER_ON
  2431 ;; This function is called by:
  2432 ;;		_PROCESS_TMR0_AND_PRESCALER_ADJUST
  2433 ;; This function uses a non-reentrant model
  2434 ;;
  2435                           
  2436     0523                     _ADJUST_AND_SET_PRESCALER:	
  2437                           ;psect for function _ADJUST_AND_SET_PRESCALER
  2438                           
  2439                           
  2440                           ;incstack = 0
  2441                           ; Regs used in _ADJUST_AND_SET_PRESCALER: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2442     0523  0020               	movlb	0	; select bank0
  2443     0524  033E               	decf	_prescaler_adjust,w	;volatile
  2444     0525  1D03               	btfss	3,2
  2445     0526  2D44               	goto	l1358
  2446                           
  2447                           ;system.c: 123:         prescaler_overflow_flag = CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1();
  2448     0527  3186  267A  3185   	fcall	_CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1
  2449     052A  0020               	movlb	0	; select bank0
  2450     052B  00BB               	movwf	_prescaler_overflow_flag	;volatile
  2451                           
  2452                           ;system.c: 124:             if(prescaler_overflow_flag){
  2453     052C  083B               	movf	_prescaler_overflow_flag,w	;volatile
  2454     052D  1903               	btfsc	3,2
  2455     052E  2D32               	goto	l1352
  2456     052F                     l1346:
  2457                           
  2458                           ;system.c: 125:                 TURN_PRESCALER_OFF();
  2459     052F  3186  26D3         	fcall	_TURN_PRESCALER_OFF
  2460     0531  0008               	return
  2461     0532                     l1352:
  2462                           
  2463                           ;system.c: 129:                 TURN_PRESCALER_ON();
  2464     0532  3186  26DC         	fcall	_TURN_PRESCALER_ON
  2465                           
  2466                           ;system.c: 130:                 OPTION_REG = prescaler_bits[base_prescaler_bits_index + 
      +                          1];
  2467     0534  0020               	movlb	0	; select bank0
  2468     0535  083D               	movf	_base_prescaler_bits_index,w	;volatile
  2469     0536  3EB8               	addlw	low ((_prescaler_bits+1)| (0+32768))
  2470     0537  0084               	movwf	4
  2471     0538  3086               	movlw	high ((_prescaler_bits+1)| (0+32768))
  2472     0539  1803               	skipnc
  2473     053A  3E01               	addlw	1
  2474     053B  0085               	movwf	5
  2475     053C  0800               	movf	0,w	;code access
  2476     053D  0021               	movlb	1	; select bank1
  2477     053E  0095               	movwf	21	;volatile
  2478                           
  2479                           ;system.c: 131:                 prescaler_final_index = base_prescaler_bits_index + 1;
  2480     053F  0020               	movlb	0	; select bank0
  2481     0540  083D               	movf	_base_prescaler_bits_index,w	;volatile
  2482     0541  3E01               	addlw	1
  2483     0542  00BA               	movwf	_prescaler_final_index	;volatile
  2484     0543  0008               	return
  2485     0544                     l1358:
  2486     0544  3003               	movlw	3
  2487     0545  063E               	xorwf	_prescaler_adjust,w	;volatile
  2488     0546  1D03               	btfss	3,2
  2489     0547  2D62               	goto	l1376
  2490                           
  2491                           ;system.c: 135:         prescaler_overflow_flag = CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1();
  2492     0548  3186  267A  3185   	fcall	_CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1
  2493     054B  0020               	movlb	0	; select bank0
  2494     054C  00BB               	movwf	_prescaler_overflow_flag	;volatile
  2495                           
  2496                           ;system.c: 136:             if(prescaler_overflow_flag){
  2497     054D  083B               	movf	_prescaler_overflow_flag,w	;volatile
  2498     054E  1D03               	btfss	3,2
  2499     054F  2D2F               	goto	l1346
  2500                           
  2501                           ;system.c: 141:                 TURN_PRESCALER_ON();
  2502     0550  3186  26DC         	fcall	_TURN_PRESCALER_ON
  2503                           
  2504                           ;system.c: 142:                 OPTION_REG = prescaler_bits[base_prescaler_bits_index + 
      +                          2];
  2505     0552  0020               	movlb	0	; select bank0
  2506     0553  083D               	movf	_base_prescaler_bits_index,w	;volatile
  2507     0554  3EB9               	addlw	low ((_prescaler_bits+2)| (0+32768))
  2508     0555  0084               	movwf	4
  2509     0556  3086               	movlw	high ((_prescaler_bits+2)| (0+32768))
  2510     0557  1803               	skipnc
  2511     0558  3E01               	addlw	1
  2512     0559  0085               	movwf	5
  2513     055A  0800               	movf	0,w	;code access
  2514     055B  0021               	movlb	1	; select bank1
  2515     055C  0095               	movwf	21	;volatile
  2516                           
  2517                           ;system.c: 143:                 prescaler_final_index = base_prescaler_bits_index + 2;
  2518     055D  0020               	movlb	0	; select bank0
  2519     055E  083D               	movf	_base_prescaler_bits_index,w	;volatile
  2520     055F  3E02               	addlw	2
  2521     0560  00BA               	movwf	_prescaler_final_index	;volatile
  2522     0561  0008               	return
  2523     0562                     l1376:
  2524     0562  3002               	movlw	2
  2525     0563  063E               	xorwf	_prescaler_adjust,w	;volatile
  2526     0564  1D03               	btfss	3,2
  2527     0565  2D75               	goto	l1382
  2528                           
  2529                           ;system.c: 147:         OPTION_REG = prescaler_bits[base_prescaler_bits_index - 1];
  2530     0566  083D               	movf	_base_prescaler_bits_index,w	;volatile
  2531     0567  3EB6               	addlw	low ((_prescaler_bits+65535)| (0+32768))
  2532     0568  0084               	movwf	4
  2533     0569  3086               	movlw	high ((_prescaler_bits+65535)| (0+32768))
  2534     056A  1803               	skipnc
  2535     056B  3E01               	addlw	1
  2536     056C  0085               	movwf	5
  2537     056D  0800               	movf	0,w	;code access
  2538     056E  0021               	movlb	1	; select bank1
  2539     056F  0095               	movwf	21	;volatile
  2540                           
  2541                           ;system.c: 148:         prescaler_final_index = base_prescaler_bits_index - 1;
  2542     0570  0020               	movlb	0	; select bank0
  2543     0571  083D               	movf	_base_prescaler_bits_index,w	;volatile
  2544     0572  3EFF               	addlw	255
  2545     0573  00BA               	movwf	_prescaler_final_index	;volatile
  2546                           
  2547                           ;system.c: 149:     }
  2548     0574  0008               	return
  2549     0575                     l1382:
  2550     0575  083E               	movf	_prescaler_adjust,w	;volatile
  2551     0576  1D03               	btfss	3,2
  2552     0577  0008               	return
  2553                           
  2554                           ;system.c: 151:         OPTION_REG = prescaler_bits[base_prescaler_bits_index];
  2555     0578  083D               	movf	_base_prescaler_bits_index,w	;volatile
  2556     0579  3EB7               	addlw	low (_prescaler_bits| (0+32768))
  2557     057A  0084               	movwf	4
  2558     057B  3086               	movlw	high (_prescaler_bits| (0+32768))
  2559     057C  1803               	skipnc
  2560     057D  3E01               	addlw	1
  2561     057E  0085               	movwf	5
  2562     057F  0800               	movf	0,w	;code access
  2563     0580  0021               	movlb	1	; select bank1
  2564     0581  0095               	movwf	21	;volatile
  2565                           
  2566                           ;system.c: 152:         prescaler_final_index = base_prescaler_bits_index;
  2567     0582  0020               	movlb	0	; select bank0
  2568     0583  083D               	movf	_base_prescaler_bits_index,w	;volatile
  2569     0584  00BA               	movwf	_prescaler_final_index	;volatile
  2570     0585  0008               	return
  2571     0586                     __end_of_ADJUST_AND_SET_PRESCALER:
  2572                           
  2573                           	psect	text6
  2574     06DC                     __ptext6:	
  2575 ;; *************** function _TURN_PRESCALER_ON *****************
  2576 ;; Defined at:
  2577 ;;		line 115 in file "system.c"
  2578 ;; Parameters:    Size  Location     Type
  2579 ;;		None
  2580 ;; Auto vars:     Size  Location     Type
  2581 ;;		None
  2582 ;; Return value:  Size  Location     Type
  2583 ;;                  1    wreg      unsigned char 
  2584 ;; Registers used:
  2585 ;;		status,2
  2586 ;; Tracked objects:
  2587 ;;		On entry : 1F/0
  2588 ;;		On exit  : 1F/1
  2589 ;;		Unchanged: 0/0
  2590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2591 ;;      Params:         0       0       0       0
  2592 ;;      Locals:         0       0       0       0
  2593 ;;      Temps:          0       0       0       0
  2594 ;;      Totals:         0       0       0       0
  2595 ;;Total ram usage:        0 bytes
  2596 ;; Hardware stack levels used: 1
  2597 ;; Hardware stack levels required when called: 2
  2598 ;; This function calls:
  2599 ;;		Nothing
  2600 ;; This function is called by:
  2601 ;;		_ADJUST_AND_SET_PRESCALER
  2602 ;; This function uses a non-reentrant model
  2603 ;;
  2604                           
  2605     06DC                     _TURN_PRESCALER_ON:	
  2606                           ;psect for function _TURN_PRESCALER_ON
  2607                           
  2608                           
  2609                           ;system.c: 116:     OPTION_REG = OPTION_REG & (0<<3);
  2610                           
  2611                           ;incstack = 0
  2612                           ; Regs used in _TURN_PRESCALER_ON: [status,2]
  2613     06DC  0021               	movlb	1	; select bank1
  2614     06DD  0195               	clrf	21	;volatile
  2615     06DE  0008               	return
  2616     06DF                     __end_of_TURN_PRESCALER_ON:
  2617                           
  2618                           	psect	text7
  2619     06D3                     __ptext7:	
  2620 ;; *************** function _TURN_PRESCALER_OFF *****************
  2621 ;; Defined at:
  2622 ;;		line 109 in file "system.c"
  2623 ;; Parameters:    Size  Location     Type
  2624 ;;		None
  2625 ;; Auto vars:     Size  Location     Type
  2626 ;;		None
  2627 ;; Return value:  Size  Location     Type
  2628 ;;                  1    wreg      unsigned char 
  2629 ;; Registers used:
  2630 ;;		wreg, status,2
  2631 ;; Tracked objects:
  2632 ;;		On entry : 0/0
  2633 ;;		On exit  : 1F/1
  2634 ;;		Unchanged: 0/0
  2635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2636 ;;      Params:         0       0       0       0
  2637 ;;      Locals:         0       0       0       0
  2638 ;;      Temps:          0       0       0       0
  2639 ;;      Totals:         0       0       0       0
  2640 ;;Total ram usage:        0 bytes
  2641 ;; Hardware stack levels used: 1
  2642 ;; Hardware stack levels required when called: 2
  2643 ;; This function calls:
  2644 ;;		Nothing
  2645 ;; This function is called by:
  2646 ;;		_ADJUST_AND_SET_PRESCALER
  2647 ;; This function uses a non-reentrant model
  2648 ;;
  2649                           
  2650     06D3                     _TURN_PRESCALER_OFF:	
  2651                           ;psect for function _TURN_PRESCALER_OFF
  2652                           
  2653                           
  2654                           ;system.c: 110:     OPTION_REG = OPTION_REG & (1<<3);
  2655                           
  2656                           ;incstack = 0
  2657                           ; Regs used in _TURN_PRESCALER_OFF: [wreg+status,2]
  2658     06D3  0021               	movlb	1	; select bank1
  2659     06D4  0815               	movf	21,w	;volatile
  2660     06D5  3908               	andlw	8
  2661     06D6  0095               	movwf	21	;volatile
  2662     06D7  0008               	return
  2663     06D8                     __end_of_TURN_PRESCALER_OFF:
  2664                           
  2665                           	psect	text8
  2666     067A                     __ptext8:	
  2667 ;; *************** function _CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1 *****************
  2668 ;; Defined at:
  2669 ;;		line 98 in file "system.c"
  2670 ;; Parameters:    Size  Location     Type
  2671 ;;		None
  2672 ;; Auto vars:     Size  Location     Type
  2673 ;;		None
  2674 ;; Return value:  Size  Location     Type
  2675 ;;                  1    wreg      unsigned char 
  2676 ;; Registers used:
  2677 ;;		wreg
  2678 ;; Tracked objects:
  2679 ;;		On entry : 1F/0
  2680 ;;		On exit  : 0/0
  2681 ;;		Unchanged: 0/0
  2682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2683 ;;      Params:         0       0       0       0
  2684 ;;      Locals:         0       0       0       0
  2685 ;;      Temps:          0       3       0       0
  2686 ;;      Totals:         0       3       0       0
  2687 ;;Total ram usage:        3 bytes
  2688 ;; Hardware stack levels used: 1
  2689 ;; Hardware stack levels required when called: 2
  2690 ;; This function calls:
  2691 ;;		Nothing
  2692 ;; This function is called by:
  2693 ;;		_ADJUST_AND_SET_PRESCALER
  2694 ;; This function uses a non-reentrant model
  2695 ;;
  2696                           
  2697     067A                     _CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1:	
  2698                           ;psect for function _CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1
  2699                           
  2700                           
  2701                           ;system.c: 99:     if((base_prescaler_bits_index + 1) > 7){
  2702                           
  2703                           ;incstack = 0
  2704                           ; Regs used in _CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1: [wreg]
  2705     067A  083D               	movf	_base_prescaler_bits_index,w	;volatile
  2706     067B  3E01               	addlw	1
  2707     067C  00C3               	movwf	??_CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1
  2708     067D  3000               	movlw	0
  2709     067E  1803               	skipnc
  2710     067F  3001               	movlw	1
  2711     0680  00C4               	movwf	??_CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1+1
  2712     0681  0844               	movf	??_CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1+1,w
  2713     0682  3A80               	xorlw	128
  2714     0683  00C5               	movwf	??_CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1+2
  2715     0684  3080               	movlw	128
  2716     0685  0245               	subwf	??_CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1+2,w
  2717     0686  3008               	movlw	8
  2718     0687  1903               	btfsc	3,2
  2719     0688  0243               	subwf	??_CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1,w
  2720     0689  1C03               	skipc
  2721     068A  2E8D               	goto	l1258
  2722                           
  2723                           ;system.c: 101:         return 1;
  2724     068B  3001               	movlw	1
  2725     068C  0008               	return
  2726     068D                     l1258:
  2727                           
  2728                           ;system.c: 104:         return 0;
  2729     068D  3000               	movlw	0
  2730     068E  0008               	return
  2731     068F                     __end_of_CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1:
  2732                           
  2733                           	psect	text9
  2734     0434                     __ptext9:	
  2735 ;; *************** function _PROCESS_RAW_SPEED_AND_PRESCALER *****************
  2736 ;; Defined at:
  2737 ;;		line 75 in file "system.c"
  2738 ;; Parameters:    Size  Location     Type
  2739 ;;		None
  2740 ;; Auto vars:     Size  Location     Type
  2741 ;;  speed_contro    2   17[BANK0 ] unsigned short 
  2742 ;; Return value:  Size  Location     Type
  2743 ;;                  1    wreg      unsigned char 
  2744 ;; Registers used:
  2745 ;;		wreg, status,2, status,0, pclath, cstack
  2746 ;; Tracked objects:
  2747 ;;		On entry : 1F/0
  2748 ;;		On exit  : 1F/0
  2749 ;;		Unchanged: 0/0
  2750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2751 ;;      Params:         0       0       0       0
  2752 ;;      Locals:         0       2       0       0
  2753 ;;      Temps:          0       5       0       0
  2754 ;;      Totals:         0       7       0       0
  2755 ;;Total ram usage:        7 bytes
  2756 ;; Hardware stack levels used: 1
  2757 ;; Hardware stack levels required when called: 3
  2758 ;; This function calls:
  2759 ;;		___lmul
  2760 ;; This function is called by:
  2761 ;;		_main
  2762 ;; This function uses a non-reentrant model
  2763 ;;
  2764                           
  2765     0434                     _PROCESS_RAW_SPEED_AND_PRESCALER:	
  2766                           ;psect for function _PROCESS_RAW_SPEED_AND_PRESCALER
  2767                           
  2768                           
  2769                           ;system.c: 76:     current_speed_linear_32 = current_speed_linear;
  2770                           
  2771                           ;incstack = 0
  2772                           ; Regs used in _PROCESS_RAW_SPEED_AND_PRESCALER: [wreg+status,2+status,0+pclath+cstack]
  2773     0434  0836               	movf	_current_speed_linear,w	;volatile
  2774     0435  00AC               	movwf	_current_speed_linear_32	;volatile
  2775     0436  0837               	movf	_current_speed_linear+1,w	;volatile
  2776     0437  00AD               	movwf	_current_speed_linear_32+1	;volatile
  2777     0438  01AE               	clrf	_current_speed_linear_32+2	;volatile
  2778     0439  01AF               	clrf	_current_speed_linear_32+3	;volatile
  2779                           
  2780                           ;system.c: 77:     speed_control_32 = current_speed_linear_32 * 600;;
  2781     043A  082F               	movf	_current_speed_linear_32+3,w	;volatile
  2782     043B  00C6               	movwf	___lmul@multiplier+3
  2783     043C  082E               	movf	_current_speed_linear_32+2,w	;volatile
  2784     043D  00C5               	movwf	___lmul@multiplier+2
  2785     043E  082D               	movf	_current_speed_linear_32+1,w	;volatile
  2786     043F  00C4               	movwf	___lmul@multiplier+1
  2787     0440  082C               	movf	_current_speed_linear_32,w	;volatile
  2788     0441  00C3               	movwf	___lmul@multiplier
  2789     0442  3000               	movlw	0
  2790     0443  00CA               	movwf	___lmul@multiplicand+3
  2791     0444  3000               	movlw	0
  2792     0445  00C9               	movwf	___lmul@multiplicand+2
  2793     0446  3002               	movlw	2
  2794     0447  00C8               	movwf	___lmul@multiplicand+1
  2795     0448  3058               	movlw	88
  2796     0449  00C7               	movwf	___lmul@multiplicand
  2797     044A  3185  25B9  3184   	fcall	___lmul
  2798     044D  0846               	movf	?___lmul+3,w
  2799     044E  00A3               	movwf	_speed_control_32+3	;volatile
  2800     044F  0845               	movf	?___lmul+2,w
  2801     0450  00A2               	movwf	_speed_control_32+2	;volatile
  2802     0451  0844               	movf	?___lmul+1,w
  2803     0452  00A1               	movwf	_speed_control_32+1	;volatile
  2804     0453  0843               	movf	?___lmul,w
  2805     0454  00A0               	movwf	_speed_control_32	;volatile
  2806                           
  2807                           ;system.c: 78:     speed_control_32 = speed_control_32 >> 10;
  2808     0455  0820               	movf	_speed_control_32,w	;volatile
  2809     0456  00CF               	movwf	??_PROCESS_RAW_SPEED_AND_PRESCALER
  2810     0457  0821               	movf	_speed_control_32+1,w	;volatile
  2811     0458  00D0               	movwf	??_PROCESS_RAW_SPEED_AND_PRESCALER+1
  2812     0459  0822               	movf	_speed_control_32+2,w	;volatile
  2813     045A  00D1               	movwf	??_PROCESS_RAW_SPEED_AND_PRESCALER+2
  2814     045B  0823               	movf	_speed_control_32+3,w	;volatile
  2815     045C  00D2               	movwf	??_PROCESS_RAW_SPEED_AND_PRESCALER+3
  2816     045D  300A               	movlw	10
  2817     045E                     u565:
  2818     045E  36D2               	lsrf	??_PROCESS_RAW_SPEED_AND_PRESCALER+3,f
  2819     045F  0CD1               	rrf	??_PROCESS_RAW_SPEED_AND_PRESCALER+2,f
  2820     0460  0CD0               	rrf	??_PROCESS_RAW_SPEED_AND_PRESCALER+1,f
  2821     0461  0CCF               	rrf	??_PROCESS_RAW_SPEED_AND_PRESCALER,f
  2822     0462  0B89               	decfsz	9,f
  2823     0463  2C5E               	goto	u565
  2824     0464  0852               	movf	??_PROCESS_RAW_SPEED_AND_PRESCALER+3,w
  2825     0465  00A3               	movwf	_speed_control_32+3	;volatile
  2826     0466  0851               	movf	??_PROCESS_RAW_SPEED_AND_PRESCALER+2,w
  2827     0467  00A2               	movwf	_speed_control_32+2	;volatile
  2828     0468  0850               	movf	??_PROCESS_RAW_SPEED_AND_PRESCALER+1,w
  2829     0469  00A1               	movwf	_speed_control_32+1	;volatile
  2830     046A  084F               	movf	??_PROCESS_RAW_SPEED_AND_PRESCALER,w
  2831     046B  00A0               	movwf	_speed_control_32	;volatile
  2832                           
  2833                           ;system.c: 79:     speed_control = (uint16_t) speed_control_32;
  2834     046C  0821               	movf	_speed_control_32+1,w	;volatile
  2835     046D  00B5               	movwf	_speed_control+1	;volatile
  2836     046E  0820               	movf	_speed_control_32,w	;volatile
  2837     046F  00B4               	movwf	_speed_control	;volatile
  2838                           
  2839                           ;system.c: 81:         if(speed_control <= (127-12)){
  2840     0470  3000               	movlw	0
  2841     0471  0235               	subwf	_speed_control+1,w	;volatile
  2842     0472  3074               	movlw	116
  2843     0473  1903               	skipnz
  2844     0474  0234               	subwf	_speed_control,w	;volatile
  2845     0475  1803               	skipnc
  2846     0476  2C86               	goto	l1450
  2847                           
  2848                           ;system.c: 82:             raw_TMR0 = (uint8_t) speed_control + 12;
  2849     0477  0834               	movf	_speed_control,w	;volatile
  2850     0478  3E0C               	addlw	12
  2851     0479  00A4               	movwf	_raw_TMR0	;volatile
  2852     047A  3000               	movlw	0
  2853     047B  1803               	skipnc
  2854     047C  3001               	movlw	1
  2855     047D  00A5               	movwf	_raw_TMR0+1	;volatile
  2856     047E  01A6               	clrf	_raw_TMR0+2	;volatile
  2857     047F  1BA5               	btfsc	_raw_TMR0+1,7	;volatile
  2858     0480  03A6               	decf	_raw_TMR0+2,f	;volatile
  2859     0481  0826               	movf	_raw_TMR0+2,w	;volatile
  2860     0482  00A7               	movwf	_raw_TMR0+3	;volatile
  2861                           
  2862                           ;system.c: 83:             base_prescaler_bits_index = 1;
  2863     0483  3001               	movlw	1
  2864     0484  00BD               	movwf	_base_prescaler_bits_index	;volatile
  2865                           
  2866                           ;system.c: 84:         }
  2867     0485  0008               	return
  2868     0486                     l1450:
  2869                           
  2870                           ;system.c: 86:             uint16_t speed_control_subtracted;;system.c: 87:             
      +                          speed_control_subtracted = speed_control - (127-12);
  2871     0486  0834               	movf	_speed_control,w	;volatile
  2872     0487  3E8D               	addlw	141
  2873     0488  00D4               	movwf	PROCESS_RAW_SPEED_AND_PRESCALER@speed_control_subtracted
  2874     0489  30FF               	movlw	255
  2875     048A  3D35               	addwfc	_speed_control+1,w	;volatile
  2876     048B  00D5               	movwf	PROCESS_RAW_SPEED_AND_PRESCALER@speed_control_subtracted+1
  2877                           
  2878                           ;system.c: 88:             how_many_128 = (uint8_t)(speed_control_subtracted >> 7);
  2879     048C  0855               	movf	PROCESS_RAW_SPEED_AND_PRESCALER@speed_control_subtracted+1,w
  2880     048D  00D0               	movwf	??_PROCESS_RAW_SPEED_AND_PRESCALER+1
  2881     048E  0854               	movf	PROCESS_RAW_SPEED_AND_PRESCALER@speed_control_subtracted,w
  2882     048F  00CF               	movwf	??_PROCESS_RAW_SPEED_AND_PRESCALER
  2883     0490  3007               	movlw	7
  2884     0491                     u585:
  2885     0491  36D0               	lsrf	??_PROCESS_RAW_SPEED_AND_PRESCALER+1,f
  2886     0492  0CCF               	rrf	??_PROCESS_RAW_SPEED_AND_PRESCALER,f
  2887     0493  0B89               	decfsz	9,f
  2888     0494  2C91               	goto	u585
  2889     0495  084F               	movf	??_PROCESS_RAW_SPEED_AND_PRESCALER,w
  2890     0496  00BF               	movwf	_how_many_128	;volatile
  2891                           
  2892                           ;system.c: 89:             raw_TMR0 = (uint8_t)(speed_control_subtracted - (uint16_t)(ho
      +                          w_many_128 << 7));
  2893     0497  083F               	movf	_how_many_128,w	;volatile
  2894     0498  00CF               	movwf	??_PROCESS_RAW_SPEED_AND_PRESCALER
  2895     0499  3006               	movlw	6
  2896     049A                     u595:
  2897     049A  35CF               	lslf	??_PROCESS_RAW_SPEED_AND_PRESCALER,f
  2898     049B  3EFF               	addlw	-1
  2899     049C  1D03               	skipz
  2900     049D  2C9A               	goto	u595
  2901     049E  354F               	lslf	??_PROCESS_RAW_SPEED_AND_PRESCALER,w
  2902     049F  0754               	addwf	PROCESS_RAW_SPEED_AND_PRESCALER@speed_control_subtracted,w
  2903     04A0  00D0               	movwf	??_PROCESS_RAW_SPEED_AND_PRESCALER+1
  2904     04A1  01D1               	clrf	??_PROCESS_RAW_SPEED_AND_PRESCALER+2
  2905     04A2  01D2               	clrf	??_PROCESS_RAW_SPEED_AND_PRESCALER+3
  2906     04A3  01D3               	clrf	??_PROCESS_RAW_SPEED_AND_PRESCALER+4
  2907     04A4  0853               	movf	??_PROCESS_RAW_SPEED_AND_PRESCALER+4,w
  2908     04A5  00A7               	movwf	_raw_TMR0+3	;volatile
  2909     04A6  0852               	movf	??_PROCESS_RAW_SPEED_AND_PRESCALER+3,w
  2910     04A7  00A6               	movwf	_raw_TMR0+2	;volatile
  2911     04A8  0851               	movf	??_PROCESS_RAW_SPEED_AND_PRESCALER+2,w
  2912     04A9  00A5               	movwf	_raw_TMR0+1	;volatile
  2913     04AA  0850               	movf	??_PROCESS_RAW_SPEED_AND_PRESCALER+1,w
  2914     04AB  00A4               	movwf	_raw_TMR0	;volatile
  2915                           
  2916                           ;system.c: 92:             base_prescaler_bits_index = (uint8_t)(how_many_128 + 2);
  2917     04AC  083F               	movf	_how_many_128,w	;volatile
  2918     04AD  3E02               	addlw	2
  2919     04AE  00BD               	movwf	_base_prescaler_bits_index	;volatile
  2920     04AF  0008               	return
  2921     04B0                     __end_of_PROCESS_RAW_SPEED_AND_PRESCALER:
  2922                           
  2923                           	psect	text10
  2924     05B9                     __ptext10:	
  2925 ;; *************** function ___lmul *****************
  2926 ;; Defined at:
  2927 ;;		line 15 in file "/Applications/microchip/xc8/v2.45/pic/sources/c99/common/Umul32.c"
  2928 ;; Parameters:    Size  Location     Type
  2929 ;;  multiplier      4    0[BANK0 ] unsigned long 
  2930 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  2931 ;; Auto vars:     Size  Location     Type
  2932 ;;  product         4    8[BANK0 ] unsigned long 
  2933 ;; Return value:  Size  Location     Type
  2934 ;;                  4    0[BANK0 ] unsigned long 
  2935 ;; Registers used:
  2936 ;;		wreg, status,2, status,0
  2937 ;; Tracked objects:
  2938 ;;		On entry : 1F/0
  2939 ;;		On exit  : 1F/0
  2940 ;;		Unchanged: 0/0
  2941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2942 ;;      Params:         0       8       0       0
  2943 ;;      Locals:         0       4       0       0
  2944 ;;      Temps:          0       0       0       0
  2945 ;;      Totals:         0      12       0       0
  2946 ;;Total ram usage:       12 bytes
  2947 ;; Hardware stack levels used: 1
  2948 ;; Hardware stack levels required when called: 2
  2949 ;; This function calls:
  2950 ;;		Nothing
  2951 ;; This function is called by:
  2952 ;;		_PROCESS_RAW_SPEED_AND_PRESCALER
  2953 ;;		_SHORTEN_PERIOD
  2954 ;;		_LENGTHEN_PERIOD
  2955 ;; This function uses a non-reentrant model
  2956 ;;
  2957                           
  2958     05B9                     ___lmul:	
  2959                           ;psect for function ___lmul
  2960                           
  2961                           
  2962                           ;incstack = 0
  2963                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  2964     05B9  3000               	movlw	0
  2965     05BA  00CE               	movwf	___lmul@product+3
  2966     05BB  3000               	movlw	0
  2967     05BC  00CD               	movwf	___lmul@product+2
  2968     05BD  3000               	movlw	0
  2969     05BE  00CC               	movwf	___lmul@product+1
  2970     05BF  3000               	movlw	0
  2971     05C0  00CB               	movwf	___lmul@product
  2972     05C1                     l1272:
  2973     05C1  1C43               	btfss	___lmul@multiplier,0
  2974     05C2  2DCB               	goto	l1276
  2975     05C3  0847               	movf	___lmul@multiplicand,w
  2976     05C4  07CB               	addwf	___lmul@product,f
  2977     05C5  0848               	movf	___lmul@multiplicand+1,w
  2978     05C6  3DCC               	addwfc	___lmul@product+1,f
  2979     05C7  0849               	movf	___lmul@multiplicand+2,w
  2980     05C8  3DCD               	addwfc	___lmul@product+2,f
  2981     05C9  084A               	movf	___lmul@multiplicand+3,w
  2982     05CA  3DCE               	addwfc	___lmul@product+3,f
  2983     05CB                     l1276:
  2984     05CB  3001               	movlw	1
  2985     05CC                     u385:
  2986     05CC  35C7               	lslf	___lmul@multiplicand,f
  2987     05CD  0DC8               	rlf	___lmul@multiplicand+1,f
  2988     05CE  0DC9               	rlf	___lmul@multiplicand+2,f
  2989     05CF  0DCA               	rlf	___lmul@multiplicand+3,f
  2990     05D0  0B89               	decfsz	9,f
  2991     05D1  2DCC               	goto	u385
  2992     05D2  3001               	movlw	1
  2993     05D3                     u395:
  2994     05D3  36C6               	lsrf	___lmul@multiplier+3,f
  2995     05D4  0CC5               	rrf	___lmul@multiplier+2,f
  2996     05D5  0CC4               	rrf	___lmul@multiplier+1,f
  2997     05D6  0CC3               	rrf	___lmul@multiplier,f
  2998     05D7  0B89               	decfsz	9,f
  2999     05D8  2DD3               	goto	u395
  3000     05D9  0846               	movf	___lmul@multiplier+3,w
  3001     05DA  0445               	iorwf	___lmul@multiplier+2,w
  3002     05DB  0444               	iorwf	___lmul@multiplier+1,w
  3003     05DC  0443               	iorwf	___lmul@multiplier,w
  3004     05DD  1D03               	skipz
  3005     05DE  2DC1               	goto	l1272
  3006     05DF  084E               	movf	___lmul@product+3,w
  3007     05E0  00C6               	movwf	?___lmul+3
  3008     05E1  084D               	movf	___lmul@product+2,w
  3009     05E2  00C5               	movwf	?___lmul+2
  3010     05E3  084C               	movf	___lmul@product+1,w
  3011     05E4  00C4               	movwf	?___lmul+1
  3012     05E5  084B               	movf	___lmul@product,w
  3013     05E6  00C3               	movwf	?___lmul
  3014     05E7  0008               	return
  3015     05E8                     __end_of___lmul:
  3016                           
  3017                           	psect	text11
  3018     0586                     __ptext11:	
  3019 ;; *************** function _GET_CURRENT_POT_VALUES *****************
  3020 ;; Defined at:
  3021 ;;		line 55 in file "system.c"
  3022 ;; Parameters:    Size  Location     Type
  3023 ;;		None
  3024 ;; Auto vars:     Size  Location     Type
  3025 ;;		None
  3026 ;; Return value:  Size  Location     Type
  3027 ;;                  1    wreg      unsigned char 
  3028 ;; Registers used:
  3029 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3030 ;; Tracked objects:
  3031 ;;		On entry : 1E/1
  3032 ;;		On exit  : 1F/0
  3033 ;;		Unchanged: 0/0
  3034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3035 ;;      Params:         0       0       0       0
  3036 ;;      Locals:         0       0       0       0
  3037 ;;      Temps:          0       2       0       0
  3038 ;;      Totals:         0       2       0       0
  3039 ;;Total ram usage:        2 bytes
  3040 ;; Hardware stack levels used: 1
  3041 ;; Hardware stack levels required when called: 4
  3042 ;; This function calls:
  3043 ;;		_DETERMINE_WAVESHAPE
  3044 ;;		_DO_ADC
  3045 ;; This function is called by:
  3046 ;;		_main
  3047 ;; This function uses a non-reentrant model
  3048 ;;
  3049                           
  3050     0586                     _GET_CURRENT_POT_VALUES:	
  3051                           ;psect for function _GET_CURRENT_POT_VALUES
  3052                           
  3053                           
  3054                           ;system.c: 56:     current_waveshape = DETERMINE_WAVESHAPE();
  3055                           
  3056                           ;incstack = 0
  3057                           ; Regs used in _GET_CURRENT_POT_VALUES: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3058     0586  3186  2614  3185   	fcall	_DETERMINE_WAVESHAPE
  3059     0589  00F8               	movwf	_current_waveshape	;volatile
  3060                           
  3061                           ;system.c: 57:     current_speed_linear = DO_ADC(&speed_adc_config_value);
  3062     058A  30EE               	movlw	low (_speed_adc_config_value| (0+32768))
  3063     058B  00C3               	movwf	DO_ADC@modifier
  3064     058C  3086               	movlw	high (_speed_adc_config_value| (0+32768))
  3065     058D  00C4               	movwf	DO_ADC@modifier+1
  3066     058E  3185  25E8  3185   	fcall	_DO_ADC
  3067     0591  0844               	movf	?_DO_ADC+1,w
  3068     0592  00B7               	movwf	_current_speed_linear+1	;volatile
  3069     0593  0843               	movf	?_DO_ADC,w
  3070     0594  00B6               	movwf	_current_speed_linear	;volatile
  3071                           
  3072                           ;system.c: 59:         current_depth = DO_ADC(&depth_adc_config_value);
  3073     0595  30ED               	movlw	low (_depth_adc_config_value| (0+32768))
  3074     0596  00C3               	movwf	DO_ADC@modifier
  3075     0597  3086               	movlw	high (_depth_adc_config_value| (0+32768))
  3076     0598  00C4               	movwf	DO_ADC@modifier+1
  3077     0599  3185  25E8  3185   	fcall	_DO_ADC
  3078     059C  0844               	movf	?_DO_ADC+1,w
  3079     059D  00B9               	movwf	_current_depth+1	;volatile
  3080     059E  0843               	movf	?_DO_ADC,w
  3081     059F  00B8               	movwf	_current_depth	;volatile
  3082                           
  3083                           ;system.c: 60:         current_depth = current_depth >> 2;
  3084     05A0  0839               	movf	_current_depth+1,w	;volatile
  3085     05A1  00CC               	movwf	??_GET_CURRENT_POT_VALUES+1
  3086     05A2  0838               	movf	_current_depth,w	;volatile
  3087     05A3  00CB               	movwf	??_GET_CURRENT_POT_VALUES
  3088     05A4  36CC               	lsrf	??_GET_CURRENT_POT_VALUES+1,f
  3089     05A5  0CCB               	rrf	??_GET_CURRENT_POT_VALUES,f
  3090     05A6  36CC               	lsrf	??_GET_CURRENT_POT_VALUES+1,f
  3091     05A7  0CCB               	rrf	??_GET_CURRENT_POT_VALUES,f
  3092     05A8  084B               	movf	??_GET_CURRENT_POT_VALUES,w
  3093     05A9  00B8               	movwf	_current_depth	;volatile
  3094     05AA  084C               	movf	??_GET_CURRENT_POT_VALUES+1,w
  3095     05AB  00B9               	movwf	_current_depth+1	;volatile
  3096                           
  3097                           ;system.c: 63:         current_symmetry = DO_ADC(&symmetry_adc_config_value);
  3098     05AC  30EC               	movlw	low (_symmetry_adc_config_value| (0+32768))
  3099     05AD  00C3               	movwf	DO_ADC@modifier
  3100     05AE  3086               	movlw	high (_symmetry_adc_config_value| (0+32768))
  3101     05AF  00C4               	movwf	DO_ADC@modifier+1
  3102     05B0  3185  25E8         	fcall	_DO_ADC
  3103     05B2  0843               	movf	?_DO_ADC,w
  3104     05B3  00A8               	movwf	_current_symmetry	;volatile
  3105     05B4  0844               	movf	?_DO_ADC+1,w
  3106     05B5  00A9               	movwf	_current_symmetry+1	;volatile
  3107     05B6  01AA               	clrf	_current_symmetry+2	;volatile
  3108     05B7  01AB               	clrf	_current_symmetry+3	;volatile
  3109     05B8  0008               	return
  3110     05B9                     __end_of_GET_CURRENT_POT_VALUES:
  3111                           
  3112                           	psect	text12
  3113     0614                     __ptext12:	
  3114 ;; *************** function _DETERMINE_WAVESHAPE *****************
  3115 ;; Defined at:
  3116 ;;		line 26 in file "system.c"
  3117 ;; Parameters:    Size  Location     Type
  3118 ;;		None
  3119 ;; Auto vars:     Size  Location     Type
  3120 ;;  ADC             2    6[BANK0 ] unsigned short 
  3121 ;; Return value:  Size  Location     Type
  3122 ;;                  1    wreg      unsigned char 
  3123 ;; Registers used:
  3124 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3125 ;; Tracked objects:
  3126 ;;		On entry : 1E/1
  3127 ;;		On exit  : 1F/0
  3128 ;;		Unchanged: 0/0
  3129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3130 ;;      Params:         0       0       0       0
  3131 ;;      Locals:         0       2       0       0
  3132 ;;      Temps:          0       0       0       0
  3133 ;;      Totals:         0       2       0       0
  3134 ;;Total ram usage:        2 bytes
  3135 ;; Hardware stack levels used: 1
  3136 ;; Hardware stack levels required when called: 3
  3137 ;; This function calls:
  3138 ;;		_DO_ADC
  3139 ;; This function is called by:
  3140 ;;		_GET_CURRENT_POT_VALUES
  3141 ;; This function uses a non-reentrant model
  3142 ;;
  3143                           
  3144     0614                     _DETERMINE_WAVESHAPE:	
  3145                           ;psect for function _DETERMINE_WAVESHAPE
  3146                           
  3147                           
  3148                           ;system.c: 27:     uint16_t ADC = DO_ADC(&waveshape_adc_config_value);
  3149                           
  3150                           ;incstack = 0
  3151                           ; Regs used in _DETERMINE_WAVESHAPE: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3152     0614  30EF               	movlw	low (_waveshape_adc_config_value| (0+32768))
  3153     0615  0020               	movlb	0	; select bank0
  3154     0616  00C3               	movwf	DO_ADC@modifier
  3155     0617  3086               	movlw	high (_waveshape_adc_config_value| (0+32768))
  3156     0618  00C4               	movwf	DO_ADC@modifier+1
  3157     0619  3185  25E8  3186   	fcall	_DO_ADC
  3158     061C  0844               	movf	?_DO_ADC+1,w
  3159     061D  00CA               	movwf	DETERMINE_WAVESHAPE@ADC+1
  3160     061E  0843               	movf	?_DO_ADC,w
  3161     061F  00C9               	movwf	DETERMINE_WAVESHAPE@ADC
  3162                           
  3163                           ;system.c: 28:     if(ADC <= 341){
  3164     0620  3001               	movlw	1
  3165     0621  024A               	subwf	DETERMINE_WAVESHAPE@ADC+1,w
  3166     0622  3056               	movlw	86
  3167     0623  1903               	skipnz
  3168     0624  0249               	subwf	DETERMINE_WAVESHAPE@ADC,w
  3169     0625  1803               	skipnc
  3170     0626  2E29               	goto	l1318
  3171                           
  3172                           ;system.c: 29:             return 0;
  3173     0627  3000               	movlw	0
  3174     0628  0008               	return
  3175     0629                     l1318:
  3176                           
  3177                           ;system.c: 31:         if (ADC <= 682){
  3178     0629  3002               	movlw	2
  3179     062A  024A               	subwf	DETERMINE_WAVESHAPE@ADC+1,w
  3180     062B  30AB               	movlw	171
  3181     062C  1903               	skipnz
  3182     062D  0249               	subwf	DETERMINE_WAVESHAPE@ADC,w
  3183     062E  1803               	skipnc
  3184     062F  2E32               	goto	l1324
  3185     0630                     l1320:
  3186                           
  3187                           ;system.c: 32:             return 1;
  3188     0630  3001               	movlw	1
  3189     0631  0008               	return
  3190     0632                     l1324:
  3191                           
  3192                           ;system.c: 34:         if (ADC <= 1023){
  3193     0632  3004               	movlw	4
  3194     0633  024A               	subwf	DETERMINE_WAVESHAPE@ADC+1,w
  3195     0634  3000               	movlw	0
  3196     0635  1903               	skipnz
  3197     0636  0249               	subwf	DETERMINE_WAVESHAPE@ADC,w
  3198     0637  1803               	skipnc
  3199     0638  2E30               	goto	l1320
  3200                           
  3201                           ;system.c: 35:             return 2;
  3202     0639  3002               	movlw	2
  3203     063A  0008               	return
  3204     063B                     __end_of_DETERMINE_WAVESHAPE:
  3205                           
  3206                           	psect	text13
  3207     05E8                     __ptext13:	
  3208 ;; *************** function _DO_ADC *****************
  3209 ;; Defined at:
  3210 ;;		line 25 in file "config.c"
  3211 ;; Parameters:    Size  Location     Type
  3212 ;;  modifier        2    0[BANK0 ] PTR const unsigned char 
  3213 ;;		 -> symmetry_adc_config_value(1), depth_adc_config_value(1), speed_adc_config_value(1), waveshape_adc_config_value(1
      +), 
  3214 ;; Auto vars:     Size  Location     Type
  3215 ;;  adc_result      2    3[BANK0 ] unsigned short 
  3216 ;;  temp            1    5[BANK0 ] unsigned char 
  3217 ;; Return value:  Size  Location     Type
  3218 ;;                  2    0[BANK0 ] unsigned short 
  3219 ;; Registers used:
  3220 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  3221 ;; Tracked objects:
  3222 ;;		On entry : 1F/0
  3223 ;;		On exit  : 1F/0
  3224 ;;		Unchanged: 0/0
  3225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3226 ;;      Params:         0       2       0       0
  3227 ;;      Locals:         0       3       0       0
  3228 ;;      Temps:          0       1       0       0
  3229 ;;      Totals:         0       6       0       0
  3230 ;;Total ram usage:        6 bytes
  3231 ;; Hardware stack levels used: 1
  3232 ;; Hardware stack levels required when called: 2
  3233 ;; This function calls:
  3234 ;;		Nothing
  3235 ;; This function is called by:
  3236 ;;		_DETERMINE_WAVESHAPE
  3237 ;;		_GET_CURRENT_POT_VALUES
  3238 ;; This function uses a non-reentrant model
  3239 ;;
  3240                           
  3241     05E8                     _DO_ADC:	
  3242                           ;psect for function _DO_ADC
  3243                           
  3244                           
  3245                           ;config.c: 26:     ADCON0 = 0x00;
  3246                           
  3247                           ;incstack = 0
  3248                           ; Regs used in _DO_ADC: [wreg-fsr0h+status,2+status,0+pclath]
  3249     05E8  0021               	movlb	1	; select bank1
  3250     05E9  019D               	clrf	29	;volatile
  3251                           
  3252                           ;config.c: 28:     uint8_t temp = (uint8_t)(*modifier << 2);
  3253     05EA  0020               	movlb	0	; select bank0
  3254     05EB  0843               	movf	DO_ADC@modifier,w
  3255     05EC  0084               	movwf	4
  3256     05ED  0844               	movf	DO_ADC@modifier+1,w
  3257     05EE  0085               	movwf	5
  3258     05EF  0800               	movf	0,w	;code access
  3259     05F0  00C5               	movwf	??_DO_ADC
  3260     05F1  3001               	movlw	1
  3261     05F2                     u345:
  3262     05F2  35C5               	lslf	??_DO_ADC,f
  3263     05F3  3EFF               	addlw	-1
  3264     05F4  1D03               	skipz
  3265     05F5  2DF2               	goto	u345
  3266     05F6  3545               	lslf	??_DO_ADC,w
  3267     05F7  00C8               	movwf	DO_ADC@temp
  3268                           
  3269                           ;config.c: 29:     ADCON0 = ADCON0 | temp;
  3270     05F8  0021               	movlb	1	; select bank1
  3271     05F9  081D               	movf	29,w	;volatile
  3272     05FA  0020               	movlb	0	; select bank0
  3273     05FB  0448               	iorwf	DO_ADC@temp,w
  3274     05FC  0021               	movlb	1	; select bank1
  3275     05FD  009D               	movwf	29	;volatile
  3276                           
  3277                           ;config.c: 30:     ADON = 1;
  3278     05FE  141D               	bsf	29,0	;volatile
  3279                           
  3280                           ;config.c: 31:     _delay((unsigned long)((0.005)*(32000000/4000.0)));
  3281     05FF  300D               	movlw	13
  3282     0600                     u917:
  3283     0600  0B89               	decfsz	9,f
  3284     0601  2E00               	goto	u917
  3285     0602  0000               	nop
  3286                           
  3287                           ;config.c: 32:     GO_nDONE = 1;
  3288     0603  0021               	movlb	1	; select bank1
  3289     0604  149D               	bsf	29,1	;volatile
  3290     0605                     l159:	
  3291                           ;config.c: 33:     while(GO_nDONE == 1){}
  3292                           
  3293     0605  189D               	btfsc	29,1	;volatile
  3294     0606  2E05               	goto	l159
  3295                           
  3296                           ;config.c: 34:     ADON = 0;
  3297     0607  101D               	bcf	29,0	;volatile
  3298                           
  3299                           ;config.c: 35:     uint16_t adc_result = ((uint16_t)(ADRESH << 8) | ADRESL);
  3300     0608  081C               	movf	28,w	;volatile
  3301     0609  0020               	movlb	0	; select bank0
  3302     060A  00C7               	movwf	DO_ADC@adc_result+1
  3303     060B  0021               	movlb	1	; select bank1
  3304     060C  081B               	movf	27,w	;volatile
  3305     060D  0020               	movlb	0	; select bank0
  3306     060E  00C6               	movwf	DO_ADC@adc_result
  3307                           
  3308                           ;config.c: 36:     return adc_result;
  3309     060F  0847               	movf	DO_ADC@adc_result+1,w
  3310     0610  00C4               	movwf	?_DO_ADC+1
  3311     0611  0846               	movf	DO_ADC@adc_result,w
  3312     0612  00C3               	movwf	?_DO_ADC
  3313     0613  0008               	return
  3314     0614                     __end_of_DO_ADC:
  3315                           
  3316                           	psect	text14
  3317     06E1                     __ptext14:	
  3318 ;; *************** function _CONFIG_TMR0_INTERRUPT *****************
  3319 ;; Defined at:
  3320 ;;		line 58 in file "config.c"
  3321 ;; Parameters:    Size  Location     Type
  3322 ;;		None
  3323 ;; Auto vars:     Size  Location     Type
  3324 ;;		None
  3325 ;; Return value:  Size  Location     Type
  3326 ;;                  1    wreg      unsigned char 
  3327 ;; Registers used:
  3328 ;;		None
  3329 ;; Tracked objects:
  3330 ;;		On entry : B1F/1
  3331 ;;		On exit  : B1F/1
  3332 ;;		Unchanged: B1F/0
  3333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3334 ;;      Params:         0       0       0       0
  3335 ;;      Locals:         0       0       0       0
  3336 ;;      Temps:          0       0       0       0
  3337 ;;      Totals:         0       0       0       0
  3338 ;;Total ram usage:        0 bytes
  3339 ;; Hardware stack levels used: 1
  3340 ;; Hardware stack levels required when called: 2
  3341 ;; This function calls:
  3342 ;;		Nothing
  3343 ;; This function is called by:
  3344 ;;		_main
  3345 ;; This function uses a non-reentrant model
  3346 ;;
  3347                           
  3348     06E1                     _CONFIG_TMR0_INTERRUPT:	
  3349                           ;psect for function _CONFIG_TMR0_INTERRUPT
  3350                           
  3351                           
  3352                           ;config.c: 59:     TMR0IE = 1;
  3353                           
  3354                           ;incstack = 0
  3355                           ; Regs used in _CONFIG_TMR0_INTERRUPT: []
  3356     06E1  168B               	bsf	11,5	;volatile
  3357                           
  3358                           ;config.c: 60:     return 1;;	Return value of _CONFIG_TMR0_INTERRUPT is never used
  3359     06E2  0008               	return
  3360     06E3                     __end_of_CONFIG_TMR0_INTERRUPT:
  3361                           
  3362                           	psect	text15
  3363     06A2                     __ptext15:	
  3364 ;; *************** function _CONFIG_SYSTEM *****************
  3365 ;; Defined at:
  3366 ;;		line 64 in file "config.c"
  3367 ;; Parameters:    Size  Location     Type
  3368 ;;		None
  3369 ;; Auto vars:     Size  Location     Type
  3370 ;;		None
  3371 ;; Return value:  Size  Location     Type
  3372 ;;                  1    wreg      unsigned char 
  3373 ;; Registers used:
  3374 ;;		wreg, status,2, status,0, pclath, cstack
  3375 ;; Tracked objects:
  3376 ;;		On entry : B1F/0
  3377 ;;		On exit  : B1F/0
  3378 ;;		Unchanged: B00/0
  3379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3380 ;;      Params:         0       0       0       0
  3381 ;;      Locals:         0       0       0       0
  3382 ;;      Temps:          0       0       0       0
  3383 ;;      Totals:         0       0       0       0
  3384 ;;Total ram usage:        0 bytes
  3385 ;; Hardware stack levels used: 1
  3386 ;; Hardware stack levels required when called: 3
  3387 ;; This function calls:
  3388 ;;		_CONFIG_ADC_PINS
  3389 ;;		_CONFIG_INT_OSC
  3390 ;;		_CONFIG_PORTS
  3391 ;;		_CONFIG_PWM_CCP3
  3392 ;; This function is called by:
  3393 ;;		_main
  3394 ;; This function uses a non-reentrant model
  3395 ;;
  3396                           
  3397     06A2                     _CONFIG_SYSTEM:	
  3398                           ;psect for function _CONFIG_SYSTEM
  3399                           
  3400                           
  3401                           ;config.c: 65:     CONFIG_INT_OSC();
  3402                           
  3403                           ;incstack = 0
  3404                           ; Regs used in _CONFIG_SYSTEM: [wreg+status,2+status,0+pclath+cstack]
  3405     06A2  3186  26CD  3186   	fcall	_CONFIG_INT_OSC
  3406                           
  3407                           ;config.c: 66:     CONFIG_PORTS();
  3408     06A5  3186  26AE  3186   	fcall	_CONFIG_PORTS
  3409                           
  3410                           ;config.c: 67:     CONFIG_ADC_PINS();
  3411     06A8  3186  26D8  3186   	fcall	_CONFIG_ADC_PINS
  3412                           
  3413                           ;config.c: 68:     CONFIG_PWM_CCP3();
  3414     06AB  3186  268F         	fcall	_CONFIG_PWM_CCP3
  3415     06AD  0008               	return
  3416     06AE                     __end_of_CONFIG_SYSTEM:
  3417                           
  3418                           	psect	text16
  3419     068F                     __ptext16:	
  3420 ;; *************** function _CONFIG_PWM_CCP3 *****************
  3421 ;; Defined at:
  3422 ;;		line 40 in file "config.c"
  3423 ;; Parameters:    Size  Location     Type
  3424 ;;		None
  3425 ;; Auto vars:     Size  Location     Type
  3426 ;;		None
  3427 ;; Return value:  Size  Location     Type
  3428 ;;                  1    wreg      unsigned char 
  3429 ;; Registers used:
  3430 ;;		wreg, status,2
  3431 ;; Tracked objects:
  3432 ;;		On entry : B1F/1
  3433 ;;		On exit  : B1F/0
  3434 ;;		Unchanged: B00/0
  3435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3436 ;;      Params:         0       0       0       0
  3437 ;;      Locals:         0       0       0       0
  3438 ;;      Temps:          0       0       0       0
  3439 ;;      Totals:         0       0       0       0
  3440 ;;Total ram usage:        0 bytes
  3441 ;; Hardware stack levels used: 1
  3442 ;; Hardware stack levels required when called: 2
  3443 ;; This function calls:
  3444 ;;		Nothing
  3445 ;; This function is called by:
  3446 ;;		_CONFIG_SYSTEM
  3447 ;; This function uses a non-reentrant model
  3448 ;;
  3449                           
  3450     068F                     _CONFIG_PWM_CCP3:	
  3451                           ;psect for function _CONFIG_PWM_CCP3
  3452                           
  3453                           
  3454                           ;config.c: 41:     SRLEN = 0;
  3455                           
  3456                           ;incstack = 0
  3457                           ; Regs used in _CONFIG_PWM_CCP3: [wreg+status,2]
  3458     068F  0022               	movlb	2	; select bank2
  3459     0690  139A               	bcf	26,7	;volatile
  3460                           
  3461                           ;config.c: 42:     C1ON = 0;
  3462     0691  1391               	bcf	17,7	;volatile
  3463                           
  3464                           ;config.c: 44:     TRISA2 = 1;
  3465     0692  0021               	movlb	1	; select bank1
  3466     0693  150C               	bsf	12,2	;volatile
  3467                           
  3468                           ;config.c: 45:     PR2 = 0xFF;
  3469     0694  30FF               	movlw	255
  3470     0695  0020               	movlb	0	; select bank0
  3471     0696  009B               	movwf	27	;volatile
  3472                           
  3473                           ;config.c: 46:     CCP3CON = CCP3CON | 0b00001111;
  3474     0697  0026               	movlb	6	; select bank6
  3475     0698  0813               	movf	19,w	;volatile
  3476     0699  380F               	iorlw	15
  3477     069A  0093               	movwf	19	;volatile
  3478                           
  3479                           ;config.c: 48:     CCPTMRS0 = 0x00;
  3480     069B  0025               	movlb	5	; select bank5
  3481     069C  019E               	clrf	30	;volatile
  3482                           
  3483                           ;config.c: 49:     TMR2IF = 0;
  3484     069D  0020               	movlb	0	; select bank0
  3485     069E  1091               	bcf	17,1	;volatile
  3486                           
  3487                           ;config.c: 50:     T2CON = T2CON | 0b00000000;
  3488     069F  081C               	movf	28,w	;volatile
  3489     06A0  009C               	movwf	28	;volatile
  3490     06A1  0008               	return
  3491     06A2                     __end_of_CONFIG_PWM_CCP3:
  3492                           
  3493                           	psect	text17
  3494     06AE                     __ptext17:	
  3495 ;; *************** function _CONFIG_PORTS *****************
  3496 ;; Defined at:
  3497 ;;		line 11 in file "config.c"
  3498 ;; Parameters:    Size  Location     Type
  3499 ;;		None
  3500 ;; Auto vars:     Size  Location     Type
  3501 ;;		None
  3502 ;; Return value:  Size  Location     Type
  3503 ;;                  1    wreg      unsigned char 
  3504 ;; Registers used:
  3505 ;;		wreg, status,2
  3506 ;; Tracked objects:
  3507 ;;		On entry : B1F/1
  3508 ;;		On exit  : B1F/4
  3509 ;;		Unchanged: B00/0
  3510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3511 ;;      Params:         0       0       0       0
  3512 ;;      Locals:         0       0       0       0
  3513 ;;      Temps:          0       0       0       0
  3514 ;;      Totals:         0       0       0       0
  3515 ;;Total ram usage:        0 bytes
  3516 ;; Hardware stack levels used: 1
  3517 ;; Hardware stack levels required when called: 2
  3518 ;; This function calls:
  3519 ;;		Nothing
  3520 ;; This function is called by:
  3521 ;;		_CONFIG_SYSTEM
  3522 ;; This function uses a non-reentrant model
  3523 ;;
  3524                           
  3525     06AE                     _CONFIG_PORTS:	
  3526                           ;psect for function _CONFIG_PORTS
  3527                           
  3528                           
  3529                           ;config.c: 12:     ANSELC = 0b00001111;
  3530                           
  3531                           ;incstack = 0
  3532                           ; Regs used in _CONFIG_PORTS: [wreg+status,2]
  3533     06AE  300F               	movlw	15
  3534     06AF  0023               	movlb	3	; select bank3
  3535     06B0  008E               	movwf	14	;volatile
  3536                           
  3537                           ;config.c: 13:     TRISC = 0b00001111;
  3538     06B1  300F               	movlw	15
  3539     06B2  0021               	movlb	1	; select bank1
  3540     06B3  008E               	movwf	14	;volatile
  3541                           
  3542                           ;config.c: 14:     WPUC = 0b00000000;
  3543     06B4  0024               	movlb	4	; select bank4
  3544     06B5  018E               	clrf	14	;volatile
  3545     06B6  0008               	return
  3546     06B7                     __end_of_CONFIG_PORTS:
  3547                           
  3548                           	psect	text18
  3549     06CD                     __ptext18:	
  3550 ;; *************** function _CONFIG_INT_OSC *****************
  3551 ;; Defined at:
  3552 ;;		line 3 in file "config.c"
  3553 ;; Parameters:    Size  Location     Type
  3554 ;;		None
  3555 ;; Auto vars:     Size  Location     Type
  3556 ;;		None
  3557 ;; Return value:  Size  Location     Type
  3558 ;;                  1    wreg      unsigned char 
  3559 ;; Registers used:
  3560 ;;		wreg
  3561 ;; Tracked objects:
  3562 ;;		On entry : B1F/0
  3563 ;;		On exit  : B1F/1
  3564 ;;		Unchanged: B00/0
  3565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3566 ;;      Params:         0       0       0       0
  3567 ;;      Locals:         0       0       0       0
  3568 ;;      Temps:          0       0       0       0
  3569 ;;      Totals:         0       0       0       0
  3570 ;;Total ram usage:        0 bytes
  3571 ;; Hardware stack levels used: 1
  3572 ;; Hardware stack levels required when called: 2
  3573 ;; This function calls:
  3574 ;;		Nothing
  3575 ;; This function is called by:
  3576 ;;		_CONFIG_SYSTEM
  3577 ;; This function uses a non-reentrant model
  3578 ;;
  3579                           
  3580     06CD                     _CONFIG_INT_OSC:	
  3581                           ;psect for function _CONFIG_INT_OSC
  3582                           
  3583                           
  3584                           ;config.c: 4:     OSCCON = 0b11110000;
  3585                           
  3586                           ;incstack = 0
  3587                           ; Regs used in _CONFIG_INT_OSC: [wreg]
  3588     06CD  30F0               	movlw	240
  3589     06CE  0021               	movlb	1	; select bank1
  3590     06CF  0099               	movwf	25	;volatile
  3591                           
  3592                           ;config.c: 5:     OSCTUNE = 0b00011111;
  3593     06D0  301F               	movlw	31
  3594     06D1  0098               	movwf	24	;volatile
  3595     06D2  0008               	return
  3596     06D3                     __end_of_CONFIG_INT_OSC:
  3597                           
  3598                           	psect	text19
  3599     06D8                     __ptext19:	
  3600 ;; *************** function _CONFIG_ADC_PINS *****************
  3601 ;; Defined at:
  3602 ;;		line 19 in file "config.c"
  3603 ;; Parameters:    Size  Location     Type
  3604 ;;		None
  3605 ;; Auto vars:     Size  Location     Type
  3606 ;;		None
  3607 ;; Return value:  Size  Location     Type
  3608 ;;                  1    wreg      unsigned char 
  3609 ;; Registers used:
  3610 ;;		wreg
  3611 ;; Tracked objects:
  3612 ;;		On entry : B1F/4
  3613 ;;		On exit  : B1F/1
  3614 ;;		Unchanged: B00/0
  3615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3616 ;;      Params:         0       0       0       0
  3617 ;;      Locals:         0       0       0       0
  3618 ;;      Temps:          0       0       0       0
  3619 ;;      Totals:         0       0       0       0
  3620 ;;Total ram usage:        0 bytes
  3621 ;; Hardware stack levels used: 1
  3622 ;; Hardware stack levels required when called: 2
  3623 ;; This function calls:
  3624 ;;		Nothing
  3625 ;; This function is called by:
  3626 ;;		_CONFIG_SYSTEM
  3627 ;; This function uses a non-reentrant model
  3628 ;;
  3629                           
  3630     06D8                     _CONFIG_ADC_PINS:	
  3631                           ;psect for function _CONFIG_ADC_PINS
  3632                           
  3633                           
  3634                           ;config.c: 20:     ADCON1 = 0b10100000;
  3635                           
  3636                           ;incstack = 0
  3637                           ; Regs used in _CONFIG_ADC_PINS: [wreg]
  3638     06D8  30A0               	movlw	160
  3639     06D9  0021               	movlb	1	; select bank1
  3640     06DA  009E               	movwf	30	;volatile
  3641     06DB  0008               	return
  3642     06DC                     __end_of_CONFIG_ADC_PINS:
  3643                           
  3644                           	psect	intentry
  3645     0004                     __pintentry:	
  3646 ;; *************** function _INTERRUPT_InterruptManager *****************
  3647 ;; Defined at:
  3648 ;;		line 30 in file "main.c"
  3649 ;; Parameters:    Size  Location     Type
  3650 ;;		None
  3651 ;; Auto vars:     Size  Location     Type
  3652 ;;		None
  3653 ;; Return value:  Size  Location     Type
  3654 ;;                  1    wreg      void 
  3655 ;; Registers used:
  3656 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3657 ;; Tracked objects:
  3658 ;;		On entry : 0/0
  3659 ;;		On exit  : 19/0
  3660 ;;		Unchanged: 0/0
  3661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3662 ;;      Params:         0       0       0       0
  3663 ;;      Locals:         0       0       0       0
  3664 ;;      Temps:          2       0       0       0
  3665 ;;      Totals:         2       0       0       0
  3666 ;;Total ram usage:        2 bytes
  3667 ;; Hardware stack levels used: 1
  3668 ;; Hardware stack levels required when called: 1
  3669 ;; This function calls:
  3670 ;;		_SET_DUTY_CCP3
  3671 ;; This function is called by:
  3672 ;;		Interrupt level 1
  3673 ;; This function uses a non-reentrant model
  3674 ;;
  3675                           
  3676     0004                     _INTERRUPT_InterruptManager:
  3677                           
  3678                           ;incstack = 0
  3679     0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  3680                           
  3681                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3682     0005  3180               	pagesel	$
  3683                           
  3684                           ;main.c: 31:     TMR0 = (uint8_t)final_TMR0;
  3685     0006  0020               	movlb	0	; select bank0
  3686     0007  0830               	movf	_final_TMR0,w	;volatile
  3687     0008  0095               	movwf	21	;volatile
  3688                           
  3689                           ;main.c: 32:     if(TMR0IF == 1){
  3690     0009  1D0B               	btfss	11,2	;volatile
  3691     000A  28D5               	goto	i1l95
  3692                           
  3693                           ;main.c: 33:     GIE = 0;
  3694     000B  138B               	bcf	11,7	;volatile
  3695                           
  3696                           ;main.c: 35:     TMR0IF = 0;
  3697     000C  110B               	bcf	11,2	;volatile
  3698                           
  3699                           ;main.c: 37:     if(current_waveshape == 0){
  3700     000D  0878               	movf	_current_waveshape,w	;volatile
  3701     000E  1D03               	btfss	3,2
  3702     000F  2820               	goto	i1l1588
  3703                           
  3704                           ;main.c: 38:         duty = tri_table_one_quadrant[current_one_quadrant_index];
  3705     0010  0877               	movf	_current_one_quadrant_index,w	;volatile
  3706     0011  00F4               	movwf	??_INTERRUPT_InterruptManager
  3707     0012  01F5               	clrf	??_INTERRUPT_InterruptManager+1
  3708     0013  35F4               	lslf	??_INTERRUPT_InterruptManager,f
  3709     0014  0DF5               	rlf	??_INTERRUPT_InterruptManager+1,f
  3710     0015  30F1               	movlw	low _tri_table_one_quadrant
  3711     0016  0774               	addwf	??_INTERRUPT_InterruptManager,w
  3712     0017  0084               	movwf	4
  3713     0018  3000               	movlw	high _tri_table_one_quadrant
  3714     0019  3D75               	addwfc	??_INTERRUPT_InterruptManager+1,w
  3715     001A  3880               	iorlw	128
  3716     001B  0085               	movwf	5
  3717     001C  3F00               	moviw [0]fsr0
  3718     001D  00F9               	movwf	_duty	;volatile
  3719     001E  3F01               	moviw [1]fsr0
  3720     001F  283A               	goto	L2
  3721     0020                     i1l1588:	
  3722                           ;main.c: 39:     }
  3723                           
  3724     0020  0378               	decf	_current_waveshape,w	;volatile
  3725     0021  1D03               	btfss	3,2
  3726     0022  2833               	goto	i1l1592
  3727                           
  3728                           ;main.c: 41:         duty = sine_table_one_quadrant[current_one_quadrant_index];
  3729     0023  0877               	movf	_current_one_quadrant_index,w	;volatile
  3730     0024  00F4               	movwf	??_INTERRUPT_InterruptManager
  3731     0025  01F5               	clrf	??_INTERRUPT_InterruptManager+1
  3732     0026  35F4               	lslf	??_INTERRUPT_InterruptManager,f
  3733     0027  0DF5               	rlf	??_INTERRUPT_InterruptManager+1,f
  3734     0028  30F3               	movlw	low _sine_table_one_quadrant
  3735     0029  0774               	addwf	??_INTERRUPT_InterruptManager,w
  3736     002A  0084               	movwf	4
  3737     002B  3001               	movlw	high _sine_table_one_quadrant
  3738     002C  3D75               	addwfc	??_INTERRUPT_InterruptManager+1,w
  3739     002D  3880               	iorlw	128
  3740     002E  0085               	movwf	5
  3741     002F  3F00               	moviw [0]fsr0
  3742     0030  00F9               	movwf	_duty	;volatile
  3743     0031  3F01               	moviw [1]fsr0
  3744     0032  283A               	goto	L2
  3745     0033                     i1l1592:	
  3746                           ;main.c: 42:     }
  3747                           
  3748     0033  3002               	movlw	2
  3749     0034  0678               	xorwf	_current_waveshape,w	;volatile
  3750     0035  1D03               	btfss	3,2
  3751     0036  283B               	goto	i1l1596
  3752                           
  3753                           ;main.c: 44:         duty = 1023;
  3754     0037  30FF               	movlw	255
  3755     0038  00F9               	movwf	_duty	;volatile
  3756     0039  3003               	movlw	3
  3757     003A                     L2:
  3758     003A  00FA               	movwf	_duty+1	;volatile
  3759     003B                     i1l1596:
  3760                           
  3761                           ;main.c: 46:     if(current_one_quadrant_index == 128){
  3762     003B  3080               	movlw	128
  3763     003C  0677               	xorwf	_current_one_quadrant_index,w	;volatile
  3764     003D  1D03               	btfss	3,2
  3765     003E  2842               	goto	i1l1600
  3766                           
  3767                           ;main.c: 47:         current_quadrant = 1;
  3768     003F  3001               	movlw	1
  3769     0040  00C2               	movwf	_current_quadrant	;volatile
  3770                           
  3771                           ;main.c: 48:     }
  3772     0041  284D               	goto	i1l1610
  3773     0042                     i1l1600:
  3774     0042  0877               	movf	_current_one_quadrant_index,w	;volatile
  3775     0043  1D03               	btfss	3,2
  3776     0044  284D               	goto	i1l1610
  3777                           
  3778                           ;main.c: 50:         current_quadrant = 0;
  3779     0045  01C2               	clrf	_current_quadrant	;volatile
  3780                           
  3781                           ;main.c: 51:         if(current_halfcycle == 0){
  3782     0046  0876               	movf	_current_halfcycle,w	;volatile
  3783     0047  1D03               	btfss	3,2
  3784     0048  284C               	goto	i1l1608
  3785                           
  3786                           ;main.c: 52:             current_halfcycle = 1;
  3787     0049  3001               	movlw	1
  3788     004A  00F6               	movwf	_current_halfcycle	;volatile
  3789                           
  3790                           ;main.c: 53:         }
  3791     004B  284D               	goto	i1l1610
  3792     004C                     i1l1608:
  3793                           
  3794                           ;main.c: 55:             current_halfcycle = 0;
  3795     004C  01F6               	clrf	_current_halfcycle	;volatile
  3796     004D                     i1l1610:
  3797                           
  3798                           ;main.c: 58:     if(current_quadrant == 0){
  3799     004D  0842               	movf	_current_quadrant,w	;volatile
  3800     004E  1D03               	btfss	3,2
  3801     004F  2855               	goto	i1l1614
  3802                           
  3803                           ;main.c: 59:         current_one_quadrant_index++;
  3804     0050  3001               	movlw	1
  3805     0051  00F4               	movwf	??_INTERRUPT_InterruptManager
  3806     0052  0874               	movf	??_INTERRUPT_InterruptManager,w
  3807     0053  07F7               	addwf	_current_one_quadrant_index,f	;volatile
  3808                           
  3809                           ;main.c: 60:     }
  3810     0054  2857               	goto	i1l89
  3811     0055                     i1l1614:
  3812                           
  3813                           ;main.c: 62:         current_one_quadrant_index--;
  3814     0055  3001               	movlw	1
  3815     0056  02F7               	subwf	_current_one_quadrant_index,f	;volatile
  3816     0057                     i1l89:	
  3817                           ;main.c: 63:     }
  3818                           
  3819                           
  3820                           ;main.c: 64:     if(current_halfcycle == 1){
  3821     0057  0376               	decf	_current_halfcycle,w	;volatile
  3822     0058  1D03               	btfss	3,2
  3823     0059  2864               	goto	i1l90
  3824                           
  3825                           ;main.c: 65:     duty = 1023 - duty;
  3826     005A  30FF               	movlw	255
  3827     005B  00F4               	movwf	??_INTERRUPT_InterruptManager
  3828     005C  3003               	movlw	3
  3829     005D  00F5               	movwf	??_INTERRUPT_InterruptManager+1
  3830     005E  0879               	movf	_duty,w	;volatile
  3831     005F  0274               	subwf	??_INTERRUPT_InterruptManager,w
  3832     0060  00F9               	movwf	_duty	;volatile
  3833     0061  087A               	movf	_duty+1,w	;volatile
  3834     0062  3B75               	subwfb	??_INTERRUPT_InterruptManager+1,w
  3835     0063  00FA               	movwf	_duty+1	;volatile
  3836     0064                     i1l90:	
  3837                           ;main.c: 66:     }
  3838                           
  3839                           
  3840                           ;main.c: 70:         if(current_depth == 255){
  3841     0064  0A38               	incf	_current_depth,w	;volatile
  3842     0065  0439               	iorwf	_current_depth+1,w	;volatile
  3843     0066  1D03               	btfss	3,2
  3844     0067  2871               	goto	i1l1620
  3845                           
  3846                           ;main.c: 71:             duty = 1023 - duty;
  3847     0068  30FF               	movlw	255
  3848     0069  00F4               	movwf	??_INTERRUPT_InterruptManager
  3849     006A  3003               	movlw	3
  3850     006B  00F5               	movwf	??_INTERRUPT_InterruptManager+1
  3851     006C  0879               	movf	_duty,w	;volatile
  3852     006D  0274               	subwf	??_INTERRUPT_InterruptManager,w
  3853     006E  00F9               	movwf	_duty	;volatile
  3854     006F  087A               	movf	_duty+1,w	;volatile
  3855     0070  28CB               	goto	L4
  3856     0071                     i1l1620:	
  3857                           ;main.c: 72:         }
  3858                           
  3859     0071  0838               	movf	_current_depth,w	;volatile
  3860     0072  0439               	iorwf	_current_depth+1,w	;volatile
  3861     0073  1903               	btfsc	3,2
  3862     0074  28CD               	goto	i1l1626
  3863                           
  3864                           ;main.c: 74:             duty_low_byte = duty & 0xFF;
  3865     0075  0879               	movf	_duty,w	;volatile
  3866     0076  00C1               	movwf	_duty_low_byte	;volatile
  3867                           
  3868                           ;main.c: 75:             duty_high_byte = duty >> 8;
  3869     0077  087A               	movf	_duty+1,w	;volatile
  3870     0078  00C0               	movwf	_duty_high_byte	;volatile
  3871     0079  01A2               	clrf	34	;# 
  3872     007A  01A0               	clrf	32	;# 
  3873     007B  1003               	bcf	3,0	;# 
  3874     007C  0838               	movf	_current_depth,w	;# 
  3875     007D  1841               	btfsc	_duty_low_byte,0	;# 
  3876     007E  07A2               	addwf	34,f	;# 
  3877     007F  0CA2               	rrf	34,f	;# 
  3878     0080  0CA0               	rrf	32,f	;# 
  3879     0081  18C1               	btfsc	_duty_low_byte,1	;# 
  3880     0082  07A2               	addwf	34,f	;# 
  3881     0083  0CA2               	rrf	34,f	;# 
  3882     0084  0CA0               	rrf	32,f	;# 
  3883     0085  1941               	btfsc	_duty_low_byte,2	;# 
  3884     0086  07A2               	addwf	34,f	;# 
  3885     0087  0CA2               	rrf	34,f	;# 
  3886     0088  0CA0               	rrf	32,f	;# 
  3887     0089  19C1               	btfsc	_duty_low_byte,3	;# 
  3888     008A  07A2               	addwf	34,f	;# 
  3889     008B  0CA2               	rrf	34,f	;# 
  3890     008C  0CA0               	rrf	32,f	;# 
  3891     008D  1A41               	btfsc	_duty_low_byte,4	;# 
  3892     008E  07A2               	addwf	34,f	;# 
  3893     008F  0CA2               	rrf	34,f	;# 
  3894     0090  0CA0               	rrf	32,f	;# 
  3895     0091  1AC1               	btfsc	_duty_low_byte,5	;# 
  3896     0092  07A2               	addwf	34,f	;# 
  3897     0093  0CA2               	rrf	34,f	;# 
  3898     0094  0CA0               	rrf	32,f	;# 
  3899     0095  1B41               	btfsc	_duty_low_byte,6	;# 
  3900     0096  07A2               	addwf	34,f	;# 
  3901     0097  0CA2               	rrf	34,f	;# 
  3902     0098  0CA0               	rrf	32,f	;# 
  3903     0099  1BC1               	btfsc	_duty_low_byte,7	;# 
  3904     009A  07A2               	addwf	34,f	;# 
  3905     009B  0CA2               	rrf	34,f	;# 
  3906     009C  0CA0               	rrf	32,f	;# 
  3907     009D  01A1               	clrf	33	;# 
  3908     009E  1840               	btfsc	_duty_high_byte,0	;# 
  3909     009F  07A2               	addwf	34,f	;# 
  3910     00A0  0CA2               	rrf	34,f	;# 
  3911     00A1  0CA1               	rrf	33,f	;# 
  3912     00A2  18C0               	btfsc	_duty_high_byte,1	;# 
  3913     00A3  07A2               	addwf	34,f	;# 
  3914     00A4  0CA2               	rrf	34,f	;# 
  3915     00A5  0CA1               	rrf	33,f	;# 
  3916     00A6  1940               	btfsc	_duty_high_byte,2	;# 
  3917     00A7  07A2               	addwf	34,f	;# 
  3918     00A8  0CA2               	rrf	34,f	;# 
  3919     00A9  0CA1               	rrf	33,f	;# 
  3920     00AA  19C0               	btfsc	_duty_high_byte,3	;# 
  3921     00AB  07A2               	addwf	34,f	;# 
  3922     00AC  0CA2               	rrf	34,f	;# 
  3923     00AD  0CA1               	rrf	33,f	;# 
  3924     00AE  1A40               	btfsc	_duty_high_byte,4	;# 
  3925     00AF  07A2               	addwf	34,f	;# 
  3926     00B0  0CA2               	rrf	34,f	;# 
  3927     00B1  0CA1               	rrf	33,f	;# 
  3928     00B2  1AC0               	btfsc	_duty_high_byte,5	;# 
  3929     00B3  07A2               	addwf	34,f	;# 
  3930     00B4  0CA2               	rrf	34,f	;# 
  3931     00B5  0CA1               	rrf	33,f	;# 
  3932     00B6  1B40               	btfsc	_duty_high_byte,6	;# 
  3933     00B7  07A2               	addwf	34,f	;# 
  3934     00B8  0CA2               	rrf	34,f	;# 
  3935     00B9  0CA1               	rrf	33,f	;# 
  3936     00BA  1BC0               	btfsc	_duty_high_byte,7	;# 
  3937     00BB  07A2               	addwf	34,f	;# 
  3938     00BC  0CA2               	rrf	34,f	;# 
  3939     00BD  0CA1               	rrf	33,f	;# 
  3940                           
  3941                           ;main.c: 110:             duty = 1023 - *top_two_bytes_ptr;
  3942     00BE  0020               	movlb	0	; select bank0
  3943     00BF  0864               	movf	_top_two_bytes_ptr,w
  3944     00C0  0086               	movwf	6
  3945     00C1  0865               	movf	_top_two_bytes_ptr+1,w
  3946     00C2  0087               	movwf	7
  3947     00C3  30FF               	movlw	255
  3948     00C4  00F4               	movwf	??_INTERRUPT_InterruptManager
  3949     00C5  3003               	movlw	3
  3950     00C6  00F5               	movwf	??_INTERRUPT_InterruptManager+1
  3951     00C7  3F40               	moviw [0]fsr1
  3952     00C8  0274               	subwf	??_INTERRUPT_InterruptManager,w
  3953     00C9  00F9               	movwf	_duty	;volatile
  3954     00CA  3F41               	moviw [1]fsr1
  3955     00CB                     L4:
  3956     00CB  3B75               	subwfb	??_INTERRUPT_InterruptManager+1,w
  3957     00CC  28D0               	goto	L3
  3958     00CD                     i1l1626:	
  3959                           ;main.c: 111:         }
  3960                           
  3961                           
  3962                           ;main.c: 113:             duty = 1023;
  3963     00CD  30FF               	movlw	255
  3964     00CE  00F9               	movwf	_duty	;volatile
  3965     00CF  3003               	movlw	3
  3966     00D0                     L3:
  3967     00D0  00FA               	movwf	_duty+1	;volatile
  3968                           
  3969                           ;main.c: 118:     SET_DUTY_CCP3(&duty);
  3970     00D1  3079               	movlw	(low (_duty| 0))& (0+255)
  3971     00D2  3186  263B         	fcall	_SET_DUTY_CCP3
  3972                           
  3973                           ;main.c: 122:     GIE = 1;
  3974     00D4  178B               	bsf	11,7	;volatile
  3975     00D5                     i1l95:
  3976     00D5  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  3977     00D6  0009               	retfie
  3978     00D7                     __end_of_INTERRUPT_InterruptManager:
  3979                           
  3980                           	psect	text21
  3981     063B                     __ptext21:	
  3982 ;; *************** function _SET_DUTY_CCP3 *****************
  3983 ;; Defined at:
  3984 ;;		line 44 in file "system.c"
  3985 ;; Parameters:    Size  Location     Type
  3986 ;;  duty_ptr        1    wreg     PTR volatile unsigned sh
  3987 ;;		 -> duty(2), 
  3988 ;; Auto vars:     Size  Location     Type
  3989 ;;  duty_ptr        1    3[COMMON] PTR volatile unsigned sh
  3990 ;;		 -> duty(2), 
  3991 ;;  temp            1    2[COMMON] unsigned char 
  3992 ;; Return value:  Size  Location     Type
  3993 ;;                  1    wreg      unsigned char 
  3994 ;; Registers used:
  3995 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3996 ;; Tracked objects:
  3997 ;;		On entry : 1F/0
  3998 ;;		On exit  : 1F/6
  3999 ;;		Unchanged: 0/0
  4000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4001 ;;      Params:         0       0       0       0
  4002 ;;      Locals:         2       0       0       0
  4003 ;;      Temps:          2       0       0       0
  4004 ;;      Totals:         4       0       0       0
  4005 ;;Total ram usage:        4 bytes
  4006 ;; Hardware stack levels used: 1
  4007 ;; This function calls:
  4008 ;;		Nothing
  4009 ;; This function is called by:
  4010 ;;		_INTERRUPT_InterruptManager
  4011 ;; This function uses a non-reentrant model
  4012 ;;
  4013                           
  4014     063B                     _SET_DUTY_CCP3:	
  4015                           ;psect for function _SET_DUTY_CCP3
  4016                           
  4017                           
  4018                           ;incstack = 0
  4019                           ; Regs used in _SET_DUTY_CCP3: [wreg+fsr1l+fsr1h+status,2+status,0]
  4020                           ;SET_DUTY_CCP3@duty_ptr stored from wreg
  4021     063B  00F3               	movwf	SET_DUTY_CCP3@duty_ptr
  4022                           
  4023                           ;system.c: 46:     CCPR3L = (uint8_t)(*duty_ptr >> 2);
  4024     063C  0873               	movf	SET_DUTY_CCP3@duty_ptr,w
  4025     063D  0086               	movwf	6
  4026     063E  0187               	clrf	7
  4027     063F  3F40               	moviw [0]fsr1
  4028     0640  00F0               	movwf	??_SET_DUTY_CCP3
  4029     0641  3F41               	moviw [1]fsr1
  4030     0642  00F1               	movwf	??_SET_DUTY_CCP3+1
  4031     0643  36F1               	lsrf	??_SET_DUTY_CCP3+1,f
  4032     0644  0CF0               	rrf	??_SET_DUTY_CCP3,f
  4033     0645  36F1               	lsrf	??_SET_DUTY_CCP3+1,f
  4034     0646  0CF0               	rrf	??_SET_DUTY_CCP3,f
  4035     0647  0870               	movf	??_SET_DUTY_CCP3,w
  4036     0648  0026               	movlb	6	; select bank6
  4037     0649  0091               	movwf	17	;volatile
  4038                           
  4039                           ;system.c: 47:     uint8_t temp = *duty_ptr % 0b100;
  4040     064A  0873               	movf	SET_DUTY_CCP3@duty_ptr,w
  4041     064B  0086               	movwf	6
  4042     064C  0187               	clrf	7
  4043     064D  0801               	movf	1,w
  4044     064E  3903               	andlw	3
  4045     064F  00F2               	movwf	SET_DUTY_CCP3@temp
  4046                           
  4047                           ;system.c: 48:     CCP3CON = CCP3CON | ((uint8_t)(temp << 4));
  4048     0650  0872               	movf	SET_DUTY_CCP3@temp,w
  4049     0651  00F0               	movwf	??_SET_DUTY_CCP3
  4050     0652  3003               	movlw	3
  4051     0653                     u79_25:
  4052     0653  35F0               	lslf	??_SET_DUTY_CCP3,f
  4053     0654  3EFF               	addlw	-1
  4054     0655  1D03               	skipz
  4055     0656  2E53               	goto	u79_25
  4056     0657  3570               	lslf	??_SET_DUTY_CCP3,w
  4057     0658  0413               	iorwf	19,w	;volatile
  4058     0659  0093               	movwf	19	;volatile
  4059     065A  0008               	return
  4060     065B                     __end_of_SET_DUTY_CCP3:
  4061     007E                     btemp	set	126	;btemp
  4062     007E                     int$flags	set	126
  4063     007E                     wtemp0	set	126
  4064                           
  4065                           	psect	config
  4066                           
  4067                           ;Config register CONFIG1 @ 0x8007
  4068                           ;	Oscillator Selection
  4069                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  4070                           ;	Watchdog Timer Enable
  4071                           ;	WDTE = OFF, WDT disabled
  4072                           ;	Power-up Timer Enable
  4073                           ;	PWRTE = OFF, PWRT disabled
  4074                           ;	MCLR Pin Function Select
  4075                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  4076                           ;	Flash Program Memory Code Protection
  4077                           ;	CP = OFF, Program memory code protection is disabled
  4078                           ;	Data Memory Code Protection
  4079                           ;	CPD = OFF, Data memory code protection is disabled
  4080                           ;	Brown-out Reset Enable
  4081                           ;	BOREN = OFF, Brown-out Reset disabled
  4082                           ;	Clock Out Enable
  4083                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  4084                           ;	Internal/External Switchover
  4085                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4086                           ;	Fail-Safe Clock Monitor Enable
  4087                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4088     8007                     	org	32775
  4089     8007  09E4               	dw	2532
  4090                           
  4091                           ;Config register CONFIG2 @ 0x8008
  4092                           ;	Flash Memory Self-Write Protection
  4093                           ;	WRT = OFF, Write protection off
  4094                           ;	PLL Enable
  4095                           ;	PLLEN = ON, 4x PLL enabled
  4096                           ;	Stack Overflow/Underflow Reset Enable
  4097                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  4098                           ;	Brown-out Reset Voltage Selection
  4099                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  4100                           ;	In-Circuit Debugger Mode
  4101                           ;	DEBUG = ON, In-Circuit Debugger enabled, ICSPCLK and ICSPDAT are dedicated to the debu
      +                          gger
  4102                           ;	Low-Voltage Programming Enable
  4103                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  4104     8008                     	org	32776
  4105     8008  0FFF               	dw	4095

Data Sizes:
    Strings     0
    Constant    537
    Data        2
    BSS         40
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      11
    BANK0            80     33      70
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    DO_ADC@modifier	PTR const unsigned char  size(2) Largest target is 1
		 -> depth_adc_config_value(CODE[1]), speed_adc_config_value(CODE[1]), symmetry_adc_config_value(CODE[1]), waveshape_adc_config_value(CODE[1]), 

    SET_DUTY_CCP3@duty_ptr	PTR volatile unsigned short  size(1) Largest target is 2
		 -> duty(COMMON[2]), 

    top_two_bytes_ptr	PTR unsigned short  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_SET_DUTY_CCP3

Critical Paths under _main in BANK0

    _main->_PROCESS_TMR0_AND_PRESCALER_ADJUST
    _PROCESS_TMR0_AND_PRESCALER_ADJUST->_LENGTHEN_PERIOD
    _PROCESS_TMR0_AND_PRESCALER_ADJUST->_SHORTEN_PERIOD
    _SHORTEN_PERIOD->___lmul
    _LENGTHEN_PERIOD->___lmul
    _ADJUST_AND_SET_PRESCALER->_CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1
    _PROCESS_RAW_SPEED_AND_PRESCALER->___lmul
    _GET_CURRENT_POT_VALUES->_DETERMINE_WAVESHAPE
    _DETERMINE_WAVESHAPE->_DO_ADC

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3617
                      _CONFIG_SYSTEM
              _CONFIG_TMR0_INTERRUPT
             _GET_CURRENT_POT_VALUES
    _PROCESS_RAW_SPEED_AND_PRESCALER
  _PROCESS_TMR0_AND_PRESCALER_ADJUST
                   _TURN_ON_CCP3_PWM
 ---------------------------------------------------------------------------------
 (1) _TURN_ON_CCP3_PWM                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PROCESS_TMR0_AND_PRESCALER_ADJUST                    5     5      0    1909
                                             28 BANK0      5     5      0
           _ADJUST_AND_SET_PRESCALER
                    _LENGTHEN_PERIOD
                     _SHORTEN_PERIOD
 ---------------------------------------------------------------------------------
 (2) _SHORTEN_PERIOD                                      16    16      0     898
                                             12 BANK0     16    16      0
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) _LENGTHEN_PERIOD                                     16    16      0     965
                                             12 BANK0     16    16      0
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) _ADJUST_AND_SET_PRESCALER                             0     0      0       0
 _CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1
                 _TURN_PRESCALER_OFF
                  _TURN_PRESCALER_ON
 ---------------------------------------------------------------------------------
 (3) _TURN_PRESCALER_ON                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TURN_PRESCALER_OFF                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1                   3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _PROCESS_RAW_SPEED_AND_PRESCALER                      7     7      0     897
                                             12 BANK0      7     7      0
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     852
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) _GET_CURRENT_POT_VALUES                               2     2      0     811
                                              8 BANK0      2     2      0
                _DETERMINE_WAVESHAPE
                             _DO_ADC
 ---------------------------------------------------------------------------------
 (2) _DETERMINE_WAVESHAPE                                  2     2      0     439
                                              6 BANK0      2     2      0
                             _DO_ADC
 ---------------------------------------------------------------------------------
 (2) _DO_ADC                                               6     4      2     372
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _CONFIG_TMR0_INTERRUPT                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CONFIG_SYSTEM                                        0     0      0       0
                    _CONFIG_ADC_PINS
                     _CONFIG_INT_OSC
                       _CONFIG_PORTS
                    _CONFIG_PWM_CCP3
 ---------------------------------------------------------------------------------
 (2) _CONFIG_PWM_CCP3                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CONFIG_PORTS                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CONFIG_INT_OSC                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CONFIG_ADC_PINS                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           2     2      0     182
                                              4 COMMON     2     2      0
                      _SET_DUTY_CCP3
 ---------------------------------------------------------------------------------
 (5) _SET_DUTY_CCP3                                        4     4      0     182
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CONFIG_SYSTEM
     _CONFIG_ADC_PINS
     _CONFIG_INT_OSC
     _CONFIG_PORTS
     _CONFIG_PWM_CCP3
   _CONFIG_TMR0_INTERRUPT
   _GET_CURRENT_POT_VALUES
     _DETERMINE_WAVESHAPE
       _DO_ADC
     _DO_ADC
   _PROCESS_RAW_SPEED_AND_PRESCALER
     ___lmul
   _PROCESS_TMR0_AND_PRESCALER_ADJUST
     _ADJUST_AND_SET_PRESCALER
       _CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1
       _TURN_PRESCALER_OFF
       _TURN_PRESCALER_ON
     _LENGTHEN_PERIOD
       ___lmul
     _SHORTEN_PERIOD
       ___lmul
   _TURN_ON_CCP3_PWM

 _INTERRUPT_InterruptManager (ROOT)
   _SET_DUTY_CCP3

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       B       2       78.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      51       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     21      46       6       87.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      51      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Mon Jan 29 20:52:50 2024

                                                      r1 0020  
                                                      r2 0021  
                                                      r3 0022  
                                                     _NO 06E3  
                                                    l174 06C1  
                                                    l159 0605  
                                                    _GIE 005F  
                                                    _PR2 001B  
                                                    u345 05F2  
                                                    u505 04FB  
                                                    u515 0340  
                                                    u535 0364  
                                                    u385 05CC  
                                                    u395 05D3  
                                                    u565 045E  
                                                    u585 0491  
                                                    u595 049A  
                                                    u917 0600  
                                                    _YES 06E4  
                                                    wreg 0009  
                                                   l1320 0630  
                                                   l1402 035A  
                                                   l1324 0632  
                                                   l1318 0629  
                                                   l1272 05C1  
                                                   l1352 0532  
                                                   l1408 038D  
                                                   l1450 0486  
                                                   l1258 068D  
                                                   l1346 052F  
                                                   l1276 05CB  
                                                   l1460 03BA  
                                                   l1382 0575  
                                                   l1358 0544  
                                                   l1376 0562  
                                                   l1472 03F4  
                                                   l1464 03C8  
                                                   _C1ON 088F  
                                                   l1490 0417  
                                                   l1476 03EE  
                                                   l1468 03E3  
                                                   l1484 03F7  
                                                   l1564 0670  
                                                   _ADON 04E8  
                                                   i1l90 0064  
                                                   i1l95 00D5  
                                                   i1l89 0057  
                                                   _TMR0 0015  
                                                   _WPUC 020E  
                                                   _main 065B  
                                                   _duty 0079  
                                                   fsr0h 0005  
                                                   fsr1h 0007  
                                                   indf0 0000  
                                                   fsr0l 0004  
                                                   indf1 0001  
                                                   fsr1l 0006  
                                                   btemp 007E  
                                      _current_waveshape 0078  
                                                   start 00D7  
                                  _CONFIG_TMR0_INTERRUPT 06E1  
                                       __end_of_NEGATIVE 06EB  
                                   __end_of_CONFIG_PORTS 06B7  
             __end_of_CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1 068F  
                   ??_CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1 0043  
                    ?_CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1 0070  
                     _CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1 067A  
                                                  STATUS 0003  
                                                  ?_main 0070  
                                                  _T2CON 001C  
                                                  _SRLEN 08D7  
                                                  _TRISC 008E  
                                                  u79_25 0653  
                                    ___lmul@multiplicand 0047  
                                       __end_of_POSITIVE 06EC  
                               ??_GET_CURRENT_POT_VALUES 004B  
                                     _SHORTEN_PERIOD$850 005B  
                                                  status 0003  
                                                  wtemp0 007E  
                             _current_one_quadrant_index 0077  
                                        __initialization 00D9  
                                           __end_of_main 067A  
                            ?_INTERRUPT_InterruptManager 0070  
                                      __end_of_DONT_CARE 06E6  
                                                 ??_main 0064  
                                  __end_of_DIVIDE_BY_TWO 06E9  
                                 _speed_adc_config_value 06EE  
                                  __end_of_CONFIG_SYSTEM 06AE  
                                                 _ADCON0 009D  
                                                 _ADCON1 009E  
                                                 _ADRESH 009C  
                                                 _ADRESL 009B  
                                                 _CCPR3L 0311  
                                                 _ANSELC 018E  
                                                 _DO_ADC 05E8  
                                                 i1l1600 0042  
                                                 i1l1610 004D  
                                                 i1l1620 0071  
                                                 i1l1614 0055  
                                                 i1l1608 004C  
                                                 i1l1626 00CD  
                                                 i1l1592 0033  
                                                 i1l1596 003B  
                                                 i1l1588 0020  
                                                 _OSCCON 0099  
                                                 _TMR0IE 005D  
                                                 _TMR0IF 005A  
                                                 _TMR2IF 0089  
                                                 _TMR2ON 00E2  
                                                 _TRISA2 0462  
                                 ?_CONFIG_TMR0_INTERRUPT 0070  
                                         DO_ADC@modifier 0043  
                            __end_of_DETERMINE_WAVESHAPE 063B  
                      __end_of_symmetry_adc_config_value 06ED  
                                                 ___lmul 05B9  
                                  __end_of_SET_DUTY_CCP3 065B  
                              ?_ADJUST_AND_SET_PRESCALER 0070  
                                      ?_TURN_ON_CCP3_PWM 0070  
                                      ??_CONFIG_ADC_PINS 0043  
                                _current_speed_linear_32 002C  
                                     ??_TURN_ON_CCP3_PWM 0043  
                                __end_of__initialization 00ED  
                                         _SHORTEN_PERIOD 04B0  
                                         _DIVIDE_BY_FOUR 06E6  
                                         _CONFIG_INT_OSC 06CD  
                                         __pcstackCOMMON 0070  
                                           __pidataBANK0 06DF  
                                             __end_of_NO 06E4  
                                 _tri_table_one_quadrant 00F1  
                                      ??_CONFIG_PWM_CCP3 0043  
                                      _top_two_bytes_ptr 0064  
                                          _current_depth 0038  
                                             __pbssBANK0 0020  
                                                ?_DO_ADC 0043  
                                 __end_of_SHORTEN_PERIOD 0523  
                                           _CONFIG_PORTS 06AE  
                                 __end_of_DIVIDE_BY_FOUR 06E7  
                                 __end_of_CONFIG_INT_OSC 06D3  
                                     __end_of_DO_NOTHING 06EA  
                                             __pmaintext 065B  
                                 _GET_CURRENT_POT_VALUES 0586  
                                                ?___lmul 0043  
                                             __pintentry 0004  
       PROCESS_TMR0_AND_PRESCALER_ADJUST@symmetry_status 0063  
                                                _CCP3CON 0313  
                                         ___lmul@product 004B  
                                             _final_TMR0 0030  
                                  SET_DUTY_CCP3@duty_ptr 0073  
                                                _OSCTUNE 0098  
                                _sine_table_one_quadrant 01F3  
                                        ?_SHORTEN_PERIOD 0070  
                                        ?_CONFIG_INT_OSC 0070  
                                   _current_speed_linear 0036  
                                      _TURN_PRESCALER_ON 06DC  
                              _base_prescaler_bits_index 003D  
                                                __ptext1 06BF  
                                                __ptext2 03A8  
                                                __ptext3 04B0  
                                                __ptext4 02F5  
                                                __ptext5 0523  
                                                __ptext6 06DC  
                                                __ptext7 06D3  
                                                __ptext8 067A  
                                                __ptext9 0434  
                                     ?_TURN_PRESCALER_ON 0070  
                                        _MULTIPLY_BY_TWO 06E7  
                __end_of_PROCESS_RAW_SPEED_AND_PRESCALER 04B0  
                      ??_PROCESS_RAW_SPEED_AND_PRESCALER 004F  
                       ?_PROCESS_RAW_SPEED_AND_PRESCALER 0070  
                        _PROCESS_RAW_SPEED_AND_PRESCALER 0434  
                                              _DONT_CARE 06E5  
                                    ??_TURN_PRESCALER_ON 0043  
                                                clrloop0 06C8  
                                   end_of_initialization 00ED  
                                ??_CONFIG_TMR0_INTERRUPT 0043  
                                          _duty_low_byte 0041  
                              __end_of_TURN_PRESCALER_ON 06DF  
                         __end_of_speed_adc_config_value 06EF  
                       __end_of_ADJUST_AND_SET_PRESCALER 0586  
                                 _depth_adc_config_value 06ED  
                                        _CONFIG_ADC_PINS 06D8  
                                      ??_LENGTHEN_PERIOD 004F  
              __end_of_PROCESS_TMR0_AND_PRESCALER_ADJUST 0434  
                    ??_PROCESS_TMR0_AND_PRESCALER_ADJUST 005F  
                     ?_PROCESS_TMR0_AND_PRESCALER_ADJUST 0070  
                      _PROCESS_TMR0_AND_PRESCALER_ADJUST 03A8  
                                             DO_ADC@temp 0048  
                                         __end_of_DO_ADC 0614  
                                      SET_DUTY_CCP3@temp 0072  
                                _prescaler_overflow_flag 003B  
                                       _current_quadrant 0042  
                             __end_of_TURN_PRESCALER_OFF 06D8  
                                __end_of_MULTIPLY_BY_TWO 06E8  
                                        _CONFIG_PWM_CCP3 068F  
                                       _current_symmetry 0028  
                                         __end_of___lmul 05E8  
                                    start_initialization 00D9  
                                            __end_of_YES 06E5  
                                               ??_DO_ADC 0045  
                                ?_GET_CURRENT_POT_VALUES 0070  
                        __end_of_sine_table_one_quadrant 02F5  
                                __end_of_CONFIG_ADC_PINS 06DC  
                                               ??___lmul 004B  
                         __end_of_tri_table_one_quadrant 01F3  
                                            __pdataBANK0 0064  
                                       DO_ADC@adc_result 0046  
                               _ADJUST_AND_SET_PRESCALER 0523  
                                            __pbssCOMMON 0076  
                                              ___latbits 0001  
                                          _DIVIDE_BY_TWO 06E8  
                                          __pcstackBANK0 0043  
                                       ??_SHORTEN_PERIOD 004F  
                                          _CONFIG_SYSTEM 06A2  
                                       ??_CONFIG_INT_OSC 0043  
                         __end_of_GET_CURRENT_POT_VALUES 05B9  
                                __end_of_CONFIG_PWM_CCP3 06A2  
                                         _prescaler_bits 06B7  
                           ??_INTERRUPT_InterruptManager 0074  
                                           _how_many_128 003F  
                                          _SET_DUTY_CCP3 063B  
                                               _CCPTMRS0 029E  
                                         ?_CONFIG_SYSTEM 0070  
                                       _prescaler_adjust 003E  
                                        _symmetry_status 003C  
                                               _NEGATIVE 06EA  
                     __end_of_waveshape_adc_config_value 06F0  
                             _waveshape_adc_config_value 06EF  
                          __end_of_CONFIG_TMR0_INTERRUPT 06E3  
                                              clear_ram0 06C7  
                                               _GO_nDONE 04E9  
                                       _TURN_ON_CCP3_PWM 06BF  
                                 __end_of_prescaler_bits 06BF  
                                       ?_CONFIG_ADC_PINS 0070  
                                               _POSITIVE 06EB  
                                        _LENGTHEN_PERIOD 02F5  
                                         ?_SET_DUTY_CCP3 0070  
                                      ___lmul@multiplier 0043  
                                    _DETERMINE_WAVESHAPE 0614  
                                 DETERMINE_WAVESHAPE@ADC 0049  
                                       ?_CONFIG_PWM_CCP3 0070  
                         __end_of_depth_adc_config_value 06EE  
                                   ?_DETERMINE_WAVESHAPE 0070  
                                     _TURN_PRESCALER_OFF 06D3  
                                        ??_CONFIG_SYSTEM 0043  
                                       _speed_control_32 0020  
                                               __ptext10 05B9  
                                               __ptext11 0586  
                                               __ptext12 0614  
                                               __ptext21 063B  
                                               __ptext13 05E8  
                                               __ptext14 06E1  
                                               __ptext15 06A2  
                                               __ptext16 068F  
                                               __ptext17 06AE  
                                               __ptext18 06CD  
                                               __ptext19 06D8  
                                    ?_TURN_PRESCALER_OFF 0070  
PROCESS_RAW_SPEED_AND_PRESCALER@speed_control_subtracted 0054  
                                          ?_CONFIG_PORTS 0070  
                                         _duty_high_byte 0040  
                                          _speed_control 0034  
                                               _raw_TMR0 0024  
                                __end_of_LENGTHEN_PERIOD 03A8  
                                  _prescaler_final_index 003A  
                                   ??_TURN_PRESCALER_OFF 0043  
                                               int$flags 007E  
                             ??_ADJUST_AND_SET_PRESCALER 0046  
                                  ??_DETERMINE_WAVESHAPE 0049  
                     __end_of_INTERRUPT_InterruptManager 00D7  
                             _INTERRUPT_InterruptManager 0004  
                                    _LENGTHEN_PERIOD$851 0057  
                                        ??_SET_DUTY_CCP3 0070  
                                             _DO_NOTHING 06E9  
                                         __pstringtext10 06E9  
                                         __pstringtext11 06EA  
                                         __pstringtext12 06EB  
                                         __pstringtext13 06EC  
                                         __pstringtext14 06ED  
                                         __pstringtext15 06EE  
                                         __pstringtext16 06EF  
                              _symmetry_adc_config_value 06EC  
                                         ??_CONFIG_PORTS 0043  
                                               intlevel1 0000  
                                          __pstringtext1 00F1  
                                          __pstringtext2 01F3  
                                          __pstringtext3 06B7  
                                          __pstringtext4 06E3  
                                          __pstringtext5 06E4  
                                          __pstringtext6 06E5  
                                          __pstringtext7 06E6  
                                          __pstringtext8 06E7  
                                          __pstringtext9 06E8  
                                             _OPTION_REG 0095  
                               __end_of_TURN_ON_CCP3_PWM 06C7  
                                      _current_halfcycle 0076  
            LENGTHEN_PERIOD@twofiftysix_minus_TMR0_final 005B  
             SHORTEN_PERIOD@twofiftysix_minus_TMR0_final 0057  
                                       ?_LENGTHEN_PERIOD 0070  
