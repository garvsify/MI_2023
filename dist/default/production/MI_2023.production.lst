

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Sun Jan 28 18:51:09 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og9 
     1                           	processor	16F1824
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    15                           	psect	stringtext11,global,class=STRCODE,delta=2,noexec
    16                           	psect	stringtext12,global,class=STRCODE,delta=2,noexec
    17                           	psect	stringtext13,global,class=STRCODE,delta=2,noexec
    18                           	psect	stringtext14,global,class=STRCODE,delta=2,noexec
    19                           	psect	stringtext15,global,class=STRCODE,delta=2,noexec
    20                           	psect	stringtext16,global,class=STRCODE,delta=2,noexec
    21                           	psect	cinit,global,class=CODE,merge=1,delta=2
    22                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    23                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    24                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    25                           	psect	clrtext,global,class=CODE,delta=2
    26                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    27                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    28                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    29                           	psect	text1,local,class=CODE,merge=1,delta=2
    30                           	psect	text2,local,class=CODE,merge=1,delta=2
    31                           	psect	text3,local,class=CODE,merge=1,delta=2
    32                           	psect	text4,local,class=CODE,merge=1,delta=2
    33                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text6,local,class=CODE,merge=1,delta=2
    35                           	psect	text7,local,class=CODE,merge=1,delta=2
    36                           	psect	text8,local,class=CODE,merge=1,delta=2
    37                           	psect	text9,local,class=CODE,merge=1,delta=2
    38                           	psect	text10,local,class=CODE,merge=1,delta=2
    39                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    40                           	psect	text12,local,class=CODE,merge=1,delta=2
    41                           	psect	text13,local,class=CODE,merge=1,delta=2
    42                           	psect	text14,local,class=CODE,merge=1,delta=2
    43                           	psect	text15,local,class=CODE,merge=1,delta=2
    44                           	psect	text16,local,class=CODE,merge=1,delta=2
    45                           	psect	text17,local,class=CODE,merge=1,delta=2
    46                           	psect	text18,local,class=CODE,merge=1,delta=2
    47                           	psect	text19,local,class=CODE,merge=1,delta=2
    48                           	psect	text20,local,class=CODE,merge=1,delta=2
    49                           	psect	intentry,global,class=CODE,delta=2
    50                           	psect	text22,local,class=CODE,merge=1,delta=2
    51                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    52                           	dabs	1,0x7E,2
    53     0000                     
    54                           ; Generated 06/07/2023 GMT
    55                           ; 
    56                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    57                           ; All rights reserved.
    58                           ; 
    59                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    60                           ; 
    61                           ; Redistribution and use in source and binary forms, with or without modification, are
    62                           ; permitted provided that the following conditions are met:
    63                           ; 
    64                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    65                           ;        conditions and the following disclaimer.
    66                           ; 
    67                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    68                           ;        of conditions and the following disclaimer in the documentation and/or other
    69                           ;        materials provided with the distribution. Publication is not required when
    70                           ;        this file is used in an embedded application.
    71                           ; 
    72                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    73                           ;        software without specific prior written permission.
    74                           ; 
    75                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    76                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    77                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    78                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    79                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    80                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    81                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    82                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    83                           ; 
    84                           ; 
    85                           ; Code-generator required, PIC16F1824 Definitions
    86                           ; 
    87                           ; SFR Addresses
    88     0000                     	;# 
    89     0001                     	;# 
    90     0002                     	;# 
    91     0003                     	;# 
    92     0004                     	;# 
    93     0005                     	;# 
    94     0006                     	;# 
    95     0007                     	;# 
    96     0008                     	;# 
    97     0009                     	;# 
    98     000A                     	;# 
    99     000B                     	;# 
   100     000C                     	;# 
   101     000E                     	;# 
   102     0011                     	;# 
   103     0012                     	;# 
   104     0013                     	;# 
   105     0015                     	;# 
   106     0016                     	;# 
   107     0016                     	;# 
   108     0017                     	;# 
   109     0018                     	;# 
   110     0019                     	;# 
   111     001A                     	;# 
   112     001B                     	;# 
   113     001C                     	;# 
   114     001E                     	;# 
   115     001F                     	;# 
   116     008C                     	;# 
   117     008E                     	;# 
   118     0091                     	;# 
   119     0092                     	;# 
   120     0093                     	;# 
   121     0095                     	;# 
   122     0096                     	;# 
   123     0097                     	;# 
   124     0098                     	;# 
   125     0099                     	;# 
   126     009A                     	;# 
   127     009B                     	;# 
   128     009B                     	;# 
   129     009C                     	;# 
   130     009D                     	;# 
   131     009E                     	;# 
   132     010C                     	;# 
   133     010E                     	;# 
   134     0111                     	;# 
   135     0112                     	;# 
   136     0113                     	;# 
   137     0114                     	;# 
   138     0115                     	;# 
   139     0116                     	;# 
   140     0117                     	;# 
   141     0118                     	;# 
   142     0119                     	;# 
   143     011A                     	;# 
   144     011B                     	;# 
   145     011D                     	;# 
   146     011E                     	;# 
   147     018C                     	;# 
   148     018E                     	;# 
   149     0191                     	;# 
   150     0191                     	;# 
   151     0192                     	;# 
   152     0193                     	;# 
   153     0193                     	;# 
   154     0193                     	;# 
   155     0194                     	;# 
   156     0195                     	;# 
   157     0196                     	;# 
   158     0199                     	;# 
   159     019A                     	;# 
   160     019B                     	;# 
   161     019B                     	;# 
   162     019B                     	;# 
   163     019B                     	;# 
   164     019C                     	;# 
   165     019C                     	;# 
   166     019D                     	;# 
   167     019E                     	;# 
   168     019F                     	;# 
   169     020C                     	;# 
   170     020E                     	;# 
   171     0211                     	;# 
   172     0211                     	;# 
   173     0212                     	;# 
   174     0212                     	;# 
   175     0213                     	;# 
   176     0213                     	;# 
   177     0214                     	;# 
   178     0214                     	;# 
   179     0215                     	;# 
   180     0215                     	;# 
   181     0215                     	;# 
   182     0215                     	;# 
   183     0216                     	;# 
   184     0216                     	;# 
   185     0217                     	;# 
   186     0217                     	;# 
   187     0291                     	;# 
   188     0291                     	;# 
   189     0292                     	;# 
   190     0293                     	;# 
   191     0294                     	;# 
   192     0295                     	;# 
   193     0295                     	;# 
   194     0296                     	;# 
   195     0298                     	;# 
   196     0298                     	;# 
   197     0299                     	;# 
   198     029A                     	;# 
   199     029B                     	;# 
   200     029C                     	;# 
   201     029D                     	;# 
   202     029E                     	;# 
   203     029E                     	;# 
   204     0311                     	;# 
   205     0311                     	;# 
   206     0312                     	;# 
   207     0313                     	;# 
   208     0318                     	;# 
   209     0318                     	;# 
   210     0319                     	;# 
   211     031A                     	;# 
   212     038C                     	;# 
   213     038E                     	;# 
   214     0391                     	;# 
   215     0392                     	;# 
   216     0393                     	;# 
   217     039A                     	;# 
   218     039C                     	;# 
   219     039D                     	;# 
   220     039E                     	;# 
   221     039F                     	;# 
   222     0415                     	;# 
   223     0416                     	;# 
   224     0417                     	;# 
   225     041C                     	;# 
   226     041D                     	;# 
   227     041E                     	;# 
   228     0FE4                     	;# 
   229     0FE5                     	;# 
   230     0FE6                     	;# 
   231     0FE7                     	;# 
   232     0FE8                     	;# 
   233     0FE9                     	;# 
   234     0FEA                     	;# 
   235     0FEB                     	;# 
   236     0FED                     	;# 
   237     0FEE                     	;# 
   238     0FEF                     	;# 
   239     0020                     	;# 
   240     0021                     	;# 
   241     0022                     	;# 
   242     0023                     	;# 
   243     0024                     	;# 
   244     0025                     	;# 
   245     0000                     	;# 
   246     0001                     	;# 
   247     0002                     	;# 
   248     0003                     	;# 
   249     0004                     	;# 
   250     0005                     	;# 
   251     0006                     	;# 
   252     0007                     	;# 
   253     0008                     	;# 
   254     0009                     	;# 
   255     000A                     	;# 
   256     000B                     	;# 
   257     000C                     	;# 
   258     000E                     	;# 
   259     0011                     	;# 
   260     0012                     	;# 
   261     0013                     	;# 
   262     0015                     	;# 
   263     0016                     	;# 
   264     0016                     	;# 
   265     0017                     	;# 
   266     0018                     	;# 
   267     0019                     	;# 
   268     001A                     	;# 
   269     001B                     	;# 
   270     001C                     	;# 
   271     001E                     	;# 
   272     001F                     	;# 
   273     008C                     	;# 
   274     008E                     	;# 
   275     0091                     	;# 
   276     0092                     	;# 
   277     0093                     	;# 
   278     0095                     	;# 
   279     0096                     	;# 
   280     0097                     	;# 
   281     0098                     	;# 
   282     0099                     	;# 
   283     009A                     	;# 
   284     009B                     	;# 
   285     009B                     	;# 
   286     009C                     	;# 
   287     009D                     	;# 
   288     009E                     	;# 
   289     010C                     	;# 
   290     010E                     	;# 
   291     0111                     	;# 
   292     0112                     	;# 
   293     0113                     	;# 
   294     0114                     	;# 
   295     0115                     	;# 
   296     0116                     	;# 
   297     0117                     	;# 
   298     0118                     	;# 
   299     0119                     	;# 
   300     011A                     	;# 
   301     011B                     	;# 
   302     011D                     	;# 
   303     011E                     	;# 
   304     018C                     	;# 
   305     018E                     	;# 
   306     0191                     	;# 
   307     0191                     	;# 
   308     0192                     	;# 
   309     0193                     	;# 
   310     0193                     	;# 
   311     0193                     	;# 
   312     0194                     	;# 
   313     0195                     	;# 
   314     0196                     	;# 
   315     0199                     	;# 
   316     019A                     	;# 
   317     019B                     	;# 
   318     019B                     	;# 
   319     019B                     	;# 
   320     019B                     	;# 
   321     019C                     	;# 
   322     019C                     	;# 
   323     019D                     	;# 
   324     019E                     	;# 
   325     019F                     	;# 
   326     020C                     	;# 
   327     020E                     	;# 
   328     0211                     	;# 
   329     0211                     	;# 
   330     0212                     	;# 
   331     0212                     	;# 
   332     0213                     	;# 
   333     0213                     	;# 
   334     0214                     	;# 
   335     0214                     	;# 
   336     0215                     	;# 
   337     0215                     	;# 
   338     0215                     	;# 
   339     0215                     	;# 
   340     0216                     	;# 
   341     0216                     	;# 
   342     0217                     	;# 
   343     0217                     	;# 
   344     0291                     	;# 
   345     0291                     	;# 
   346     0292                     	;# 
   347     0293                     	;# 
   348     0294                     	;# 
   349     0295                     	;# 
   350     0295                     	;# 
   351     0296                     	;# 
   352     0298                     	;# 
   353     0298                     	;# 
   354     0299                     	;# 
   355     029A                     	;# 
   356     029B                     	;# 
   357     029C                     	;# 
   358     029D                     	;# 
   359     029E                     	;# 
   360     029E                     	;# 
   361     0311                     	;# 
   362     0311                     	;# 
   363     0312                     	;# 
   364     0313                     	;# 
   365     0318                     	;# 
   366     0318                     	;# 
   367     0319                     	;# 
   368     031A                     	;# 
   369     038C                     	;# 
   370     038E                     	;# 
   371     0391                     	;# 
   372     0392                     	;# 
   373     0393                     	;# 
   374     039A                     	;# 
   375     039C                     	;# 
   376     039D                     	;# 
   377     039E                     	;# 
   378     039F                     	;# 
   379     0415                     	;# 
   380     0416                     	;# 
   381     0417                     	;# 
   382     041C                     	;# 
   383     041D                     	;# 
   384     041E                     	;# 
   385     0FE4                     	;# 
   386     0FE5                     	;# 
   387     0FE6                     	;# 
   388     0FE7                     	;# 
   389     0FE8                     	;# 
   390     0FE9                     	;# 
   391     0FEA                     	;# 
   392     0FEB                     	;# 
   393     0FED                     	;# 
   394     0FEE                     	;# 
   395     0FEF                     	;# 
   396     0000                     	;# 
   397     0001                     	;# 
   398     0002                     	;# 
   399     0003                     	;# 
   400     0004                     	;# 
   401     0005                     	;# 
   402     0006                     	;# 
   403     0007                     	;# 
   404     0008                     	;# 
   405     0009                     	;# 
   406     000A                     	;# 
   407     000B                     	;# 
   408     000C                     	;# 
   409     000E                     	;# 
   410     0011                     	;# 
   411     0012                     	;# 
   412     0013                     	;# 
   413     0015                     	;# 
   414     0016                     	;# 
   415     0016                     	;# 
   416     0017                     	;# 
   417     0018                     	;# 
   418     0019                     	;# 
   419     001A                     	;# 
   420     001B                     	;# 
   421     001C                     	;# 
   422     001E                     	;# 
   423     001F                     	;# 
   424     008C                     	;# 
   425     008E                     	;# 
   426     0091                     	;# 
   427     0092                     	;# 
   428     0093                     	;# 
   429     0095                     	;# 
   430     0096                     	;# 
   431     0097                     	;# 
   432     0098                     	;# 
   433     0099                     	;# 
   434     009A                     	;# 
   435     009B                     	;# 
   436     009B                     	;# 
   437     009C                     	;# 
   438     009D                     	;# 
   439     009E                     	;# 
   440     010C                     	;# 
   441     010E                     	;# 
   442     0111                     	;# 
   443     0112                     	;# 
   444     0113                     	;# 
   445     0114                     	;# 
   446     0115                     	;# 
   447     0116                     	;# 
   448     0117                     	;# 
   449     0118                     	;# 
   450     0119                     	;# 
   451     011A                     	;# 
   452     011B                     	;# 
   453     011D                     	;# 
   454     011E                     	;# 
   455     018C                     	;# 
   456     018E                     	;# 
   457     0191                     	;# 
   458     0191                     	;# 
   459     0192                     	;# 
   460     0193                     	;# 
   461     0193                     	;# 
   462     0193                     	;# 
   463     0194                     	;# 
   464     0195                     	;# 
   465     0196                     	;# 
   466     0199                     	;# 
   467     019A                     	;# 
   468     019B                     	;# 
   469     019B                     	;# 
   470     019B                     	;# 
   471     019B                     	;# 
   472     019C                     	;# 
   473     019C                     	;# 
   474     019D                     	;# 
   475     019E                     	;# 
   476     019F                     	;# 
   477     020C                     	;# 
   478     020E                     	;# 
   479     0211                     	;# 
   480     0211                     	;# 
   481     0212                     	;# 
   482     0212                     	;# 
   483     0213                     	;# 
   484     0213                     	;# 
   485     0214                     	;# 
   486     0214                     	;# 
   487     0215                     	;# 
   488     0215                     	;# 
   489     0215                     	;# 
   490     0215                     	;# 
   491     0216                     	;# 
   492     0216                     	;# 
   493     0217                     	;# 
   494     0217                     	;# 
   495     0291                     	;# 
   496     0291                     	;# 
   497     0292                     	;# 
   498     0293                     	;# 
   499     0294                     	;# 
   500     0295                     	;# 
   501     0295                     	;# 
   502     0296                     	;# 
   503     0298                     	;# 
   504     0298                     	;# 
   505     0299                     	;# 
   506     029A                     	;# 
   507     029B                     	;# 
   508     029C                     	;# 
   509     029D                     	;# 
   510     029E                     	;# 
   511     029E                     	;# 
   512     0311                     	;# 
   513     0311                     	;# 
   514     0312                     	;# 
   515     0313                     	;# 
   516     0318                     	;# 
   517     0318                     	;# 
   518     0319                     	;# 
   519     031A                     	;# 
   520     038C                     	;# 
   521     038E                     	;# 
   522     0391                     	;# 
   523     0392                     	;# 
   524     0393                     	;# 
   525     039A                     	;# 
   526     039C                     	;# 
   527     039D                     	;# 
   528     039E                     	;# 
   529     039F                     	;# 
   530     0415                     	;# 
   531     0416                     	;# 
   532     0417                     	;# 
   533     041C                     	;# 
   534     041D                     	;# 
   535     041E                     	;# 
   536     0FE4                     	;# 
   537     0FE5                     	;# 
   538     0FE6                     	;# 
   539     0FE7                     	;# 
   540     0FE8                     	;# 
   541     0FE9                     	;# 
   542     0FEA                     	;# 
   543     0FEB                     	;# 
   544     0FED                     	;# 
   545     0FEE                     	;# 
   546     0FEF                     	;# 
   547     0000                     	;# 
   548     0001                     	;# 
   549     0002                     	;# 
   550     0003                     	;# 
   551     0004                     	;# 
   552     0005                     	;# 
   553     0006                     	;# 
   554     0007                     	;# 
   555     0008                     	;# 
   556     0009                     	;# 
   557     000A                     	;# 
   558     000B                     	;# 
   559     000C                     	;# 
   560     000E                     	;# 
   561     0011                     	;# 
   562     0012                     	;# 
   563     0013                     	;# 
   564     0015                     	;# 
   565     0016                     	;# 
   566     0016                     	;# 
   567     0017                     	;# 
   568     0018                     	;# 
   569     0019                     	;# 
   570     001A                     	;# 
   571     001B                     	;# 
   572     001C                     	;# 
   573     001E                     	;# 
   574     001F                     	;# 
   575     008C                     	;# 
   576     008E                     	;# 
   577     0091                     	;# 
   578     0092                     	;# 
   579     0093                     	;# 
   580     0095                     	;# 
   581     0096                     	;# 
   582     0097                     	;# 
   583     0098                     	;# 
   584     0099                     	;# 
   585     009A                     	;# 
   586     009B                     	;# 
   587     009B                     	;# 
   588     009C                     	;# 
   589     009D                     	;# 
   590     009E                     	;# 
   591     010C                     	;# 
   592     010E                     	;# 
   593     0111                     	;# 
   594     0112                     	;# 
   595     0113                     	;# 
   596     0114                     	;# 
   597     0115                     	;# 
   598     0116                     	;# 
   599     0117                     	;# 
   600     0118                     	;# 
   601     0119                     	;# 
   602     011A                     	;# 
   603     011B                     	;# 
   604     011D                     	;# 
   605     011E                     	;# 
   606     018C                     	;# 
   607     018E                     	;# 
   608     0191                     	;# 
   609     0191                     	;# 
   610     0192                     	;# 
   611     0193                     	;# 
   612     0193                     	;# 
   613     0193                     	;# 
   614     0194                     	;# 
   615     0195                     	;# 
   616     0196                     	;# 
   617     0199                     	;# 
   618     019A                     	;# 
   619     019B                     	;# 
   620     019B                     	;# 
   621     019B                     	;# 
   622     019B                     	;# 
   623     019C                     	;# 
   624     019C                     	;# 
   625     019D                     	;# 
   626     019E                     	;# 
   627     019F                     	;# 
   628     020C                     	;# 
   629     020E                     	;# 
   630     0211                     	;# 
   631     0211                     	;# 
   632     0212                     	;# 
   633     0212                     	;# 
   634     0213                     	;# 
   635     0213                     	;# 
   636     0214                     	;# 
   637     0214                     	;# 
   638     0215                     	;# 
   639     0215                     	;# 
   640     0215                     	;# 
   641     0215                     	;# 
   642     0216                     	;# 
   643     0216                     	;# 
   644     0217                     	;# 
   645     0217                     	;# 
   646     0291                     	;# 
   647     0291                     	;# 
   648     0292                     	;# 
   649     0293                     	;# 
   650     0294                     	;# 
   651     0295                     	;# 
   652     0295                     	;# 
   653     0296                     	;# 
   654     0298                     	;# 
   655     0298                     	;# 
   656     0299                     	;# 
   657     029A                     	;# 
   658     029B                     	;# 
   659     029C                     	;# 
   660     029D                     	;# 
   661     029E                     	;# 
   662     029E                     	;# 
   663     0311                     	;# 
   664     0311                     	;# 
   665     0312                     	;# 
   666     0313                     	;# 
   667     0318                     	;# 
   668     0318                     	;# 
   669     0319                     	;# 
   670     031A                     	;# 
   671     038C                     	;# 
   672     038E                     	;# 
   673     0391                     	;# 
   674     0392                     	;# 
   675     0393                     	;# 
   676     039A                     	;# 
   677     039C                     	;# 
   678     039D                     	;# 
   679     039E                     	;# 
   680     039F                     	;# 
   681     0415                     	;# 
   682     0416                     	;# 
   683     0417                     	;# 
   684     041C                     	;# 
   685     041D                     	;# 
   686     041E                     	;# 
   687     0FE4                     	;# 
   688     0FE5                     	;# 
   689     0FE6                     	;# 
   690     0FE7                     	;# 
   691     0FE8                     	;# 
   692     0FE9                     	;# 
   693     0FEA                     	;# 
   694     0FEB                     	;# 
   695     0FED                     	;# 
   696     0FEE                     	;# 
   697     0FEF                     	;# 
   698                           
   699                           	psect	idataBANK0
   700     0698                     __pidataBANK0:
   701                           
   702                           ;initializer for _top_two_bytes_ptr
   703     0698  3421               	retlw	33
   704     0699  3400               	retlw	0
   705                           
   706                           	psect	stringtext1
   707     00F1                     __pstringtext1:
   708     00F1                     _tri_table_one_quadrant:
   709     00F1  3400               	retlw	0
   710     00F2  3402               	retlw	2
   711     00F3  3404               	retlw	4
   712     00F4  3402               	retlw	2
   713     00F5  3408               	retlw	8
   714     00F6  3402               	retlw	2
   715     00F7  340C               	retlw	12
   716     00F8  3402               	retlw	2
   717     00F9  3410               	retlw	16
   718     00FA  3402               	retlw	2
   719     00FB  3414               	retlw	20
   720     00FC  3402               	retlw	2
   721     00FD  3418               	retlw	24
   722     00FE  3402               	retlw	2
   723     00FF  341C               	retlw	28
   724     0100  3402               	retlw	2
   725     0101  3420               	retlw	32
   726     0102  3402               	retlw	2
   727     0103  3424               	retlw	36
   728     0104  3402               	retlw	2
   729     0105  3428               	retlw	40
   730     0106  3402               	retlw	2
   731     0107  342C               	retlw	44
   732     0108  3402               	retlw	2
   733     0109  3430               	retlw	48
   734     010A  3402               	retlw	2
   735     010B  3434               	retlw	52
   736     010C  3402               	retlw	2
   737     010D  3438               	retlw	56
   738     010E  3402               	retlw	2
   739     010F  343C               	retlw	60
   740     0110  3402               	retlw	2
   741     0111  3440               	retlw	64
   742     0112  3402               	retlw	2
   743     0113  3444               	retlw	68
   744     0114  3402               	retlw	2
   745     0115  3448               	retlw	72
   746     0116  3402               	retlw	2
   747     0117  344C               	retlw	76
   748     0118  3402               	retlw	2
   749     0119  3450               	retlw	80
   750     011A  3402               	retlw	2
   751     011B  3454               	retlw	84
   752     011C  3402               	retlw	2
   753     011D  3458               	retlw	88
   754     011E  3402               	retlw	2
   755     011F  345C               	retlw	92
   756     0120  3402               	retlw	2
   757     0121  3460               	retlw	96
   758     0122  3402               	retlw	2
   759     0123  3464               	retlw	100
   760     0124  3402               	retlw	2
   761     0125  3468               	retlw	104
   762     0126  3402               	retlw	2
   763     0127  346C               	retlw	108
   764     0128  3402               	retlw	2
   765     0129  3470               	retlw	112
   766     012A  3402               	retlw	2
   767     012B  3474               	retlw	116
   768     012C  3402               	retlw	2
   769     012D  3478               	retlw	120
   770     012E  3402               	retlw	2
   771     012F  347C               	retlw	124
   772     0130  3402               	retlw	2
   773     0131  3480               	retlw	128
   774     0132  3402               	retlw	2
   775     0133  3484               	retlw	132
   776     0134  3402               	retlw	2
   777     0135  3488               	retlw	136
   778     0136  3402               	retlw	2
   779     0137  348C               	retlw	140
   780     0138  3402               	retlw	2
   781     0139  3490               	retlw	144
   782     013A  3402               	retlw	2
   783     013B  3494               	retlw	148
   784     013C  3402               	retlw	2
   785     013D  3498               	retlw	152
   786     013E  3402               	retlw	2
   787     013F  349C               	retlw	156
   788     0140  3402               	retlw	2
   789     0141  34A0               	retlw	160
   790     0142  3402               	retlw	2
   791     0143  34A4               	retlw	164
   792     0144  3402               	retlw	2
   793     0145  34A8               	retlw	168
   794     0146  3402               	retlw	2
   795     0147  34AC               	retlw	172
   796     0148  3402               	retlw	2
   797     0149  34B0               	retlw	176
   798     014A  3402               	retlw	2
   799     014B  34B4               	retlw	180
   800     014C  3402               	retlw	2
   801     014D  34B8               	retlw	184
   802     014E  3402               	retlw	2
   803     014F  34BC               	retlw	188
   804     0150  3402               	retlw	2
   805     0151  34C0               	retlw	192
   806     0152  3402               	retlw	2
   807     0153  34C4               	retlw	196
   808     0154  3402               	retlw	2
   809     0155  34C8               	retlw	200
   810     0156  3402               	retlw	2
   811     0157  34CC               	retlw	204
   812     0158  3402               	retlw	2
   813     0159  34D0               	retlw	208
   814     015A  3402               	retlw	2
   815     015B  34D4               	retlw	212
   816     015C  3402               	retlw	2
   817     015D  34D8               	retlw	216
   818     015E  3402               	retlw	2
   819     015F  34DC               	retlw	220
   820     0160  3402               	retlw	2
   821     0161  34E0               	retlw	224
   822     0162  3402               	retlw	2
   823     0163  34E4               	retlw	228
   824     0164  3402               	retlw	2
   825     0165  34E8               	retlw	232
   826     0166  3402               	retlw	2
   827     0167  34EC               	retlw	236
   828     0168  3402               	retlw	2
   829     0169  34F0               	retlw	240
   830     016A  3402               	retlw	2
   831     016B  34F4               	retlw	244
   832     016C  3402               	retlw	2
   833     016D  34F8               	retlw	248
   834     016E  3402               	retlw	2
   835     016F  34FB               	retlw	251
   836     0170  3402               	retlw	2
   837     0171  34FF               	retlw	255
   838     0172  3402               	retlw	2
   839     0173  3403               	retlw	3
   840     0174  3403               	retlw	3
   841     0175  3407               	retlw	7
   842     0176  3403               	retlw	3
   843     0177  340B               	retlw	11
   844     0178  3403               	retlw	3
   845     0179  340F               	retlw	15
   846     017A  3403               	retlw	3
   847     017B  3413               	retlw	19
   848     017C  3403               	retlw	3
   849     017D  3417               	retlw	23
   850     017E  3403               	retlw	3
   851     017F  341B               	retlw	27
   852     0180  3403               	retlw	3
   853     0181  341F               	retlw	31
   854     0182  3403               	retlw	3
   855     0183  3423               	retlw	35
   856     0184  3403               	retlw	3
   857     0185  3427               	retlw	39
   858     0186  3403               	retlw	3
   859     0187  342B               	retlw	43
   860     0188  3403               	retlw	3
   861     0189  342F               	retlw	47
   862     018A  3403               	retlw	3
   863     018B  3433               	retlw	51
   864     018C  3403               	retlw	3
   865     018D  3437               	retlw	55
   866     018E  3403               	retlw	3
   867     018F  343B               	retlw	59
   868     0190  3403               	retlw	3
   869     0191  343F               	retlw	63
   870     0192  3403               	retlw	3
   871     0193  3443               	retlw	67
   872     0194  3403               	retlw	3
   873     0195  3447               	retlw	71
   874     0196  3403               	retlw	3
   875     0197  344B               	retlw	75
   876     0198  3403               	retlw	3
   877     0199  344F               	retlw	79
   878     019A  3403               	retlw	3
   879     019B  3453               	retlw	83
   880     019C  3403               	retlw	3
   881     019D  3457               	retlw	87
   882     019E  3403               	retlw	3
   883     019F  345B               	retlw	91
   884     01A0  3403               	retlw	3
   885     01A1  345F               	retlw	95
   886     01A2  3403               	retlw	3
   887     01A3  3463               	retlw	99
   888     01A4  3403               	retlw	3
   889     01A5  3467               	retlw	103
   890     01A6  3403               	retlw	3
   891     01A7  346B               	retlw	107
   892     01A8  3403               	retlw	3
   893     01A9  346F               	retlw	111
   894     01AA  3403               	retlw	3
   895     01AB  3473               	retlw	115
   896     01AC  3403               	retlw	3
   897     01AD  3477               	retlw	119
   898     01AE  3403               	retlw	3
   899     01AF  347B               	retlw	123
   900     01B0  3403               	retlw	3
   901     01B1  347F               	retlw	127
   902     01B2  3403               	retlw	3
   903     01B3  3483               	retlw	131
   904     01B4  3403               	retlw	3
   905     01B5  3487               	retlw	135
   906     01B6  3403               	retlw	3
   907     01B7  348B               	retlw	139
   908     01B8  3403               	retlw	3
   909     01B9  348F               	retlw	143
   910     01BA  3403               	retlw	3
   911     01BB  3493               	retlw	147
   912     01BC  3403               	retlw	3
   913     01BD  3497               	retlw	151
   914     01BE  3403               	retlw	3
   915     01BF  349B               	retlw	155
   916     01C0  3403               	retlw	3
   917     01C1  349F               	retlw	159
   918     01C2  3403               	retlw	3
   919     01C3  34A3               	retlw	163
   920     01C4  3403               	retlw	3
   921     01C5  34A7               	retlw	167
   922     01C6  3403               	retlw	3
   923     01C7  34AB               	retlw	171
   924     01C8  3403               	retlw	3
   925     01C9  34AF               	retlw	175
   926     01CA  3403               	retlw	3
   927     01CB  34B3               	retlw	179
   928     01CC  3403               	retlw	3
   929     01CD  34B7               	retlw	183
   930     01CE  3403               	retlw	3
   931     01CF  34BB               	retlw	187
   932     01D0  3403               	retlw	3
   933     01D1  34BF               	retlw	191
   934     01D2  3403               	retlw	3
   935     01D3  34C3               	retlw	195
   936     01D4  3403               	retlw	3
   937     01D5  34C7               	retlw	199
   938     01D6  3403               	retlw	3
   939     01D7  34CB               	retlw	203
   940     01D8  3403               	retlw	3
   941     01D9  34CF               	retlw	207
   942     01DA  3403               	retlw	3
   943     01DB  34D3               	retlw	211
   944     01DC  3403               	retlw	3
   945     01DD  34D7               	retlw	215
   946     01DE  3403               	retlw	3
   947     01DF  34DB               	retlw	219
   948     01E0  3403               	retlw	3
   949     01E1  34DF               	retlw	223
   950     01E2  3403               	retlw	3
   951     01E3  34E3               	retlw	227
   952     01E4  3403               	retlw	3
   953     01E5  34E7               	retlw	231
   954     01E6  3403               	retlw	3
   955     01E7  34EB               	retlw	235
   956     01E8  3403               	retlw	3
   957     01E9  34EF               	retlw	239
   958     01EA  3403               	retlw	3
   959     01EB  34F3               	retlw	243
   960     01EC  3403               	retlw	3
   961     01ED  34F7               	retlw	247
   962     01EE  3403               	retlw	3
   963     01EF  34FB               	retlw	251
   964     01F0  3403               	retlw	3
   965     01F1  34FF               	retlw	255
   966     01F2  3403               	retlw	3
   967     01F3                     __end_of_tri_table_one_quadrant:
   968                           
   969                           	psect	stringtext2
   970     01F3                     __pstringtext2:
   971     01F3                     _sine_table_one_quadrant:
   972     01F3  3400               	retlw	0
   973     01F4  3402               	retlw	2
   974     01F5  3406               	retlw	6
   975     01F6  3402               	retlw	2
   976     01F7  340C               	retlw	12
   977     01F8  3402               	retlw	2
   978     01F9  3412               	retlw	18
   979     01FA  3402               	retlw	2
   980     01FB  3419               	retlw	25
   981     01FC  3402               	retlw	2
   982     01FD  341F               	retlw	31
   983     01FE  3402               	retlw	2
   984     01FF  3425               	retlw	37
   985     0200  3402               	retlw	2
   986     0201  342B               	retlw	43
   987     0202  3402               	retlw	2
   988     0203  3432               	retlw	50
   989     0204  3402               	retlw	2
   990     0205  3438               	retlw	56
   991     0206  3402               	retlw	2
   992     0207  343E               	retlw	62
   993     0208  3402               	retlw	2
   994     0209  3444               	retlw	68
   995     020A  3402               	retlw	2
   996     020B  344B               	retlw	75
   997     020C  3402               	retlw	2
   998     020D  3451               	retlw	81
   999     020E  3402               	retlw	2
  1000     020F  3457               	retlw	87
  1001     0210  3402               	retlw	2
  1002     0211  345D               	retlw	93
  1003     0212  3402               	retlw	2
  1004     0213  3463               	retlw	99
  1005     0214  3402               	retlw	2
  1006     0215  3469               	retlw	105
  1007     0216  3402               	retlw	2
  1008     0217  3470               	retlw	112
  1009     0218  3402               	retlw	2
  1010     0219  3476               	retlw	118
  1011     021A  3402               	retlw	2
  1012     021B  347C               	retlw	124
  1013     021C  3402               	retlw	2
  1014     021D  3482               	retlw	130
  1015     021E  3402               	retlw	2
  1016     021F  3488               	retlw	136
  1017     0220  3402               	retlw	2
  1018     0221  348E               	retlw	142
  1019     0222  3402               	retlw	2
  1020     0223  3494               	retlw	148
  1021     0224  3402               	retlw	2
  1022     0225  349A               	retlw	154
  1023     0226  3402               	retlw	2
  1024     0227  34A0               	retlw	160
  1025     0228  3402               	retlw	2
  1026     0229  34A6               	retlw	166
  1027     022A  3402               	retlw	2
  1028     022B  34AC               	retlw	172
  1029     022C  3402               	retlw	2
  1030     022D  34B2               	retlw	178
  1031     022E  3402               	retlw	2
  1032     022F  34B8               	retlw	184
  1033     0230  3402               	retlw	2
  1034     0231  34BD               	retlw	189
  1035     0232  3402               	retlw	2
  1036     0233  34C3               	retlw	195
  1037     0234  3402               	retlw	2
  1038     0235  34C9               	retlw	201
  1039     0236  3402               	retlw	2
  1040     0237  34CF               	retlw	207
  1041     0238  3402               	retlw	2
  1042     0239  34D5               	retlw	213
  1043     023A  3402               	retlw	2
  1044     023B  34DA               	retlw	218
  1045     023C  3402               	retlw	2
  1046     023D  34E0               	retlw	224
  1047     023E  3402               	retlw	2
  1048     023F  34E5               	retlw	229
  1049     0240  3402               	retlw	2
  1050     0241  34EB               	retlw	235
  1051     0242  3402               	retlw	2
  1052     0243  34F1               	retlw	241
  1053     0244  3402               	retlw	2
  1054     0245  34F6               	retlw	246
  1055     0246  3402               	retlw	2
  1056     0247  34FC               	retlw	252
  1057     0248  3402               	retlw	2
  1058     0249  3401               	retlw	1
  1059     024A  3403               	retlw	3
  1060     024B  3406               	retlw	6
  1061     024C  3403               	retlw	3
  1062     024D  340C               	retlw	12
  1063     024E  3403               	retlw	3
  1064     024F  3411               	retlw	17
  1065     0250  3403               	retlw	3
  1066     0251  3416               	retlw	22
  1067     0252  3403               	retlw	3
  1068     0253  341C               	retlw	28
  1069     0254  3403               	retlw	3
  1070     0255  3421               	retlw	33
  1071     0256  3403               	retlw	3
  1072     0257  3426               	retlw	38
  1073     0258  3403               	retlw	3
  1074     0259  342B               	retlw	43
  1075     025A  3403               	retlw	3
  1076     025B  3430               	retlw	48
  1077     025C  3403               	retlw	3
  1078     025D  3435               	retlw	53
  1079     025E  3403               	retlw	3
  1080     025F  343A               	retlw	58
  1081     0260  3403               	retlw	3
  1082     0261  343F               	retlw	63
  1083     0262  3403               	retlw	3
  1084     0263  3444               	retlw	68
  1085     0264  3403               	retlw	3
  1086     0265  3449               	retlw	73
  1087     0266  3403               	retlw	3
  1088     0267  344E               	retlw	78
  1089     0268  3403               	retlw	3
  1090     0269  3452               	retlw	82
  1091     026A  3403               	retlw	3
  1092     026B  3457               	retlw	87
  1093     026C  3403               	retlw	3
  1094     026D  345C               	retlw	92
  1095     026E  3403               	retlw	3
  1096     026F  3460               	retlw	96
  1097     0270  3403               	retlw	3
  1098     0271  3465               	retlw	101
  1099     0272  3403               	retlw	3
  1100     0273  3469               	retlw	105
  1101     0274  3403               	retlw	3
  1102     0275  346E               	retlw	110
  1103     0276  3403               	retlw	3
  1104     0277  3472               	retlw	114
  1105     0278  3403               	retlw	3
  1106     0279  3476               	retlw	118
  1107     027A  3403               	retlw	3
  1108     027B  347A               	retlw	122
  1109     027C  3403               	retlw	3
  1110     027D  347F               	retlw	127
  1111     027E  3403               	retlw	3
  1112     027F  3483               	retlw	131
  1113     0280  3403               	retlw	3
  1114     0281  3487               	retlw	135
  1115     0282  3403               	retlw	3
  1116     0283  348B               	retlw	139
  1117     0284  3403               	retlw	3
  1118     0285  348F               	retlw	143
  1119     0286  3403               	retlw	3
  1120     0287  3493               	retlw	147
  1121     0288  3403               	retlw	3
  1122     0289  3497               	retlw	151
  1123     028A  3403               	retlw	3
  1124     028B  349A               	retlw	154
  1125     028C  3403               	retlw	3
  1126     028D  349E               	retlw	158
  1127     028E  3403               	retlw	3
  1128     028F  34A2               	retlw	162
  1129     0290  3403               	retlw	3
  1130     0291  34A5               	retlw	165
  1131     0292  3403               	retlw	3
  1132     0293  34A9               	retlw	169
  1133     0294  3403               	retlw	3
  1134     0295  34AC               	retlw	172
  1135     0296  3403               	retlw	3
  1136     0297  34B0               	retlw	176
  1137     0298  3403               	retlw	3
  1138     0299  34B3               	retlw	179
  1139     029A  3403               	retlw	3
  1140     029B  34B6               	retlw	182
  1141     029C  3403               	retlw	3
  1142     029D  34B9               	retlw	185
  1143     029E  3403               	retlw	3
  1144     029F  34BD               	retlw	189
  1145     02A0  3403               	retlw	3
  1146     02A1  34C0               	retlw	192
  1147     02A2  3403               	retlw	3
  1148     02A3  34C3               	retlw	195
  1149     02A4  3403               	retlw	3
  1150     02A5  34C6               	retlw	198
  1151     02A6  3403               	retlw	3
  1152     02A7  34C8               	retlw	200
  1153     02A8  3403               	retlw	3
  1154     02A9  34CB               	retlw	203
  1155     02AA  3403               	retlw	3
  1156     02AB  34CE               	retlw	206
  1157     02AC  3403               	retlw	3
  1158     02AD  34D1               	retlw	209
  1159     02AE  3403               	retlw	3
  1160     02AF  34D3               	retlw	211
  1161     02B0  3403               	retlw	3
  1162     02B1  34D6               	retlw	214
  1163     02B2  3403               	retlw	3
  1164     02B3  34D8               	retlw	216
  1165     02B4  3403               	retlw	3
  1166     02B5  34DA               	retlw	218
  1167     02B6  3403               	retlw	3
  1168     02B7  34DD               	retlw	221
  1169     02B8  3403               	retlw	3
  1170     02B9  34DF               	retlw	223
  1171     02BA  3403               	retlw	3
  1172     02BB  34E1               	retlw	225
  1173     02BC  3403               	retlw	3
  1174     02BD  34E3               	retlw	227
  1175     02BE  3403               	retlw	3
  1176     02BF  34E5               	retlw	229
  1177     02C0  3403               	retlw	3
  1178     02C1  34E7               	retlw	231
  1179     02C2  3403               	retlw	3
  1180     02C3  34E9               	retlw	233
  1181     02C4  3403               	retlw	3
  1182     02C5  34EB               	retlw	235
  1183     02C6  3403               	retlw	3
  1184     02C7  34EC               	retlw	236
  1185     02C8  3403               	retlw	3
  1186     02C9  34EE               	retlw	238
  1187     02CA  3403               	retlw	3
  1188     02CB  34F0               	retlw	240
  1189     02CC  3403               	retlw	3
  1190     02CD  34F1               	retlw	241
  1191     02CE  3403               	retlw	3
  1192     02CF  34F3               	retlw	243
  1193     02D0  3403               	retlw	3
  1194     02D1  34F4               	retlw	244
  1195     02D2  3403               	retlw	3
  1196     02D3  34F5               	retlw	245
  1197     02D4  3403               	retlw	3
  1198     02D5  34F6               	retlw	246
  1199     02D6  3403               	retlw	3
  1200     02D7  34F7               	retlw	247
  1201     02D8  3403               	retlw	3
  1202     02D9  34F9               	retlw	249
  1203     02DA  3403               	retlw	3
  1204     02DB  34F9               	retlw	249
  1205     02DC  3403               	retlw	3
  1206     02DD  34FA               	retlw	250
  1207     02DE  3403               	retlw	3
  1208     02DF  34FB               	retlw	251
  1209     02E0  3403               	retlw	3
  1210     02E1  34FC               	retlw	252
  1211     02E2  3403               	retlw	3
  1212     02E3  34FD               	retlw	253
  1213     02E4  3403               	retlw	3
  1214     02E5  34FD               	retlw	253
  1215     02E6  3403               	retlw	3
  1216     02E7  34FE               	retlw	254
  1217     02E8  3403               	retlw	3
  1218     02E9  34FE               	retlw	254
  1219     02EA  3403               	retlw	3
  1220     02EB  34FE               	retlw	254
  1221     02EC  3403               	retlw	3
  1222     02ED  34FF               	retlw	255
  1223     02EE  3403               	retlw	3
  1224     02EF  34FF               	retlw	255
  1225     02F0  3403               	retlw	3
  1226     02F1  34FF               	retlw	255
  1227     02F2  3403               	retlw	3
  1228     02F3  34FF               	retlw	255
  1229     02F4  3403               	retlw	3
  1230     02F5                     __end_of_sine_table_one_quadrant:
  1231                           
  1232                           	psect	stringtext3
  1233     0670                     __pstringtext3:
  1234     0670                     _prescaler_bits:
  1235     0670  3407               	retlw	7
  1236     0671  3406               	retlw	6
  1237     0672  3405               	retlw	5
  1238     0673  3404               	retlw	4
  1239     0674  3403               	retlw	3
  1240     0675  3402               	retlw	2
  1241     0676  3401               	retlw	1
  1242     0677  3400               	retlw	0
  1243     0678                     __end_of_prescaler_bits:
  1244                           
  1245                           	psect	stringtext4
  1246     069C                     __pstringtext4:
  1247     069C                     _NO:
  1248     069C  3400               	retlw	0
  1249     069D                     __end_of_NO:
  1250                           
  1251                           	psect	stringtext5
  1252     069D                     __pstringtext5:
  1253     069D                     _YES:
  1254     069D  3401               	retlw	1
  1255     069E                     __end_of_YES:
  1256                           
  1257                           	psect	stringtext6
  1258     069E                     __pstringtext6:
  1259     069E                     _DONT_CARE:
  1260     069E  3404               	retlw	4
  1261     069F                     __end_of_DONT_CARE:
  1262                           
  1263                           	psect	stringtext7
  1264     069F                     __pstringtext7:
  1265     069F                     _DIVIDE_BY_FOUR:
  1266     069F  3403               	retlw	3
  1267     06A0                     __end_of_DIVIDE_BY_FOUR:
  1268                           
  1269                           	psect	stringtext8
  1270     06A0                     __pstringtext8:
  1271     06A0                     _MULTIPLY_BY_TWO:
  1272     06A0  3402               	retlw	2
  1273     06A1                     __end_of_MULTIPLY_BY_TWO:
  1274                           
  1275                           	psect	stringtext9
  1276     06A1                     __pstringtext9:
  1277     06A1                     _DIVIDE_BY_TWO:
  1278     06A1  3401               	retlw	1
  1279     06A2                     __end_of_DIVIDE_BY_TWO:
  1280                           
  1281                           	psect	stringtext10
  1282     06A2                     __pstringtext10:
  1283     06A2                     _DO_NOTHING:
  1284     06A2  3400               	retlw	0
  1285     06A3                     __end_of_DO_NOTHING:
  1286                           
  1287                           	psect	stringtext11
  1288     06A3                     __pstringtext11:
  1289     06A3                     _NEGATIVE:
  1290     06A3  3400               	retlw	0
  1291     06A4                     __end_of_NEGATIVE:
  1292                           
  1293                           	psect	stringtext12
  1294     06A4                     __pstringtext12:
  1295     06A4                     _POSITIVE:
  1296     06A4  3401               	retlw	1
  1297     06A5                     __end_of_POSITIVE:
  1298                           
  1299                           	psect	stringtext13
  1300     06A5                     __pstringtext13:
  1301     06A5                     _symmetry_adc_config_value:
  1302     06A5  3407               	retlw	7
  1303     06A6                     __end_of_symmetry_adc_config_value:
  1304                           
  1305                           	psect	stringtext14
  1306     06A6                     __pstringtext14:
  1307     06A6                     _depth_adc_config_value:
  1308     06A6  3406               	retlw	6
  1309     06A7                     __end_of_depth_adc_config_value:
  1310                           
  1311                           	psect	stringtext15
  1312     06A7                     __pstringtext15:
  1313     06A7                     _speed_adc_config_value:
  1314     06A7  3405               	retlw	5
  1315     06A8                     __end_of_speed_adc_config_value:
  1316                           
  1317                           	psect	stringtext16
  1318     06A8                     __pstringtext16:
  1319     06A8                     _waveshape_adc_config_value:
  1320     06A8  3404               	retlw	4
  1321     06A9                     __end_of_waveshape_adc_config_value:
  1322     001C                     _T2CON	set	28
  1323     001B                     _PR2	set	27
  1324     0015                     _TMR0	set	21
  1325     00E2                     _TMR2ON	set	226
  1326     005D                     _TMR0IE	set	93
  1327     0089                     _TMR2IF	set	137
  1328     005F                     _GIE	set	95
  1329     005A                     _TMR0IF	set	90
  1330     0095                     _OPTION_REG	set	149
  1331     009B                     _ADRESL	set	155
  1332     009C                     _ADRESH	set	156
  1333     009D                     _ADCON0	set	157
  1334     009E                     _ADCON1	set	158
  1335     008E                     _TRISC	set	142
  1336     0098                     _OSCTUNE	set	152
  1337     0099                     _OSCCON	set	153
  1338     0462                     _TRISA2	set	1122
  1339     04E9                     _GO_nDONE	set	1257
  1340     04E8                     _ADON	set	1256
  1341     088F                     _C1ON	set	2191
  1342     08D7                     _SRLEN	set	2263
  1343     018E                     _ANSELC	set	398
  1344     020E                     _WPUC	set	526
  1345     029E                     _CCPTMRS0	set	670
  1346     0311                     _CCPR3L	set	785
  1347     0313                     _CCP3CON	set	787
  1348                           
  1349                           	psect	cinit
  1350     00D9                     start_initialization:	
  1351                           ; #config settings
  1352                           
  1353     00D9                     __initialization:
  1354                           
  1355                           ; Initialize objects allocated to BANK0
  1356     00D9  3186  2698  3180   	fcall	__pidataBANK0	;fetch initializer
  1357     00DC  00D3               	movwf	__pdataBANK0& (0+127)
  1358     00DD  3186  2699  3180   	fcall	__pidataBANK0+1	;fetch initializer
  1359     00E0  00D4               	movwf	(__pdataBANK0+1)& (0+127)
  1360                           
  1361                           ; Clear objects allocated to COMMON
  1362     00E1  01F6               	clrf	__pbssCOMMON& (0+127)
  1363     00E2  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
  1364     00E3  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
  1365     00E4  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
  1366     00E5  01FA               	clrf	(__pbssCOMMON+4)& (0+127)
  1367                           
  1368                           ; Clear objects allocated to BANK0
  1369     00E6  3020               	movlw	low __pbssBANK0
  1370     00E7  0084               	movwf	4
  1371     00E8  3000               	movlw	high __pbssBANK0
  1372     00E9  0085               	movwf	5
  1373     00EA  3020               	movlw	32
  1374     00EB  3186  2680         	fcall	clear_ram0
  1375     00ED                     end_of_initialization:	
  1376                           ;End of C runtime variable initialization code
  1377                           
  1378     00ED                     __end_of__initialization:
  1379     00ED  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1380     00EE  0020               	movlb	0
  1381     00EF  3186  2E14         	ljmp	_main	;jump to C main() function
  1382                           
  1383                           	psect	bssCOMMON
  1384     0076                     __pbssCOMMON:
  1385     0076                     _current_halfcycle:
  1386     0076                     	ds	1
  1387     0077                     _current_one_quadrant_index:
  1388     0077                     	ds	1
  1389     0078                     _current_waveshape:
  1390     0078                     	ds	1
  1391     0079                     _duty:
  1392     0079                     	ds	2
  1393                           
  1394                           	psect	bssBANK0
  1395     0020                     __pbssBANK0:
  1396     0020                     _speed_control_32:
  1397     0020                     	ds	4
  1398     0024                     _current_speed_linear_32:
  1399     0024                     	ds	4
  1400     0028                     _raw_TMR0:
  1401     0028                     	ds	3
  1402     002B                     _current_symmetry:
  1403     002B                     	ds	3
  1404     002E                     _final_TMR0:
  1405     002E                     	ds	3
  1406     0031                     _speed_control:
  1407     0031                     	ds	2
  1408     0033                     _current_speed_linear:
  1409     0033                     	ds	2
  1410     0035                     _current_depth:
  1411     0035                     	ds	2
  1412     0037                     _prescaler_final_index:
  1413     0037                     	ds	1
  1414     0038                     _prescaler_overflow_flag:
  1415     0038                     	ds	1
  1416     0039                     _symmetry_status:
  1417     0039                     	ds	1
  1418     003A                     _base_prescaler_bits_index:
  1419     003A                     	ds	1
  1420     003B                     _prescaler_adjust:
  1421     003B                     	ds	1
  1422     003C                     _how_many_128:
  1423     003C                     	ds	1
  1424     003D                     _duty_high_byte:
  1425     003D                     	ds	1
  1426     003E                     _duty_low_byte:
  1427     003E                     	ds	1
  1428     003F                     _current_quadrant:
  1429     003F                     	ds	1
  1430                           
  1431                           	psect	dataBANK0
  1432     0053                     __pdataBANK0:
  1433     0053                     _top_two_bytes_ptr:
  1434     0053                     	ds	2
  1435                           
  1436                           	psect	clrtext
  1437     0680                     clear_ram0:	
  1438                           ;	Called with FSR0 containing the base address, and
  1439                           ;	WREG with the size to clear
  1440                           
  1441     0680  0064               	clrwdt	;clear the watchdog before getting into this loop
  1442     0681                     clrloop0:
  1443     0681  0180               	clrf	0	;clear RAM location pointed to by FSR
  1444     0682  3101               	addfsr 0,1
  1445     0683  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1446     0684  2E81               	goto	clrloop0	;have we reached the end yet?
  1447     0685  3400               	retlw	0	;all done for this memory range, return
  1448                           
  1449                           	psect	cstackCOMMON
  1450     0070                     __pcstackCOMMON:
  1451     0070                     ?_SET_DUTY_CCP3:
  1452     0070                     ??_SET_DUTY_CCP3:	
  1453                           ; 1 bytes @ 0x0
  1454                           
  1455     0070                     ?_CONFIG_SYSTEM:	
  1456                           ; 1 bytes @ 0x0
  1457                           
  1458     0070                     ?_TURN_ON_CCP3_PWM:	
  1459                           ; 1 bytes @ 0x0
  1460                           
  1461     0070                     ?_CONFIG_TMR0_INTERRUPT:	
  1462                           ; 1 bytes @ 0x0
  1463                           
  1464     0070                     ?_GET_CURRENT_POT_VALUES:	
  1465                           ; 1 bytes @ 0x0
  1466                           
  1467     0070                     ?_PROCESS_RAW_SPEED_AND_PRESCALER:	
  1468                           ; 1 bytes @ 0x0
  1469                           
  1470     0070                     ?_PROCESS_TMR0_AND_PRESCALER_ADJUST:	
  1471                           ; 1 bytes @ 0x0
  1472                           
  1473     0070                     ?_INTERRUPT_InterruptManager:	
  1474                           ; 1 bytes @ 0x0
  1475                           
  1476     0070                     ?_main:	
  1477                           ; 1 bytes @ 0x0
  1478                           
  1479     0070                     ?_CONFIG_INT_OSC:	
  1480                           ; 1 bytes @ 0x0
  1481                           
  1482     0070                     ?_CONFIG_PORTS:	
  1483                           ; 1 bytes @ 0x0
  1484                           
  1485     0070                     ?_CONFIG_ADC_PINS:	
  1486                           ; 1 bytes @ 0x0
  1487                           
  1488     0070                     ?_CONFIG_PWM_CCP3:	
  1489                           ; 1 bytes @ 0x0
  1490                           
  1491     0070                     ?_DETERMINE_WAVESHAPE:	
  1492                           ; 1 bytes @ 0x0
  1493                           
  1494     0070                     ?_CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1:	
  1495                           ; 1 bytes @ 0x0
  1496                           
  1497     0070                     ?_TURN_PRESCALER_OFF:	
  1498                           ; 1 bytes @ 0x0
  1499                           
  1500     0070                     ?_TURN_PRESCALER_ON:	
  1501                           ; 1 bytes @ 0x0
  1502                           
  1503     0070                     ?_ADJUST_AND_SET_PRESCALER:	
  1504                           ; 1 bytes @ 0x0
  1505                           
  1506     0070                     ?_SHORTEN_PERIOD:	
  1507                           ; 1 bytes @ 0x0
  1508                           
  1509     0070                     ?_LENGTHEN_PERIOD:	
  1510                           ; 1 bytes @ 0x0
  1511                           
  1512                           
  1513                           ; 1 bytes @ 0x0
  1514     0070                     	ds	2
  1515     0072                     SET_DUTY_CCP3@temp:
  1516                           
  1517                           ; 1 bytes @ 0x2
  1518     0072                     	ds	1
  1519     0073                     SET_DUTY_CCP3@duty_ptr:
  1520                           
  1521                           ; 1 bytes @ 0x3
  1522     0073                     	ds	1
  1523     0074                     ??_INTERRUPT_InterruptManager:
  1524                           
  1525                           ; 1 bytes @ 0x4
  1526     0074                     	ds	2
  1527                           
  1528                           	psect	cstackBANK0
  1529     0040                     __pcstackBANK0:
  1530     0040                     ??_CONFIG_SYSTEM:
  1531     0040                     ??_TURN_ON_CCP3_PWM:	
  1532                           ; 1 bytes @ 0x0
  1533                           
  1534     0040                     ??_CONFIG_TMR0_INTERRUPT:	
  1535                           ; 1 bytes @ 0x0
  1536                           
  1537     0040                     ??_CONFIG_INT_OSC:	
  1538                           ; 1 bytes @ 0x0
  1539                           
  1540     0040                     ??_CONFIG_PORTS:	
  1541                           ; 1 bytes @ 0x0
  1542                           
  1543     0040                     ??_CONFIG_ADC_PINS:	
  1544                           ; 1 bytes @ 0x0
  1545                           
  1546     0040                     ??_CONFIG_PWM_CCP3:	
  1547                           ; 1 bytes @ 0x0
  1548                           
  1549     0040                     ??_CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1:	
  1550                           ; 1 bytes @ 0x0
  1551                           
  1552     0040                     ??_TURN_PRESCALER_OFF:	
  1553                           ; 1 bytes @ 0x0
  1554                           
  1555     0040                     ??_TURN_PRESCALER_ON:	
  1556                           ; 1 bytes @ 0x0
  1557                           
  1558     0040                     ?_DO_ADC:	
  1559                           ; 1 bytes @ 0x0
  1560                           
  1561     0040                     ?___tmul:	
  1562                           ; 2 bytes @ 0x0
  1563                           
  1564     0040                     ?___lmul:	
  1565                           ; 3 bytes @ 0x0
  1566                           
  1567     0040                     DO_ADC@modifier:	
  1568                           ; 4 bytes @ 0x0
  1569                           
  1570     0040                     ___tmul@multiplier:	
  1571                           ; 2 bytes @ 0x0
  1572                           
  1573     0040                     ___lmul@multiplier:	
  1574                           ; 3 bytes @ 0x0
  1575                           
  1576                           
  1577                           ; 4 bytes @ 0x0
  1578     0040                     	ds	2
  1579     0042                     ??_DO_ADC:
  1580                           
  1581                           ; 1 bytes @ 0x2
  1582     0042                     	ds	1
  1583     0043                     ??_ADJUST_AND_SET_PRESCALER:
  1584     0043                     DO_ADC@adc_result:	
  1585                           ; 1 bytes @ 0x3
  1586                           
  1587     0043                     ___tmul@multiplicand:	
  1588                           ; 2 bytes @ 0x3
  1589                           
  1590                           
  1591                           ; 3 bytes @ 0x3
  1592     0043                     	ds	1
  1593     0044                     ___lmul@multiplicand:
  1594                           
  1595                           ; 4 bytes @ 0x4
  1596     0044                     	ds	1
  1597     0045                     DO_ADC@temp:
  1598                           
  1599                           ; 1 bytes @ 0x5
  1600     0045                     	ds	1
  1601     0046                     ??_DETERMINE_WAVESHAPE:
  1602     0046                     ??___tmul:	
  1603                           ; 1 bytes @ 0x6
  1604                           
  1605     0046                     DETERMINE_WAVESHAPE@ADC:	
  1606                           ; 1 bytes @ 0x6
  1607                           
  1608     0046                     ___tmul@product:	
  1609                           ; 2 bytes @ 0x6
  1610                           
  1611                           
  1612                           ; 3 bytes @ 0x6
  1613     0046                     	ds	2
  1614     0048                     ??_GET_CURRENT_POT_VALUES:
  1615     0048                     ??___lmul:	
  1616                           ; 1 bytes @ 0x8
  1617                           
  1618     0048                     ___lmul@product:	
  1619                           ; 1 bytes @ 0x8
  1620                           
  1621                           
  1622                           ; 4 bytes @ 0x8
  1623     0048                     	ds	1
  1624     0049                     ??_SHORTEN_PERIOD:
  1625     0049                     ??_LENGTHEN_PERIOD:	
  1626                           ; 1 bytes @ 0x9
  1627                           
  1628                           
  1629                           ; 1 bytes @ 0x9
  1630     0049                     	ds	3
  1631     004C                     ??_PROCESS_RAW_SPEED_AND_PRESCALER:
  1632     004C                     SHORTEN_PERIOD@twofiftysix_minus_TMR0_final:	
  1633                           ; 1 bytes @ 0xC
  1634                           
  1635     004C                     _LENGTHEN_PERIOD$851:	
  1636                           ; 3 bytes @ 0xC
  1637                           
  1638                           
  1639                           ; 3 bytes @ 0xC
  1640     004C                     	ds	3
  1641     004F                     LENGTHEN_PERIOD@twofiftysix_minus_TMR0_final:
  1642     004F                     _SHORTEN_PERIOD$850:	
  1643                           ; 3 bytes @ 0xF
  1644                           
  1645                           
  1646                           ; 3 bytes @ 0xF
  1647     004F                     	ds	1
  1648     0050                     PROCESS_RAW_SPEED_AND_PRESCALER@speed_control_subtracted:
  1649                           
  1650                           ; 2 bytes @ 0x10
  1651     0050                     	ds	2
  1652     0052                     ??_PROCESS_TMR0_AND_PRESCALER_ADJUST:
  1653     0052                     PROCESS_TMR0_AND_PRESCALER_ADJUST@symmetry_status:	
  1654                           ; 1 bytes @ 0x12
  1655                           
  1656                           
  1657                           ; 1 bytes @ 0x12
  1658     0052                     	ds	1
  1659     0053                     ??_main:
  1660                           
  1661                           	psect	maintext
  1662     0614                     __pmaintext:	
  1663                           ; 1 bytes @ 0x13
  1664 ;;
  1665 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1666 ;;
  1667 ;; *************** function _main *****************
  1668 ;; Defined at:
  1669 ;;		line 127 in file "main.c"
  1670 ;; Parameters:    Size  Location     Type
  1671 ;;		None
  1672 ;; Auto vars:     Size  Location     Type
  1673 ;;		None
  1674 ;; Return value:  Size  Location     Type
  1675 ;;                  1    wreg      void 
  1676 ;; Registers used:
  1677 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1678 ;; Tracked objects:
  1679 ;;		On entry : B1F/0
  1680 ;;		On exit  : 1F/0
  1681 ;;		Unchanged: 0/0
  1682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1683 ;;      Params:         0       0       0       0
  1684 ;;      Locals:         0       0       0       0
  1685 ;;      Temps:          0       0       0       0
  1686 ;;      Totals:         0       0       0       0
  1687 ;;Total ram usage:        0 bytes
  1688 ;; Hardware stack levels required when called: 5
  1689 ;; This function calls:
  1690 ;;		_CONFIG_SYSTEM
  1691 ;;		_CONFIG_TMR0_INTERRUPT
  1692 ;;		_GET_CURRENT_POT_VALUES
  1693 ;;		_PROCESS_RAW_SPEED_AND_PRESCALER
  1694 ;;		_PROCESS_TMR0_AND_PRESCALER_ADJUST
  1695 ;;		_TURN_ON_CCP3_PWM
  1696 ;; This function is called by:
  1697 ;;		Startup code after reset
  1698 ;; This function uses a non-reentrant model
  1699 ;;
  1700                           
  1701     0614                     _main:	
  1702                           ;psect for function _main
  1703                           
  1704                           
  1705                           ;main.c: 128:     CONFIG_SYSTEM();
  1706                           
  1707                           ;incstack = 0
  1708                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1709     0614  3186  265B  3186   	fcall	_CONFIG_SYSTEM
  1710                           
  1711                           ;main.c: 129:     TURN_ON_CCP3_PWM();
  1712     0617  3186  2678  3186   	fcall	_TURN_ON_CCP3_PWM
  1713                           
  1714                           ;main.c: 130:     CONFIG_TMR0_INTERRUPT();
  1715     061A  3186  269A  3186   	fcall	_CONFIG_TMR0_INTERRUPT
  1716                           
  1717                           ;main.c: 131:     GET_CURRENT_POT_VALUES();
  1718     061D  3185  2507  3186   	fcall	_GET_CURRENT_POT_VALUES
  1719                           
  1720                           ;main.c: 132:     PROCESS_RAW_SPEED_AND_PRESCALER();
  1721     0620  3183  2372  3186   	fcall	_PROCESS_RAW_SPEED_AND_PRESCALER
  1722                           
  1723                           ;main.c: 133:     PROCESS_TMR0_AND_PRESCALER_ADJUST();
  1724     0623  3183  23EE  3186   	fcall	_PROCESS_TMR0_AND_PRESCALER_ADJUST
  1725                           
  1726                           ;main.c: 134:     TMR0 = (uint8_t)final_TMR0;
  1727     0626  082E               	movf	_final_TMR0,w	;volatile
  1728     0627  0095               	movwf	21	;volatile
  1729                           
  1730                           ;main.c: 135:     GIE = 1;
  1731     0628  178B               	bsf	11,7	;volatile
  1732     0629                     l1602:
  1733                           
  1734                           ;main.c: 138:         GET_CURRENT_POT_VALUES();
  1735     0629  3185  2507  3186   	fcall	_GET_CURRENT_POT_VALUES
  1736                           
  1737                           ;main.c: 139:         PROCESS_RAW_SPEED_AND_PRESCALER();
  1738     062C  3183  2372  3186   	fcall	_PROCESS_RAW_SPEED_AND_PRESCALER
  1739                           
  1740                           ;main.c: 140:         PROCESS_TMR0_AND_PRESCALER_ADJUST();
  1741     062F  3183  23EE  3186   	fcall	_PROCESS_TMR0_AND_PRESCALER_ADJUST
  1742     0632  2E29               	goto	l1602
  1743     0633                     __end_of_main:
  1744                           
  1745                           	psect	text1
  1746     0678                     __ptext1:	
  1747 ;; *************** function _TURN_ON_CCP3_PWM *****************
  1748 ;; Defined at:
  1749 ;;		line 73 in file "config.c"
  1750 ;; Parameters:    Size  Location     Type
  1751 ;;		None
  1752 ;; Auto vars:     Size  Location     Type
  1753 ;;		None
  1754 ;; Return value:  Size  Location     Type
  1755 ;;                  1    wreg      unsigned char 
  1756 ;; Registers used:
  1757 ;;		None
  1758 ;; Tracked objects:
  1759 ;;		On entry : B1F/0
  1760 ;;		On exit  : B1F/1
  1761 ;;		Unchanged: B00/0
  1762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1763 ;;      Params:         0       0       0       0
  1764 ;;      Locals:         0       0       0       0
  1765 ;;      Temps:          0       0       0       0
  1766 ;;      Totals:         0       0       0       0
  1767 ;;Total ram usage:        0 bytes
  1768 ;; Hardware stack levels used: 1
  1769 ;; Hardware stack levels required when called: 2
  1770 ;; This function calls:
  1771 ;;		Nothing
  1772 ;; This function is called by:
  1773 ;;		_main
  1774 ;; This function uses a non-reentrant model
  1775 ;;
  1776                           
  1777     0678                     _TURN_ON_CCP3_PWM:	
  1778                           ;psect for function _TURN_ON_CCP3_PWM
  1779                           
  1780                           
  1781                           ;config.c: 75:     TMR2IF = 0;
  1782                           
  1783                           ;incstack = 0
  1784                           ; Regs used in _TURN_ON_CCP3_PWM: []
  1785     0678  1091               	bcf	17,1	;volatile
  1786                           
  1787                           ;config.c: 76:     TMR2ON = 1;
  1788     0679  151C               	bsf	28,2	;volatile
  1789     067A                     l174:	
  1790                           ;config.c: 77:     while(TMR2IF == 0){}
  1791                           
  1792     067A  1C91               	btfss	17,1	;volatile
  1793     067B  2E7A               	goto	l174
  1794                           
  1795                           ;config.c: 78:     TMR2IF = 0;
  1796     067C  1091               	bcf	17,1	;volatile
  1797                           
  1798                           ;config.c: 79:     TRISA2 = 0;
  1799     067D  0021               	movlb	1	; select bank1
  1800     067E  110C               	bcf	12,2	;volatile
  1801                           
  1802                           ;config.c: 80:     return 1;;	Return value of _TURN_ON_CCP3_PWM is never used
  1803     067F  0008               	return
  1804     0680                     __end_of_TURN_ON_CCP3_PWM:
  1805                           
  1806                           	psect	text2
  1807     03EE                     __ptext2:	
  1808 ;; *************** function _PROCESS_TMR0_AND_PRESCALER_ADJUST *****************
  1809 ;; Defined at:
  1810 ;;		line 188 in file "system.c"
  1811 ;; Parameters:    Size  Location     Type
  1812 ;;		None
  1813 ;; Auto vars:     Size  Location     Type
  1814 ;;  symmetry_sta    1   18[BANK0 ] unsigned char 
  1815 ;; Return value:  Size  Location     Type
  1816 ;;                  1    wreg      unsigned char 
  1817 ;; Registers used:
  1818 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1819 ;; Tracked objects:
  1820 ;;		On entry : 1F/0
  1821 ;;		On exit  : 1F/0
  1822 ;;		Unchanged: 0/0
  1823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1824 ;;      Params:         0       0       0       0
  1825 ;;      Locals:         0       1       0       0
  1826 ;;      Temps:          0       0       0       0
  1827 ;;      Totals:         0       1       0       0
  1828 ;;Total ram usage:        1 bytes
  1829 ;; Hardware stack levels used: 1
  1830 ;; Hardware stack levels required when called: 4
  1831 ;; This function calls:
  1832 ;;		_ADJUST_AND_SET_PRESCALER
  1833 ;;		_LENGTHEN_PERIOD
  1834 ;;		_SHORTEN_PERIOD
  1835 ;; This function is called by:
  1836 ;;		_main
  1837 ;; This function uses a non-reentrant model
  1838 ;;
  1839                           
  1840     03EE                     _PROCESS_TMR0_AND_PRESCALER_ADJUST:	
  1841                           ;psect for function _PROCESS_TMR0_AND_PRESCALER_ADJUST
  1842                           
  1843                           
  1844                           ;system.c: 190:         if(current_symmetry == 128){
  1845                           
  1846                           ;incstack = 0
  1847                           ; Regs used in _PROCESS_TMR0_AND_PRESCALER_ADJUST: [wreg-fsr0h+status,2+status,0+pclath+
      +                          cstack]
  1848     03EE  3080               	movlw	128
  1849     03EF  062B               	xorwf	_current_symmetry,w	;volatile
  1850     03F0  042C               	iorwf	_current_symmetry+1,w	;volatile
  1851     03F1  042D               	iorwf	_current_symmetry+2,w	;volatile
  1852     03F2  1D03               	btfss	3,2
  1853     03F3  2BFD               	goto	l1492
  1854                           
  1855                           ;system.c: 191:             final_TMR0 = raw_TMR0;
  1856     03F4  0020               	movlb	0	; select bank0
  1857     03F5  0828               	movf	_raw_TMR0,w	;volatile
  1858     03F6  00AE               	movwf	_final_TMR0	;volatile
  1859     03F7  0829               	movf	_raw_TMR0+1,w	;volatile
  1860     03F8  00AF               	movwf	_final_TMR0+1	;volatile
  1861     03F9  082A               	movf	_raw_TMR0+2,w	;volatile
  1862     03FA  00B0               	movwf	_final_TMR0+2	;volatile
  1863     03FB  01BB               	clrf	_prescaler_adjust	;volatile
  1864                           
  1865                           ;system.c: 193:         }
  1866     03FC  2C37               	goto	l1522
  1867     03FD                     l1492:
  1868                           
  1869                           ;system.c: 195:         uint8_t symmetry_status = 0;
  1870     03FD  0020               	movlb	0	; select bank0
  1871     03FE  01D2               	clrf	PROCESS_TMR0_AND_PRESCALER_ADJUST@symmetry_status
  1872                           
  1873                           ;system.c: 196:         if(current_symmetry > 128){
  1874     03FF  3000               	movlw	0
  1875     0400  022D               	subwf	_current_symmetry+2,w	;volatile
  1876     0401  1D03               	skipz
  1877     0402  2C09               	goto	u735
  1878     0403  3000               	movlw	0
  1879     0404  022C               	subwf	_current_symmetry+1,w	;volatile
  1880     0405  1D03               	skipz
  1881     0406  2C09               	goto	u735
  1882     0407  3081               	movlw	129
  1883     0408  022B               	subwf	_current_symmetry,w	;volatile
  1884     0409                     u735:
  1885     0409  1C03               	skipc
  1886     040A  2C1A               	goto	l311
  1887                           
  1888                           ;system.c: 197:             current_symmetry = 255 - current_symmetry;
  1889     040B  082B               	movf	_current_symmetry,w	;volatile
  1890     040C  3CFF               	sublw	255
  1891     040D  00AB               	movwf	_current_symmetry	;volatile
  1892     040E  082C               	movf	_current_symmetry+1,w	;volatile
  1893     040F  1C03               	skipc
  1894     0410  0F2C               	incfsz	_current_symmetry+1,w	;volatile
  1895     0411  3C00               	sublw	0
  1896     0412  00AC               	movwf	_current_symmetry+1	;volatile
  1897     0413  082D               	movf	_current_symmetry+2,w	;volatile
  1898     0414  1C03               	skipc
  1899     0415  0F2D               	incfsz	_current_symmetry+2,w	;volatile
  1900     0416  3C00               	sublw	0
  1901     0417  00AD               	movwf	_current_symmetry+2	;volatile
  1902                           
  1903                           ;system.c: 198:             symmetry_status = 1;
  1904     0418  01D2               	clrf	PROCESS_TMR0_AND_PRESCALER_ADJUST@symmetry_status
  1905     0419  0AD2               	incf	PROCESS_TMR0_AND_PRESCALER_ADJUST@symmetry_status,f
  1906     041A                     l311:	
  1907                           ;system.c: 199:         }
  1908                           
  1909                           
  1910                           ;system.c: 201:         if((current_halfcycle == 0) && (symmetry_status == 0)){
  1911     041A  0876               	movf	_current_halfcycle,w	;volatile
  1912     041B  1903               	btfsc	3,2
  1913     041C  0852               	movf	PROCESS_TMR0_AND_PRESCALER_ADJUST@symmetry_status,w
  1914     041D  1903               	btfsc	3,2
  1915     041E  2C34               	goto	l1502
  1916                           
  1917                           ;system.c: 203:         }
  1918     041F  0876               	movf	_current_halfcycle,w	;volatile
  1919     0420  1D03               	btfss	3,2
  1920     0421  2C29               	goto	l1510
  1921     0422  0352               	decf	PROCESS_TMR0_AND_PRESCALER_ADJUST@symmetry_status,w
  1922     0423  1D03               	btfss	3,2
  1923     0424  2C29               	goto	l1510
  1924     0425                     l1508:
  1925                           
  1926                           ;system.c: 205:             LENGTHEN_PERIOD();
  1927     0425  3182  22F5  3183   	fcall	_LENGTHEN_PERIOD
  1928                           
  1929                           ;system.c: 206:         }
  1930     0428  2C37               	goto	l1522
  1931     0429                     l1510:
  1932     0429  0376               	decf	_current_halfcycle,w	;volatile
  1933     042A  1903               	btfsc	3,2
  1934     042B  0852               	movf	PROCESS_TMR0_AND_PRESCALER_ADJUST@symmetry_status,w
  1935     042C  1903               	btfsc	3,2
  1936     042D  2C25               	goto	l1508
  1937     042E  0376               	decf	_current_halfcycle,w	;volatile
  1938     042F  1D03               	btfss	3,2
  1939     0430  2C37               	goto	l1522
  1940     0431  0352               	decf	PROCESS_TMR0_AND_PRESCALER_ADJUST@symmetry_status,w
  1941     0432  1D03               	btfss	3,2
  1942     0433  2C37               	goto	l1522
  1943     0434                     l1502:
  1944                           
  1945                           ;system.c: 202:             SHORTEN_PERIOD();
  1946     0434  3184  24B8  3183   	fcall	_SHORTEN_PERIOD
  1947     0437                     l1522:
  1948                           
  1949                           ;system.c: 215:         ADJUST_AND_SET_PRESCALER();
  1950     0437  3184  2456  3183   	fcall	_ADJUST_AND_SET_PRESCALER
  1951                           
  1952                           ;system.c: 218:         if(prescaler_overflow_flag == 1){
  1953     043A  0020               	movlb	0	; select bank0
  1954     043B  0338               	decf	_prescaler_overflow_flag,w	;volatile
  1955     043C  1D03               	btfss	3,2
  1956     043D  2C48               	goto	l1528
  1957                           
  1958                           ;system.c: 219:             final_TMR0 = final_TMR0 + 2;
  1959     043E  3002               	movlw	2
  1960     043F  072E               	addwf	_final_TMR0,w	;volatile
  1961     0440  00AE               	movwf	_final_TMR0	;volatile
  1962     0441  3000               	movlw	0
  1963     0442  3D2F               	addwfc	_final_TMR0+1,w	;volatile
  1964     0443  00AF               	movwf	_final_TMR0+1	;volatile
  1965     0444  3000               	movlw	0
  1966     0445  3D30               	addwfc	_final_TMR0+2,w	;volatile
  1967     0446  00B0               	movwf	_final_TMR0+2	;volatile
  1968                           
  1969                           ;system.c: 220:         }
  1970     0447  0008               	return
  1971     0448                     l1528:
  1972     0448  3007               	movlw	7
  1973     0449  0637               	xorwf	_prescaler_final_index,w	;volatile
  1974     044A  1D03               	btfss	3,2
  1975     044B  0008               	return
  1976                           
  1977                           ;system.c: 222:             final_TMR0 = final_TMR0 + 1;
  1978     044C  3001               	movlw	1
  1979     044D  072E               	addwf	_final_TMR0,w	;volatile
  1980     044E  00AE               	movwf	_final_TMR0	;volatile
  1981     044F  3000               	movlw	0
  1982     0450  3D2F               	addwfc	_final_TMR0+1,w	;volatile
  1983     0451  00AF               	movwf	_final_TMR0+1	;volatile
  1984     0452  3000               	movlw	0
  1985     0453  3D30               	addwfc	_final_TMR0+2,w	;volatile
  1986     0454  00B0               	movwf	_final_TMR0+2	;volatile
  1987     0455  0008               	return
  1988     0456                     __end_of_PROCESS_TMR0_AND_PRESCALER_ADJUST:
  1989                           
  1990                           	psect	text3
  1991     04B8                     __ptext3:	
  1992 ;; *************** function _SHORTEN_PERIOD *****************
  1993 ;; Defined at:
  1994 ;;		line 158 in file "system.c"
  1995 ;; Parameters:    Size  Location     Type
  1996 ;;		None
  1997 ;; Auto vars:     Size  Location     Type
  1998 ;;  twofiftysix_    3   12[BANK0 ] unsigned um
  1999 ;; Return value:  Size  Location     Type
  2000 ;;                  1    wreg      unsigned char 
  2001 ;; Registers used:
  2002 ;;		wreg, status,2, status,0, pclath, cstack
  2003 ;; Tracked objects:
  2004 ;;		On entry : 1F/0
  2005 ;;		On exit  : 1F/0
  2006 ;;		Unchanged: 0/0
  2007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2008 ;;      Params:         0       0       0       0
  2009 ;;      Locals:         0       6       0       0
  2010 ;;      Temps:          0       3       0       0
  2011 ;;      Totals:         0       9       0       0
  2012 ;;Total ram usage:        9 bytes
  2013 ;; Hardware stack levels used: 1
  2014 ;; Hardware stack levels required when called: 3
  2015 ;; This function calls:
  2016 ;;		___tmul
  2017 ;; This function is called by:
  2018 ;;		_PROCESS_TMR0_AND_PRESCALER_ADJUST
  2019 ;; This function uses a non-reentrant model
  2020 ;;
  2021                           
  2022     04B8                     _SHORTEN_PERIOD:	
  2023                           ;psect for function _SHORTEN_PERIOD
  2024                           
  2025                           
  2026                           ;system.c: 160:             uint24_t twofiftysix_minus_TMR0_final = (((256-raw_TMR0) * (
      +                          1024 +(24*current_symmetry))) >> 12);
  2027                           
  2028                           ;incstack = 0
  2029                           ; Regs used in _SHORTEN_PERIOD: [wreg+status,2+status,0+pclath+cstack]
  2030     04B8  082B               	movf	_current_symmetry,w	;volatile
  2031     04B9  00C0               	movwf	___tmul@multiplier
  2032     04BA  082C               	movf	_current_symmetry+1,w	;volatile
  2033     04BB  00C1               	movwf	___tmul@multiplier+1
  2034     04BC  082D               	movf	_current_symmetry+2,w	;volatile
  2035     04BD  00C2               	movwf	___tmul@multiplier+2
  2036     04BE  3018               	movlw	24
  2037     04BF  00C3               	movwf	___tmul@multiplicand
  2038     04C0  3000               	movlw	0
  2039     04C1  00C4               	movwf	___tmul@multiplicand+1
  2040     04C2  3000               	movlw	0
  2041     04C3  00C5               	movwf	___tmul@multiplicand+2
  2042     04C4  3185  25CE  3184   	fcall	___tmul
  2043     04C7  3000               	movlw	0
  2044     04C8  0740               	addwf	?___tmul,w
  2045     04C9  00CF               	movwf	_SHORTEN_PERIOD$850	;volatile
  2046     04CA  3004               	movlw	4
  2047     04CB  3D41               	addwfc	?___tmul+1,w
  2048     04CC  00D0               	movwf	_SHORTEN_PERIOD$850+1	;volatile
  2049     04CD  3000               	movlw	0
  2050     04CE  3D42               	addwfc	?___tmul+2,w
  2051     04CF  00D1               	movwf	_SHORTEN_PERIOD$850+2	;volatile
  2052                           
  2053                           ;system.c: 160:             uint24_t twofiftysix_minus_TMR0_final = (((256-raw_TMR0) * (
      +                          1024 +(24*current_symmetry))) >> 12);
  2054     04D0  084F               	movf	_SHORTEN_PERIOD$850,w	;volatile
  2055     04D1  00C0               	movwf	___tmul@multiplier
  2056     04D2  0850               	movf	_SHORTEN_PERIOD$850+1,w	;volatile
  2057     04D3  00C1               	movwf	___tmul@multiplier+1
  2058     04D4  0851               	movf	_SHORTEN_PERIOD$850+2,w	;volatile
  2059     04D5  00C2               	movwf	___tmul@multiplier+2
  2060     04D6  0828               	movf	_raw_TMR0,w	;volatile
  2061     04D7  3C00               	sublw	0
  2062     04D8  00C3               	movwf	___tmul@multiplicand
  2063     04D9  0829               	movf	_raw_TMR0+1,w	;volatile
  2064     04DA  1C03               	skipc
  2065     04DB  0F29               	incfsz	_raw_TMR0+1,w	;volatile
  2066     04DC  3C01               	sublw	1
  2067     04DD  00C4               	movwf	___tmul@multiplicand+1
  2068     04DE  082A               	movf	_raw_TMR0+2,w	;volatile
  2069     04DF  1C03               	skipc
  2070     04E0  0F2A               	incfsz	_raw_TMR0+2,w	;volatile
  2071     04E1  3C00               	sublw	0
  2072     04E2  00C5               	movwf	___tmul@multiplicand+2
  2073     04E3  3185  25CE  3184   	fcall	___tmul
  2074     04E6  0840               	movf	?___tmul,w
  2075     04E7  00C9               	movwf	??_SHORTEN_PERIOD
  2076     04E8  0841               	movf	?___tmul+1,w
  2077     04E9  00CA               	movwf	??_SHORTEN_PERIOD+1
  2078     04EA  0842               	movf	?___tmul+2,w
  2079     04EB  00CB               	movwf	??_SHORTEN_PERIOD+2
  2080     04EC  300C               	movlw	12
  2081     04ED                     u575:
  2082     04ED  36CB               	lsrf	??_SHORTEN_PERIOD+2,f
  2083     04EE  0CCA               	rrf	??_SHORTEN_PERIOD+1,f
  2084     04EF  0CC9               	rrf	??_SHORTEN_PERIOD,f
  2085     04F0  0B89               	decfsz	9,f
  2086     04F1  2CED               	goto	u575
  2087     04F2  0849               	movf	??_SHORTEN_PERIOD,w
  2088     04F3  00CC               	movwf	SHORTEN_PERIOD@twofiftysix_minus_TMR0_final
  2089     04F4  084A               	movf	??_SHORTEN_PERIOD+1,w
  2090     04F5  00CD               	movwf	SHORTEN_PERIOD@twofiftysix_minus_TMR0_final+1
  2091     04F6  084B               	movf	??_SHORTEN_PERIOD+2,w
  2092     04F7  00CE               	movwf	SHORTEN_PERIOD@twofiftysix_minus_TMR0_final+2
  2093                           
  2094                           ;system.c: 163:         final_TMR0 = (256 - twofiftysix_minus_TMR0_final);
  2095     04F8  084C               	movf	SHORTEN_PERIOD@twofiftysix_minus_TMR0_final,w
  2096     04F9  3C00               	sublw	0
  2097     04FA  00AE               	movwf	_final_TMR0	;volatile
  2098     04FB  084D               	movf	SHORTEN_PERIOD@twofiftysix_minus_TMR0_final+1,w
  2099     04FC  1C03               	skipc
  2100     04FD  0F4D               	incfsz	SHORTEN_PERIOD@twofiftysix_minus_TMR0_final+1,w
  2101     04FE  3C01               	sublw	1
  2102     04FF  00AF               	movwf	_final_TMR0+1	;volatile
  2103     0500  084E               	movf	SHORTEN_PERIOD@twofiftysix_minus_TMR0_final+2,w
  2104     0501  1C03               	skipc
  2105     0502  0F4E               	incfsz	SHORTEN_PERIOD@twofiftysix_minus_TMR0_final+2,w
  2106     0503  3C00               	sublw	0
  2107     0504  00B0               	movwf	_final_TMR0+2	;volatile
  2108     0505  01BB               	clrf	_prescaler_adjust	;volatile
  2109     0506  0008               	return
  2110     0507                     __end_of_SHORTEN_PERIOD:
  2111                           
  2112                           	psect	text4
  2113     02F5                     __ptext4:	
  2114 ;; *************** function _LENGTHEN_PERIOD *****************
  2115 ;; Defined at:
  2116 ;;		line 169 in file "system.c"
  2117 ;; Parameters:    Size  Location     Type
  2118 ;;		None
  2119 ;; Auto vars:     Size  Location     Type
  2120 ;;  twofiftysix_    3   15[BANK0 ] unsigned um
  2121 ;; Return value:  Size  Location     Type
  2122 ;;                  1    wreg      unsigned char 
  2123 ;; Registers used:
  2124 ;;		wreg, status,2, status,0, pclath, cstack
  2125 ;; Tracked objects:
  2126 ;;		On entry : 1F/0
  2127 ;;		On exit  : 1F/0
  2128 ;;		Unchanged: 0/0
  2129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2130 ;;      Params:         0       0       0       0
  2131 ;;      Locals:         0       6       0       0
  2132 ;;      Temps:          0       3       0       0
  2133 ;;      Totals:         0       9       0       0
  2134 ;;Total ram usage:        9 bytes
  2135 ;; Hardware stack levels used: 1
  2136 ;; Hardware stack levels required when called: 3
  2137 ;; This function calls:
  2138 ;;		___tmul
  2139 ;; This function is called by:
  2140 ;;		_PROCESS_TMR0_AND_PRESCALER_ADJUST
  2141 ;; This function uses a non-reentrant model
  2142 ;;
  2143                           
  2144     02F5                     _LENGTHEN_PERIOD:	
  2145                           ;psect for function _LENGTHEN_PERIOD
  2146                           
  2147                           
  2148                           ;system.c: 171:             uint24_t twofiftysix_minus_TMR0_final = (((256-raw_TMR0) * (
      +                          896 -(3*current_symmetry))) >> 9);
  2149                           
  2150                           ;incstack = 0
  2151                           ; Regs used in _LENGTHEN_PERIOD: [wreg+status,2+status,0+pclath+cstack]
  2152     02F5  082B               	movf	_current_symmetry,w	;volatile
  2153     02F6  00C0               	movwf	___tmul@multiplier
  2154     02F7  082C               	movf	_current_symmetry+1,w	;volatile
  2155     02F8  00C1               	movwf	___tmul@multiplier+1
  2156     02F9  082D               	movf	_current_symmetry+2,w	;volatile
  2157     02FA  00C2               	movwf	___tmul@multiplier+2
  2158     02FB  30FD               	movlw	253
  2159     02FC  00C3               	movwf	___tmul@multiplicand
  2160     02FD  30FF               	movlw	255
  2161     02FE  00C4               	movwf	___tmul@multiplicand+1
  2162     02FF  30FF               	movlw	255
  2163     0300  00C5               	movwf	___tmul@multiplicand+2
  2164     0301  3185  25CE  3182   	fcall	___tmul
  2165     0304  3080               	movlw	128
  2166     0305  0740               	addwf	?___tmul,w
  2167     0306  00CC               	movwf	_LENGTHEN_PERIOD$851	;volatile
  2168     0307  3003               	movlw	3
  2169     0308  3D41               	addwfc	?___tmul+1,w
  2170     0309  00CD               	movwf	_LENGTHEN_PERIOD$851+1	;volatile
  2171     030A  3000               	movlw	0
  2172     030B  3D42               	addwfc	?___tmul+2,w
  2173     030C  00CE               	movwf	_LENGTHEN_PERIOD$851+2	;volatile
  2174                           
  2175                           ;system.c: 171:             uint24_t twofiftysix_minus_TMR0_final = (((256-raw_TMR0) * (
      +                          896 -(3*current_symmetry))) >> 9);
  2176     030D  084C               	movf	_LENGTHEN_PERIOD$851,w	;volatile
  2177     030E  00C0               	movwf	___tmul@multiplier
  2178     030F  084D               	movf	_LENGTHEN_PERIOD$851+1,w	;volatile
  2179     0310  00C1               	movwf	___tmul@multiplier+1
  2180     0311  084E               	movf	_LENGTHEN_PERIOD$851+2,w	;volatile
  2181     0312  00C2               	movwf	___tmul@multiplier+2
  2182     0313  0828               	movf	_raw_TMR0,w	;volatile
  2183     0314  3C00               	sublw	0
  2184     0315  00C3               	movwf	___tmul@multiplicand
  2185     0316  0829               	movf	_raw_TMR0+1,w	;volatile
  2186     0317  1C03               	skipc
  2187     0318  0F29               	incfsz	_raw_TMR0+1,w	;volatile
  2188     0319  3C01               	sublw	1
  2189     031A  00C4               	movwf	___tmul@multiplicand+1
  2190     031B  082A               	movf	_raw_TMR0+2,w	;volatile
  2191     031C  1C03               	skipc
  2192     031D  0F2A               	incfsz	_raw_TMR0+2,w	;volatile
  2193     031E  3C00               	sublw	0
  2194     031F  00C5               	movwf	___tmul@multiplicand+2
  2195     0320  3185  25CE  3182   	fcall	___tmul
  2196     0323  0840               	movf	?___tmul,w
  2197     0324  00C9               	movwf	??_LENGTHEN_PERIOD
  2198     0325  0841               	movf	?___tmul+1,w
  2199     0326  00CA               	movwf	??_LENGTHEN_PERIOD+1
  2200     0327  0842               	movf	?___tmul+2,w
  2201     0328  00CB               	movwf	??_LENGTHEN_PERIOD+2
  2202     0329  3009               	movlw	9
  2203     032A                     u585:
  2204     032A  36CB               	lsrf	??_LENGTHEN_PERIOD+2,f
  2205     032B  0CCA               	rrf	??_LENGTHEN_PERIOD+1,f
  2206     032C  0CC9               	rrf	??_LENGTHEN_PERIOD,f
  2207     032D  0B89               	decfsz	9,f
  2208     032E  2B2A               	goto	u585
  2209     032F  0849               	movf	??_LENGTHEN_PERIOD,w
  2210     0330  00CF               	movwf	LENGTHEN_PERIOD@twofiftysix_minus_TMR0_final
  2211     0331  084A               	movf	??_LENGTHEN_PERIOD+1,w
  2212     0332  00D0               	movwf	LENGTHEN_PERIOD@twofiftysix_minus_TMR0_final+1
  2213     0333  084B               	movf	??_LENGTHEN_PERIOD+2,w
  2214     0334  00D1               	movwf	LENGTHEN_PERIOD@twofiftysix_minus_TMR0_final+2
  2215                           
  2216                           ;system.c: 174:         if(twofiftysix_minus_TMR0_final > 256){
  2217     0335  3000               	movlw	0
  2218     0336  0251               	subwf	LENGTHEN_PERIOD@twofiftysix_minus_TMR0_final+2,w
  2219     0337  1D03               	skipz
  2220     0338  2B3F               	goto	u595
  2221     0339  3001               	movlw	1
  2222     033A  0250               	subwf	LENGTHEN_PERIOD@twofiftysix_minus_TMR0_final+1,w
  2223     033B  1D03               	skipz
  2224     033C  2B3F               	goto	u595
  2225     033D  3001               	movlw	1
  2226     033E  024F               	subwf	LENGTHEN_PERIOD@twofiftysix_minus_TMR0_final,w
  2227     033F                     u595:
  2228     033F  1C03               	skipc
  2229     0340  2B63               	goto	l1426
  2230                           
  2231                           ;system.c: 175:             twofiftysix_minus_TMR0_final = (twofiftysix_minus_TMR0_final
      +                           >> 1);
  2232     0341  084F               	movf	LENGTHEN_PERIOD@twofiftysix_minus_TMR0_final,w
  2233     0342  00C9               	movwf	??_LENGTHEN_PERIOD
  2234     0343  0850               	movf	LENGTHEN_PERIOD@twofiftysix_minus_TMR0_final+1,w
  2235     0344  00CA               	movwf	??_LENGTHEN_PERIOD+1
  2236     0345  0851               	movf	LENGTHEN_PERIOD@twofiftysix_minus_TMR0_final+2,w
  2237     0346  00CB               	movwf	??_LENGTHEN_PERIOD+2
  2238     0347  3001               	movlw	1
  2239     0348                     u605:
  2240     0348  36CB               	lsrf	??_LENGTHEN_PERIOD+2,f
  2241     0349  0CCA               	rrf	??_LENGTHEN_PERIOD+1,f
  2242     034A  0CC9               	rrf	??_LENGTHEN_PERIOD,f
  2243     034B  0B89               	decfsz	9,f
  2244     034C  2B48               	goto	u605
  2245     034D  0849               	movf	??_LENGTHEN_PERIOD,w
  2246     034E  00CF               	movwf	LENGTHEN_PERIOD@twofiftysix_minus_TMR0_final
  2247     034F  084A               	movf	??_LENGTHEN_PERIOD+1,w
  2248     0350  00D0               	movwf	LENGTHEN_PERIOD@twofiftysix_minus_TMR0_final+1
  2249     0351  084B               	movf	??_LENGTHEN_PERIOD+2,w
  2250     0352  00D1               	movwf	LENGTHEN_PERIOD@twofiftysix_minus_TMR0_final+2
  2251                           
  2252                           ;system.c: 176:             final_TMR0 = (256 - twofiftysix_minus_TMR0_final);
  2253     0353  084F               	movf	LENGTHEN_PERIOD@twofiftysix_minus_TMR0_final,w
  2254     0354  3C00               	sublw	0
  2255     0355  00AE               	movwf	_final_TMR0	;volatile
  2256     0356  0850               	movf	LENGTHEN_PERIOD@twofiftysix_minus_TMR0_final+1,w
  2257     0357  1C03               	skipc
  2258     0358  0F50               	incfsz	LENGTHEN_PERIOD@twofiftysix_minus_TMR0_final+1,w
  2259     0359  3C01               	sublw	1
  2260     035A  00AF               	movwf	_final_TMR0+1	;volatile
  2261     035B  0851               	movf	LENGTHEN_PERIOD@twofiftysix_minus_TMR0_final+2,w
  2262     035C  1C03               	skipc
  2263     035D  0F51               	incfsz	LENGTHEN_PERIOD@twofiftysix_minus_TMR0_final+2,w
  2264     035E  3C00               	sublw	0
  2265     035F  00B0               	movwf	_final_TMR0+2	;volatile
  2266     0360  3002               	movlw	2
  2267     0361  00BB               	movwf	_prescaler_adjust	;volatile
  2268                           
  2269                           ;system.c: 178:         }
  2270     0362  0008               	return
  2271     0363                     l1426:
  2272                           
  2273                           ;system.c: 180:             final_TMR0 = 256 - twofiftysix_minus_TMR0_final;
  2274     0363  084F               	movf	LENGTHEN_PERIOD@twofiftysix_minus_TMR0_final,w
  2275     0364  3C00               	sublw	0
  2276     0365  00AE               	movwf	_final_TMR0	;volatile
  2277     0366  0850               	movf	LENGTHEN_PERIOD@twofiftysix_minus_TMR0_final+1,w
  2278     0367  1C03               	skipc
  2279     0368  0F50               	incfsz	LENGTHEN_PERIOD@twofiftysix_minus_TMR0_final+1,w
  2280     0369  3C01               	sublw	1
  2281     036A  00AF               	movwf	_final_TMR0+1	;volatile
  2282     036B  0851               	movf	LENGTHEN_PERIOD@twofiftysix_minus_TMR0_final+2,w
  2283     036C  1C03               	skipc
  2284     036D  0F51               	incfsz	LENGTHEN_PERIOD@twofiftysix_minus_TMR0_final+2,w
  2285     036E  3C00               	sublw	0
  2286     036F  00B0               	movwf	_final_TMR0+2	;volatile
  2287     0370  01BB               	clrf	_prescaler_adjust	;volatile
  2288     0371  0008               	return
  2289     0372                     __end_of_LENGTHEN_PERIOD:
  2290                           
  2291                           	psect	text5
  2292     05CE                     __ptext5:	
  2293 ;; *************** function ___tmul *****************
  2294 ;; Defined at:
  2295 ;;		line 15 in file "/Applications/microchip/xc8/v2.45/pic/sources/c99/common/Umul24.c"
  2296 ;; Parameters:    Size  Location     Type
  2297 ;;  multiplier      3    0[BANK0 ] unsigned um
  2298 ;;  multiplicand    3    3[BANK0 ] unsigned um
  2299 ;; Auto vars:     Size  Location     Type
  2300 ;;  product         3    6[BANK0 ] unsigned um
  2301 ;; Return value:  Size  Location     Type
  2302 ;;                  3    0[BANK0 ] unsigned um
  2303 ;; Registers used:
  2304 ;;		wreg, status,2, status,0
  2305 ;; Tracked objects:
  2306 ;;		On entry : 1F/0
  2307 ;;		On exit  : 1F/0
  2308 ;;		Unchanged: 0/0
  2309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2310 ;;      Params:         0       6       0       0
  2311 ;;      Locals:         0       3       0       0
  2312 ;;      Temps:          0       0       0       0
  2313 ;;      Totals:         0       9       0       0
  2314 ;;Total ram usage:        9 bytes
  2315 ;; Hardware stack levels used: 1
  2316 ;; Hardware stack levels required when called: 2
  2317 ;; This function calls:
  2318 ;;		Nothing
  2319 ;; This function is called by:
  2320 ;;		_SHORTEN_PERIOD
  2321 ;;		_LENGTHEN_PERIOD
  2322 ;; This function uses a non-reentrant model
  2323 ;;
  2324                           
  2325     05CE                     ___tmul:	
  2326                           ;psect for function ___tmul
  2327                           
  2328                           
  2329                           ;incstack = 0
  2330                           ; Regs used in ___tmul: [wreg+status,2+status,0]
  2331     05CE  3000               	movlw	0
  2332     05CF  00C6               	movwf	___tmul@product
  2333     05D0  3000               	movlw	0
  2334     05D1  00C7               	movwf	___tmul@product+1
  2335     05D2  3000               	movlw	0
  2336     05D3  00C8               	movwf	___tmul@product+2
  2337     05D4                     l1292:
  2338     05D4  1C40               	btfss	___tmul@multiplier,0
  2339     05D5  2DDC               	goto	l1296
  2340     05D6  0843               	movf	___tmul@multiplicand,w
  2341     05D7  07C6               	addwf	___tmul@product,f
  2342     05D8  0844               	movf	___tmul@multiplicand+1,w
  2343     05D9  3DC7               	addwfc	___tmul@product+1,f
  2344     05DA  0845               	movf	___tmul@multiplicand+2,w
  2345     05DB  3DC8               	addwfc	___tmul@product+2,f
  2346     05DC                     l1296:
  2347     05DC  3001               	movlw	1
  2348     05DD                     u455:
  2349     05DD  35C3               	lslf	___tmul@multiplicand,f
  2350     05DE  0DC4               	rlf	___tmul@multiplicand+1,f
  2351     05DF  0DC5               	rlf	___tmul@multiplicand+2,f
  2352     05E0  0B89               	decfsz	9,f
  2353     05E1  2DDD               	goto	u455
  2354     05E2  3001               	movlw	1
  2355     05E3                     u465:
  2356     05E3  36C2               	lsrf	___tmul@multiplier+2,f
  2357     05E4  0CC1               	rrf	___tmul@multiplier+1,f
  2358     05E5  0CC0               	rrf	___tmul@multiplier,f
  2359     05E6  0B89               	decfsz	9,f
  2360     05E7  2DE3               	goto	u465
  2361     05E8  0842               	movf	___tmul@multiplier+2,w
  2362     05E9  0441               	iorwf	___tmul@multiplier+1,w
  2363     05EA  0440               	iorwf	___tmul@multiplier,w
  2364     05EB  1D03               	skipz
  2365     05EC  2DD4               	goto	l1292
  2366     05ED  0846               	movf	___tmul@product,w
  2367     05EE  00C0               	movwf	?___tmul
  2368     05EF  0847               	movf	___tmul@product+1,w
  2369     05F0  00C1               	movwf	?___tmul+1
  2370     05F1  0848               	movf	___tmul@product+2,w
  2371     05F2  00C2               	movwf	?___tmul+2
  2372     05F3  0008               	return
  2373     05F4                     __end_of___tmul:
  2374                           
  2375                           	psect	text6
  2376     0456                     __ptext6:	
  2377 ;; *************** function _ADJUST_AND_SET_PRESCALER *****************
  2378 ;; Defined at:
  2379 ;;		line 121 in file "system.c"
  2380 ;; Parameters:    Size  Location     Type
  2381 ;;		None
  2382 ;; Auto vars:     Size  Location     Type
  2383 ;;		None
  2384 ;; Return value:  Size  Location     Type
  2385 ;;                  1    wreg      unsigned char 
  2386 ;; Registers used:
  2387 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2388 ;; Tracked objects:
  2389 ;;		On entry : 1F/0
  2390 ;;		On exit  : 1E/0
  2391 ;;		Unchanged: 0/0
  2392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2393 ;;      Params:         0       0       0       0
  2394 ;;      Locals:         0       0       0       0
  2395 ;;      Temps:          0       0       0       0
  2396 ;;      Totals:         0       0       0       0
  2397 ;;Total ram usage:        0 bytes
  2398 ;; Hardware stack levels used: 1
  2399 ;; Hardware stack levels required when called: 3
  2400 ;; This function calls:
  2401 ;;		_CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1
  2402 ;;		_TURN_PRESCALER_OFF
  2403 ;;		_TURN_PRESCALER_ON
  2404 ;; This function is called by:
  2405 ;;		_PROCESS_TMR0_AND_PRESCALER_ADJUST
  2406 ;; This function uses a non-reentrant model
  2407 ;;
  2408                           
  2409     0456                     _ADJUST_AND_SET_PRESCALER:	
  2410                           ;psect for function _ADJUST_AND_SET_PRESCALER
  2411                           
  2412                           
  2413                           ;incstack = 0
  2414                           ; Regs used in _ADJUST_AND_SET_PRESCALER: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2415     0456  033B               	decf	_prescaler_adjust,w	;volatile
  2416     0457  1D03               	btfss	3,2
  2417     0458  2C76               	goto	l1378
  2418                           
  2419                           ;system.c: 123:         prescaler_overflow_flag = CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1();
  2420     0459  3186  2633  3184   	fcall	_CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1
  2421     045C  0020               	movlb	0	; select bank0
  2422     045D  00B8               	movwf	_prescaler_overflow_flag	;volatile
  2423                           
  2424                           ;system.c: 124:             if(prescaler_overflow_flag){
  2425     045E  0838               	movf	_prescaler_overflow_flag,w	;volatile
  2426     045F  1903               	btfsc	3,2
  2427     0460  2C64               	goto	l1372
  2428     0461                     l1366:
  2429                           
  2430                           ;system.c: 125:                 TURN_PRESCALER_OFF();
  2431     0461  3186  268C         	fcall	_TURN_PRESCALER_OFF
  2432     0463  0008               	return
  2433     0464                     l1372:
  2434                           
  2435                           ;system.c: 129:                 TURN_PRESCALER_ON();
  2436     0464  3186  2695         	fcall	_TURN_PRESCALER_ON
  2437                           
  2438                           ;system.c: 130:                 OPTION_REG = prescaler_bits[base_prescaler_bits_index + 
      +                          1];
  2439     0466  0020               	movlb	0	; select bank0
  2440     0467  083A               	movf	_base_prescaler_bits_index,w	;volatile
  2441     0468  3E71               	addlw	low ((_prescaler_bits+1)| (0+32768))
  2442     0469  0084               	movwf	4
  2443     046A  3086               	movlw	high ((_prescaler_bits+1)| (0+32768))
  2444     046B  1803               	skipnc
  2445     046C  3E01               	addlw	1
  2446     046D  0085               	movwf	5
  2447     046E  0800               	movf	0,w	;code access
  2448     046F  0021               	movlb	1	; select bank1
  2449     0470  0095               	movwf	21	;volatile
  2450                           
  2451                           ;system.c: 131:                 prescaler_final_index = base_prescaler_bits_index + 1;
  2452     0471  0020               	movlb	0	; select bank0
  2453     0472  083A               	movf	_base_prescaler_bits_index,w	;volatile
  2454     0473  3E01               	addlw	1
  2455     0474  00B7               	movwf	_prescaler_final_index	;volatile
  2456     0475  0008               	return
  2457     0476                     l1378:
  2458     0476  3003               	movlw	3
  2459     0477  063B               	xorwf	_prescaler_adjust,w	;volatile
  2460     0478  1D03               	btfss	3,2
  2461     0479  2C94               	goto	l1396
  2462                           
  2463                           ;system.c: 135:         prescaler_overflow_flag = CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1();
  2464     047A  3186  2633  3184   	fcall	_CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1
  2465     047D  0020               	movlb	0	; select bank0
  2466     047E  00B8               	movwf	_prescaler_overflow_flag	;volatile
  2467                           
  2468                           ;system.c: 136:             if(prescaler_overflow_flag){
  2469     047F  0838               	movf	_prescaler_overflow_flag,w	;volatile
  2470     0480  1D03               	btfss	3,2
  2471     0481  2C61               	goto	l1366
  2472                           
  2473                           ;system.c: 141:                 TURN_PRESCALER_ON();
  2474     0482  3186  2695         	fcall	_TURN_PRESCALER_ON
  2475                           
  2476                           ;system.c: 142:                 OPTION_REG = prescaler_bits[base_prescaler_bits_index + 
      +                          2];
  2477     0484  0020               	movlb	0	; select bank0
  2478     0485  083A               	movf	_base_prescaler_bits_index,w	;volatile
  2479     0486  3E72               	addlw	low ((_prescaler_bits+2)| (0+32768))
  2480     0487  0084               	movwf	4
  2481     0488  3086               	movlw	high ((_prescaler_bits+2)| (0+32768))
  2482     0489  1803               	skipnc
  2483     048A  3E01               	addlw	1
  2484     048B  0085               	movwf	5
  2485     048C  0800               	movf	0,w	;code access
  2486     048D  0021               	movlb	1	; select bank1
  2487     048E  0095               	movwf	21	;volatile
  2488                           
  2489                           ;system.c: 143:                 prescaler_final_index = base_prescaler_bits_index + 2;
  2490     048F  0020               	movlb	0	; select bank0
  2491     0490  083A               	movf	_base_prescaler_bits_index,w	;volatile
  2492     0491  3E02               	addlw	2
  2493     0492  00B7               	movwf	_prescaler_final_index	;volatile
  2494     0493  0008               	return
  2495     0494                     l1396:
  2496     0494  3002               	movlw	2
  2497     0495  063B               	xorwf	_prescaler_adjust,w	;volatile
  2498     0496  1D03               	btfss	3,2
  2499     0497  2CA7               	goto	l1402
  2500                           
  2501                           ;system.c: 147:         OPTION_REG = prescaler_bits[base_prescaler_bits_index - 1];
  2502     0498  083A               	movf	_base_prescaler_bits_index,w	;volatile
  2503     0499  3E6F               	addlw	low ((_prescaler_bits+65535)| (0+32768))
  2504     049A  0084               	movwf	4
  2505     049B  3086               	movlw	high ((_prescaler_bits+65535)| (0+32768))
  2506     049C  1803               	skipnc
  2507     049D  3E01               	addlw	1
  2508     049E  0085               	movwf	5
  2509     049F  0800               	movf	0,w	;code access
  2510     04A0  0021               	movlb	1	; select bank1
  2511     04A1  0095               	movwf	21	;volatile
  2512                           
  2513                           ;system.c: 148:         prescaler_final_index = base_prescaler_bits_index - 1;
  2514     04A2  0020               	movlb	0	; select bank0
  2515     04A3  083A               	movf	_base_prescaler_bits_index,w	;volatile
  2516     04A4  3EFF               	addlw	255
  2517     04A5  00B7               	movwf	_prescaler_final_index	;volatile
  2518                           
  2519                           ;system.c: 149:     }
  2520     04A6  0008               	return
  2521     04A7                     l1402:
  2522     04A7  083B               	movf	_prescaler_adjust,w	;volatile
  2523     04A8  1D03               	btfss	3,2
  2524     04A9  0008               	return
  2525                           
  2526                           ;system.c: 151:         OPTION_REG = prescaler_bits[base_prescaler_bits_index];
  2527     04AA  083A               	movf	_base_prescaler_bits_index,w	;volatile
  2528     04AB  3E70               	addlw	low (_prescaler_bits| (0+32768))
  2529     04AC  0084               	movwf	4
  2530     04AD  3086               	movlw	high (_prescaler_bits| (0+32768))
  2531     04AE  1803               	skipnc
  2532     04AF  3E01               	addlw	1
  2533     04B0  0085               	movwf	5
  2534     04B1  0800               	movf	0,w	;code access
  2535     04B2  0021               	movlb	1	; select bank1
  2536     04B3  0095               	movwf	21	;volatile
  2537                           
  2538                           ;system.c: 152:         prescaler_final_index = base_prescaler_bits_index;
  2539     04B4  0020               	movlb	0	; select bank0
  2540     04B5  083A               	movf	_base_prescaler_bits_index,w	;volatile
  2541     04B6  00B7               	movwf	_prescaler_final_index	;volatile
  2542     04B7  0008               	return
  2543     04B8                     __end_of_ADJUST_AND_SET_PRESCALER:
  2544                           
  2545                           	psect	text7
  2546     0695                     __ptext7:	
  2547 ;; *************** function _TURN_PRESCALER_ON *****************
  2548 ;; Defined at:
  2549 ;;		line 115 in file "system.c"
  2550 ;; Parameters:    Size  Location     Type
  2551 ;;		None
  2552 ;; Auto vars:     Size  Location     Type
  2553 ;;		None
  2554 ;; Return value:  Size  Location     Type
  2555 ;;                  1    wreg      unsigned char 
  2556 ;; Registers used:
  2557 ;;		status,2
  2558 ;; Tracked objects:
  2559 ;;		On entry : 1F/0
  2560 ;;		On exit  : 1F/1
  2561 ;;		Unchanged: 0/0
  2562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2563 ;;      Params:         0       0       0       0
  2564 ;;      Locals:         0       0       0       0
  2565 ;;      Temps:          0       0       0       0
  2566 ;;      Totals:         0       0       0       0
  2567 ;;Total ram usage:        0 bytes
  2568 ;; Hardware stack levels used: 1
  2569 ;; Hardware stack levels required when called: 2
  2570 ;; This function calls:
  2571 ;;		Nothing
  2572 ;; This function is called by:
  2573 ;;		_ADJUST_AND_SET_PRESCALER
  2574 ;; This function uses a non-reentrant model
  2575 ;;
  2576                           
  2577     0695                     _TURN_PRESCALER_ON:	
  2578                           ;psect for function _TURN_PRESCALER_ON
  2579                           
  2580                           
  2581                           ;system.c: 116:     OPTION_REG = OPTION_REG & (0<<3);
  2582                           
  2583                           ;incstack = 0
  2584                           ; Regs used in _TURN_PRESCALER_ON: [status,2]
  2585     0695  0021               	movlb	1	; select bank1
  2586     0696  0195               	clrf	21	;volatile
  2587     0697  0008               	return
  2588     0698                     __end_of_TURN_PRESCALER_ON:
  2589                           
  2590                           	psect	text8
  2591     068C                     __ptext8:	
  2592 ;; *************** function _TURN_PRESCALER_OFF *****************
  2593 ;; Defined at:
  2594 ;;		line 109 in file "system.c"
  2595 ;; Parameters:    Size  Location     Type
  2596 ;;		None
  2597 ;; Auto vars:     Size  Location     Type
  2598 ;;		None
  2599 ;; Return value:  Size  Location     Type
  2600 ;;                  1    wreg      unsigned char 
  2601 ;; Registers used:
  2602 ;;		wreg, status,2
  2603 ;; Tracked objects:
  2604 ;;		On entry : 1F/0
  2605 ;;		On exit  : 1F/1
  2606 ;;		Unchanged: 0/0
  2607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2608 ;;      Params:         0       0       0       0
  2609 ;;      Locals:         0       0       0       0
  2610 ;;      Temps:          0       0       0       0
  2611 ;;      Totals:         0       0       0       0
  2612 ;;Total ram usage:        0 bytes
  2613 ;; Hardware stack levels used: 1
  2614 ;; Hardware stack levels required when called: 2
  2615 ;; This function calls:
  2616 ;;		Nothing
  2617 ;; This function is called by:
  2618 ;;		_ADJUST_AND_SET_PRESCALER
  2619 ;; This function uses a non-reentrant model
  2620 ;;
  2621                           
  2622     068C                     _TURN_PRESCALER_OFF:	
  2623                           ;psect for function _TURN_PRESCALER_OFF
  2624                           
  2625                           
  2626                           ;system.c: 110:     OPTION_REG = OPTION_REG & (1<<3);
  2627                           
  2628                           ;incstack = 0
  2629                           ; Regs used in _TURN_PRESCALER_OFF: [wreg+status,2]
  2630     068C  0021               	movlb	1	; select bank1
  2631     068D  0815               	movf	21,w	;volatile
  2632     068E  3908               	andlw	8
  2633     068F  0095               	movwf	21	;volatile
  2634     0690  0008               	return
  2635     0691                     __end_of_TURN_PRESCALER_OFF:
  2636                           
  2637                           	psect	text9
  2638     0633                     __ptext9:	
  2639 ;; *************** function _CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1 *****************
  2640 ;; Defined at:
  2641 ;;		line 98 in file "system.c"
  2642 ;; Parameters:    Size  Location     Type
  2643 ;;		None
  2644 ;; Auto vars:     Size  Location     Type
  2645 ;;		None
  2646 ;; Return value:  Size  Location     Type
  2647 ;;                  1    wreg      unsigned char 
  2648 ;; Registers used:
  2649 ;;		wreg
  2650 ;; Tracked objects:
  2651 ;;		On entry : 1F/0
  2652 ;;		On exit  : 0/0
  2653 ;;		Unchanged: 0/0
  2654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2655 ;;      Params:         0       0       0       0
  2656 ;;      Locals:         0       0       0       0
  2657 ;;      Temps:          0       3       0       0
  2658 ;;      Totals:         0       3       0       0
  2659 ;;Total ram usage:        3 bytes
  2660 ;; Hardware stack levels used: 1
  2661 ;; Hardware stack levels required when called: 2
  2662 ;; This function calls:
  2663 ;;		Nothing
  2664 ;; This function is called by:
  2665 ;;		_ADJUST_AND_SET_PRESCALER
  2666 ;; This function uses a non-reentrant model
  2667 ;;
  2668                           
  2669     0633                     _CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1:	
  2670                           ;psect for function _CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1
  2671                           
  2672                           
  2673                           ;system.c: 99:     if((base_prescaler_bits_index + 1) > 7){
  2674                           
  2675                           ;incstack = 0
  2676                           ; Regs used in _CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1: [wreg]
  2677     0633  083A               	movf	_base_prescaler_bits_index,w	;volatile
  2678     0634  3E01               	addlw	1
  2679     0635  00C0               	movwf	??_CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1
  2680     0636  3000               	movlw	0
  2681     0637  1803               	skipnc
  2682     0638  3001               	movlw	1
  2683     0639  00C1               	movwf	??_CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1+1
  2684     063A  0841               	movf	??_CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1+1,w
  2685     063B  3A80               	xorlw	128
  2686     063C  00C2               	movwf	??_CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1+2
  2687     063D  3080               	movlw	128
  2688     063E  0242               	subwf	??_CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1+2,w
  2689     063F  3008               	movlw	8
  2690     0640  1903               	btfsc	3,2
  2691     0641  0240               	subwf	??_CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1,w
  2692     0642  1C03               	skipc
  2693     0643  2E46               	goto	l1278
  2694                           
  2695                           ;system.c: 101:         return 1;
  2696     0644  3001               	movlw	1
  2697     0645  0008               	return
  2698     0646                     l1278:
  2699                           
  2700                           ;system.c: 104:         return 0;
  2701     0646  3000               	movlw	0
  2702     0647  0008               	return
  2703     0648                     __end_of_CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1:
  2704                           
  2705                           	psect	text10
  2706     0372                     __ptext10:	
  2707 ;; *************** function _PROCESS_RAW_SPEED_AND_PRESCALER *****************
  2708 ;; Defined at:
  2709 ;;		line 75 in file "system.c"
  2710 ;; Parameters:    Size  Location     Type
  2711 ;;		None
  2712 ;; Auto vars:     Size  Location     Type
  2713 ;;  speed_contro    2   16[BANK0 ] unsigned short 
  2714 ;; Return value:  Size  Location     Type
  2715 ;;                  1    wreg      unsigned char 
  2716 ;; Registers used:
  2717 ;;		wreg, status,2, status,0, pclath, cstack
  2718 ;; Tracked objects:
  2719 ;;		On entry : 1F/0
  2720 ;;		On exit  : 1F/0
  2721 ;;		Unchanged: 0/0
  2722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2723 ;;      Params:         0       0       0       0
  2724 ;;      Locals:         0       2       0       0
  2725 ;;      Temps:          0       4       0       0
  2726 ;;      Totals:         0       6       0       0
  2727 ;;Total ram usage:        6 bytes
  2728 ;; Hardware stack levels used: 1
  2729 ;; Hardware stack levels required when called: 3
  2730 ;; This function calls:
  2731 ;;		___lmul
  2732 ;; This function is called by:
  2733 ;;		_main
  2734 ;; This function uses a non-reentrant model
  2735 ;;
  2736                           
  2737     0372                     _PROCESS_RAW_SPEED_AND_PRESCALER:	
  2738                           ;psect for function _PROCESS_RAW_SPEED_AND_PRESCALER
  2739                           
  2740                           
  2741                           ;system.c: 76:     current_speed_linear_32 = current_speed_linear;
  2742                           
  2743                           ;incstack = 0
  2744                           ; Regs used in _PROCESS_RAW_SPEED_AND_PRESCALER: [wreg+status,2+status,0+pclath+cstack]
  2745     0372  0833               	movf	_current_speed_linear,w	;volatile
  2746     0373  00A4               	movwf	_current_speed_linear_32	;volatile
  2747     0374  0834               	movf	_current_speed_linear+1,w	;volatile
  2748     0375  00A5               	movwf	_current_speed_linear_32+1	;volatile
  2749     0376  01A6               	clrf	_current_speed_linear_32+2	;volatile
  2750     0377  01A7               	clrf	_current_speed_linear_32+3	;volatile
  2751                           
  2752                           ;system.c: 77:     speed_control_32 = current_speed_linear_32 * 600;;
  2753     0378  0827               	movf	_current_speed_linear_32+3,w	;volatile
  2754     0379  00C3               	movwf	___lmul@multiplier+3
  2755     037A  0826               	movf	_current_speed_linear_32+2,w	;volatile
  2756     037B  00C2               	movwf	___lmul@multiplier+2
  2757     037C  0825               	movf	_current_speed_linear_32+1,w	;volatile
  2758     037D  00C1               	movwf	___lmul@multiplier+1
  2759     037E  0824               	movf	_current_speed_linear_32,w	;volatile
  2760     037F  00C0               	movwf	___lmul@multiplier
  2761     0380  3000               	movlw	0
  2762     0381  00C7               	movwf	___lmul@multiplicand+3
  2763     0382  3000               	movlw	0
  2764     0383  00C6               	movwf	___lmul@multiplicand+2
  2765     0384  3002               	movlw	2
  2766     0385  00C5               	movwf	___lmul@multiplicand+1
  2767     0386  3058               	movlw	88
  2768     0387  00C4               	movwf	___lmul@multiplicand
  2769     0388  3185  254C  3183   	fcall	___lmul
  2770     038B  0843               	movf	?___lmul+3,w
  2771     038C  00A3               	movwf	_speed_control_32+3	;volatile
  2772     038D  0842               	movf	?___lmul+2,w
  2773     038E  00A2               	movwf	_speed_control_32+2	;volatile
  2774     038F  0841               	movf	?___lmul+1,w
  2775     0390  00A1               	movwf	_speed_control_32+1	;volatile
  2776     0391  0840               	movf	?___lmul,w
  2777     0392  00A0               	movwf	_speed_control_32	;volatile
  2778                           
  2779                           ;system.c: 78:     speed_control_32 = speed_control_32 >> 10;
  2780     0393  0820               	movf	_speed_control_32,w	;volatile
  2781     0394  00CC               	movwf	??_PROCESS_RAW_SPEED_AND_PRESCALER
  2782     0395  0821               	movf	_speed_control_32+1,w	;volatile
  2783     0396  00CD               	movwf	??_PROCESS_RAW_SPEED_AND_PRESCALER+1
  2784     0397  0822               	movf	_speed_control_32+2,w	;volatile
  2785     0398  00CE               	movwf	??_PROCESS_RAW_SPEED_AND_PRESCALER+2
  2786     0399  0823               	movf	_speed_control_32+3,w	;volatile
  2787     039A  00CF               	movwf	??_PROCESS_RAW_SPEED_AND_PRESCALER+3
  2788     039B  300A               	movlw	10
  2789     039C                     u685:
  2790     039C  36CF               	lsrf	??_PROCESS_RAW_SPEED_AND_PRESCALER+3,f
  2791     039D  0CCE               	rrf	??_PROCESS_RAW_SPEED_AND_PRESCALER+2,f
  2792     039E  0CCD               	rrf	??_PROCESS_RAW_SPEED_AND_PRESCALER+1,f
  2793     039F  0CCC               	rrf	??_PROCESS_RAW_SPEED_AND_PRESCALER,f
  2794     03A0  0B89               	decfsz	9,f
  2795     03A1  2B9C               	goto	u685
  2796     03A2  084F               	movf	??_PROCESS_RAW_SPEED_AND_PRESCALER+3,w
  2797     03A3  00A3               	movwf	_speed_control_32+3	;volatile
  2798     03A4  084E               	movf	??_PROCESS_RAW_SPEED_AND_PRESCALER+2,w
  2799     03A5  00A2               	movwf	_speed_control_32+2	;volatile
  2800     03A6  084D               	movf	??_PROCESS_RAW_SPEED_AND_PRESCALER+1,w
  2801     03A7  00A1               	movwf	_speed_control_32+1	;volatile
  2802     03A8  084C               	movf	??_PROCESS_RAW_SPEED_AND_PRESCALER,w
  2803     03A9  00A0               	movwf	_speed_control_32	;volatile
  2804                           
  2805                           ;system.c: 79:     speed_control = (uint16_t) speed_control_32;
  2806     03AA  0821               	movf	_speed_control_32+1,w	;volatile
  2807     03AB  00B2               	movwf	_speed_control+1	;volatile
  2808     03AC  0820               	movf	_speed_control_32,w	;volatile
  2809     03AD  00B1               	movwf	_speed_control	;volatile
  2810                           
  2811                           ;system.c: 81:         if(speed_control <= (127-12)){
  2812     03AE  3000               	movlw	0
  2813     03AF  0232               	subwf	_speed_control+1,w	;volatile
  2814     03B0  3074               	movlw	116
  2815     03B1  1903               	skipnz
  2816     03B2  0231               	subwf	_speed_control,w	;volatile
  2817     03B3  1803               	skipnc
  2818     03B4  2BC7               	goto	l1482
  2819                           
  2820                           ;system.c: 82:             raw_TMR0 = (uint8_t) speed_control + 12;
  2821     03B5  0831               	movf	_speed_control,w	;volatile
  2822     03B6  3E0C               	addlw	12
  2823     03B7  00CC               	movwf	??_PROCESS_RAW_SPEED_AND_PRESCALER
  2824     03B8  3000               	movlw	0
  2825     03B9  1803               	skipnc
  2826     03BA  3001               	movlw	1
  2827     03BB  00CD               	movwf	??_PROCESS_RAW_SPEED_AND_PRESCALER+1
  2828     03BC  084C               	movf	??_PROCESS_RAW_SPEED_AND_PRESCALER,w
  2829     03BD  00A8               	movwf	_raw_TMR0	;volatile
  2830     03BE  084D               	movf	??_PROCESS_RAW_SPEED_AND_PRESCALER+1,w
  2831     03BF  00A9               	movwf	_raw_TMR0+1	;volatile
  2832     03C0  0D89               	rlf	9,f
  2833     03C1  3B89               	subwfb	9,f
  2834     03C2  0989               	comf	9,f
  2835     03C3  00AA               	movwf	_raw_TMR0+2	;volatile
  2836                           
  2837                           ;system.c: 83:             base_prescaler_bits_index = 1;
  2838     03C4  3001               	movlw	1
  2839     03C5  00BA               	movwf	_base_prescaler_bits_index	;volatile
  2840                           
  2841                           ;system.c: 84:         }
  2842     03C6  0008               	return
  2843     03C7                     l1482:
  2844                           
  2845                           ;system.c: 86:             uint16_t speed_control_subtracted;;system.c: 87:             
      +                          speed_control_subtracted = speed_control - (127-12);
  2846     03C7  0831               	movf	_speed_control,w	;volatile
  2847     03C8  3E8D               	addlw	141
  2848     03C9  00D0               	movwf	PROCESS_RAW_SPEED_AND_PRESCALER@speed_control_subtracted
  2849     03CA  30FF               	movlw	255
  2850     03CB  3D32               	addwfc	_speed_control+1,w	;volatile
  2851     03CC  00D1               	movwf	PROCESS_RAW_SPEED_AND_PRESCALER@speed_control_subtracted+1
  2852                           
  2853                           ;system.c: 88:             how_many_128 = (uint8_t)(speed_control_subtracted >> 7);
  2854     03CD  0851               	movf	PROCESS_RAW_SPEED_AND_PRESCALER@speed_control_subtracted+1,w
  2855     03CE  00CD               	movwf	??_PROCESS_RAW_SPEED_AND_PRESCALER+1
  2856     03CF  0850               	movf	PROCESS_RAW_SPEED_AND_PRESCALER@speed_control_subtracted,w
  2857     03D0  00CC               	movwf	??_PROCESS_RAW_SPEED_AND_PRESCALER
  2858     03D1  3007               	movlw	7
  2859     03D2                     u705:
  2860     03D2  36CD               	lsrf	??_PROCESS_RAW_SPEED_AND_PRESCALER+1,f
  2861     03D3  0CCC               	rrf	??_PROCESS_RAW_SPEED_AND_PRESCALER,f
  2862     03D4  0B89               	decfsz	9,f
  2863     03D5  2BD2               	goto	u705
  2864     03D6  084C               	movf	??_PROCESS_RAW_SPEED_AND_PRESCALER,w
  2865     03D7  00BC               	movwf	_how_many_128	;volatile
  2866                           
  2867                           ;system.c: 89:             raw_TMR0 = (uint8_t)(speed_control_subtracted - (uint16_t)(ho
      +                          w_many_128 << 7));
  2868     03D8  083C               	movf	_how_many_128,w	;volatile
  2869     03D9  00CC               	movwf	??_PROCESS_RAW_SPEED_AND_PRESCALER
  2870     03DA  3006               	movlw	6
  2871     03DB                     u715:
  2872     03DB  35CC               	lslf	??_PROCESS_RAW_SPEED_AND_PRESCALER,f
  2873     03DC  3EFF               	addlw	-1
  2874     03DD  1D03               	skipz
  2875     03DE  2BDB               	goto	u715
  2876     03DF  354C               	lslf	??_PROCESS_RAW_SPEED_AND_PRESCALER,w
  2877     03E0  0750               	addwf	PROCESS_RAW_SPEED_AND_PRESCALER@speed_control_subtracted,w
  2878     03E1  00CD               	movwf	??_PROCESS_RAW_SPEED_AND_PRESCALER+1
  2879     03E2  01CE               	clrf	??_PROCESS_RAW_SPEED_AND_PRESCALER+2
  2880     03E3  01CF               	clrf	??_PROCESS_RAW_SPEED_AND_PRESCALER+3
  2881     03E4  084D               	movf	??_PROCESS_RAW_SPEED_AND_PRESCALER+1,w
  2882     03E5  00A8               	movwf	_raw_TMR0	;volatile
  2883     03E6  084E               	movf	??_PROCESS_RAW_SPEED_AND_PRESCALER+2,w
  2884     03E7  00A9               	movwf	_raw_TMR0+1	;volatile
  2885     03E8  084F               	movf	??_PROCESS_RAW_SPEED_AND_PRESCALER+3,w
  2886     03E9  00AA               	movwf	_raw_TMR0+2	;volatile
  2887                           
  2888                           ;system.c: 92:             base_prescaler_bits_index = (uint8_t)(how_many_128 + 2);
  2889     03EA  083C               	movf	_how_many_128,w	;volatile
  2890     03EB  3E02               	addlw	2
  2891     03EC  00BA               	movwf	_base_prescaler_bits_index	;volatile
  2892     03ED  0008               	return
  2893     03EE                     __end_of_PROCESS_RAW_SPEED_AND_PRESCALER:
  2894                           
  2895                           	psect	text11
  2896     054C                     __ptext11:	
  2897 ;; *************** function ___lmul *****************
  2898 ;; Defined at:
  2899 ;;		line 15 in file "/Applications/microchip/xc8/v2.45/pic/sources/c99/common/Umul32.c"
  2900 ;; Parameters:    Size  Location     Type
  2901 ;;  multiplier      4    0[BANK0 ] unsigned long 
  2902 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  2903 ;; Auto vars:     Size  Location     Type
  2904 ;;  product         4    8[BANK0 ] unsigned long 
  2905 ;; Return value:  Size  Location     Type
  2906 ;;                  4    0[BANK0 ] unsigned long 
  2907 ;; Registers used:
  2908 ;;		wreg, status,2, status,0
  2909 ;; Tracked objects:
  2910 ;;		On entry : 1F/0
  2911 ;;		On exit  : 1F/0
  2912 ;;		Unchanged: 0/0
  2913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2914 ;;      Params:         0       8       0       0
  2915 ;;      Locals:         0       4       0       0
  2916 ;;      Temps:          0       0       0       0
  2917 ;;      Totals:         0      12       0       0
  2918 ;;Total ram usage:       12 bytes
  2919 ;; Hardware stack levels used: 1
  2920 ;; Hardware stack levels required when called: 2
  2921 ;; This function calls:
  2922 ;;		Nothing
  2923 ;; This function is called by:
  2924 ;;		_PROCESS_RAW_SPEED_AND_PRESCALER
  2925 ;; This function uses a non-reentrant model
  2926 ;;
  2927                           
  2928     054C                     ___lmul:	
  2929                           ;psect for function ___lmul
  2930                           
  2931                           
  2932                           ;incstack = 0
  2933                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  2934     054C  3000               	movlw	0
  2935     054D  00CB               	movwf	___lmul@product+3
  2936     054E  3000               	movlw	0
  2937     054F  00CA               	movwf	___lmul@product+2
  2938     0550  3000               	movlw	0
  2939     0551  00C9               	movwf	___lmul@product+1
  2940     0552  3000               	movlw	0
  2941     0553  00C8               	movwf	___lmul@product
  2942     0554                     l1434:
  2943     0554  1C40               	btfss	___lmul@multiplier,0
  2944     0555  2D5E               	goto	l1438
  2945     0556  0844               	movf	___lmul@multiplicand,w
  2946     0557  07C8               	addwf	___lmul@product,f
  2947     0558  0845               	movf	___lmul@multiplicand+1,w
  2948     0559  3DC9               	addwfc	___lmul@product+1,f
  2949     055A  0846               	movf	___lmul@multiplicand+2,w
  2950     055B  3DCA               	addwfc	___lmul@product+2,f
  2951     055C  0847               	movf	___lmul@multiplicand+3,w
  2952     055D  3DCB               	addwfc	___lmul@product+3,f
  2953     055E                     l1438:
  2954     055E  3001               	movlw	1
  2955     055F                     u625:
  2956     055F  35C4               	lslf	___lmul@multiplicand,f
  2957     0560  0DC5               	rlf	___lmul@multiplicand+1,f
  2958     0561  0DC6               	rlf	___lmul@multiplicand+2,f
  2959     0562  0DC7               	rlf	___lmul@multiplicand+3,f
  2960     0563  0B89               	decfsz	9,f
  2961     0564  2D5F               	goto	u625
  2962     0565  3001               	movlw	1
  2963     0566                     u635:
  2964     0566  36C3               	lsrf	___lmul@multiplier+3,f
  2965     0567  0CC2               	rrf	___lmul@multiplier+2,f
  2966     0568  0CC1               	rrf	___lmul@multiplier+1,f
  2967     0569  0CC0               	rrf	___lmul@multiplier,f
  2968     056A  0B89               	decfsz	9,f
  2969     056B  2D66               	goto	u635
  2970     056C  0843               	movf	___lmul@multiplier+3,w
  2971     056D  0442               	iorwf	___lmul@multiplier+2,w
  2972     056E  0441               	iorwf	___lmul@multiplier+1,w
  2973     056F  0440               	iorwf	___lmul@multiplier,w
  2974     0570  1D03               	skipz
  2975     0571  2D54               	goto	l1434
  2976     0572  084B               	movf	___lmul@product+3,w
  2977     0573  00C3               	movwf	?___lmul+3
  2978     0574  084A               	movf	___lmul@product+2,w
  2979     0575  00C2               	movwf	?___lmul+2
  2980     0576  0849               	movf	___lmul@product+1,w
  2981     0577  00C1               	movwf	?___lmul+1
  2982     0578  0848               	movf	___lmul@product,w
  2983     0579  00C0               	movwf	?___lmul
  2984     057A  0008               	return
  2985     057B                     __end_of___lmul:
  2986                           
  2987                           	psect	text12
  2988     0507                     __ptext12:	
  2989 ;; *************** function _GET_CURRENT_POT_VALUES *****************
  2990 ;; Defined at:
  2991 ;;		line 55 in file "system.c"
  2992 ;; Parameters:    Size  Location     Type
  2993 ;;		None
  2994 ;; Auto vars:     Size  Location     Type
  2995 ;;		None
  2996 ;; Return value:  Size  Location     Type
  2997 ;;                  1    wreg      unsigned char 
  2998 ;; Registers used:
  2999 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3000 ;; Tracked objects:
  3001 ;;		On entry : 1E/1
  3002 ;;		On exit  : 1F/0
  3003 ;;		Unchanged: 0/0
  3004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3005 ;;      Params:         0       0       0       0
  3006 ;;      Locals:         0       0       0       0
  3007 ;;      Temps:          0       3       0       0
  3008 ;;      Totals:         0       3       0       0
  3009 ;;Total ram usage:        3 bytes
  3010 ;; Hardware stack levels used: 1
  3011 ;; Hardware stack levels required when called: 4
  3012 ;; This function calls:
  3013 ;;		_DETERMINE_WAVESHAPE
  3014 ;;		_DO_ADC
  3015 ;; This function is called by:
  3016 ;;		_main
  3017 ;; This function uses a non-reentrant model
  3018 ;;
  3019                           
  3020     0507                     _GET_CURRENT_POT_VALUES:	
  3021                           ;psect for function _GET_CURRENT_POT_VALUES
  3022                           
  3023                           
  3024                           ;system.c: 56:     current_waveshape = DETERMINE_WAVESHAPE();
  3025                           
  3026                           ;incstack = 0
  3027                           ; Regs used in _GET_CURRENT_POT_VALUES: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3028     0507  3185  25A7  3185   	fcall	_DETERMINE_WAVESHAPE
  3029     050A  00F8               	movwf	_current_waveshape	;volatile
  3030                           
  3031                           ;system.c: 57:     current_speed_linear = DO_ADC(&speed_adc_config_value);
  3032     050B  30A7               	movlw	low (_speed_adc_config_value| (0+32768))
  3033     050C  00C0               	movwf	DO_ADC@modifier
  3034     050D  3086               	movlw	high (_speed_adc_config_value| (0+32768))
  3035     050E  00C1               	movwf	DO_ADC@modifier+1
  3036     050F  3185  257B  3185   	fcall	_DO_ADC
  3037     0512  0841               	movf	?_DO_ADC+1,w
  3038     0513  00B4               	movwf	_current_speed_linear+1	;volatile
  3039     0514  0840               	movf	?_DO_ADC,w
  3040     0515  00B3               	movwf	_current_speed_linear	;volatile
  3041                           
  3042                           ;system.c: 59:         current_depth = DO_ADC(&depth_adc_config_value);
  3043     0516  30A6               	movlw	low (_depth_adc_config_value| (0+32768))
  3044     0517  00C0               	movwf	DO_ADC@modifier
  3045     0518  3086               	movlw	high (_depth_adc_config_value| (0+32768))
  3046     0519  00C1               	movwf	DO_ADC@modifier+1
  3047     051A  3185  257B  3185   	fcall	_DO_ADC
  3048     051D  0841               	movf	?_DO_ADC+1,w
  3049     051E  00B6               	movwf	_current_depth+1	;volatile
  3050     051F  0840               	movf	?_DO_ADC,w
  3051     0520  00B5               	movwf	_current_depth	;volatile
  3052                           
  3053                           ;system.c: 60:         current_depth = current_depth >> 2;
  3054     0521  0836               	movf	_current_depth+1,w	;volatile
  3055     0522  00C9               	movwf	??_GET_CURRENT_POT_VALUES+1
  3056     0523  0835               	movf	_current_depth,w	;volatile
  3057     0524  00C8               	movwf	??_GET_CURRENT_POT_VALUES
  3058     0525  36C9               	lsrf	??_GET_CURRENT_POT_VALUES+1,f
  3059     0526  0CC8               	rrf	??_GET_CURRENT_POT_VALUES,f
  3060     0527  36C9               	lsrf	??_GET_CURRENT_POT_VALUES+1,f
  3061     0528  0CC8               	rrf	??_GET_CURRENT_POT_VALUES,f
  3062     0529  0848               	movf	??_GET_CURRENT_POT_VALUES,w
  3063     052A  00B5               	movwf	_current_depth	;volatile
  3064     052B  0849               	movf	??_GET_CURRENT_POT_VALUES+1,w
  3065     052C  00B6               	movwf	_current_depth+1	;volatile
  3066                           
  3067                           ;system.c: 63:         current_symmetry = DO_ADC(&symmetry_adc_config_value);
  3068     052D  30A5               	movlw	low (_symmetry_adc_config_value| (0+32768))
  3069     052E  00C0               	movwf	DO_ADC@modifier
  3070     052F  3086               	movlw	high (_symmetry_adc_config_value| (0+32768))
  3071     0530  00C1               	movwf	DO_ADC@modifier+1
  3072     0531  3185  257B  3185   	fcall	_DO_ADC
  3073     0534  0840               	movf	?_DO_ADC,w
  3074     0535  00AB               	movwf	_current_symmetry	;volatile
  3075     0536  0841               	movf	?_DO_ADC+1,w
  3076     0537  00AC               	movwf	_current_symmetry+1	;volatile
  3077     0538  01AD               	clrf	_current_symmetry+2	;volatile
  3078                           
  3079                           ;system.c: 65:             current_symmetry = current_symmetry >> 2;
  3080     0539  082B               	movf	_current_symmetry,w	;volatile
  3081     053A  00C8               	movwf	??_GET_CURRENT_POT_VALUES
  3082     053B  082C               	movf	_current_symmetry+1,w	;volatile
  3083     053C  00C9               	movwf	??_GET_CURRENT_POT_VALUES+1
  3084     053D  082D               	movf	_current_symmetry+2,w	;volatile
  3085     053E  00CA               	movwf	??_GET_CURRENT_POT_VALUES+2
  3086     053F  3002               	movlw	2
  3087     0540                     u675:
  3088     0540  36CA               	lsrf	??_GET_CURRENT_POT_VALUES+2,f
  3089     0541  0CC9               	rrf	??_GET_CURRENT_POT_VALUES+1,f
  3090     0542  0CC8               	rrf	??_GET_CURRENT_POT_VALUES,f
  3091     0543  0B89               	decfsz	9,f
  3092     0544  2D40               	goto	u675
  3093     0545  0848               	movf	??_GET_CURRENT_POT_VALUES,w
  3094     0546  00AB               	movwf	_current_symmetry	;volatile
  3095     0547  0849               	movf	??_GET_CURRENT_POT_VALUES+1,w
  3096     0548  00AC               	movwf	_current_symmetry+1	;volatile
  3097     0549  084A               	movf	??_GET_CURRENT_POT_VALUES+2,w
  3098     054A  00AD               	movwf	_current_symmetry+2	;volatile
  3099     054B  0008               	return
  3100     054C                     __end_of_GET_CURRENT_POT_VALUES:
  3101                           
  3102                           	psect	text13
  3103     05A7                     __ptext13:	
  3104 ;; *************** function _DETERMINE_WAVESHAPE *****************
  3105 ;; Defined at:
  3106 ;;		line 26 in file "system.c"
  3107 ;; Parameters:    Size  Location     Type
  3108 ;;		None
  3109 ;; Auto vars:     Size  Location     Type
  3110 ;;  ADC             2    6[BANK0 ] unsigned short 
  3111 ;; Return value:  Size  Location     Type
  3112 ;;                  1    wreg      unsigned char 
  3113 ;; Registers used:
  3114 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3115 ;; Tracked objects:
  3116 ;;		On entry : 1E/1
  3117 ;;		On exit  : 1F/0
  3118 ;;		Unchanged: 0/0
  3119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3120 ;;      Params:         0       0       0       0
  3121 ;;      Locals:         0       2       0       0
  3122 ;;      Temps:          0       0       0       0
  3123 ;;      Totals:         0       2       0       0
  3124 ;;Total ram usage:        2 bytes
  3125 ;; Hardware stack levels used: 1
  3126 ;; Hardware stack levels required when called: 3
  3127 ;; This function calls:
  3128 ;;		_DO_ADC
  3129 ;; This function is called by:
  3130 ;;		_GET_CURRENT_POT_VALUES
  3131 ;; This function uses a non-reentrant model
  3132 ;;
  3133                           
  3134     05A7                     _DETERMINE_WAVESHAPE:	
  3135                           ;psect for function _DETERMINE_WAVESHAPE
  3136                           
  3137                           
  3138                           ;system.c: 27:     uint16_t ADC = DO_ADC(&waveshape_adc_config_value);
  3139                           
  3140                           ;incstack = 0
  3141                           ; Regs used in _DETERMINE_WAVESHAPE: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3142     05A7  30A8               	movlw	low (_waveshape_adc_config_value| (0+32768))
  3143     05A8  0020               	movlb	0	; select bank0
  3144     05A9  00C0               	movwf	DO_ADC@modifier
  3145     05AA  3086               	movlw	high (_waveshape_adc_config_value| (0+32768))
  3146     05AB  00C1               	movwf	DO_ADC@modifier+1
  3147     05AC  3185  257B  3185   	fcall	_DO_ADC
  3148     05AF  0841               	movf	?_DO_ADC+1,w
  3149     05B0  00C7               	movwf	DETERMINE_WAVESHAPE@ADC+1
  3150     05B1  0840               	movf	?_DO_ADC,w
  3151     05B2  00C6               	movwf	DETERMINE_WAVESHAPE@ADC
  3152                           
  3153                           ;system.c: 28:     if(ADC <= 341){
  3154     05B3  3001               	movlw	1
  3155     05B4  0247               	subwf	DETERMINE_WAVESHAPE@ADC+1,w
  3156     05B5  3056               	movlw	86
  3157     05B6  1903               	skipnz
  3158     05B7  0246               	subwf	DETERMINE_WAVESHAPE@ADC,w
  3159     05B8  1803               	skipnc
  3160     05B9  2DBC               	goto	l1338
  3161                           
  3162                           ;system.c: 29:             return 0;
  3163     05BA  3000               	movlw	0
  3164     05BB  0008               	return
  3165     05BC                     l1338:
  3166                           
  3167                           ;system.c: 31:         if (ADC <= 682){
  3168     05BC  3002               	movlw	2
  3169     05BD  0247               	subwf	DETERMINE_WAVESHAPE@ADC+1,w
  3170     05BE  30AB               	movlw	171
  3171     05BF  1903               	skipnz
  3172     05C0  0246               	subwf	DETERMINE_WAVESHAPE@ADC,w
  3173     05C1  1803               	skipnc
  3174     05C2  2DC5               	goto	l1344
  3175     05C3                     l1340:
  3176                           
  3177                           ;system.c: 32:             return 1;
  3178     05C3  3001               	movlw	1
  3179     05C4  0008               	return
  3180     05C5                     l1344:
  3181                           
  3182                           ;system.c: 34:         if (ADC <= 1023){
  3183     05C5  3004               	movlw	4
  3184     05C6  0247               	subwf	DETERMINE_WAVESHAPE@ADC+1,w
  3185     05C7  3000               	movlw	0
  3186     05C8  1903               	skipnz
  3187     05C9  0246               	subwf	DETERMINE_WAVESHAPE@ADC,w
  3188     05CA  1803               	skipnc
  3189     05CB  2DC3               	goto	l1340
  3190                           
  3191                           ;system.c: 35:             return 2;
  3192     05CC  3002               	movlw	2
  3193     05CD  0008               	return
  3194     05CE                     __end_of_DETERMINE_WAVESHAPE:
  3195                           
  3196                           	psect	text14
  3197     057B                     __ptext14:	
  3198 ;; *************** function _DO_ADC *****************
  3199 ;; Defined at:
  3200 ;;		line 25 in file "config.c"
  3201 ;; Parameters:    Size  Location     Type
  3202 ;;  modifier        2    0[BANK0 ] PTR const unsigned char 
  3203 ;;		 -> symmetry_adc_config_value(1), depth_adc_config_value(1), speed_adc_config_value(1), waveshape_adc_config_value(1
      +), 
  3204 ;; Auto vars:     Size  Location     Type
  3205 ;;  adc_result      2    3[BANK0 ] unsigned short 
  3206 ;;  temp            1    5[BANK0 ] unsigned char 
  3207 ;; Return value:  Size  Location     Type
  3208 ;;                  2    0[BANK0 ] unsigned short 
  3209 ;; Registers used:
  3210 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  3211 ;; Tracked objects:
  3212 ;;		On entry : 1F/0
  3213 ;;		On exit  : 1F/0
  3214 ;;		Unchanged: 0/0
  3215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3216 ;;      Params:         0       2       0       0
  3217 ;;      Locals:         0       3       0       0
  3218 ;;      Temps:          0       1       0       0
  3219 ;;      Totals:         0       6       0       0
  3220 ;;Total ram usage:        6 bytes
  3221 ;; Hardware stack levels used: 1
  3222 ;; Hardware stack levels required when called: 2
  3223 ;; This function calls:
  3224 ;;		Nothing
  3225 ;; This function is called by:
  3226 ;;		_DETERMINE_WAVESHAPE
  3227 ;;		_GET_CURRENT_POT_VALUES
  3228 ;; This function uses a non-reentrant model
  3229 ;;
  3230                           
  3231     057B                     _DO_ADC:	
  3232                           ;psect for function _DO_ADC
  3233                           
  3234                           
  3235                           ;config.c: 26:     ADCON0 = 0x00;
  3236                           
  3237                           ;incstack = 0
  3238                           ; Regs used in _DO_ADC: [wreg-fsr0h+status,2+status,0+pclath]
  3239     057B  0021               	movlb	1	; select bank1
  3240     057C  019D               	clrf	29	;volatile
  3241                           
  3242                           ;config.c: 28:     uint8_t temp = (uint8_t)(*modifier << 2);
  3243     057D  0020               	movlb	0	; select bank0
  3244     057E  0840               	movf	DO_ADC@modifier,w
  3245     057F  0084               	movwf	4
  3246     0580  0841               	movf	DO_ADC@modifier+1,w
  3247     0581  0085               	movwf	5
  3248     0582  0800               	movf	0,w	;code access
  3249     0583  00C2               	movwf	??_DO_ADC
  3250     0584  3001               	movlw	1
  3251     0585                     u415:
  3252     0585  35C2               	lslf	??_DO_ADC,f
  3253     0586  3EFF               	addlw	-1
  3254     0587  1D03               	skipz
  3255     0588  2D85               	goto	u415
  3256     0589  3542               	lslf	??_DO_ADC,w
  3257     058A  00C5               	movwf	DO_ADC@temp
  3258                           
  3259                           ;config.c: 29:     ADCON0 = ADCON0 | temp;
  3260     058B  0021               	movlb	1	; select bank1
  3261     058C  081D               	movf	29,w	;volatile
  3262     058D  0020               	movlb	0	; select bank0
  3263     058E  0445               	iorwf	DO_ADC@temp,w
  3264     058F  0021               	movlb	1	; select bank1
  3265     0590  009D               	movwf	29	;volatile
  3266                           
  3267                           ;config.c: 30:     ADON = 1;
  3268     0591  141D               	bsf	29,0	;volatile
  3269                           
  3270                           ;config.c: 31:     _delay((unsigned long)((0.005)*(32000000/4000.0)));
  3271     0592  300D               	movlw	13
  3272     0593                     u1077:
  3273     0593  0B89               	decfsz	9,f
  3274     0594  2D93               	goto	u1077
  3275     0595  0000               	nop
  3276                           
  3277                           ;config.c: 32:     GO_nDONE = 1;
  3278     0596  0021               	movlb	1	; select bank1
  3279     0597  149D               	bsf	29,1	;volatile
  3280     0598                     l159:	
  3281                           ;config.c: 33:     while(GO_nDONE == 1){}
  3282                           
  3283     0598  189D               	btfsc	29,1	;volatile
  3284     0599  2D98               	goto	l159
  3285                           
  3286                           ;config.c: 34:     ADON = 0;
  3287     059A  101D               	bcf	29,0	;volatile
  3288                           
  3289                           ;config.c: 35:     uint16_t adc_result = ((uint16_t)(ADRESH << 8) | ADRESL);
  3290     059B  081C               	movf	28,w	;volatile
  3291     059C  0020               	movlb	0	; select bank0
  3292     059D  00C4               	movwf	DO_ADC@adc_result+1
  3293     059E  0021               	movlb	1	; select bank1
  3294     059F  081B               	movf	27,w	;volatile
  3295     05A0  0020               	movlb	0	; select bank0
  3296     05A1  00C3               	movwf	DO_ADC@adc_result
  3297                           
  3298                           ;config.c: 36:     return adc_result;
  3299     05A2  0844               	movf	DO_ADC@adc_result+1,w
  3300     05A3  00C1               	movwf	?_DO_ADC+1
  3301     05A4  0843               	movf	DO_ADC@adc_result,w
  3302     05A5  00C0               	movwf	?_DO_ADC
  3303     05A6  0008               	return
  3304     05A7                     __end_of_DO_ADC:
  3305                           
  3306                           	psect	text15
  3307     069A                     __ptext15:	
  3308 ;; *************** function _CONFIG_TMR0_INTERRUPT *****************
  3309 ;; Defined at:
  3310 ;;		line 58 in file "config.c"
  3311 ;; Parameters:    Size  Location     Type
  3312 ;;		None
  3313 ;; Auto vars:     Size  Location     Type
  3314 ;;		None
  3315 ;; Return value:  Size  Location     Type
  3316 ;;                  1    wreg      unsigned char 
  3317 ;; Registers used:
  3318 ;;		None
  3319 ;; Tracked objects:
  3320 ;;		On entry : B1F/1
  3321 ;;		On exit  : B1F/1
  3322 ;;		Unchanged: B1F/0
  3323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3324 ;;      Params:         0       0       0       0
  3325 ;;      Locals:         0       0       0       0
  3326 ;;      Temps:          0       0       0       0
  3327 ;;      Totals:         0       0       0       0
  3328 ;;Total ram usage:        0 bytes
  3329 ;; Hardware stack levels used: 1
  3330 ;; Hardware stack levels required when called: 2
  3331 ;; This function calls:
  3332 ;;		Nothing
  3333 ;; This function is called by:
  3334 ;;		_main
  3335 ;; This function uses a non-reentrant model
  3336 ;;
  3337                           
  3338     069A                     _CONFIG_TMR0_INTERRUPT:	
  3339                           ;psect for function _CONFIG_TMR0_INTERRUPT
  3340                           
  3341                           
  3342                           ;config.c: 59:     TMR0IE = 1;
  3343                           
  3344                           ;incstack = 0
  3345                           ; Regs used in _CONFIG_TMR0_INTERRUPT: []
  3346     069A  168B               	bsf	11,5	;volatile
  3347                           
  3348                           ;config.c: 60:     return 1;;	Return value of _CONFIG_TMR0_INTERRUPT is never used
  3349     069B  0008               	return
  3350     069C                     __end_of_CONFIG_TMR0_INTERRUPT:
  3351                           
  3352                           	psect	text16
  3353     065B                     __ptext16:	
  3354 ;; *************** function _CONFIG_SYSTEM *****************
  3355 ;; Defined at:
  3356 ;;		line 64 in file "config.c"
  3357 ;; Parameters:    Size  Location     Type
  3358 ;;		None
  3359 ;; Auto vars:     Size  Location     Type
  3360 ;;		None
  3361 ;; Return value:  Size  Location     Type
  3362 ;;                  1    wreg      unsigned char 
  3363 ;; Registers used:
  3364 ;;		wreg, status,2, status,0, pclath, cstack
  3365 ;; Tracked objects:
  3366 ;;		On entry : B1F/0
  3367 ;;		On exit  : B1F/0
  3368 ;;		Unchanged: B00/0
  3369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3370 ;;      Params:         0       0       0       0
  3371 ;;      Locals:         0       0       0       0
  3372 ;;      Temps:          0       0       0       0
  3373 ;;      Totals:         0       0       0       0
  3374 ;;Total ram usage:        0 bytes
  3375 ;; Hardware stack levels used: 1
  3376 ;; Hardware stack levels required when called: 3
  3377 ;; This function calls:
  3378 ;;		_CONFIG_ADC_PINS
  3379 ;;		_CONFIG_INT_OSC
  3380 ;;		_CONFIG_PORTS
  3381 ;;		_CONFIG_PWM_CCP3
  3382 ;; This function is called by:
  3383 ;;		_main
  3384 ;; This function uses a non-reentrant model
  3385 ;;
  3386                           
  3387     065B                     _CONFIG_SYSTEM:	
  3388                           ;psect for function _CONFIG_SYSTEM
  3389                           
  3390                           
  3391                           ;config.c: 65:     CONFIG_INT_OSC();
  3392                           
  3393                           ;incstack = 0
  3394                           ; Regs used in _CONFIG_SYSTEM: [wreg+status,2+status,0+pclath+cstack]
  3395     065B  3186  2686  3186   	fcall	_CONFIG_INT_OSC
  3396                           
  3397                           ;config.c: 66:     CONFIG_PORTS();
  3398     065E  3186  2667  3186   	fcall	_CONFIG_PORTS
  3399                           
  3400                           ;config.c: 67:     CONFIG_ADC_PINS();
  3401     0661  3186  2691  3186   	fcall	_CONFIG_ADC_PINS
  3402                           
  3403                           ;config.c: 68:     CONFIG_PWM_CCP3();
  3404     0664  3186  2648         	fcall	_CONFIG_PWM_CCP3
  3405     0666  0008               	return
  3406     0667                     __end_of_CONFIG_SYSTEM:
  3407                           
  3408                           	psect	text17
  3409     0648                     __ptext17:	
  3410 ;; *************** function _CONFIG_PWM_CCP3 *****************
  3411 ;; Defined at:
  3412 ;;		line 40 in file "config.c"
  3413 ;; Parameters:    Size  Location     Type
  3414 ;;		None
  3415 ;; Auto vars:     Size  Location     Type
  3416 ;;		None
  3417 ;; Return value:  Size  Location     Type
  3418 ;;                  1    wreg      unsigned char 
  3419 ;; Registers used:
  3420 ;;		wreg, status,2
  3421 ;; Tracked objects:
  3422 ;;		On entry : B1F/1
  3423 ;;		On exit  : B1F/0
  3424 ;;		Unchanged: B00/0
  3425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3426 ;;      Params:         0       0       0       0
  3427 ;;      Locals:         0       0       0       0
  3428 ;;      Temps:          0       0       0       0
  3429 ;;      Totals:         0       0       0       0
  3430 ;;Total ram usage:        0 bytes
  3431 ;; Hardware stack levels used: 1
  3432 ;; Hardware stack levels required when called: 2
  3433 ;; This function calls:
  3434 ;;		Nothing
  3435 ;; This function is called by:
  3436 ;;		_CONFIG_SYSTEM
  3437 ;; This function uses a non-reentrant model
  3438 ;;
  3439                           
  3440     0648                     _CONFIG_PWM_CCP3:	
  3441                           ;psect for function _CONFIG_PWM_CCP3
  3442                           
  3443                           
  3444                           ;config.c: 41:     SRLEN = 0;
  3445                           
  3446                           ;incstack = 0
  3447                           ; Regs used in _CONFIG_PWM_CCP3: [wreg+status,2]
  3448     0648  0022               	movlb	2	; select bank2
  3449     0649  139A               	bcf	26,7	;volatile
  3450                           
  3451                           ;config.c: 42:     C1ON = 0;
  3452     064A  1391               	bcf	17,7	;volatile
  3453                           
  3454                           ;config.c: 44:     TRISA2 = 1;
  3455     064B  0021               	movlb	1	; select bank1
  3456     064C  150C               	bsf	12,2	;volatile
  3457                           
  3458                           ;config.c: 45:     PR2 = 0xFF;
  3459     064D  30FF               	movlw	255
  3460     064E  0020               	movlb	0	; select bank0
  3461     064F  009B               	movwf	27	;volatile
  3462                           
  3463                           ;config.c: 46:     CCP3CON = CCP3CON | 0b00001111;
  3464     0650  0026               	movlb	6	; select bank6
  3465     0651  0813               	movf	19,w	;volatile
  3466     0652  380F               	iorlw	15
  3467     0653  0093               	movwf	19	;volatile
  3468                           
  3469                           ;config.c: 48:     CCPTMRS0 = 0x00;
  3470     0654  0025               	movlb	5	; select bank5
  3471     0655  019E               	clrf	30	;volatile
  3472                           
  3473                           ;config.c: 49:     TMR2IF = 0;
  3474     0656  0020               	movlb	0	; select bank0
  3475     0657  1091               	bcf	17,1	;volatile
  3476                           
  3477                           ;config.c: 50:     T2CON = T2CON | 0b00000000;
  3478     0658  081C               	movf	28,w	;volatile
  3479     0659  009C               	movwf	28	;volatile
  3480     065A  0008               	return
  3481     065B                     __end_of_CONFIG_PWM_CCP3:
  3482                           
  3483                           	psect	text18
  3484     0667                     __ptext18:	
  3485 ;; *************** function _CONFIG_PORTS *****************
  3486 ;; Defined at:
  3487 ;;		line 11 in file "config.c"
  3488 ;; Parameters:    Size  Location     Type
  3489 ;;		None
  3490 ;; Auto vars:     Size  Location     Type
  3491 ;;		None
  3492 ;; Return value:  Size  Location     Type
  3493 ;;                  1    wreg      unsigned char 
  3494 ;; Registers used:
  3495 ;;		wreg, status,2
  3496 ;; Tracked objects:
  3497 ;;		On entry : B1F/1
  3498 ;;		On exit  : B1F/4
  3499 ;;		Unchanged: B00/0
  3500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3501 ;;      Params:         0       0       0       0
  3502 ;;      Locals:         0       0       0       0
  3503 ;;      Temps:          0       0       0       0
  3504 ;;      Totals:         0       0       0       0
  3505 ;;Total ram usage:        0 bytes
  3506 ;; Hardware stack levels used: 1
  3507 ;; Hardware stack levels required when called: 2
  3508 ;; This function calls:
  3509 ;;		Nothing
  3510 ;; This function is called by:
  3511 ;;		_CONFIG_SYSTEM
  3512 ;; This function uses a non-reentrant model
  3513 ;;
  3514                           
  3515     0667                     _CONFIG_PORTS:	
  3516                           ;psect for function _CONFIG_PORTS
  3517                           
  3518                           
  3519                           ;config.c: 12:     ANSELC = 0b00001111;
  3520                           
  3521                           ;incstack = 0
  3522                           ; Regs used in _CONFIG_PORTS: [wreg+status,2]
  3523     0667  300F               	movlw	15
  3524     0668  0023               	movlb	3	; select bank3
  3525     0669  008E               	movwf	14	;volatile
  3526                           
  3527                           ;config.c: 13:     TRISC = 0b00001111;
  3528     066A  300F               	movlw	15
  3529     066B  0021               	movlb	1	; select bank1
  3530     066C  008E               	movwf	14	;volatile
  3531                           
  3532                           ;config.c: 14:     WPUC = 0b00000000;
  3533     066D  0024               	movlb	4	; select bank4
  3534     066E  018E               	clrf	14	;volatile
  3535     066F  0008               	return
  3536     0670                     __end_of_CONFIG_PORTS:
  3537                           
  3538                           	psect	text19
  3539     0686                     __ptext19:	
  3540 ;; *************** function _CONFIG_INT_OSC *****************
  3541 ;; Defined at:
  3542 ;;		line 3 in file "config.c"
  3543 ;; Parameters:    Size  Location     Type
  3544 ;;		None
  3545 ;; Auto vars:     Size  Location     Type
  3546 ;;		None
  3547 ;; Return value:  Size  Location     Type
  3548 ;;                  1    wreg      unsigned char 
  3549 ;; Registers used:
  3550 ;;		wreg
  3551 ;; Tracked objects:
  3552 ;;		On entry : B1F/0
  3553 ;;		On exit  : B1F/1
  3554 ;;		Unchanged: B00/0
  3555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3556 ;;      Params:         0       0       0       0
  3557 ;;      Locals:         0       0       0       0
  3558 ;;      Temps:          0       0       0       0
  3559 ;;      Totals:         0       0       0       0
  3560 ;;Total ram usage:        0 bytes
  3561 ;; Hardware stack levels used: 1
  3562 ;; Hardware stack levels required when called: 2
  3563 ;; This function calls:
  3564 ;;		Nothing
  3565 ;; This function is called by:
  3566 ;;		_CONFIG_SYSTEM
  3567 ;; This function uses a non-reentrant model
  3568 ;;
  3569                           
  3570     0686                     _CONFIG_INT_OSC:	
  3571                           ;psect for function _CONFIG_INT_OSC
  3572                           
  3573                           
  3574                           ;config.c: 4:     OSCCON = 0b11110000;
  3575                           
  3576                           ;incstack = 0
  3577                           ; Regs used in _CONFIG_INT_OSC: [wreg]
  3578     0686  30F0               	movlw	240
  3579     0687  0021               	movlb	1	; select bank1
  3580     0688  0099               	movwf	25	;volatile
  3581                           
  3582                           ;config.c: 5:     OSCTUNE = 0b00011111;
  3583     0689  301F               	movlw	31
  3584     068A  0098               	movwf	24	;volatile
  3585     068B  0008               	return
  3586     068C                     __end_of_CONFIG_INT_OSC:
  3587                           
  3588                           	psect	text20
  3589     0691                     __ptext20:	
  3590 ;; *************** function _CONFIG_ADC_PINS *****************
  3591 ;; Defined at:
  3592 ;;		line 19 in file "config.c"
  3593 ;; Parameters:    Size  Location     Type
  3594 ;;		None
  3595 ;; Auto vars:     Size  Location     Type
  3596 ;;		None
  3597 ;; Return value:  Size  Location     Type
  3598 ;;                  1    wreg      unsigned char 
  3599 ;; Registers used:
  3600 ;;		wreg
  3601 ;; Tracked objects:
  3602 ;;		On entry : B1F/4
  3603 ;;		On exit  : B1F/1
  3604 ;;		Unchanged: B00/0
  3605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3606 ;;      Params:         0       0       0       0
  3607 ;;      Locals:         0       0       0       0
  3608 ;;      Temps:          0       0       0       0
  3609 ;;      Totals:         0       0       0       0
  3610 ;;Total ram usage:        0 bytes
  3611 ;; Hardware stack levels used: 1
  3612 ;; Hardware stack levels required when called: 2
  3613 ;; This function calls:
  3614 ;;		Nothing
  3615 ;; This function is called by:
  3616 ;;		_CONFIG_SYSTEM
  3617 ;; This function uses a non-reentrant model
  3618 ;;
  3619                           
  3620     0691                     _CONFIG_ADC_PINS:	
  3621                           ;psect for function _CONFIG_ADC_PINS
  3622                           
  3623                           
  3624                           ;config.c: 20:     ADCON1 = 0b10100000;
  3625                           
  3626                           ;incstack = 0
  3627                           ; Regs used in _CONFIG_ADC_PINS: [wreg]
  3628     0691  30A0               	movlw	160
  3629     0692  0021               	movlb	1	; select bank1
  3630     0693  009E               	movwf	30	;volatile
  3631     0694  0008               	return
  3632     0695                     __end_of_CONFIG_ADC_PINS:
  3633                           
  3634                           	psect	intentry
  3635     0004                     __pintentry:	
  3636 ;; *************** function _INTERRUPT_InterruptManager *****************
  3637 ;; Defined at:
  3638 ;;		line 30 in file "main.c"
  3639 ;; Parameters:    Size  Location     Type
  3640 ;;		None
  3641 ;; Auto vars:     Size  Location     Type
  3642 ;;		None
  3643 ;; Return value:  Size  Location     Type
  3644 ;;                  1    wreg      void 
  3645 ;; Registers used:
  3646 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3647 ;; Tracked objects:
  3648 ;;		On entry : 0/0
  3649 ;;		On exit  : 19/0
  3650 ;;		Unchanged: 0/0
  3651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3652 ;;      Params:         0       0       0       0
  3653 ;;      Locals:         0       0       0       0
  3654 ;;      Temps:          2       0       0       0
  3655 ;;      Totals:         2       0       0       0
  3656 ;;Total ram usage:        2 bytes
  3657 ;; Hardware stack levels used: 1
  3658 ;; Hardware stack levels required when called: 1
  3659 ;; This function calls:
  3660 ;;		_SET_DUTY_CCP3
  3661 ;; This function is called by:
  3662 ;;		Interrupt level 1
  3663 ;; This function uses a non-reentrant model
  3664 ;;
  3665                           
  3666     0004                     _INTERRUPT_InterruptManager:
  3667                           
  3668                           ;incstack = 0
  3669     0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  3670                           
  3671                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3672     0005  3180               	pagesel	$
  3673                           
  3674                           ;main.c: 31:     TMR0 = (uint8_t)final_TMR0;
  3675     0006  0020               	movlb	0	; select bank0
  3676     0007  082E               	movf	_final_TMR0,w	;volatile
  3677     0008  0095               	movwf	21	;volatile
  3678                           
  3679                           ;main.c: 32:     if(TMR0IF == 1){
  3680     0009  1D0B               	btfss	11,2	;volatile
  3681     000A  28D5               	goto	i1l95
  3682                           
  3683                           ;main.c: 33:     GIE = 0;
  3684     000B  138B               	bcf	11,7	;volatile
  3685                           
  3686                           ;main.c: 35:     TMR0IF = 0;
  3687     000C  110B               	bcf	11,2	;volatile
  3688                           
  3689                           ;main.c: 37:     if(current_waveshape == 0){
  3690     000D  0878               	movf	_current_waveshape,w	;volatile
  3691     000E  1D03               	btfss	3,2
  3692     000F  2820               	goto	i1l1626
  3693                           
  3694                           ;main.c: 38:         duty = tri_table_one_quadrant[current_one_quadrant_index];
  3695     0010  0877               	movf	_current_one_quadrant_index,w	;volatile
  3696     0011  00F4               	movwf	??_INTERRUPT_InterruptManager
  3697     0012  01F5               	clrf	??_INTERRUPT_InterruptManager+1
  3698     0013  35F4               	lslf	??_INTERRUPT_InterruptManager,f
  3699     0014  0DF5               	rlf	??_INTERRUPT_InterruptManager+1,f
  3700     0015  30F1               	movlw	low _tri_table_one_quadrant
  3701     0016  0774               	addwf	??_INTERRUPT_InterruptManager,w
  3702     0017  0084               	movwf	4
  3703     0018  3000               	movlw	high _tri_table_one_quadrant
  3704     0019  3D75               	addwfc	??_INTERRUPT_InterruptManager+1,w
  3705     001A  3880               	iorlw	128
  3706     001B  0085               	movwf	5
  3707     001C  3F00               	moviw [0]fsr0
  3708     001D  00F9               	movwf	_duty	;volatile
  3709     001E  3F01               	moviw [1]fsr0
  3710     001F  283A               	goto	L1
  3711     0020                     i1l1626:	
  3712                           ;main.c: 39:     }
  3713                           
  3714     0020  0378               	decf	_current_waveshape,w	;volatile
  3715     0021  1D03               	btfss	3,2
  3716     0022  2833               	goto	i1l1630
  3717                           
  3718                           ;main.c: 41:         duty = sine_table_one_quadrant[current_one_quadrant_index];
  3719     0023  0877               	movf	_current_one_quadrant_index,w	;volatile
  3720     0024  00F4               	movwf	??_INTERRUPT_InterruptManager
  3721     0025  01F5               	clrf	??_INTERRUPT_InterruptManager+1
  3722     0026  35F4               	lslf	??_INTERRUPT_InterruptManager,f
  3723     0027  0DF5               	rlf	??_INTERRUPT_InterruptManager+1,f
  3724     0028  30F3               	movlw	low _sine_table_one_quadrant
  3725     0029  0774               	addwf	??_INTERRUPT_InterruptManager,w
  3726     002A  0084               	movwf	4
  3727     002B  3001               	movlw	high _sine_table_one_quadrant
  3728     002C  3D75               	addwfc	??_INTERRUPT_InterruptManager+1,w
  3729     002D  3880               	iorlw	128
  3730     002E  0085               	movwf	5
  3731     002F  3F00               	moviw [0]fsr0
  3732     0030  00F9               	movwf	_duty	;volatile
  3733     0031  3F01               	moviw [1]fsr0
  3734     0032  283A               	goto	L1
  3735     0033                     i1l1630:	
  3736                           ;main.c: 42:     }
  3737                           
  3738     0033  3002               	movlw	2
  3739     0034  0678               	xorwf	_current_waveshape,w	;volatile
  3740     0035  1D03               	btfss	3,2
  3741     0036  283B               	goto	i1l1634
  3742                           
  3743                           ;main.c: 44:         duty = 1023;
  3744     0037  30FF               	movlw	255
  3745     0038  00F9               	movwf	_duty	;volatile
  3746     0039  3003               	movlw	3
  3747     003A                     L1:
  3748     003A  00FA               	movwf	_duty+1	;volatile
  3749     003B                     i1l1634:
  3750                           
  3751                           ;main.c: 46:     if(current_one_quadrant_index == 128){
  3752     003B  3080               	movlw	128
  3753     003C  0677               	xorwf	_current_one_quadrant_index,w	;volatile
  3754     003D  1D03               	btfss	3,2
  3755     003E  2842               	goto	i1l1638
  3756                           
  3757                           ;main.c: 47:         current_quadrant = 1;
  3758     003F  3001               	movlw	1
  3759     0040  00BF               	movwf	_current_quadrant	;volatile
  3760                           
  3761                           ;main.c: 48:     }
  3762     0041  284D               	goto	i1l1648
  3763     0042                     i1l1638:
  3764     0042  0877               	movf	_current_one_quadrant_index,w	;volatile
  3765     0043  1D03               	btfss	3,2
  3766     0044  284D               	goto	i1l1648
  3767                           
  3768                           ;main.c: 50:         current_quadrant = 0;
  3769     0045  01BF               	clrf	_current_quadrant	;volatile
  3770                           
  3771                           ;main.c: 51:         if(current_halfcycle == 0){
  3772     0046  0876               	movf	_current_halfcycle,w	;volatile
  3773     0047  1D03               	btfss	3,2
  3774     0048  284C               	goto	i1l1646
  3775                           
  3776                           ;main.c: 52:             current_halfcycle = 1;
  3777     0049  3001               	movlw	1
  3778     004A  00F6               	movwf	_current_halfcycle	;volatile
  3779                           
  3780                           ;main.c: 53:         }
  3781     004B  284D               	goto	i1l1648
  3782     004C                     i1l1646:
  3783                           
  3784                           ;main.c: 55:             current_halfcycle = 0;
  3785     004C  01F6               	clrf	_current_halfcycle	;volatile
  3786     004D                     i1l1648:
  3787                           
  3788                           ;main.c: 58:     if(current_quadrant == 0){
  3789     004D  083F               	movf	_current_quadrant,w	;volatile
  3790     004E  1D03               	btfss	3,2
  3791     004F  2855               	goto	i1l1652
  3792                           
  3793                           ;main.c: 59:         current_one_quadrant_index++;
  3794     0050  3001               	movlw	1
  3795     0051  00F4               	movwf	??_INTERRUPT_InterruptManager
  3796     0052  0874               	movf	??_INTERRUPT_InterruptManager,w
  3797     0053  07F7               	addwf	_current_one_quadrant_index,f	;volatile
  3798                           
  3799                           ;main.c: 60:     }
  3800     0054  2857               	goto	i1l89
  3801     0055                     i1l1652:
  3802                           
  3803                           ;main.c: 62:         current_one_quadrant_index--;
  3804     0055  3001               	movlw	1
  3805     0056  02F7               	subwf	_current_one_quadrant_index,f	;volatile
  3806     0057                     i1l89:	
  3807                           ;main.c: 63:     }
  3808                           
  3809                           
  3810                           ;main.c: 64:     if(current_halfcycle == 1){
  3811     0057  0376               	decf	_current_halfcycle,w	;volatile
  3812     0058  1D03               	btfss	3,2
  3813     0059  2864               	goto	i1l90
  3814                           
  3815                           ;main.c: 65:     duty = 1023 - duty;
  3816     005A  30FF               	movlw	255
  3817     005B  00F4               	movwf	??_INTERRUPT_InterruptManager
  3818     005C  3003               	movlw	3
  3819     005D  00F5               	movwf	??_INTERRUPT_InterruptManager+1
  3820     005E  0879               	movf	_duty,w	;volatile
  3821     005F  0274               	subwf	??_INTERRUPT_InterruptManager,w
  3822     0060  00F9               	movwf	_duty	;volatile
  3823     0061  087A               	movf	_duty+1,w	;volatile
  3824     0062  3B75               	subwfb	??_INTERRUPT_InterruptManager+1,w
  3825     0063  00FA               	movwf	_duty+1	;volatile
  3826     0064                     i1l90:	
  3827                           ;main.c: 66:     }
  3828                           
  3829                           
  3830                           ;main.c: 70:         if(current_depth == 255){
  3831     0064  0A35               	incf	_current_depth,w	;volatile
  3832     0065  0436               	iorwf	_current_depth+1,w	;volatile
  3833     0066  1D03               	btfss	3,2
  3834     0067  2871               	goto	i1l1658
  3835                           
  3836                           ;main.c: 71:             duty = 1023 - duty;
  3837     0068  30FF               	movlw	255
  3838     0069  00F4               	movwf	??_INTERRUPT_InterruptManager
  3839     006A  3003               	movlw	3
  3840     006B  00F5               	movwf	??_INTERRUPT_InterruptManager+1
  3841     006C  0879               	movf	_duty,w	;volatile
  3842     006D  0274               	subwf	??_INTERRUPT_InterruptManager,w
  3843     006E  00F9               	movwf	_duty	;volatile
  3844     006F  087A               	movf	_duty+1,w	;volatile
  3845     0070  28CB               	goto	L3
  3846     0071                     i1l1658:	
  3847                           ;main.c: 72:         }
  3848                           
  3849     0071  0835               	movf	_current_depth,w	;volatile
  3850     0072  0436               	iorwf	_current_depth+1,w	;volatile
  3851     0073  1903               	btfsc	3,2
  3852     0074  28CD               	goto	i1l1664
  3853                           
  3854                           ;main.c: 74:             duty_low_byte = duty & 0xFF;
  3855     0075  0879               	movf	_duty,w	;volatile
  3856     0076  00BE               	movwf	_duty_low_byte	;volatile
  3857                           
  3858                           ;main.c: 75:             duty_high_byte = duty >> 8;
  3859     0077  087A               	movf	_duty+1,w	;volatile
  3860     0078  00BD               	movwf	_duty_high_byte	;volatile
  3861     0079  01A2               	clrf	34	;# 
  3862     007A  01A0               	clrf	32	;# 
  3863     007B  1003               	bcf	3,0	;# 
  3864     007C  0835               	movf	_current_depth,w	;# 
  3865     007D  183E               	btfsc	_duty_low_byte,0	;# 
  3866     007E  07A2               	addwf	34,f	;# 
  3867     007F  0CA2               	rrf	34,f	;# 
  3868     0080  0CA0               	rrf	32,f	;# 
  3869     0081  18BE               	btfsc	_duty_low_byte,1	;# 
  3870     0082  07A2               	addwf	34,f	;# 
  3871     0083  0CA2               	rrf	34,f	;# 
  3872     0084  0CA0               	rrf	32,f	;# 
  3873     0085  193E               	btfsc	_duty_low_byte,2	;# 
  3874     0086  07A2               	addwf	34,f	;# 
  3875     0087  0CA2               	rrf	34,f	;# 
  3876     0088  0CA0               	rrf	32,f	;# 
  3877     0089  19BE               	btfsc	_duty_low_byte,3	;# 
  3878     008A  07A2               	addwf	34,f	;# 
  3879     008B  0CA2               	rrf	34,f	;# 
  3880     008C  0CA0               	rrf	32,f	;# 
  3881     008D  1A3E               	btfsc	_duty_low_byte,4	;# 
  3882     008E  07A2               	addwf	34,f	;# 
  3883     008F  0CA2               	rrf	34,f	;# 
  3884     0090  0CA0               	rrf	32,f	;# 
  3885     0091  1ABE               	btfsc	_duty_low_byte,5	;# 
  3886     0092  07A2               	addwf	34,f	;# 
  3887     0093  0CA2               	rrf	34,f	;# 
  3888     0094  0CA0               	rrf	32,f	;# 
  3889     0095  1B3E               	btfsc	_duty_low_byte,6	;# 
  3890     0096  07A2               	addwf	34,f	;# 
  3891     0097  0CA2               	rrf	34,f	;# 
  3892     0098  0CA0               	rrf	32,f	;# 
  3893     0099  1BBE               	btfsc	_duty_low_byte,7	;# 
  3894     009A  07A2               	addwf	34,f	;# 
  3895     009B  0CA2               	rrf	34,f	;# 
  3896     009C  0CA0               	rrf	32,f	;# 
  3897     009D  01A1               	clrf	33	;# 
  3898     009E  183D               	btfsc	_duty_high_byte,0	;# 
  3899     009F  07A2               	addwf	34,f	;# 
  3900     00A0  0CA2               	rrf	34,f	;# 
  3901     00A1  0CA1               	rrf	33,f	;# 
  3902     00A2  18BD               	btfsc	_duty_high_byte,1	;# 
  3903     00A3  07A2               	addwf	34,f	;# 
  3904     00A4  0CA2               	rrf	34,f	;# 
  3905     00A5  0CA1               	rrf	33,f	;# 
  3906     00A6  193D               	btfsc	_duty_high_byte,2	;# 
  3907     00A7  07A2               	addwf	34,f	;# 
  3908     00A8  0CA2               	rrf	34,f	;# 
  3909     00A9  0CA1               	rrf	33,f	;# 
  3910     00AA  19BD               	btfsc	_duty_high_byte,3	;# 
  3911     00AB  07A2               	addwf	34,f	;# 
  3912     00AC  0CA2               	rrf	34,f	;# 
  3913     00AD  0CA1               	rrf	33,f	;# 
  3914     00AE  1A3D               	btfsc	_duty_high_byte,4	;# 
  3915     00AF  07A2               	addwf	34,f	;# 
  3916     00B0  0CA2               	rrf	34,f	;# 
  3917     00B1  0CA1               	rrf	33,f	;# 
  3918     00B2  1ABD               	btfsc	_duty_high_byte,5	;# 
  3919     00B3  07A2               	addwf	34,f	;# 
  3920     00B4  0CA2               	rrf	34,f	;# 
  3921     00B5  0CA1               	rrf	33,f	;# 
  3922     00B6  1B3D               	btfsc	_duty_high_byte,6	;# 
  3923     00B7  07A2               	addwf	34,f	;# 
  3924     00B8  0CA2               	rrf	34,f	;# 
  3925     00B9  0CA1               	rrf	33,f	;# 
  3926     00BA  1BBD               	btfsc	_duty_high_byte,7	;# 
  3927     00BB  07A2               	addwf	34,f	;# 
  3928     00BC  0CA2               	rrf	34,f	;# 
  3929     00BD  0CA1               	rrf	33,f	;# 
  3930                           
  3931                           ;main.c: 110:             duty = 1023 - *top_two_bytes_ptr;
  3932     00BE  0020               	movlb	0	; select bank0
  3933     00BF  0853               	movf	_top_two_bytes_ptr,w
  3934     00C0  0086               	movwf	6
  3935     00C1  0854               	movf	_top_two_bytes_ptr+1,w
  3936     00C2  0087               	movwf	7
  3937     00C3  30FF               	movlw	255
  3938     00C4  00F4               	movwf	??_INTERRUPT_InterruptManager
  3939     00C5  3003               	movlw	3
  3940     00C6  00F5               	movwf	??_INTERRUPT_InterruptManager+1
  3941     00C7  3F40               	moviw [0]fsr1
  3942     00C8  0274               	subwf	??_INTERRUPT_InterruptManager,w
  3943     00C9  00F9               	movwf	_duty	;volatile
  3944     00CA  3F41               	moviw [1]fsr1
  3945     00CB                     L3:
  3946     00CB  3B75               	subwfb	??_INTERRUPT_InterruptManager+1,w
  3947     00CC  28D0               	goto	L2
  3948     00CD                     i1l1664:	
  3949                           ;main.c: 111:         }
  3950                           
  3951                           
  3952                           ;main.c: 113:             duty = 1023;
  3953     00CD  30FF               	movlw	255
  3954     00CE  00F9               	movwf	_duty	;volatile
  3955     00CF  3003               	movlw	3
  3956     00D0                     L2:
  3957     00D0  00FA               	movwf	_duty+1	;volatile
  3958                           
  3959                           ;main.c: 118:     SET_DUTY_CCP3(&duty);
  3960     00D1  3079               	movlw	(low (_duty| 0))& (0+255)
  3961     00D2  3185  25F4         	fcall	_SET_DUTY_CCP3
  3962                           
  3963                           ;main.c: 122:     GIE = 1;
  3964     00D4  178B               	bsf	11,7	;volatile
  3965     00D5                     i1l95:
  3966     00D5  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  3967     00D6  0009               	retfie
  3968     00D7                     __end_of_INTERRUPT_InterruptManager:
  3969                           
  3970                           	psect	text22
  3971     05F4                     __ptext22:	
  3972 ;; *************** function _SET_DUTY_CCP3 *****************
  3973 ;; Defined at:
  3974 ;;		line 44 in file "system.c"
  3975 ;; Parameters:    Size  Location     Type
  3976 ;;  duty_ptr        1    wreg     PTR volatile unsigned sh
  3977 ;;		 -> duty(2), 
  3978 ;; Auto vars:     Size  Location     Type
  3979 ;;  duty_ptr        1    3[COMMON] PTR volatile unsigned sh
  3980 ;;		 -> duty(2), 
  3981 ;;  temp            1    2[COMMON] unsigned char 
  3982 ;; Return value:  Size  Location     Type
  3983 ;;                  1    wreg      unsigned char 
  3984 ;; Registers used:
  3985 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3986 ;; Tracked objects:
  3987 ;;		On entry : 1F/0
  3988 ;;		On exit  : 1F/6
  3989 ;;		Unchanged: 0/0
  3990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3991 ;;      Params:         0       0       0       0
  3992 ;;      Locals:         2       0       0       0
  3993 ;;      Temps:          2       0       0       0
  3994 ;;      Totals:         4       0       0       0
  3995 ;;Total ram usage:        4 bytes
  3996 ;; Hardware stack levels used: 1
  3997 ;; This function calls:
  3998 ;;		Nothing
  3999 ;; This function is called by:
  4000 ;;		_INTERRUPT_InterruptManager
  4001 ;; This function uses a non-reentrant model
  4002 ;;
  4003                           
  4004     05F4                     _SET_DUTY_CCP3:	
  4005                           ;psect for function _SET_DUTY_CCP3
  4006                           
  4007                           
  4008                           ;incstack = 0
  4009                           ; Regs used in _SET_DUTY_CCP3: [wreg+fsr1l+fsr1h+status,2+status,0]
  4010                           ;SET_DUTY_CCP3@duty_ptr stored from wreg
  4011     05F4  00F3               	movwf	SET_DUTY_CCP3@duty_ptr
  4012                           
  4013                           ;system.c: 46:     CCPR3L = (uint8_t)(*duty_ptr >> 2);
  4014     05F5  0873               	movf	SET_DUTY_CCP3@duty_ptr,w
  4015     05F6  0086               	movwf	6
  4016     05F7  0187               	clrf	7
  4017     05F8  3F40               	moviw [0]fsr1
  4018     05F9  00F0               	movwf	??_SET_DUTY_CCP3
  4019     05FA  3F41               	moviw [1]fsr1
  4020     05FB  00F1               	movwf	??_SET_DUTY_CCP3+1
  4021     05FC  36F1               	lsrf	??_SET_DUTY_CCP3+1,f
  4022     05FD  0CF0               	rrf	??_SET_DUTY_CCP3,f
  4023     05FE  36F1               	lsrf	??_SET_DUTY_CCP3+1,f
  4024     05FF  0CF0               	rrf	??_SET_DUTY_CCP3,f
  4025     0600  0870               	movf	??_SET_DUTY_CCP3,w
  4026     0601  0026               	movlb	6	; select bank6
  4027     0602  0091               	movwf	17	;volatile
  4028                           
  4029                           ;system.c: 47:     uint8_t temp = *duty_ptr % 0b100;
  4030     0603  0873               	movf	SET_DUTY_CCP3@duty_ptr,w
  4031     0604  0086               	movwf	6
  4032     0605  0187               	clrf	7
  4033     0606  0801               	movf	1,w
  4034     0607  3903               	andlw	3
  4035     0608  00F2               	movwf	SET_DUTY_CCP3@temp
  4036                           
  4037                           ;system.c: 48:     CCP3CON = CCP3CON | ((uint8_t)(temp << 4));
  4038     0609  0872               	movf	SET_DUTY_CCP3@temp,w
  4039     060A  00F0               	movwf	??_SET_DUTY_CCP3
  4040     060B  3003               	movlw	3
  4041     060C                     u95_25:
  4042     060C  35F0               	lslf	??_SET_DUTY_CCP3,f
  4043     060D  3EFF               	addlw	-1
  4044     060E  1D03               	skipz
  4045     060F  2E0C               	goto	u95_25
  4046     0610  3570               	lslf	??_SET_DUTY_CCP3,w
  4047     0611  0413               	iorwf	19,w	;volatile
  4048     0612  0093               	movwf	19	;volatile
  4049     0613  0008               	return
  4050     0614                     __end_of_SET_DUTY_CCP3:
  4051     007E                     btemp	set	126	;btemp
  4052     007E                     int$flags	set	126
  4053     007E                     wtemp0	set	126
  4054                           
  4055                           	psect	config
  4056                           
  4057                           ;Config register CONFIG1 @ 0x8007
  4058                           ;	Oscillator Selection
  4059                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  4060                           ;	Watchdog Timer Enable
  4061                           ;	WDTE = OFF, WDT disabled
  4062                           ;	Power-up Timer Enable
  4063                           ;	PWRTE = OFF, PWRT disabled
  4064                           ;	MCLR Pin Function Select
  4065                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  4066                           ;	Flash Program Memory Code Protection
  4067                           ;	CP = OFF, Program memory code protection is disabled
  4068                           ;	Data Memory Code Protection
  4069                           ;	CPD = OFF, Data memory code protection is disabled
  4070                           ;	Brown-out Reset Enable
  4071                           ;	BOREN = OFF, Brown-out Reset disabled
  4072                           ;	Clock Out Enable
  4073                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  4074                           ;	Internal/External Switchover
  4075                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4076                           ;	Fail-Safe Clock Monitor Enable
  4077                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4078     8007                     	org	32775
  4079     8007  09E4               	dw	2532
  4080                           
  4081                           ;Config register CONFIG2 @ 0x8008
  4082                           ;	Flash Memory Self-Write Protection
  4083                           ;	WRT = OFF, Write protection off
  4084                           ;	PLL Enable
  4085                           ;	PLLEN = ON, 4x PLL enabled
  4086                           ;	Stack Overflow/Underflow Reset Enable
  4087                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  4088                           ;	Brown-out Reset Voltage Selection
  4089                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  4090                           ;	In-Circuit Debugger Mode
  4091                           ;	DEBUG = ON, In-Circuit Debugger enabled, ICSPCLK and ICSPDAT are dedicated to the debu
      +                          gger
  4092                           ;	Low-Voltage Programming Enable
  4093                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  4094     8008                     	org	32776
  4095     8008  0FFF               	dw	4095

Data Sizes:
    Strings     0
    Constant    537
    Data        2
    BSS         37
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      11
    BANK0            80     19      53
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    DO_ADC@modifier	PTR const unsigned char  size(2) Largest target is 1
		 -> depth_adc_config_value(CODE[1]), speed_adc_config_value(CODE[1]), symmetry_adc_config_value(CODE[1]), waveshape_adc_config_value(CODE[1]), 

    SET_DUTY_CCP3@duty_ptr	PTR volatile unsigned short  size(1) Largest target is 2
		 -> duty(COMMON[2]), 

    top_two_bytes_ptr	PTR unsigned short  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_SET_DUTY_CCP3

Critical Paths under _main in BANK0

    _main->_PROCESS_TMR0_AND_PRESCALER_ADJUST
    _PROCESS_TMR0_AND_PRESCALER_ADJUST->_LENGTHEN_PERIOD
    _PROCESS_TMR0_AND_PRESCALER_ADJUST->_SHORTEN_PERIOD
    _SHORTEN_PERIOD->___tmul
    _LENGTHEN_PERIOD->___tmul
    _ADJUST_AND_SET_PRESCALER->_CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1
    _PROCESS_RAW_SPEED_AND_PRESCALER->___lmul
    _GET_CURRENT_POT_VALUES->_DETERMINE_WAVESHAPE
    _DETERMINE_WAVESHAPE->_DO_ADC

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2749
                      _CONFIG_SYSTEM
              _CONFIG_TMR0_INTERRUPT
             _GET_CURRENT_POT_VALUES
    _PROCESS_RAW_SPEED_AND_PRESCALER
  _PROCESS_TMR0_AND_PRESCALER_ADJUST
                   _TURN_ON_CCP3_PWM
 ---------------------------------------------------------------------------------
 (1) _TURN_ON_CCP3_PWM                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PROCESS_TMR0_AND_PRESCALER_ADJUST                    1     1      0    1649
                                             18 BANK0      1     1      0
           _ADJUST_AND_SET_PRESCALER
                    _LENGTHEN_PERIOD
                     _SHORTEN_PERIOD
 ---------------------------------------------------------------------------------
 (2) _SHORTEN_PERIOD                                       9     9      0     746
                                              9 BANK0      9     9      0
                             ___tmul
 ---------------------------------------------------------------------------------
 (2) _LENGTHEN_PERIOD                                      9     9      0     813
                                              9 BANK0      9     9      0
                             ___tmul
 ---------------------------------------------------------------------------------
 (3) ___tmul                                               9     3      6     700
                                              0 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (2) _ADJUST_AND_SET_PRESCALER                             0     0      0       0
 _CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1
                 _TURN_PRESCALER_OFF
                  _TURN_PRESCALER_ON
 ---------------------------------------------------------------------------------
 (3) _TURN_PRESCALER_ON                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TURN_PRESCALER_OFF                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1                   3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _PROCESS_RAW_SPEED_AND_PRESCALER                      6     6      0     289
                                             12 BANK0      6     6      0
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     244
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) _GET_CURRENT_POT_VALUES                               3     3      0     811
                                              8 BANK0      3     3      0
                _DETERMINE_WAVESHAPE
                             _DO_ADC
 ---------------------------------------------------------------------------------
 (2) _DETERMINE_WAVESHAPE                                  2     2      0     439
                                              6 BANK0      2     2      0
                             _DO_ADC
 ---------------------------------------------------------------------------------
 (2) _DO_ADC                                               6     4      2     372
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _CONFIG_TMR0_INTERRUPT                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CONFIG_SYSTEM                                        0     0      0       0
                    _CONFIG_ADC_PINS
                     _CONFIG_INT_OSC
                       _CONFIG_PORTS
                    _CONFIG_PWM_CCP3
 ---------------------------------------------------------------------------------
 (2) _CONFIG_PWM_CCP3                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CONFIG_PORTS                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CONFIG_INT_OSC                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CONFIG_ADC_PINS                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           2     2      0     182
                                              4 COMMON     2     2      0
                      _SET_DUTY_CCP3
 ---------------------------------------------------------------------------------
 (5) _SET_DUTY_CCP3                                        4     4      0     182
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CONFIG_SYSTEM
     _CONFIG_ADC_PINS
     _CONFIG_INT_OSC
     _CONFIG_PORTS
     _CONFIG_PWM_CCP3
   _CONFIG_TMR0_INTERRUPT
   _GET_CURRENT_POT_VALUES
     _DETERMINE_WAVESHAPE
       _DO_ADC
     _DO_ADC
   _PROCESS_RAW_SPEED_AND_PRESCALER
     ___lmul
   _PROCESS_TMR0_AND_PRESCALER_ADJUST
     _ADJUST_AND_SET_PRESCALER
       _CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1
       _TURN_PRESCALER_OFF
       _TURN_PRESCALER_ON
     _LENGTHEN_PERIOD
       ___tmul
     _SHORTEN_PERIOD
       ___tmul
   _TURN_ON_CCP3_PWM

 _INTERRUPT_InterruptManager (ROOT)
   _SET_DUTY_CCP3

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       B       2       78.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      40       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     13      35       6       66.2%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      40      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Sun Jan 28 18:51:09 2024

                                                      r1 0020  
                                                      r2 0021  
                                                      r3 0022  
                                                     _NO 069C  
                                                    l311 041A  
                                                    l174 067A  
                                                    l159 0598  
                                                    _GIE 005F  
                                                    _PR2 001B  
                                                    u415 0585  
                                                    u605 0348  
                                                    u455 05DD  
                                                    u625 055F  
                                                    u705 03D2  
                                                    u465 05E3  
                                                    u635 0566  
                                                    u715 03DB  
                                                    u575 04ED  
                                                    u735 0409  
                                                    u585 032A  
                                                    u675 0540  
                                                    u595 033F  
                                                    u685 039C  
                                                    _YES 069D  
                                                    wreg 0009  
                                                   l1402 04A7  
                                                   l1340 05C3  
                                                   l1510 0429  
                                                   l1502 0434  
                                                   l1344 05C5  
                                                   l1338 05BC  
                                                   l1434 0554  
                                                   l1426 0363  
                                                   l1522 0437  
                                                   l1602 0629  
                                                   l1372 0464  
                                                   l1292 05D4  
                                                   l1508 0425  
                                                   l1438 055E  
                                                   l1278 0646  
                                                   l1366 0461  
                                                   l1296 05DC  
                                                   l1528 0448  
                                                   _C1ON 088F  
                                                   l1482 03C7  
                                                   l1378 0476  
                                                   l1396 0494  
                                                   l1492 03FD  
                                                   _ADON 04E8  
                                                   u1077 0593  
                                                   i1l90 0064  
                                                   i1l95 00D5  
                                                   i1l89 0057  
                                                   _TMR0 0015  
                                                   _WPUC 020E  
                                                   _main 0614  
                                                   _duty 0079  
                                                   fsr0h 0005  
                                                   fsr1h 0007  
                                                   indf0 0000  
                                                   fsr0l 0004  
                                                   indf1 0001  
                                                   fsr1l 0006  
                                                   btemp 007E  
                                      _current_waveshape 0078  
                                                   start 00D7  
                                  _CONFIG_TMR0_INTERRUPT 069A  
                                       __end_of_NEGATIVE 06A4  
                                   __end_of_CONFIG_PORTS 0670  
             __end_of_CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1 0648  
                   ??_CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1 0040  
                    ?_CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1 0070  
                     _CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1 0633  
                                                  STATUS 0003  
                                                  ?_main 0070  
                                                  _T2CON 001C  
                                                  _SRLEN 08D7  
                                                  _TRISC 008E  
                                                  u95_25 060C  
                                    ___lmul@multiplicand 0044  
                                       __end_of_POSITIVE 06A5  
                               ??_GET_CURRENT_POT_VALUES 0048  
                                     _SHORTEN_PERIOD$850 004F  
                                                  status 0003  
                                                  wtemp0 007E  
                             _current_one_quadrant_index 0077  
                                        __initialization 00D9  
                                           __end_of_main 0633  
                            ?_INTERRUPT_InterruptManager 0070  
                                      __end_of_DONT_CARE 069F  
                                                 ??_main 0053  
                                  __end_of_DIVIDE_BY_TWO 06A2  
                                 _speed_adc_config_value 06A7  
                                  __end_of_CONFIG_SYSTEM 0667  
                                                 _ADCON0 009D  
                                                 _ADCON1 009E  
                                                 _ADRESH 009C  
                                                 _ADRESL 009B  
                                                 _CCPR3L 0311  
                                                 _ANSELC 018E  
                                                 _DO_ADC 057B  
                                                 i1l1630 0033  
                                                 i1l1634 003B  
                                                 i1l1626 0020  
                                                 i1l1652 0055  
                                                 i1l1646 004C  
                                                 i1l1638 0042  
                                                 i1l1664 00CD  
                                                 i1l1648 004D  
                                                 i1l1658 0071  
                                                 _OSCCON 0099  
                                                 _TMR0IE 005D  
                                                 _TMR0IF 005A  
                                                 _TMR2IF 0089  
                                                 _TMR2ON 00E2  
                                                 _TRISA2 0462  
                                 ?_CONFIG_TMR0_INTERRUPT 0070  
                                         DO_ADC@modifier 0040  
                            __end_of_DETERMINE_WAVESHAPE 05CE  
                      __end_of_symmetry_adc_config_value 06A6  
                                                 ___lmul 054C  
                                                 ___tmul 05CE  
                                  __end_of_SET_DUTY_CCP3 0614  
                              ?_ADJUST_AND_SET_PRESCALER 0070  
                                      ?_TURN_ON_CCP3_PWM 0070  
                                      ??_CONFIG_ADC_PINS 0040  
                                _current_speed_linear_32 0024  
                                     ??_TURN_ON_CCP3_PWM 0040  
                                __end_of__initialization 00ED  
                                         _SHORTEN_PERIOD 04B8  
                                         _DIVIDE_BY_FOUR 069F  
                                         _CONFIG_INT_OSC 0686  
                                         __pcstackCOMMON 0070  
                                           __pidataBANK0 0698  
                                             __end_of_NO 069D  
                                 _tri_table_one_quadrant 00F1  
                                      ??_CONFIG_PWM_CCP3 0040  
                                      _top_two_bytes_ptr 0053  
                                          _current_depth 0035  
                                             __pbssBANK0 0020  
                                                ?_DO_ADC 0040  
                                 __end_of_SHORTEN_PERIOD 0507  
                                           _CONFIG_PORTS 0667  
                                 __end_of_DIVIDE_BY_FOUR 06A0  
                                 __end_of_CONFIG_INT_OSC 068C  
                                     __end_of_DO_NOTHING 06A3  
                                             __pmaintext 0614  
                                 _GET_CURRENT_POT_VALUES 0507  
                                                ?___lmul 0040  
                                                ?___tmul 0040  
                                             __pintentry 0004  
       PROCESS_TMR0_AND_PRESCALER_ADJUST@symmetry_status 0052  
                                                _CCP3CON 0313  
                                         ___lmul@product 0048  
                                             _final_TMR0 002E  
                                  SET_DUTY_CCP3@duty_ptr 0073  
                                                _OSCTUNE 0098  
                                _sine_table_one_quadrant 01F3  
                                        ?_SHORTEN_PERIOD 0070  
                                        ?_CONFIG_INT_OSC 0070  
                                   _current_speed_linear 0033  
                                      _TURN_PRESCALER_ON 0695  
                              _base_prescaler_bits_index 003A  
                                                __ptext1 0678  
                                                __ptext2 03EE  
                                                __ptext3 04B8  
                                                __ptext4 02F5  
                                                __ptext5 05CE  
                                                __ptext6 0456  
                                                __ptext7 0695  
                                                __ptext8 068C  
                                                __ptext9 0633  
                                     ?_TURN_PRESCALER_ON 0070  
                                        _MULTIPLY_BY_TWO 06A0  
                __end_of_PROCESS_RAW_SPEED_AND_PRESCALER 03EE  
                      ??_PROCESS_RAW_SPEED_AND_PRESCALER 004C  
                       ?_PROCESS_RAW_SPEED_AND_PRESCALER 0070  
                        _PROCESS_RAW_SPEED_AND_PRESCALER 0372  
                                              _DONT_CARE 069E  
                                    ??_TURN_PRESCALER_ON 0040  
                                                clrloop0 0681  
                                   end_of_initialization 00ED  
                                ??_CONFIG_TMR0_INTERRUPT 0040  
                                          _duty_low_byte 003E  
                              __end_of_TURN_PRESCALER_ON 0698  
                         __end_of_speed_adc_config_value 06A8  
                       __end_of_ADJUST_AND_SET_PRESCALER 04B8  
                                 _depth_adc_config_value 06A6  
                                        _CONFIG_ADC_PINS 0691  
                                      ??_LENGTHEN_PERIOD 0049  
              __end_of_PROCESS_TMR0_AND_PRESCALER_ADJUST 0456  
                    ??_PROCESS_TMR0_AND_PRESCALER_ADJUST 0052  
                     ?_PROCESS_TMR0_AND_PRESCALER_ADJUST 0070  
                      _PROCESS_TMR0_AND_PRESCALER_ADJUST 03EE  
                                             DO_ADC@temp 0045  
                                         __end_of_DO_ADC 05A7  
                                      SET_DUTY_CCP3@temp 0072  
                                _prescaler_overflow_flag 0038  
                                       _current_quadrant 003F  
                             __end_of_TURN_PRESCALER_OFF 0691  
                                __end_of_MULTIPLY_BY_TWO 06A1  
                                        _CONFIG_PWM_CCP3 0648  
                                       _current_symmetry 002B  
                                         __end_of___lmul 057B  
                                         __end_of___tmul 05F4  
                                    start_initialization 00D9  
                                            __end_of_YES 069E  
                                               ??_DO_ADC 0042  
                                ?_GET_CURRENT_POT_VALUES 0070  
                        __end_of_sine_table_one_quadrant 02F5  
                                __end_of_CONFIG_ADC_PINS 0695  
                                               ??___lmul 0048  
                                               ??___tmul 0046  
                         __end_of_tri_table_one_quadrant 01F3  
                                            __pdataBANK0 0053  
                                         ___tmul@product 0046  
                                       DO_ADC@adc_result 0043  
                               _ADJUST_AND_SET_PRESCALER 0456  
                                            __pbssCOMMON 0076  
                                              ___latbits 0001  
                                          _DIVIDE_BY_TWO 06A1  
                                          __pcstackBANK0 0040  
                                       ??_SHORTEN_PERIOD 0049  
                                          _CONFIG_SYSTEM 065B  
                                       ??_CONFIG_INT_OSC 0040  
                         __end_of_GET_CURRENT_POT_VALUES 054C  
                                __end_of_CONFIG_PWM_CCP3 065B  
                                         _prescaler_bits 0670  
                           ??_INTERRUPT_InterruptManager 0074  
                                           _how_many_128 003C  
                                          _SET_DUTY_CCP3 05F4  
                                               _CCPTMRS0 029E  
                                         ?_CONFIG_SYSTEM 0070  
                                       _prescaler_adjust 003B  
                                        _symmetry_status 0039  
                                               _NEGATIVE 06A3  
                     __end_of_waveshape_adc_config_value 06A9  
                             _waveshape_adc_config_value 06A8  
                          __end_of_CONFIG_TMR0_INTERRUPT 069C  
                                              clear_ram0 0680  
                                               _GO_nDONE 04E9  
                                       _TURN_ON_CCP3_PWM 0678  
                                 __end_of_prescaler_bits 0678  
                                       ?_CONFIG_ADC_PINS 0070  
                                               _POSITIVE 06A4  
                                        _LENGTHEN_PERIOD 02F5  
                                         ?_SET_DUTY_CCP3 0070  
                                    ___tmul@multiplicand 0043  
                                      ___lmul@multiplier 0040  
                                    _DETERMINE_WAVESHAPE 05A7  
                                 DETERMINE_WAVESHAPE@ADC 0046  
                                       ?_CONFIG_PWM_CCP3 0070  
                         __end_of_depth_adc_config_value 06A7  
                                   ?_DETERMINE_WAVESHAPE 0070  
                                     _TURN_PRESCALER_OFF 068C  
                                        ??_CONFIG_SYSTEM 0040  
                                       _speed_control_32 0020  
                                               __ptext10 0372  
                                               __ptext11 054C  
                                               __ptext20 0691  
                                               __ptext12 0507  
                                               __ptext13 05A7  
                                               __ptext22 05F4  
                                               __ptext14 057B  
                                               __ptext15 069A  
                                               __ptext16 065B  
                                               __ptext17 0648  
                                               __ptext18 0667  
                                               __ptext19 0686  
                                    ?_TURN_PRESCALER_OFF 0070  
PROCESS_RAW_SPEED_AND_PRESCALER@speed_control_subtracted 0050  
                                          ?_CONFIG_PORTS 0070  
                                         _duty_high_byte 003D  
                                          _speed_control 0031  
                                               _raw_TMR0 0028  
                                __end_of_LENGTHEN_PERIOD 0372  
                                  _prescaler_final_index 0037  
                                   ??_TURN_PRESCALER_OFF 0040  
                                               int$flags 007E  
                             ??_ADJUST_AND_SET_PRESCALER 0043  
                                  ??_DETERMINE_WAVESHAPE 0046  
                     __end_of_INTERRUPT_InterruptManager 00D7  
                             _INTERRUPT_InterruptManager 0004  
                                    _LENGTHEN_PERIOD$851 004C  
                                        ??_SET_DUTY_CCP3 0070  
                                             _DO_NOTHING 06A2  
                                         __pstringtext10 06A2  
                                         __pstringtext11 06A3  
                                         __pstringtext12 06A4  
                                         __pstringtext13 06A5  
                                         __pstringtext14 06A6  
                                         __pstringtext15 06A7  
                                         __pstringtext16 06A8  
                              _symmetry_adc_config_value 06A5  
                                         ??_CONFIG_PORTS 0040  
                                               intlevel1 0000  
                                      ___tmul@multiplier 0040  
                                          __pstringtext1 00F1  
                                          __pstringtext2 01F3  
                                          __pstringtext3 0670  
                                          __pstringtext4 069C  
                                          __pstringtext5 069D  
                                          __pstringtext6 069E  
                                          __pstringtext7 069F  
                                          __pstringtext8 06A0  
                                          __pstringtext9 06A1  
                                             _OPTION_REG 0095  
                               __end_of_TURN_ON_CCP3_PWM 0680  
                                      _current_halfcycle 0076  
            LENGTHEN_PERIOD@twofiftysix_minus_TMR0_final 004F  
             SHORTEN_PERIOD@twofiftysix_minus_TMR0_final 004C  
                                       ?_LENGTHEN_PERIOD 0070  
