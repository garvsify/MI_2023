

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Mon Feb  5 21:46:48 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og9 
     1                           	processor	16F1824
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    15                           	psect	stringtext11,global,class=STRCODE,delta=2,noexec
    16                           	psect	stringtext12,global,class=STRCODE,delta=2,noexec
    17                           	psect	stringtext13,global,class=STRCODE,delta=2,noexec
    18                           	psect	stringtext14,global,class=STRCODE,delta=2,noexec
    19                           	psect	stringtext15,global,class=STRCODE,delta=2,noexec
    20                           	psect	stringtext16,global,class=STRCODE,delta=2,noexec
    21                           	psect	cinit,global,class=CODE,merge=1,delta=2
    22                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    23                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    24                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    25                           	psect	clrtext,global,class=CODE,delta=2
    26                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    27                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    28                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    29                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    30                           	psect	text1,local,class=CODE,merge=1,delta=2
    31                           	psect	text2,local,class=CODE,merge=1,delta=2
    32                           	psect	text3,local,class=CODE,merge=1,delta=2
    33                           	psect	text4,local,class=CODE,merge=1,delta=2
    34                           	psect	text5,local,class=CODE,merge=1,delta=2
    35                           	psect	text6,local,class=CODE,merge=1,delta=2
    36                           	psect	text7,local,class=CODE,merge=1,delta=2
    37                           	psect	text8,local,class=CODE,merge=1,delta=2
    38                           	psect	text9,local,class=CODE,merge=1,delta=2
    39                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    40                           	psect	text11,local,class=CODE,merge=1,delta=2
    41                           	psect	text12,local,class=CODE,merge=1,delta=2
    42                           	psect	text13,local,class=CODE,merge=1,delta=2
    43                           	psect	text14,local,class=CODE,merge=1,delta=2
    44                           	psect	text15,local,class=CODE,merge=1,delta=2
    45                           	psect	text16,local,class=CODE,merge=1,delta=2
    46                           	psect	text17,local,class=CODE,merge=1,delta=2
    47                           	psect	text18,local,class=CODE,merge=1,delta=2
    48                           	psect	text19,local,class=CODE,merge=1,delta=2
    49                           	psect	intentry,global,class=CODE,delta=2
    50                           	psect	text21,local,class=CODE,merge=1,delta=2
    51                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    52                           	dabs	1,0x7E,2
    53     0000                     
    54                           ; Generated 06/07/2023 GMT
    55                           ; 
    56                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    57                           ; All rights reserved.
    58                           ; 
    59                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    60                           ; 
    61                           ; Redistribution and use in source and binary forms, with or without modification, are
    62                           ; permitted provided that the following conditions are met:
    63                           ; 
    64                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    65                           ;        conditions and the following disclaimer.
    66                           ; 
    67                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    68                           ;        of conditions and the following disclaimer in the documentation and/or other
    69                           ;        materials provided with the distribution. Publication is not required when
    70                           ;        this file is used in an embedded application.
    71                           ; 
    72                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    73                           ;        software without specific prior written permission.
    74                           ; 
    75                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    76                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    77                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    78                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    79                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    80                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    81                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    82                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    83                           ; 
    84                           ; 
    85                           ; Code-generator required, PIC16F1824 Definitions
    86                           ; 
    87                           ; SFR Addresses
    88     0000                     	;# 
    89     0001                     	;# 
    90     0002                     	;# 
    91     0003                     	;# 
    92     0004                     	;# 
    93     0005                     	;# 
    94     0006                     	;# 
    95     0007                     	;# 
    96     0008                     	;# 
    97     0009                     	;# 
    98     000A                     	;# 
    99     000B                     	;# 
   100     000C                     	;# 
   101     000E                     	;# 
   102     0011                     	;# 
   103     0012                     	;# 
   104     0013                     	;# 
   105     0015                     	;# 
   106     0016                     	;# 
   107     0016                     	;# 
   108     0017                     	;# 
   109     0018                     	;# 
   110     0019                     	;# 
   111     001A                     	;# 
   112     001B                     	;# 
   113     001C                     	;# 
   114     001E                     	;# 
   115     001F                     	;# 
   116     008C                     	;# 
   117     008E                     	;# 
   118     0091                     	;# 
   119     0092                     	;# 
   120     0093                     	;# 
   121     0095                     	;# 
   122     0096                     	;# 
   123     0097                     	;# 
   124     0098                     	;# 
   125     0099                     	;# 
   126     009A                     	;# 
   127     009B                     	;# 
   128     009B                     	;# 
   129     009C                     	;# 
   130     009D                     	;# 
   131     009E                     	;# 
   132     010C                     	;# 
   133     010E                     	;# 
   134     0111                     	;# 
   135     0112                     	;# 
   136     0113                     	;# 
   137     0114                     	;# 
   138     0115                     	;# 
   139     0116                     	;# 
   140     0117                     	;# 
   141     0118                     	;# 
   142     0119                     	;# 
   143     011A                     	;# 
   144     011B                     	;# 
   145     011D                     	;# 
   146     011E                     	;# 
   147     018C                     	;# 
   148     018E                     	;# 
   149     0191                     	;# 
   150     0191                     	;# 
   151     0192                     	;# 
   152     0193                     	;# 
   153     0193                     	;# 
   154     0193                     	;# 
   155     0194                     	;# 
   156     0195                     	;# 
   157     0196                     	;# 
   158     0199                     	;# 
   159     019A                     	;# 
   160     019B                     	;# 
   161     019B                     	;# 
   162     019B                     	;# 
   163     019B                     	;# 
   164     019C                     	;# 
   165     019C                     	;# 
   166     019D                     	;# 
   167     019E                     	;# 
   168     019F                     	;# 
   169     020C                     	;# 
   170     020E                     	;# 
   171     0211                     	;# 
   172     0211                     	;# 
   173     0212                     	;# 
   174     0212                     	;# 
   175     0213                     	;# 
   176     0213                     	;# 
   177     0214                     	;# 
   178     0214                     	;# 
   179     0215                     	;# 
   180     0215                     	;# 
   181     0215                     	;# 
   182     0215                     	;# 
   183     0216                     	;# 
   184     0216                     	;# 
   185     0217                     	;# 
   186     0217                     	;# 
   187     0291                     	;# 
   188     0291                     	;# 
   189     0292                     	;# 
   190     0293                     	;# 
   191     0294                     	;# 
   192     0295                     	;# 
   193     0295                     	;# 
   194     0296                     	;# 
   195     0298                     	;# 
   196     0298                     	;# 
   197     0299                     	;# 
   198     029A                     	;# 
   199     029B                     	;# 
   200     029C                     	;# 
   201     029D                     	;# 
   202     029E                     	;# 
   203     029E                     	;# 
   204     0311                     	;# 
   205     0311                     	;# 
   206     0312                     	;# 
   207     0313                     	;# 
   208     0318                     	;# 
   209     0318                     	;# 
   210     0319                     	;# 
   211     031A                     	;# 
   212     038C                     	;# 
   213     038E                     	;# 
   214     0391                     	;# 
   215     0392                     	;# 
   216     0393                     	;# 
   217     039A                     	;# 
   218     039C                     	;# 
   219     039D                     	;# 
   220     039E                     	;# 
   221     039F                     	;# 
   222     0415                     	;# 
   223     0416                     	;# 
   224     0417                     	;# 
   225     041C                     	;# 
   226     041D                     	;# 
   227     041E                     	;# 
   228     0FE4                     	;# 
   229     0FE5                     	;# 
   230     0FE6                     	;# 
   231     0FE7                     	;# 
   232     0FE8                     	;# 
   233     0FE9                     	;# 
   234     0FEA                     	;# 
   235     0FEB                     	;# 
   236     0FED                     	;# 
   237     0FEE                     	;# 
   238     0FEF                     	;# 
   239     0020                     	;# 
   240     0021                     	;# 
   241     0022                     	;# 
   242     0023                     	;# 
   243     0024                     	;# 
   244     0025                     	;# 
   245     0000                     	;# 
   246     0001                     	;# 
   247     0002                     	;# 
   248     0003                     	;# 
   249     0004                     	;# 
   250     0005                     	;# 
   251     0006                     	;# 
   252     0007                     	;# 
   253     0008                     	;# 
   254     0009                     	;# 
   255     000A                     	;# 
   256     000B                     	;# 
   257     000C                     	;# 
   258     000E                     	;# 
   259     0011                     	;# 
   260     0012                     	;# 
   261     0013                     	;# 
   262     0015                     	;# 
   263     0016                     	;# 
   264     0016                     	;# 
   265     0017                     	;# 
   266     0018                     	;# 
   267     0019                     	;# 
   268     001A                     	;# 
   269     001B                     	;# 
   270     001C                     	;# 
   271     001E                     	;# 
   272     001F                     	;# 
   273     008C                     	;# 
   274     008E                     	;# 
   275     0091                     	;# 
   276     0092                     	;# 
   277     0093                     	;# 
   278     0095                     	;# 
   279     0096                     	;# 
   280     0097                     	;# 
   281     0098                     	;# 
   282     0099                     	;# 
   283     009A                     	;# 
   284     009B                     	;# 
   285     009B                     	;# 
   286     009C                     	;# 
   287     009D                     	;# 
   288     009E                     	;# 
   289     010C                     	;# 
   290     010E                     	;# 
   291     0111                     	;# 
   292     0112                     	;# 
   293     0113                     	;# 
   294     0114                     	;# 
   295     0115                     	;# 
   296     0116                     	;# 
   297     0117                     	;# 
   298     0118                     	;# 
   299     0119                     	;# 
   300     011A                     	;# 
   301     011B                     	;# 
   302     011D                     	;# 
   303     011E                     	;# 
   304     018C                     	;# 
   305     018E                     	;# 
   306     0191                     	;# 
   307     0191                     	;# 
   308     0192                     	;# 
   309     0193                     	;# 
   310     0193                     	;# 
   311     0193                     	;# 
   312     0194                     	;# 
   313     0195                     	;# 
   314     0196                     	;# 
   315     0199                     	;# 
   316     019A                     	;# 
   317     019B                     	;# 
   318     019B                     	;# 
   319     019B                     	;# 
   320     019B                     	;# 
   321     019C                     	;# 
   322     019C                     	;# 
   323     019D                     	;# 
   324     019E                     	;# 
   325     019F                     	;# 
   326     020C                     	;# 
   327     020E                     	;# 
   328     0211                     	;# 
   329     0211                     	;# 
   330     0212                     	;# 
   331     0212                     	;# 
   332     0213                     	;# 
   333     0213                     	;# 
   334     0214                     	;# 
   335     0214                     	;# 
   336     0215                     	;# 
   337     0215                     	;# 
   338     0215                     	;# 
   339     0215                     	;# 
   340     0216                     	;# 
   341     0216                     	;# 
   342     0217                     	;# 
   343     0217                     	;# 
   344     0291                     	;# 
   345     0291                     	;# 
   346     0292                     	;# 
   347     0293                     	;# 
   348     0294                     	;# 
   349     0295                     	;# 
   350     0295                     	;# 
   351     0296                     	;# 
   352     0298                     	;# 
   353     0298                     	;# 
   354     0299                     	;# 
   355     029A                     	;# 
   356     029B                     	;# 
   357     029C                     	;# 
   358     029D                     	;# 
   359     029E                     	;# 
   360     029E                     	;# 
   361     0311                     	;# 
   362     0311                     	;# 
   363     0312                     	;# 
   364     0313                     	;# 
   365     0318                     	;# 
   366     0318                     	;# 
   367     0319                     	;# 
   368     031A                     	;# 
   369     038C                     	;# 
   370     038E                     	;# 
   371     0391                     	;# 
   372     0392                     	;# 
   373     0393                     	;# 
   374     039A                     	;# 
   375     039C                     	;# 
   376     039D                     	;# 
   377     039E                     	;# 
   378     039F                     	;# 
   379     0415                     	;# 
   380     0416                     	;# 
   381     0417                     	;# 
   382     041C                     	;# 
   383     041D                     	;# 
   384     041E                     	;# 
   385     0FE4                     	;# 
   386     0FE5                     	;# 
   387     0FE6                     	;# 
   388     0FE7                     	;# 
   389     0FE8                     	;# 
   390     0FE9                     	;# 
   391     0FEA                     	;# 
   392     0FEB                     	;# 
   393     0FED                     	;# 
   394     0FEE                     	;# 
   395     0FEF                     	;# 
   396     0000                     	;# 
   397     0001                     	;# 
   398     0002                     	;# 
   399     0003                     	;# 
   400     0004                     	;# 
   401     0005                     	;# 
   402     0006                     	;# 
   403     0007                     	;# 
   404     0008                     	;# 
   405     0009                     	;# 
   406     000A                     	;# 
   407     000B                     	;# 
   408     000C                     	;# 
   409     000E                     	;# 
   410     0011                     	;# 
   411     0012                     	;# 
   412     0013                     	;# 
   413     0015                     	;# 
   414     0016                     	;# 
   415     0016                     	;# 
   416     0017                     	;# 
   417     0018                     	;# 
   418     0019                     	;# 
   419     001A                     	;# 
   420     001B                     	;# 
   421     001C                     	;# 
   422     001E                     	;# 
   423     001F                     	;# 
   424     008C                     	;# 
   425     008E                     	;# 
   426     0091                     	;# 
   427     0092                     	;# 
   428     0093                     	;# 
   429     0095                     	;# 
   430     0096                     	;# 
   431     0097                     	;# 
   432     0098                     	;# 
   433     0099                     	;# 
   434     009A                     	;# 
   435     009B                     	;# 
   436     009B                     	;# 
   437     009C                     	;# 
   438     009D                     	;# 
   439     009E                     	;# 
   440     010C                     	;# 
   441     010E                     	;# 
   442     0111                     	;# 
   443     0112                     	;# 
   444     0113                     	;# 
   445     0114                     	;# 
   446     0115                     	;# 
   447     0116                     	;# 
   448     0117                     	;# 
   449     0118                     	;# 
   450     0119                     	;# 
   451     011A                     	;# 
   452     011B                     	;# 
   453     011D                     	;# 
   454     011E                     	;# 
   455     018C                     	;# 
   456     018E                     	;# 
   457     0191                     	;# 
   458     0191                     	;# 
   459     0192                     	;# 
   460     0193                     	;# 
   461     0193                     	;# 
   462     0193                     	;# 
   463     0194                     	;# 
   464     0195                     	;# 
   465     0196                     	;# 
   466     0199                     	;# 
   467     019A                     	;# 
   468     019B                     	;# 
   469     019B                     	;# 
   470     019B                     	;# 
   471     019B                     	;# 
   472     019C                     	;# 
   473     019C                     	;# 
   474     019D                     	;# 
   475     019E                     	;# 
   476     019F                     	;# 
   477     020C                     	;# 
   478     020E                     	;# 
   479     0211                     	;# 
   480     0211                     	;# 
   481     0212                     	;# 
   482     0212                     	;# 
   483     0213                     	;# 
   484     0213                     	;# 
   485     0214                     	;# 
   486     0214                     	;# 
   487     0215                     	;# 
   488     0215                     	;# 
   489     0215                     	;# 
   490     0215                     	;# 
   491     0216                     	;# 
   492     0216                     	;# 
   493     0217                     	;# 
   494     0217                     	;# 
   495     0291                     	;# 
   496     0291                     	;# 
   497     0292                     	;# 
   498     0293                     	;# 
   499     0294                     	;# 
   500     0295                     	;# 
   501     0295                     	;# 
   502     0296                     	;# 
   503     0298                     	;# 
   504     0298                     	;# 
   505     0299                     	;# 
   506     029A                     	;# 
   507     029B                     	;# 
   508     029C                     	;# 
   509     029D                     	;# 
   510     029E                     	;# 
   511     029E                     	;# 
   512     0311                     	;# 
   513     0311                     	;# 
   514     0312                     	;# 
   515     0313                     	;# 
   516     0318                     	;# 
   517     0318                     	;# 
   518     0319                     	;# 
   519     031A                     	;# 
   520     038C                     	;# 
   521     038E                     	;# 
   522     0391                     	;# 
   523     0392                     	;# 
   524     0393                     	;# 
   525     039A                     	;# 
   526     039C                     	;# 
   527     039D                     	;# 
   528     039E                     	;# 
   529     039F                     	;# 
   530     0415                     	;# 
   531     0416                     	;# 
   532     0417                     	;# 
   533     041C                     	;# 
   534     041D                     	;# 
   535     041E                     	;# 
   536     0FE4                     	;# 
   537     0FE5                     	;# 
   538     0FE6                     	;# 
   539     0FE7                     	;# 
   540     0FE8                     	;# 
   541     0FE9                     	;# 
   542     0FEA                     	;# 
   543     0FEB                     	;# 
   544     0FED                     	;# 
   545     0FEE                     	;# 
   546     0FEF                     	;# 
   547     0000                     	;# 
   548     0001                     	;# 
   549     0002                     	;# 
   550     0003                     	;# 
   551     0004                     	;# 
   552     0005                     	;# 
   553     0006                     	;# 
   554     0007                     	;# 
   555     0008                     	;# 
   556     0009                     	;# 
   557     000A                     	;# 
   558     000B                     	;# 
   559     000C                     	;# 
   560     000E                     	;# 
   561     0011                     	;# 
   562     0012                     	;# 
   563     0013                     	;# 
   564     0015                     	;# 
   565     0016                     	;# 
   566     0016                     	;# 
   567     0017                     	;# 
   568     0018                     	;# 
   569     0019                     	;# 
   570     001A                     	;# 
   571     001B                     	;# 
   572     001C                     	;# 
   573     001E                     	;# 
   574     001F                     	;# 
   575     008C                     	;# 
   576     008E                     	;# 
   577     0091                     	;# 
   578     0092                     	;# 
   579     0093                     	;# 
   580     0095                     	;# 
   581     0096                     	;# 
   582     0097                     	;# 
   583     0098                     	;# 
   584     0099                     	;# 
   585     009A                     	;# 
   586     009B                     	;# 
   587     009B                     	;# 
   588     009C                     	;# 
   589     009D                     	;# 
   590     009E                     	;# 
   591     010C                     	;# 
   592     010E                     	;# 
   593     0111                     	;# 
   594     0112                     	;# 
   595     0113                     	;# 
   596     0114                     	;# 
   597     0115                     	;# 
   598     0116                     	;# 
   599     0117                     	;# 
   600     0118                     	;# 
   601     0119                     	;# 
   602     011A                     	;# 
   603     011B                     	;# 
   604     011D                     	;# 
   605     011E                     	;# 
   606     018C                     	;# 
   607     018E                     	;# 
   608     0191                     	;# 
   609     0191                     	;# 
   610     0192                     	;# 
   611     0193                     	;# 
   612     0193                     	;# 
   613     0193                     	;# 
   614     0194                     	;# 
   615     0195                     	;# 
   616     0196                     	;# 
   617     0199                     	;# 
   618     019A                     	;# 
   619     019B                     	;# 
   620     019B                     	;# 
   621     019B                     	;# 
   622     019B                     	;# 
   623     019C                     	;# 
   624     019C                     	;# 
   625     019D                     	;# 
   626     019E                     	;# 
   627     019F                     	;# 
   628     020C                     	;# 
   629     020E                     	;# 
   630     0211                     	;# 
   631     0211                     	;# 
   632     0212                     	;# 
   633     0212                     	;# 
   634     0213                     	;# 
   635     0213                     	;# 
   636     0214                     	;# 
   637     0214                     	;# 
   638     0215                     	;# 
   639     0215                     	;# 
   640     0215                     	;# 
   641     0215                     	;# 
   642     0216                     	;# 
   643     0216                     	;# 
   644     0217                     	;# 
   645     0217                     	;# 
   646     0291                     	;# 
   647     0291                     	;# 
   648     0292                     	;# 
   649     0293                     	;# 
   650     0294                     	;# 
   651     0295                     	;# 
   652     0295                     	;# 
   653     0296                     	;# 
   654     0298                     	;# 
   655     0298                     	;# 
   656     0299                     	;# 
   657     029A                     	;# 
   658     029B                     	;# 
   659     029C                     	;# 
   660     029D                     	;# 
   661     029E                     	;# 
   662     029E                     	;# 
   663     0311                     	;# 
   664     0311                     	;# 
   665     0312                     	;# 
   666     0313                     	;# 
   667     0318                     	;# 
   668     0318                     	;# 
   669     0319                     	;# 
   670     031A                     	;# 
   671     038C                     	;# 
   672     038E                     	;# 
   673     0391                     	;# 
   674     0392                     	;# 
   675     0393                     	;# 
   676     039A                     	;# 
   677     039C                     	;# 
   678     039D                     	;# 
   679     039E                     	;# 
   680     039F                     	;# 
   681     0415                     	;# 
   682     0416                     	;# 
   683     0417                     	;# 
   684     041C                     	;# 
   685     041D                     	;# 
   686     041E                     	;# 
   687     0FE4                     	;# 
   688     0FE5                     	;# 
   689     0FE6                     	;# 
   690     0FE7                     	;# 
   691     0FE8                     	;# 
   692     0FE9                     	;# 
   693     0FEA                     	;# 
   694     0FEB                     	;# 
   695     0FED                     	;# 
   696     0FEE                     	;# 
   697     0FEF                     	;# 
   698                           
   699                           	psect	idataBANK0
   700     073F                     __pidataBANK0:
   701                           
   702                           ;initializer for _top_two_bytes_ptr
   703     073F  3421               	retlw	33
   704     0740  3400               	retlw	0
   705                           
   706                           	psect	stringtext1
   707     00F1                     __pstringtext1:
   708     00F1                     _tri_table_one_quadrant:
   709     00F1  3400               	retlw	0
   710     00F2  3402               	retlw	2
   711     00F3  3404               	retlw	4
   712     00F4  3402               	retlw	2
   713     00F5  3408               	retlw	8
   714     00F6  3402               	retlw	2
   715     00F7  340C               	retlw	12
   716     00F8  3402               	retlw	2
   717     00F9  3410               	retlw	16
   718     00FA  3402               	retlw	2
   719     00FB  3414               	retlw	20
   720     00FC  3402               	retlw	2
   721     00FD  3418               	retlw	24
   722     00FE  3402               	retlw	2
   723     00FF  341C               	retlw	28
   724     0100  3402               	retlw	2
   725     0101  3420               	retlw	32
   726     0102  3402               	retlw	2
   727     0103  3424               	retlw	36
   728     0104  3402               	retlw	2
   729     0105  3428               	retlw	40
   730     0106  3402               	retlw	2
   731     0107  342C               	retlw	44
   732     0108  3402               	retlw	2
   733     0109  3430               	retlw	48
   734     010A  3402               	retlw	2
   735     010B  3434               	retlw	52
   736     010C  3402               	retlw	2
   737     010D  3438               	retlw	56
   738     010E  3402               	retlw	2
   739     010F  343C               	retlw	60
   740     0110  3402               	retlw	2
   741     0111  3440               	retlw	64
   742     0112  3402               	retlw	2
   743     0113  3444               	retlw	68
   744     0114  3402               	retlw	2
   745     0115  3448               	retlw	72
   746     0116  3402               	retlw	2
   747     0117  344C               	retlw	76
   748     0118  3402               	retlw	2
   749     0119  3450               	retlw	80
   750     011A  3402               	retlw	2
   751     011B  3454               	retlw	84
   752     011C  3402               	retlw	2
   753     011D  3458               	retlw	88
   754     011E  3402               	retlw	2
   755     011F  345C               	retlw	92
   756     0120  3402               	retlw	2
   757     0121  3460               	retlw	96
   758     0122  3402               	retlw	2
   759     0123  3464               	retlw	100
   760     0124  3402               	retlw	2
   761     0125  3468               	retlw	104
   762     0126  3402               	retlw	2
   763     0127  346C               	retlw	108
   764     0128  3402               	retlw	2
   765     0129  3470               	retlw	112
   766     012A  3402               	retlw	2
   767     012B  3474               	retlw	116
   768     012C  3402               	retlw	2
   769     012D  3478               	retlw	120
   770     012E  3402               	retlw	2
   771     012F  347C               	retlw	124
   772     0130  3402               	retlw	2
   773     0131  3480               	retlw	128
   774     0132  3402               	retlw	2
   775     0133  3484               	retlw	132
   776     0134  3402               	retlw	2
   777     0135  3488               	retlw	136
   778     0136  3402               	retlw	2
   779     0137  348C               	retlw	140
   780     0138  3402               	retlw	2
   781     0139  3490               	retlw	144
   782     013A  3402               	retlw	2
   783     013B  3494               	retlw	148
   784     013C  3402               	retlw	2
   785     013D  3498               	retlw	152
   786     013E  3402               	retlw	2
   787     013F  349C               	retlw	156
   788     0140  3402               	retlw	2
   789     0141  34A0               	retlw	160
   790     0142  3402               	retlw	2
   791     0143  34A4               	retlw	164
   792     0144  3402               	retlw	2
   793     0145  34A8               	retlw	168
   794     0146  3402               	retlw	2
   795     0147  34AC               	retlw	172
   796     0148  3402               	retlw	2
   797     0149  34B0               	retlw	176
   798     014A  3402               	retlw	2
   799     014B  34B4               	retlw	180
   800     014C  3402               	retlw	2
   801     014D  34B8               	retlw	184
   802     014E  3402               	retlw	2
   803     014F  34BC               	retlw	188
   804     0150  3402               	retlw	2
   805     0151  34C0               	retlw	192
   806     0152  3402               	retlw	2
   807     0153  34C4               	retlw	196
   808     0154  3402               	retlw	2
   809     0155  34C8               	retlw	200
   810     0156  3402               	retlw	2
   811     0157  34CC               	retlw	204
   812     0158  3402               	retlw	2
   813     0159  34D0               	retlw	208
   814     015A  3402               	retlw	2
   815     015B  34D4               	retlw	212
   816     015C  3402               	retlw	2
   817     015D  34D8               	retlw	216
   818     015E  3402               	retlw	2
   819     015F  34DC               	retlw	220
   820     0160  3402               	retlw	2
   821     0161  34E0               	retlw	224
   822     0162  3402               	retlw	2
   823     0163  34E4               	retlw	228
   824     0164  3402               	retlw	2
   825     0165  34E8               	retlw	232
   826     0166  3402               	retlw	2
   827     0167  34EC               	retlw	236
   828     0168  3402               	retlw	2
   829     0169  34F0               	retlw	240
   830     016A  3402               	retlw	2
   831     016B  34F4               	retlw	244
   832     016C  3402               	retlw	2
   833     016D  34F8               	retlw	248
   834     016E  3402               	retlw	2
   835     016F  34FB               	retlw	251
   836     0170  3402               	retlw	2
   837     0171  34FF               	retlw	255
   838     0172  3402               	retlw	2
   839     0173  3403               	retlw	3
   840     0174  3403               	retlw	3
   841     0175  3407               	retlw	7
   842     0176  3403               	retlw	3
   843     0177  340B               	retlw	11
   844     0178  3403               	retlw	3
   845     0179  340F               	retlw	15
   846     017A  3403               	retlw	3
   847     017B  3413               	retlw	19
   848     017C  3403               	retlw	3
   849     017D  3417               	retlw	23
   850     017E  3403               	retlw	3
   851     017F  341B               	retlw	27
   852     0180  3403               	retlw	3
   853     0181  341F               	retlw	31
   854     0182  3403               	retlw	3
   855     0183  3423               	retlw	35
   856     0184  3403               	retlw	3
   857     0185  3427               	retlw	39
   858     0186  3403               	retlw	3
   859     0187  342B               	retlw	43
   860     0188  3403               	retlw	3
   861     0189  342F               	retlw	47
   862     018A  3403               	retlw	3
   863     018B  3433               	retlw	51
   864     018C  3403               	retlw	3
   865     018D  3437               	retlw	55
   866     018E  3403               	retlw	3
   867     018F  343B               	retlw	59
   868     0190  3403               	retlw	3
   869     0191  343F               	retlw	63
   870     0192  3403               	retlw	3
   871     0193  3443               	retlw	67
   872     0194  3403               	retlw	3
   873     0195  3447               	retlw	71
   874     0196  3403               	retlw	3
   875     0197  344B               	retlw	75
   876     0198  3403               	retlw	3
   877     0199  344F               	retlw	79
   878     019A  3403               	retlw	3
   879     019B  3453               	retlw	83
   880     019C  3403               	retlw	3
   881     019D  3457               	retlw	87
   882     019E  3403               	retlw	3
   883     019F  345B               	retlw	91
   884     01A0  3403               	retlw	3
   885     01A1  345F               	retlw	95
   886     01A2  3403               	retlw	3
   887     01A3  3463               	retlw	99
   888     01A4  3403               	retlw	3
   889     01A5  3467               	retlw	103
   890     01A6  3403               	retlw	3
   891     01A7  346B               	retlw	107
   892     01A8  3403               	retlw	3
   893     01A9  346F               	retlw	111
   894     01AA  3403               	retlw	3
   895     01AB  3473               	retlw	115
   896     01AC  3403               	retlw	3
   897     01AD  3477               	retlw	119
   898     01AE  3403               	retlw	3
   899     01AF  347B               	retlw	123
   900     01B0  3403               	retlw	3
   901     01B1  347F               	retlw	127
   902     01B2  3403               	retlw	3
   903     01B3  3483               	retlw	131
   904     01B4  3403               	retlw	3
   905     01B5  3487               	retlw	135
   906     01B6  3403               	retlw	3
   907     01B7  348B               	retlw	139
   908     01B8  3403               	retlw	3
   909     01B9  348F               	retlw	143
   910     01BA  3403               	retlw	3
   911     01BB  3493               	retlw	147
   912     01BC  3403               	retlw	3
   913     01BD  3497               	retlw	151
   914     01BE  3403               	retlw	3
   915     01BF  349B               	retlw	155
   916     01C0  3403               	retlw	3
   917     01C1  349F               	retlw	159
   918     01C2  3403               	retlw	3
   919     01C3  34A3               	retlw	163
   920     01C4  3403               	retlw	3
   921     01C5  34A7               	retlw	167
   922     01C6  3403               	retlw	3
   923     01C7  34AB               	retlw	171
   924     01C8  3403               	retlw	3
   925     01C9  34AF               	retlw	175
   926     01CA  3403               	retlw	3
   927     01CB  34B3               	retlw	179
   928     01CC  3403               	retlw	3
   929     01CD  34B7               	retlw	183
   930     01CE  3403               	retlw	3
   931     01CF  34BB               	retlw	187
   932     01D0  3403               	retlw	3
   933     01D1  34BF               	retlw	191
   934     01D2  3403               	retlw	3
   935     01D3  34C3               	retlw	195
   936     01D4  3403               	retlw	3
   937     01D5  34C7               	retlw	199
   938     01D6  3403               	retlw	3
   939     01D7  34CB               	retlw	203
   940     01D8  3403               	retlw	3
   941     01D9  34CF               	retlw	207
   942     01DA  3403               	retlw	3
   943     01DB  34D3               	retlw	211
   944     01DC  3403               	retlw	3
   945     01DD  34D7               	retlw	215
   946     01DE  3403               	retlw	3
   947     01DF  34DB               	retlw	219
   948     01E0  3403               	retlw	3
   949     01E1  34DF               	retlw	223
   950     01E2  3403               	retlw	3
   951     01E3  34E3               	retlw	227
   952     01E4  3403               	retlw	3
   953     01E5  34E7               	retlw	231
   954     01E6  3403               	retlw	3
   955     01E7  34EB               	retlw	235
   956     01E8  3403               	retlw	3
   957     01E9  34EF               	retlw	239
   958     01EA  3403               	retlw	3
   959     01EB  34F3               	retlw	243
   960     01EC  3403               	retlw	3
   961     01ED  34F7               	retlw	247
   962     01EE  3403               	retlw	3
   963     01EF  34FB               	retlw	251
   964     01F0  3403               	retlw	3
   965     01F1  34FF               	retlw	255
   966     01F2  3403               	retlw	3
   967     01F3                     __end_of_tri_table_one_quadrant:
   968                           
   969                           	psect	stringtext2
   970     01F3                     __pstringtext2:
   971     01F3                     _sine_table_one_quadrant:
   972     01F3  3400               	retlw	0
   973     01F4  3402               	retlw	2
   974     01F5  3406               	retlw	6
   975     01F6  3402               	retlw	2
   976     01F7  340C               	retlw	12
   977     01F8  3402               	retlw	2
   978     01F9  3412               	retlw	18
   979     01FA  3402               	retlw	2
   980     01FB  3419               	retlw	25
   981     01FC  3402               	retlw	2
   982     01FD  341F               	retlw	31
   983     01FE  3402               	retlw	2
   984     01FF  3425               	retlw	37
   985     0200  3402               	retlw	2
   986     0201  342B               	retlw	43
   987     0202  3402               	retlw	2
   988     0203  3432               	retlw	50
   989     0204  3402               	retlw	2
   990     0205  3438               	retlw	56
   991     0206  3402               	retlw	2
   992     0207  343E               	retlw	62
   993     0208  3402               	retlw	2
   994     0209  3444               	retlw	68
   995     020A  3402               	retlw	2
   996     020B  344B               	retlw	75
   997     020C  3402               	retlw	2
   998     020D  3451               	retlw	81
   999     020E  3402               	retlw	2
  1000     020F  3457               	retlw	87
  1001     0210  3402               	retlw	2
  1002     0211  345D               	retlw	93
  1003     0212  3402               	retlw	2
  1004     0213  3463               	retlw	99
  1005     0214  3402               	retlw	2
  1006     0215  3469               	retlw	105
  1007     0216  3402               	retlw	2
  1008     0217  3470               	retlw	112
  1009     0218  3402               	retlw	2
  1010     0219  3476               	retlw	118
  1011     021A  3402               	retlw	2
  1012     021B  347C               	retlw	124
  1013     021C  3402               	retlw	2
  1014     021D  3482               	retlw	130
  1015     021E  3402               	retlw	2
  1016     021F  3488               	retlw	136
  1017     0220  3402               	retlw	2
  1018     0221  348E               	retlw	142
  1019     0222  3402               	retlw	2
  1020     0223  3494               	retlw	148
  1021     0224  3402               	retlw	2
  1022     0225  349A               	retlw	154
  1023     0226  3402               	retlw	2
  1024     0227  34A0               	retlw	160
  1025     0228  3402               	retlw	2
  1026     0229  34A6               	retlw	166
  1027     022A  3402               	retlw	2
  1028     022B  34AC               	retlw	172
  1029     022C  3402               	retlw	2
  1030     022D  34B2               	retlw	178
  1031     022E  3402               	retlw	2
  1032     022F  34B8               	retlw	184
  1033     0230  3402               	retlw	2
  1034     0231  34BD               	retlw	189
  1035     0232  3402               	retlw	2
  1036     0233  34C3               	retlw	195
  1037     0234  3402               	retlw	2
  1038     0235  34C9               	retlw	201
  1039     0236  3402               	retlw	2
  1040     0237  34CF               	retlw	207
  1041     0238  3402               	retlw	2
  1042     0239  34D5               	retlw	213
  1043     023A  3402               	retlw	2
  1044     023B  34DA               	retlw	218
  1045     023C  3402               	retlw	2
  1046     023D  34E0               	retlw	224
  1047     023E  3402               	retlw	2
  1048     023F  34E5               	retlw	229
  1049     0240  3402               	retlw	2
  1050     0241  34EB               	retlw	235
  1051     0242  3402               	retlw	2
  1052     0243  34F1               	retlw	241
  1053     0244  3402               	retlw	2
  1054     0245  34F6               	retlw	246
  1055     0246  3402               	retlw	2
  1056     0247  34FC               	retlw	252
  1057     0248  3402               	retlw	2
  1058     0249  3401               	retlw	1
  1059     024A  3403               	retlw	3
  1060     024B  3406               	retlw	6
  1061     024C  3403               	retlw	3
  1062     024D  340C               	retlw	12
  1063     024E  3403               	retlw	3
  1064     024F  3411               	retlw	17
  1065     0250  3403               	retlw	3
  1066     0251  3416               	retlw	22
  1067     0252  3403               	retlw	3
  1068     0253  341C               	retlw	28
  1069     0254  3403               	retlw	3
  1070     0255  3421               	retlw	33
  1071     0256  3403               	retlw	3
  1072     0257  3426               	retlw	38
  1073     0258  3403               	retlw	3
  1074     0259  342B               	retlw	43
  1075     025A  3403               	retlw	3
  1076     025B  3430               	retlw	48
  1077     025C  3403               	retlw	3
  1078     025D  3435               	retlw	53
  1079     025E  3403               	retlw	3
  1080     025F  343A               	retlw	58
  1081     0260  3403               	retlw	3
  1082     0261  343F               	retlw	63
  1083     0262  3403               	retlw	3
  1084     0263  3444               	retlw	68
  1085     0264  3403               	retlw	3
  1086     0265  3449               	retlw	73
  1087     0266  3403               	retlw	3
  1088     0267  344E               	retlw	78
  1089     0268  3403               	retlw	3
  1090     0269  3452               	retlw	82
  1091     026A  3403               	retlw	3
  1092     026B  3457               	retlw	87
  1093     026C  3403               	retlw	3
  1094     026D  345C               	retlw	92
  1095     026E  3403               	retlw	3
  1096     026F  3460               	retlw	96
  1097     0270  3403               	retlw	3
  1098     0271  3465               	retlw	101
  1099     0272  3403               	retlw	3
  1100     0273  3469               	retlw	105
  1101     0274  3403               	retlw	3
  1102     0275  346E               	retlw	110
  1103     0276  3403               	retlw	3
  1104     0277  3472               	retlw	114
  1105     0278  3403               	retlw	3
  1106     0279  3476               	retlw	118
  1107     027A  3403               	retlw	3
  1108     027B  347A               	retlw	122
  1109     027C  3403               	retlw	3
  1110     027D  347F               	retlw	127
  1111     027E  3403               	retlw	3
  1112     027F  3483               	retlw	131
  1113     0280  3403               	retlw	3
  1114     0281  3487               	retlw	135
  1115     0282  3403               	retlw	3
  1116     0283  348B               	retlw	139
  1117     0284  3403               	retlw	3
  1118     0285  348F               	retlw	143
  1119     0286  3403               	retlw	3
  1120     0287  3493               	retlw	147
  1121     0288  3403               	retlw	3
  1122     0289  3497               	retlw	151
  1123     028A  3403               	retlw	3
  1124     028B  349A               	retlw	154
  1125     028C  3403               	retlw	3
  1126     028D  349E               	retlw	158
  1127     028E  3403               	retlw	3
  1128     028F  34A2               	retlw	162
  1129     0290  3403               	retlw	3
  1130     0291  34A5               	retlw	165
  1131     0292  3403               	retlw	3
  1132     0293  34A9               	retlw	169
  1133     0294  3403               	retlw	3
  1134     0295  34AC               	retlw	172
  1135     0296  3403               	retlw	3
  1136     0297  34B0               	retlw	176
  1137     0298  3403               	retlw	3
  1138     0299  34B3               	retlw	179
  1139     029A  3403               	retlw	3
  1140     029B  34B6               	retlw	182
  1141     029C  3403               	retlw	3
  1142     029D  34B9               	retlw	185
  1143     029E  3403               	retlw	3
  1144     029F  34BD               	retlw	189
  1145     02A0  3403               	retlw	3
  1146     02A1  34C0               	retlw	192
  1147     02A2  3403               	retlw	3
  1148     02A3  34C3               	retlw	195
  1149     02A4  3403               	retlw	3
  1150     02A5  34C6               	retlw	198
  1151     02A6  3403               	retlw	3
  1152     02A7  34C8               	retlw	200
  1153     02A8  3403               	retlw	3
  1154     02A9  34CB               	retlw	203
  1155     02AA  3403               	retlw	3
  1156     02AB  34CE               	retlw	206
  1157     02AC  3403               	retlw	3
  1158     02AD  34D1               	retlw	209
  1159     02AE  3403               	retlw	3
  1160     02AF  34D3               	retlw	211
  1161     02B0  3403               	retlw	3
  1162     02B1  34D6               	retlw	214
  1163     02B2  3403               	retlw	3
  1164     02B3  34D8               	retlw	216
  1165     02B4  3403               	retlw	3
  1166     02B5  34DA               	retlw	218
  1167     02B6  3403               	retlw	3
  1168     02B7  34DD               	retlw	221
  1169     02B8  3403               	retlw	3
  1170     02B9  34DF               	retlw	223
  1171     02BA  3403               	retlw	3
  1172     02BB  34E1               	retlw	225
  1173     02BC  3403               	retlw	3
  1174     02BD  34E3               	retlw	227
  1175     02BE  3403               	retlw	3
  1176     02BF  34E5               	retlw	229
  1177     02C0  3403               	retlw	3
  1178     02C1  34E7               	retlw	231
  1179     02C2  3403               	retlw	3
  1180     02C3  34E9               	retlw	233
  1181     02C4  3403               	retlw	3
  1182     02C5  34EB               	retlw	235
  1183     02C6  3403               	retlw	3
  1184     02C7  34EC               	retlw	236
  1185     02C8  3403               	retlw	3
  1186     02C9  34EE               	retlw	238
  1187     02CA  3403               	retlw	3
  1188     02CB  34F0               	retlw	240
  1189     02CC  3403               	retlw	3
  1190     02CD  34F1               	retlw	241
  1191     02CE  3403               	retlw	3
  1192     02CF  34F3               	retlw	243
  1193     02D0  3403               	retlw	3
  1194     02D1  34F4               	retlw	244
  1195     02D2  3403               	retlw	3
  1196     02D3  34F5               	retlw	245
  1197     02D4  3403               	retlw	3
  1198     02D5  34F6               	retlw	246
  1199     02D6  3403               	retlw	3
  1200     02D7  34F7               	retlw	247
  1201     02D8  3403               	retlw	3
  1202     02D9  34F9               	retlw	249
  1203     02DA  3403               	retlw	3
  1204     02DB  34F9               	retlw	249
  1205     02DC  3403               	retlw	3
  1206     02DD  34FA               	retlw	250
  1207     02DE  3403               	retlw	3
  1208     02DF  34FB               	retlw	251
  1209     02E0  3403               	retlw	3
  1210     02E1  34FC               	retlw	252
  1211     02E2  3403               	retlw	3
  1212     02E3  34FD               	retlw	253
  1213     02E4  3403               	retlw	3
  1214     02E5  34FD               	retlw	253
  1215     02E6  3403               	retlw	3
  1216     02E7  34FE               	retlw	254
  1217     02E8  3403               	retlw	3
  1218     02E9  34FE               	retlw	254
  1219     02EA  3403               	retlw	3
  1220     02EB  34FE               	retlw	254
  1221     02EC  3403               	retlw	3
  1222     02ED  34FF               	retlw	255
  1223     02EE  3403               	retlw	3
  1224     02EF  34FF               	retlw	255
  1225     02F0  3403               	retlw	3
  1226     02F1  34FF               	retlw	255
  1227     02F2  3403               	retlw	3
  1228     02F3  34FF               	retlw	255
  1229     02F4  3403               	retlw	3
  1230     02F5                     __end_of_sine_table_one_quadrant:
  1231                           
  1232                           	psect	stringtext3
  1233     0717                     __pstringtext3:
  1234     0717                     _prescaler_bits:
  1235     0717  3407               	retlw	7
  1236     0718  3406               	retlw	6
  1237     0719  3405               	retlw	5
  1238     071A  3404               	retlw	4
  1239     071B  3403               	retlw	3
  1240     071C  3402               	retlw	2
  1241     071D  3401               	retlw	1
  1242     071E  3400               	retlw	0
  1243     071F                     __end_of_prescaler_bits:
  1244                           
  1245                           	psect	stringtext4
  1246     0743                     __pstringtext4:
  1247     0743                     _NO:
  1248     0743  3400               	retlw	0
  1249     0744                     __end_of_NO:
  1250                           
  1251                           	psect	stringtext5
  1252     0744                     __pstringtext5:
  1253     0744                     _YES:
  1254     0744  3401               	retlw	1
  1255     0745                     __end_of_YES:
  1256                           
  1257                           	psect	stringtext6
  1258     0745                     __pstringtext6:
  1259     0745                     _DONT_CARE:
  1260     0745  3404               	retlw	4
  1261     0746                     __end_of_DONT_CARE:
  1262                           
  1263                           	psect	stringtext7
  1264     0746                     __pstringtext7:
  1265     0746                     _DIVIDE_BY_FOUR:
  1266     0746  3403               	retlw	3
  1267     0747                     __end_of_DIVIDE_BY_FOUR:
  1268                           
  1269                           	psect	stringtext8
  1270     0747                     __pstringtext8:
  1271     0747                     _MULTIPLY_BY_TWO:
  1272     0747  3402               	retlw	2
  1273     0748                     __end_of_MULTIPLY_BY_TWO:
  1274                           
  1275                           	psect	stringtext9
  1276     0748                     __pstringtext9:
  1277     0748                     _DIVIDE_BY_TWO:
  1278     0748  3401               	retlw	1
  1279     0749                     __end_of_DIVIDE_BY_TWO:
  1280                           
  1281                           	psect	stringtext10
  1282     0749                     __pstringtext10:
  1283     0749                     _DO_NOTHING:
  1284     0749  3400               	retlw	0
  1285     074A                     __end_of_DO_NOTHING:
  1286                           
  1287                           	psect	stringtext11
  1288     074A                     __pstringtext11:
  1289     074A                     _NEGATIVE:
  1290     074A  3400               	retlw	0
  1291     074B                     __end_of_NEGATIVE:
  1292                           
  1293                           	psect	stringtext12
  1294     074B                     __pstringtext12:
  1295     074B                     _POSITIVE:
  1296     074B  3401               	retlw	1
  1297     074C                     __end_of_POSITIVE:
  1298                           
  1299                           	psect	stringtext13
  1300     074C                     __pstringtext13:
  1301     074C                     _symmetry_adc_config_value:
  1302     074C  3407               	retlw	7
  1303     074D                     __end_of_symmetry_adc_config_value:
  1304                           
  1305                           	psect	stringtext14
  1306     074D                     __pstringtext14:
  1307     074D                     _depth_adc_config_value:
  1308     074D  3406               	retlw	6
  1309     074E                     __end_of_depth_adc_config_value:
  1310                           
  1311                           	psect	stringtext15
  1312     074E                     __pstringtext15:
  1313     074E                     _speed_adc_config_value:
  1314     074E  3405               	retlw	5
  1315     074F                     __end_of_speed_adc_config_value:
  1316                           
  1317                           	psect	stringtext16
  1318     074F                     __pstringtext16:
  1319     074F                     _waveshape_adc_config_value:
  1320     074F  3404               	retlw	4
  1321     0750                     __end_of_waveshape_adc_config_value:
  1322     001C                     _T2CON	set	28
  1323     001B                     _PR2	set	27
  1324     0015                     _TMR0	set	21
  1325     00E2                     _TMR2ON	set	226
  1326     005D                     _TMR0IE	set	93
  1327     0089                     _TMR2IF	set	137
  1328     005F                     _GIE	set	95
  1329     005A                     _TMR0IF	set	90
  1330     0095                     _OPTION_REG	set	149
  1331     009B                     _ADRESL	set	155
  1332     009C                     _ADRESH	set	156
  1333     009D                     _ADCON0	set	157
  1334     009E                     _ADCON1	set	158
  1335     008E                     _TRISC	set	142
  1336     0098                     _OSCTUNE	set	152
  1337     0099                     _OSCCON	set	153
  1338     0462                     _TRISA2	set	1122
  1339     04E9                     _GO_nDONE	set	1257
  1340     04E8                     _ADON	set	1256
  1341     088F                     _C1ON	set	2191
  1342     08D7                     _SRLEN	set	2263
  1343     018E                     _ANSELC	set	398
  1344     020E                     _WPUC	set	526
  1345     029E                     _CCPTMRS0	set	670
  1346     0311                     _CCPR3L	set	785
  1347     0313                     _CCP3CON	set	787
  1348                           
  1349                           	psect	cinit
  1350     00D9                     start_initialization:	
  1351                           ; #config settings
  1352                           
  1353     00D9                     __initialization:
  1354                           
  1355                           ; Initialize objects allocated to BANK0
  1356     00D9  3187  273F  3180   	fcall	__pidataBANK0	;fetch initializer
  1357     00DC  00EE               	movwf	__pdataBANK0& (0+127)
  1358     00DD  3187  2740  3180   	fcall	__pidataBANK0+1	;fetch initializer
  1359     00E0  00EF               	movwf	(__pdataBANK0+1)& (0+127)
  1360                           
  1361                           ; Clear objects allocated to COMMON
  1362     00E1  01F6               	clrf	__pbssCOMMON& (0+127)
  1363     00E2  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
  1364     00E3  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
  1365     00E4  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
  1366     00E5  01FA               	clrf	(__pbssCOMMON+4)& (0+127)
  1367                           
  1368                           ; Clear objects allocated to BANK0
  1369     00E6  3020               	movlw	low __pbssBANK0
  1370     00E7  0084               	movwf	4
  1371     00E8  3000               	movlw	high __pbssBANK0
  1372     00E9  0085               	movwf	5
  1373     00EA  302D               	movlw	45
  1374     00EB  3187  2727         	fcall	clear_ram0
  1375     00ED                     end_of_initialization:	
  1376                           ;End of C runtime variable initialization code
  1377                           
  1378     00ED                     __end_of__initialization:
  1379     00ED  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1380     00EE  0020               	movlb	0
  1381     00EF  3186  2E95         	ljmp	_main	;jump to C main() function
  1382                           
  1383                           	psect	bssCOMMON
  1384     0076                     __pbssCOMMON:
  1385     0076                     _current_halfcycle:
  1386     0076                     	ds	1
  1387     0077                     _current_one_quadrant_index:
  1388     0077                     	ds	1
  1389     0078                     _current_waveshape:
  1390     0078                     	ds	1
  1391     0079                     _duty:
  1392     0079                     	ds	2
  1393                           
  1394                           	psect	bssBANK0
  1395     0020                     __pbssBANK0:
  1396     0020                     _last_current_symmetry_average:
  1397     0020                     	ds	4
  1398     0024                     _symmetry_cum:
  1399     0024                     	ds	4
  1400     0028                     _speed_control_32:
  1401     0028                     	ds	4
  1402     002C                     _raw_TMR0:
  1403     002C                     	ds	4
  1404     0030                     _current_symmetry:
  1405     0030                     	ds	4
  1406     0034                     _current_speed_linear_32:
  1407     0034                     	ds	4
  1408     0038                     _final_TMR0:
  1409     0038                     	ds	4
  1410     003C                     _speed_control:
  1411     003C                     	ds	2
  1412     003E                     _current_speed_linear:
  1413     003E                     	ds	2
  1414     0040                     _current_depth:
  1415     0040                     	ds	2
  1416     0042                     _not_first_average_flag:
  1417     0042                     	ds	1
  1418     0043                     _prescaler_final_index:
  1419     0043                     	ds	1
  1420     0044                     _prescaler_overflow_flag:
  1421     0044                     	ds	1
  1422     0045                     _symmetry_status:
  1423     0045                     	ds	1
  1424     0046                     _base_prescaler_bits_index:
  1425     0046                     	ds	1
  1426     0047                     _prescaler_adjust:
  1427     0047                     	ds	1
  1428     0048                     _how_many_128:
  1429     0048                     	ds	1
  1430     0049                     _symmetry_count:
  1431     0049                     	ds	1
  1432     004A                     _duty_high_byte:
  1433     004A                     	ds	1
  1434     004B                     _duty_low_byte:
  1435     004B                     	ds	1
  1436     004C                     _current_quadrant:
  1437     004C                     	ds	1
  1438                           
  1439                           	psect	dataBANK0
  1440     006E                     __pdataBANK0:
  1441     006E                     _top_two_bytes_ptr:
  1442     006E                     	ds	2
  1443                           
  1444                           	psect	clrtext
  1445     0727                     clear_ram0:	
  1446                           ;	Called with FSR0 containing the base address, and
  1447                           ;	WREG with the size to clear
  1448                           
  1449     0727  0064               	clrwdt	;clear the watchdog before getting into this loop
  1450     0728                     clrloop0:
  1451     0728  0180               	clrf	0	;clear RAM location pointed to by FSR
  1452     0729  3101               	addfsr 0,1
  1453     072A  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1454     072B  2F28               	goto	clrloop0	;have we reached the end yet?
  1455     072C  3400               	retlw	0	;all done for this memory range, return
  1456                           
  1457                           	psect	cstackBANK1
  1458     00A0                     __pcstackBANK1:
  1459     00A0                     ??_main:
  1460                           
  1461                           ; 1 bytes @ 0x0
  1462     00A0                     	ds	1
  1463                           
  1464                           	psect	cstackCOMMON
  1465     0070                     __pcstackCOMMON:
  1466     0070                     ?_SET_DUTY_CCP3:
  1467     0070                     ??_SET_DUTY_CCP3:	
  1468                           ; 1 bytes @ 0x0
  1469                           
  1470     0070                     ?_CONFIG_SYSTEM:	
  1471                           ; 1 bytes @ 0x0
  1472                           
  1473     0070                     ?_TURN_ON_CCP3_PWM:	
  1474                           ; 1 bytes @ 0x0
  1475                           
  1476     0070                     ?_CONFIG_TMR0_INTERRUPT:	
  1477                           ; 1 bytes @ 0x0
  1478                           
  1479     0070                     ?_GET_CURRENT_POT_VALUES:	
  1480                           ; 1 bytes @ 0x0
  1481                           
  1482     0070                     ?_PROCESS_RAW_SPEED_AND_PRESCALER:	
  1483                           ; 1 bytes @ 0x0
  1484                           
  1485     0070                     ?_PROCESS_TMR0_AND_PRESCALER_ADJUST:	
  1486                           ; 1 bytes @ 0x0
  1487                           
  1488     0070                     ?_INTERRUPT_InterruptManager:	
  1489                           ; 1 bytes @ 0x0
  1490                           
  1491     0070                     ?_main:	
  1492                           ; 1 bytes @ 0x0
  1493                           
  1494     0070                     ?_CONFIG_INT_OSC:	
  1495                           ; 1 bytes @ 0x0
  1496                           
  1497     0070                     ?_CONFIG_PORTS:	
  1498                           ; 1 bytes @ 0x0
  1499                           
  1500     0070                     ?_CONFIG_ADC_PINS:	
  1501                           ; 1 bytes @ 0x0
  1502                           
  1503     0070                     ?_CONFIG_PWM_CCP3:	
  1504                           ; 1 bytes @ 0x0
  1505                           
  1506     0070                     ?_DETERMINE_WAVESHAPE:	
  1507                           ; 1 bytes @ 0x0
  1508                           
  1509     0070                     ?_CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1:	
  1510                           ; 1 bytes @ 0x0
  1511                           
  1512     0070                     ?_TURN_PRESCALER_OFF:	
  1513                           ; 1 bytes @ 0x0
  1514                           
  1515     0070                     ?_TURN_PRESCALER_ON:	
  1516                           ; 1 bytes @ 0x0
  1517                           
  1518     0070                     ?_ADJUST_AND_SET_PRESCALER:	
  1519                           ; 1 bytes @ 0x0
  1520                           
  1521     0070                     ?_SHORTEN_PERIOD:	
  1522                           ; 1 bytes @ 0x0
  1523                           
  1524     0070                     ?_LENGTHEN_PERIOD:	
  1525                           ; 1 bytes @ 0x0
  1526                           
  1527                           
  1528                           ; 1 bytes @ 0x0
  1529     0070                     	ds	2
  1530     0072                     SET_DUTY_CCP3@temp:
  1531                           
  1532                           ; 1 bytes @ 0x2
  1533     0072                     	ds	1
  1534     0073                     SET_DUTY_CCP3@duty_ptr:
  1535                           
  1536                           ; 1 bytes @ 0x3
  1537     0073                     	ds	1
  1538     0074                     ??_INTERRUPT_InterruptManager:
  1539                           
  1540                           ; 1 bytes @ 0x4
  1541     0074                     	ds	2
  1542                           
  1543                           	psect	cstackBANK0
  1544     004D                     __pcstackBANK0:
  1545     004D                     ??_CONFIG_SYSTEM:
  1546     004D                     ??_TURN_ON_CCP3_PWM:	
  1547                           ; 1 bytes @ 0x0
  1548                           
  1549     004D                     ??_CONFIG_TMR0_INTERRUPT:	
  1550                           ; 1 bytes @ 0x0
  1551                           
  1552     004D                     ??_CONFIG_INT_OSC:	
  1553                           ; 1 bytes @ 0x0
  1554                           
  1555     004D                     ??_CONFIG_PORTS:	
  1556                           ; 1 bytes @ 0x0
  1557                           
  1558     004D                     ??_CONFIG_ADC_PINS:	
  1559                           ; 1 bytes @ 0x0
  1560                           
  1561     004D                     ??_CONFIG_PWM_CCP3:	
  1562                           ; 1 bytes @ 0x0
  1563                           
  1564     004D                     ??_CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1:	
  1565                           ; 1 bytes @ 0x0
  1566                           
  1567     004D                     ??_TURN_PRESCALER_OFF:	
  1568                           ; 1 bytes @ 0x0
  1569                           
  1570     004D                     ??_TURN_PRESCALER_ON:	
  1571                           ; 1 bytes @ 0x0
  1572                           
  1573     004D                     ?_DO_ADC:	
  1574                           ; 1 bytes @ 0x0
  1575                           
  1576     004D                     ?___lmul:	
  1577                           ; 2 bytes @ 0x0
  1578                           
  1579     004D                     DO_ADC@modifier:	
  1580                           ; 4 bytes @ 0x0
  1581                           
  1582     004D                     ___lmul@multiplier:	
  1583                           ; 2 bytes @ 0x0
  1584                           
  1585                           
  1586                           ; 4 bytes @ 0x0
  1587     004D                     	ds	2
  1588     004F                     ??_DO_ADC:
  1589                           
  1590                           ; 1 bytes @ 0x2
  1591     004F                     	ds	1
  1592     0050                     ??_ADJUST_AND_SET_PRESCALER:
  1593     0050                     DO_ADC@adc_result:	
  1594                           ; 1 bytes @ 0x3
  1595                           
  1596                           
  1597                           ; 2 bytes @ 0x3
  1598     0050                     	ds	1
  1599     0051                     ___lmul@multiplicand:
  1600                           
  1601                           ; 4 bytes @ 0x4
  1602     0051                     	ds	1
  1603     0052                     DO_ADC@temp:
  1604                           
  1605                           ; 1 bytes @ 0x5
  1606     0052                     	ds	1
  1607     0053                     ??_DETERMINE_WAVESHAPE:
  1608     0053                     DETERMINE_WAVESHAPE@ADC:	
  1609                           ; 1 bytes @ 0x6
  1610                           
  1611                           
  1612                           ; 2 bytes @ 0x6
  1613     0053                     	ds	2
  1614     0055                     ??_GET_CURRENT_POT_VALUES:
  1615     0055                     ??___lmul:	
  1616                           ; 1 bytes @ 0x8
  1617                           
  1618     0055                     ___lmul@product:	
  1619                           ; 1 bytes @ 0x8
  1620                           
  1621                           
  1622                           ; 4 bytes @ 0x8
  1623     0055                     	ds	4
  1624     0059                     ??_PROCESS_RAW_SPEED_AND_PRESCALER:
  1625     0059                     ??_SHORTEN_PERIOD:	
  1626                           ; 1 bytes @ 0xC
  1627                           
  1628     0059                     ??_LENGTHEN_PERIOD:	
  1629                           ; 1 bytes @ 0xC
  1630                           
  1631                           
  1632                           ; 1 bytes @ 0xC
  1633     0059                     	ds	5
  1634     005E                     PROCESS_RAW_SPEED_AND_PRESCALER@speed_control_subtracted:
  1635                           
  1636                           ; 2 bytes @ 0x11
  1637     005E                     	ds	3
  1638     0061                     SHORTEN_PERIOD@twofiftysix_minus_TMR0_final:
  1639     0061                     _LENGTHEN_PERIOD$856:	
  1640                           ; 4 bytes @ 0x14
  1641                           
  1642                           
  1643                           ; 4 bytes @ 0x14
  1644     0061                     	ds	4
  1645     0065                     LENGTHEN_PERIOD@twofiftysix_minus_TMR0_final:
  1646     0065                     _SHORTEN_PERIOD$855:	
  1647                           ; 4 bytes @ 0x18
  1648                           
  1649                           
  1650                           ; 4 bytes @ 0x18
  1651     0065                     	ds	4
  1652     0069                     ??_PROCESS_TMR0_AND_PRESCALER_ADJUST:
  1653                           
  1654                           ; 1 bytes @ 0x1C
  1655     0069                     	ds	4
  1656     006D                     PROCESS_TMR0_AND_PRESCALER_ADJUST@symmetry_status:
  1657                           
  1658                           ; 1 bytes @ 0x20
  1659     006D                     	ds	1
  1660                           
  1661                           	psect	maintext
  1662     0695                     __pmaintext:	
  1663 ;;
  1664 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1665 ;;
  1666 ;; *************** function _main *****************
  1667 ;; Defined at:
  1668 ;;		line 127 in file "main.c"
  1669 ;; Parameters:    Size  Location     Type
  1670 ;;		None
  1671 ;; Auto vars:     Size  Location     Type
  1672 ;;		None
  1673 ;; Return value:  Size  Location     Type
  1674 ;;                  1    wreg      void 
  1675 ;; Registers used:
  1676 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1677 ;; Tracked objects:
  1678 ;;		On entry : B1F/0
  1679 ;;		On exit  : 1F/0
  1680 ;;		Unchanged: 0/0
  1681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1682 ;;      Params:         0       0       0       0
  1683 ;;      Locals:         0       0       0       0
  1684 ;;      Temps:          0       0       1       0
  1685 ;;      Totals:         0       0       1       0
  1686 ;;Total ram usage:        1 bytes
  1687 ;; Hardware stack levels required when called: 5
  1688 ;; This function calls:
  1689 ;;		_CONFIG_SYSTEM
  1690 ;;		_CONFIG_TMR0_INTERRUPT
  1691 ;;		_GET_CURRENT_POT_VALUES
  1692 ;;		_PROCESS_RAW_SPEED_AND_PRESCALER
  1693 ;;		_PROCESS_TMR0_AND_PRESCALER_ADJUST
  1694 ;;		_TURN_ON_CCP3_PWM
  1695 ;; This function is called by:
  1696 ;;		Startup code after reset
  1697 ;; This function uses a non-reentrant model
  1698 ;;
  1699                           
  1700     0695                     _main:	
  1701                           ;psect for function _main
  1702                           
  1703                           
  1704                           ;main.c: 128:     CONFIG_SYSTEM();
  1705                           
  1706                           ;incstack = 0
  1707                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1708     0695  3187  2702  3186   	fcall	_CONFIG_SYSTEM
  1709                           
  1710                           ;main.c: 129:     TURN_ON_CCP3_PWM();
  1711     0698  3187  271F  3186   	fcall	_TURN_ON_CCP3_PWM
  1712                           
  1713                           ;main.c: 130:     CONFIG_TMR0_INTERRUPT();
  1714     069B  3187  2741  3186   	fcall	_CONFIG_TMR0_INTERRUPT
  1715                           
  1716                           ;main.c: 131:     GET_CURRENT_POT_VALUES();
  1717     069E  3183  23A8  3186   	fcall	_GET_CURRENT_POT_VALUES
  1718                           
  1719                           ;main.c: 132:     PROCESS_RAW_SPEED_AND_PRESCALER();
  1720     06A1  3184  24C1  3186   	fcall	_PROCESS_RAW_SPEED_AND_PRESCALER
  1721                           
  1722                           ;main.c: 133:     PROCESS_TMR0_AND_PRESCALER_ADJUST();
  1723     06A4  3184  2435  3186   	fcall	_PROCESS_TMR0_AND_PRESCALER_ADJUST
  1724                           
  1725                           ;main.c: 134:     TMR0 = (uint8_t)final_TMR0;
  1726     06A7  0838               	movf	_final_TMR0,w	;volatile
  1727     06A8  0095               	movwf	21	;volatile
  1728                           
  1729                           ;main.c: 135:     GIE = 1;
  1730     06A9  178B               	bsf	11,7	;volatile
  1731     06AA                     l1714:
  1732                           
  1733                           ;main.c: 138:         GET_CURRENT_POT_VALUES();
  1734     06AA  3183  23A8  3186   	fcall	_GET_CURRENT_POT_VALUES
  1735                           
  1736                           ;main.c: 139:         ++symmetry_count;
  1737     06AD  3001               	movlw	1
  1738     06AE  0021               	movlb	1	; select bank1
  1739     06AF  00A0               	movwf	??_main^(0+128)
  1740     06B0  0820               	movf	??_main^(0+128),w
  1741     06B1  0020               	movlb	0	; select bank0
  1742     06B2  07C9               	addwf	_symmetry_count,f	;volatile
  1743                           
  1744                           ;main.c: 140:         PROCESS_RAW_SPEED_AND_PRESCALER();
  1745     06B3  3184  24C1  3186   	fcall	_PROCESS_RAW_SPEED_AND_PRESCALER
  1746                           
  1747                           ;main.c: 141:         PROCESS_TMR0_AND_PRESCALER_ADJUST();
  1748     06B6  3184  2435  3186   	fcall	_PROCESS_TMR0_AND_PRESCALER_ADJUST
  1749     06B9  2EAA               	goto	l1714
  1750     06BA                     __end_of_main:
  1751                           
  1752                           	psect	text1
  1753     071F                     __ptext1:	
  1754 ;; *************** function _TURN_ON_CCP3_PWM *****************
  1755 ;; Defined at:
  1756 ;;		line 73 in file "config.c"
  1757 ;; Parameters:    Size  Location     Type
  1758 ;;		None
  1759 ;; Auto vars:     Size  Location     Type
  1760 ;;		None
  1761 ;; Return value:  Size  Location     Type
  1762 ;;                  1    wreg      unsigned char 
  1763 ;; Registers used:
  1764 ;;		None
  1765 ;; Tracked objects:
  1766 ;;		On entry : B1F/0
  1767 ;;		On exit  : B1F/1
  1768 ;;		Unchanged: B00/0
  1769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1770 ;;      Params:         0       0       0       0
  1771 ;;      Locals:         0       0       0       0
  1772 ;;      Temps:          0       0       0       0
  1773 ;;      Totals:         0       0       0       0
  1774 ;;Total ram usage:        0 bytes
  1775 ;; Hardware stack levels used: 1
  1776 ;; Hardware stack levels required when called: 2
  1777 ;; This function calls:
  1778 ;;		Nothing
  1779 ;; This function is called by:
  1780 ;;		_main
  1781 ;; This function uses a non-reentrant model
  1782 ;;
  1783                           
  1784     071F                     _TURN_ON_CCP3_PWM:	
  1785                           ;psect for function _TURN_ON_CCP3_PWM
  1786                           
  1787                           
  1788                           ;config.c: 75:     TMR2IF = 0;
  1789                           
  1790                           ;incstack = 0
  1791                           ; Regs used in _TURN_ON_CCP3_PWM: []
  1792     071F  1091               	bcf	17,1	;volatile
  1793                           
  1794                           ;config.c: 76:     TMR2ON = 1;
  1795     0720  151C               	bsf	28,2	;volatile
  1796     0721                     l176:	
  1797                           ;config.c: 77:     while(TMR2IF == 0){}
  1798                           
  1799     0721  1C91               	btfss	17,1	;volatile
  1800     0722  2F21               	goto	l176
  1801                           
  1802                           ;config.c: 78:     TMR2IF = 0;
  1803     0723  1091               	bcf	17,1	;volatile
  1804                           
  1805                           ;config.c: 79:     TRISA2 = 0;
  1806     0724  0021               	movlb	1	; select bank1
  1807     0725  110C               	bcf	12,2	;volatile
  1808                           
  1809                           ;config.c: 80:     return 1;;	Return value of _TURN_ON_CCP3_PWM is never used
  1810     0726  0008               	return
  1811     0727                     __end_of_TURN_ON_CCP3_PWM:
  1812                           
  1813                           	psect	text2
  1814     0435                     __ptext2:	
  1815 ;; *************** function _PROCESS_TMR0_AND_PRESCALER_ADJUST *****************
  1816 ;; Defined at:
  1817 ;;		line 220 in file "system.c"
  1818 ;; Parameters:    Size  Location     Type
  1819 ;;		None
  1820 ;; Auto vars:     Size  Location     Type
  1821 ;;  symmetry_sta    1   32[BANK0 ] unsigned char 
  1822 ;; Return value:  Size  Location     Type
  1823 ;;                  1    wreg      unsigned char 
  1824 ;; Registers used:
  1825 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1826 ;; Tracked objects:
  1827 ;;		On entry : 1F/0
  1828 ;;		On exit  : 1F/0
  1829 ;;		Unchanged: 0/0
  1830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1831 ;;      Params:         0       0       0       0
  1832 ;;      Locals:         0       1       0       0
  1833 ;;      Temps:          0       4       0       0
  1834 ;;      Totals:         0       5       0       0
  1835 ;;Total ram usage:        5 bytes
  1836 ;; Hardware stack levels used: 1
  1837 ;; Hardware stack levels required when called: 4
  1838 ;; This function calls:
  1839 ;;		_ADJUST_AND_SET_PRESCALER
  1840 ;;		_LENGTHEN_PERIOD
  1841 ;;		_SHORTEN_PERIOD
  1842 ;; This function is called by:
  1843 ;;		_main
  1844 ;; This function uses a non-reentrant model
  1845 ;;
  1846                           
  1847     0435                     _PROCESS_TMR0_AND_PRESCALER_ADJUST:	
  1848                           ;psect for function _PROCESS_TMR0_AND_PRESCALER_ADJUST
  1849                           
  1850                           
  1851                           ;system.c: 222:         if(current_symmetry == 512){
  1852                           
  1853                           ;incstack = 0
  1854                           ; Regs used in _PROCESS_TMR0_AND_PRESCALER_ADJUST: [wreg-fsr0h+status,2+status,0+pclath+
      +                          cstack]
  1855     0435  3002               	movlw	2
  1856     0436  0631               	xorwf	_current_symmetry+1,w	;volatile
  1857     0437  0430               	iorwf	_current_symmetry,w	;volatile
  1858     0438  0432               	iorwf	_current_symmetry+2,w	;volatile
  1859     0439  0433               	iorwf	_current_symmetry+3,w	;volatile
  1860     043A  1D03               	btfss	3,2
  1861     043B  2C47               	goto	l1526
  1862                           
  1863                           ;system.c: 223:             final_TMR0 = raw_TMR0;
  1864     043C  0020               	movlb	0	; select bank0
  1865     043D  082F               	movf	_raw_TMR0+3,w	;volatile
  1866     043E  00BB               	movwf	_final_TMR0+3	;volatile
  1867     043F  082E               	movf	_raw_TMR0+2,w	;volatile
  1868     0440  00BA               	movwf	_final_TMR0+2	;volatile
  1869     0441  082D               	movf	_raw_TMR0+1,w	;volatile
  1870     0442  00B9               	movwf	_final_TMR0+1	;volatile
  1871     0443  082C               	movf	_raw_TMR0,w	;volatile
  1872     0444  00B8               	movwf	_final_TMR0	;volatile
  1873     0445  01C7               	clrf	_prescaler_adjust	;volatile
  1874                           
  1875                           ;system.c: 225:         }
  1876     0446  2C84               	goto	l1550
  1877     0447                     l1526:
  1878                           
  1879                           ;system.c: 227:             uint8_t symmetry_status = 0;
  1880     0447  0020               	movlb	0	; select bank0
  1881     0448  01ED               	clrf	PROCESS_TMR0_AND_PRESCALER_ADJUST@symmetry_status
  1882                           
  1883                           ;system.c: 228:             if(current_symmetry > 512){
  1884     0449  0833               	movf	_current_symmetry+3,w	;volatile
  1885     044A  1D03               	btfss	3,2
  1886     044B  2C55               	goto	l1530
  1887     044C  0832               	movf	_current_symmetry+2,w	;volatile
  1888     044D  1D03               	btfss	3,2
  1889     044E  2C55               	goto	l1530
  1890     044F  3001               	movlw	1
  1891     0450  0230               	subwf	_current_symmetry,w	;volatile
  1892     0451  3002               	movlw	2
  1893     0452  3B31               	subwfb	_current_symmetry+1,w	;volatile
  1894     0453  1C03               	btfss	3,0
  1895     0454  2C70               	goto	l1534
  1896     0455                     l1530:
  1897                           
  1898                           ;system.c: 229:                 current_symmetry = 1023 -current_symmetry;
  1899     0455  30FF               	movlw	255
  1900     0456  0020               	movlb	0	; select bank0
  1901     0457  00E9               	movwf	??_PROCESS_TMR0_AND_PRESCALER_ADJUST
  1902     0458  3003               	movlw	3
  1903     0459  00EA               	movwf	??_PROCESS_TMR0_AND_PRESCALER_ADJUST+1
  1904     045A  3000               	movlw	0
  1905     045B  00EB               	movwf	??_PROCESS_TMR0_AND_PRESCALER_ADJUST+2
  1906     045C  3000               	movlw	0
  1907     045D  00EC               	movwf	??_PROCESS_TMR0_AND_PRESCALER_ADJUST+3
  1908     045E  0830               	movf	_current_symmetry,w	;volatile
  1909     045F  02E9               	subwf	??_PROCESS_TMR0_AND_PRESCALER_ADJUST,f
  1910     0460  0831               	movf	_current_symmetry+1,w	;volatile
  1911     0461  3BEA               	subwfb	??_PROCESS_TMR0_AND_PRESCALER_ADJUST+1,f
  1912     0462  0832               	movf	_current_symmetry+2,w	;volatile
  1913     0463  3BEB               	subwfb	??_PROCESS_TMR0_AND_PRESCALER_ADJUST+2,f
  1914     0464  0833               	movf	_current_symmetry+3,w	;volatile
  1915     0465  3BEC               	subwfb	??_PROCESS_TMR0_AND_PRESCALER_ADJUST+3,f
  1916     0466  086C               	movf	??_PROCESS_TMR0_AND_PRESCALER_ADJUST+3,w
  1917     0467  00B3               	movwf	_current_symmetry+3	;volatile
  1918     0468  086B               	movf	??_PROCESS_TMR0_AND_PRESCALER_ADJUST+2,w
  1919     0469  00B2               	movwf	_current_symmetry+2	;volatile
  1920     046A  086A               	movf	??_PROCESS_TMR0_AND_PRESCALER_ADJUST+1,w
  1921     046B  00B1               	movwf	_current_symmetry+1	;volatile
  1922     046C  0869               	movf	??_PROCESS_TMR0_AND_PRESCALER_ADJUST,w
  1923     046D  00B0               	movwf	_current_symmetry	;volatile
  1924                           
  1925                           ;system.c: 230:                 symmetry_status = 1;
  1926     046E  01ED               	clrf	PROCESS_TMR0_AND_PRESCALER_ADJUST@symmetry_status
  1927     046F  0AED               	incf	PROCESS_TMR0_AND_PRESCALER_ADJUST@symmetry_status,f
  1928     0470                     l1534:
  1929                           
  1930                           ;system.c: 232:             if(current_halfcycle == 0){
  1931     0470  0876               	movf	_current_halfcycle,w	;volatile
  1932     0471  1D03               	btfss	3,2
  1933     0472  2C7B               	goto	l1542
  1934                           
  1935                           ;system.c: 233:                 if(symmetry_status == 0){
  1936     0473  0020               	movlb	0	; select bank0
  1937     0474  086D               	movf	PROCESS_TMR0_AND_PRESCALER_ADJUST@symmetry_status,w
  1938     0475                     L1:
  1939     0475  1903               	btfsc	3,2
  1940     0476  2C81               	goto	l1538
  1941                           
  1942                           ;system.c: 237:                     LENGTHEN_PERIOD();
  1943                           
  1944                           ;system.c: 235:                 }
  1945     0477  3182  22F5  3184   	fcall	_LENGTHEN_PERIOD
  1946     047A  2C84               	goto	l1550
  1947     047B                     l1542:
  1948     047B  0376               	decf	_current_halfcycle,w	;volatile
  1949     047C  1D03               	btfss	3,2
  1950     047D  2C84               	goto	l1550
  1951                           
  1952                           ;system.c: 241:                 if(symmetry_status == 1){
  1953     047E  0020               	movlb	0	; select bank0
  1954     047F  036D               	decf	PROCESS_TMR0_AND_PRESCALER_ADJUST@symmetry_status,w
  1955     0480  2C75               	goto	L1
  1956     0481                     l1538:
  1957                           
  1958                           ;system.c: 234:                     SHORTEN_PERIOD();
  1959     0481  3185  253D  3184   	fcall	_SHORTEN_PERIOD
  1960     0484                     l1550:
  1961                           
  1962                           ;system.c: 250:         ADJUST_AND_SET_PRESCALER();
  1963     0484  3185  25B0  3184   	fcall	_ADJUST_AND_SET_PRESCALER
  1964                           
  1965                           ;system.c: 253:         if(prescaler_overflow_flag == 1){
  1966     0487  0020               	movlb	0	; select bank0
  1967     0488  0344               	decf	_prescaler_overflow_flag,w	;volatile
  1968     0489  1D03               	btfss	3,2
  1969     048A  2CA4               	goto	l1556
  1970                           
  1971                           ;system.c: 254:             final_TMR0 = final_TMR0 + 2;
  1972     048B  3002               	movlw	2
  1973     048C  00E9               	movwf	??_PROCESS_TMR0_AND_PRESCALER_ADJUST
  1974     048D  3000               	movlw	0
  1975     048E  00EA               	movwf	??_PROCESS_TMR0_AND_PRESCALER_ADJUST+1
  1976     048F  3000               	movlw	0
  1977     0490  00EB               	movwf	??_PROCESS_TMR0_AND_PRESCALER_ADJUST+2
  1978     0491  3000               	movlw	0
  1979     0492  00EC               	movwf	??_PROCESS_TMR0_AND_PRESCALER_ADJUST+3
  1980     0493  0838               	movf	_final_TMR0,w	;volatile
  1981     0494  07E9               	addwf	??_PROCESS_TMR0_AND_PRESCALER_ADJUST,f
  1982     0495  0839               	movf	_final_TMR0+1,w	;volatile
  1983     0496  3DEA               	addwfc	??_PROCESS_TMR0_AND_PRESCALER_ADJUST+1,f
  1984     0497  083A               	movf	_final_TMR0+2,w	;volatile
  1985     0498  3DEB               	addwfc	??_PROCESS_TMR0_AND_PRESCALER_ADJUST+2,f
  1986     0499  083B               	movf	_final_TMR0+3,w	;volatile
  1987     049A  3DEC               	addwfc	??_PROCESS_TMR0_AND_PRESCALER_ADJUST+3,f
  1988     049B  086C               	movf	??_PROCESS_TMR0_AND_PRESCALER_ADJUST+3,w
  1989     049C  00BB               	movwf	_final_TMR0+3	;volatile
  1990     049D  086B               	movf	??_PROCESS_TMR0_AND_PRESCALER_ADJUST+2,w
  1991     049E  00BA               	movwf	_final_TMR0+2	;volatile
  1992     049F  086A               	movf	??_PROCESS_TMR0_AND_PRESCALER_ADJUST+1,w
  1993     04A0  00B9               	movwf	_final_TMR0+1	;volatile
  1994     04A1  0869               	movf	??_PROCESS_TMR0_AND_PRESCALER_ADJUST,w
  1995     04A2  00B8               	movwf	_final_TMR0	;volatile
  1996                           
  1997                           ;system.c: 255:         }
  1998     04A3  0008               	return
  1999     04A4                     l1556:
  2000     04A4  3007               	movlw	7
  2001     04A5  0643               	xorwf	_prescaler_final_index,w	;volatile
  2002     04A6  1D03               	btfss	3,2
  2003     04A7  0008               	return
  2004                           
  2005                           ;system.c: 257:             final_TMR0 = final_TMR0 + 1;
  2006     04A8  3001               	movlw	1
  2007     04A9  00E9               	movwf	??_PROCESS_TMR0_AND_PRESCALER_ADJUST
  2008     04AA  3000               	movlw	0
  2009     04AB  00EA               	movwf	??_PROCESS_TMR0_AND_PRESCALER_ADJUST+1
  2010     04AC  3000               	movlw	0
  2011     04AD  00EB               	movwf	??_PROCESS_TMR0_AND_PRESCALER_ADJUST+2
  2012     04AE  3000               	movlw	0
  2013     04AF  00EC               	movwf	??_PROCESS_TMR0_AND_PRESCALER_ADJUST+3
  2014     04B0  0838               	movf	_final_TMR0,w	;volatile
  2015     04B1  07E9               	addwf	??_PROCESS_TMR0_AND_PRESCALER_ADJUST,f
  2016     04B2  0839               	movf	_final_TMR0+1,w	;volatile
  2017     04B3  3DEA               	addwfc	??_PROCESS_TMR0_AND_PRESCALER_ADJUST+1,f
  2018     04B4  083A               	movf	_final_TMR0+2,w	;volatile
  2019     04B5  3DEB               	addwfc	??_PROCESS_TMR0_AND_PRESCALER_ADJUST+2,f
  2020     04B6  083B               	movf	_final_TMR0+3,w	;volatile
  2021     04B7  3DEC               	addwfc	??_PROCESS_TMR0_AND_PRESCALER_ADJUST+3,f
  2022     04B8  086C               	movf	??_PROCESS_TMR0_AND_PRESCALER_ADJUST+3,w
  2023     04B9  00BB               	movwf	_final_TMR0+3	;volatile
  2024     04BA  086B               	movf	??_PROCESS_TMR0_AND_PRESCALER_ADJUST+2,w
  2025     04BB  00BA               	movwf	_final_TMR0+2	;volatile
  2026     04BC  086A               	movf	??_PROCESS_TMR0_AND_PRESCALER_ADJUST+1,w
  2027     04BD  00B9               	movwf	_final_TMR0+1	;volatile
  2028     04BE  0869               	movf	??_PROCESS_TMR0_AND_PRESCALER_ADJUST,w
  2029     04BF  00B8               	movwf	_final_TMR0	;volatile
  2030     04C0  0008               	return
  2031     04C1                     __end_of_PROCESS_TMR0_AND_PRESCALER_ADJUST:
  2032                           
  2033                           	psect	text3
  2034     053D                     __ptext3:	
  2035 ;; *************** function _SHORTEN_PERIOD *****************
  2036 ;; Defined at:
  2037 ;;		line 185 in file "system.c"
  2038 ;; Parameters:    Size  Location     Type
  2039 ;;		None
  2040 ;; Auto vars:     Size  Location     Type
  2041 ;;  twofiftysix_    4   20[BANK0 ] unsigned long 
  2042 ;; Return value:  Size  Location     Type
  2043 ;;                  1    wreg      unsigned char 
  2044 ;; Registers used:
  2045 ;;		wreg, status,2, status,0, pclath, cstack
  2046 ;; Tracked objects:
  2047 ;;		On entry : 1F/0
  2048 ;;		On exit  : 1F/0
  2049 ;;		Unchanged: 0/0
  2050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2051 ;;      Params:         0       0       0       0
  2052 ;;      Locals:         0       8       0       0
  2053 ;;      Temps:          0       8       0       0
  2054 ;;      Totals:         0      16       0       0
  2055 ;;Total ram usage:       16 bytes
  2056 ;; Hardware stack levels used: 1
  2057 ;; Hardware stack levels required when called: 3
  2058 ;; This function calls:
  2059 ;;		___lmul
  2060 ;; This function is called by:
  2061 ;;		_PROCESS_TMR0_AND_PRESCALER_ADJUST
  2062 ;; This function uses a non-reentrant model
  2063 ;;
  2064                           
  2065     053D                     _SHORTEN_PERIOD:	
  2066                           ;psect for function _SHORTEN_PERIOD
  2067                           
  2068                           
  2069                           ;system.c: 190:             uint32_t twofiftysix_minus_TMR0_final = (((256-raw_TMR0)*(40
      +                          96 +(24*current_symmetry)))>>14);
  2070                           
  2071                           ;incstack = 0
  2072                           ; Regs used in _SHORTEN_PERIOD: [wreg+status,2+status,0+pclath+cstack]
  2073     053D  0833               	movf	_current_symmetry+3,w	;volatile
  2074     053E  00D0               	movwf	___lmul@multiplier+3
  2075     053F  0832               	movf	_current_symmetry+2,w	;volatile
  2076     0540  00CF               	movwf	___lmul@multiplier+2
  2077     0541  0831               	movf	_current_symmetry+1,w	;volatile
  2078     0542  00CE               	movwf	___lmul@multiplier+1
  2079     0543  0830               	movf	_current_symmetry,w	;volatile
  2080     0544  00CD               	movwf	___lmul@multiplier
  2081     0545  3000               	movlw	0
  2082     0546  00D4               	movwf	___lmul@multiplicand+3
  2083     0547  3000               	movlw	0
  2084     0548  00D3               	movwf	___lmul@multiplicand+2
  2085     0549  3000               	movlw	0
  2086     054A  00D2               	movwf	___lmul@multiplicand+1
  2087     054B  3018               	movlw	24
  2088     054C  00D1               	movwf	___lmul@multiplicand
  2089     054D  3186  2613  3185   	fcall	___lmul
  2090     0550  3000               	movlw	0
  2091     0551  074D               	addwf	?___lmul,w
  2092     0552  00E5               	movwf	_SHORTEN_PERIOD$855	;volatile
  2093     0553  3010               	movlw	16
  2094     0554  3D4E               	addwfc	?___lmul+1,w
  2095     0555  00E6               	movwf	_SHORTEN_PERIOD$855+1	;volatile
  2096     0556  3000               	movlw	0
  2097     0557  3D4F               	addwfc	?___lmul+2,w
  2098     0558  00E7               	movwf	_SHORTEN_PERIOD$855+2	;volatile
  2099     0559  3000               	movlw	0
  2100     055A  3D50               	addwfc	?___lmul+3,w
  2101     055B  00E8               	movwf	_SHORTEN_PERIOD$855+3	;volatile
  2102                           
  2103                           ;system.c: 190:             uint32_t twofiftysix_minus_TMR0_final = (((256-raw_TMR0)*(40
      +                          96 +(24*current_symmetry)))>>14);
  2104     055C  0868               	movf	_SHORTEN_PERIOD$855+3,w	;volatile
  2105     055D  00D0               	movwf	___lmul@multiplier+3
  2106     055E  0867               	movf	_SHORTEN_PERIOD$855+2,w	;volatile
  2107     055F  00CF               	movwf	___lmul@multiplier+2
  2108     0560  0866               	movf	_SHORTEN_PERIOD$855+1,w	;volatile
  2109     0561  00CE               	movwf	___lmul@multiplier+1
  2110     0562  0865               	movf	_SHORTEN_PERIOD$855,w	;volatile
  2111     0563  00CD               	movwf	___lmul@multiplier
  2112     0564  3000               	movlw	0
  2113     0565  00D9               	movwf	??_SHORTEN_PERIOD
  2114     0566  3001               	movlw	1
  2115     0567  00DA               	movwf	??_SHORTEN_PERIOD+1
  2116     0568  3000               	movlw	0
  2117     0569  00DB               	movwf	??_SHORTEN_PERIOD+2
  2118     056A  3000               	movlw	0
  2119     056B  00DC               	movwf	??_SHORTEN_PERIOD+3
  2120     056C  082C               	movf	_raw_TMR0,w	;volatile
  2121     056D  02D9               	subwf	??_SHORTEN_PERIOD,f
  2122     056E  082D               	movf	_raw_TMR0+1,w	;volatile
  2123     056F  3BDA               	subwfb	??_SHORTEN_PERIOD+1,f
  2124     0570  082E               	movf	_raw_TMR0+2,w	;volatile
  2125     0571  3BDB               	subwfb	??_SHORTEN_PERIOD+2,f
  2126     0572  082F               	movf	_raw_TMR0+3,w	;volatile
  2127     0573  3BDC               	subwfb	??_SHORTEN_PERIOD+3,f
  2128     0574  085C               	movf	??_SHORTEN_PERIOD+3,w
  2129     0575  00D4               	movwf	___lmul@multiplicand+3
  2130     0576  085B               	movf	??_SHORTEN_PERIOD+2,w
  2131     0577  00D3               	movwf	___lmul@multiplicand+2
  2132     0578  085A               	movf	??_SHORTEN_PERIOD+1,w
  2133     0579  00D2               	movwf	___lmul@multiplicand+1
  2134     057A  0859               	movf	??_SHORTEN_PERIOD,w
  2135     057B  00D1               	movwf	___lmul@multiplicand
  2136     057C  3186  2613  3185   	fcall	___lmul
  2137     057F  084D               	movf	?___lmul,w
  2138     0580  00DD               	movwf	??_SHORTEN_PERIOD+4
  2139     0581  084E               	movf	?___lmul+1,w
  2140     0582  00DE               	movwf	??_SHORTEN_PERIOD+5
  2141     0583  084F               	movf	?___lmul+2,w
  2142     0584  00DF               	movwf	??_SHORTEN_PERIOD+6
  2143     0585  0850               	movf	?___lmul+3,w
  2144     0586  00E0               	movwf	??_SHORTEN_PERIOD+7
  2145     0587  300E               	movlw	14
  2146     0588                     u535:
  2147     0588  36E0               	lsrf	??_SHORTEN_PERIOD+7,f
  2148     0589  0CDF               	rrf	??_SHORTEN_PERIOD+6,f
  2149     058A  0CDE               	rrf	??_SHORTEN_PERIOD+5,f
  2150     058B  0CDD               	rrf	??_SHORTEN_PERIOD+4,f
  2151     058C  0B89               	decfsz	9,f
  2152     058D  2D88               	goto	u535
  2153     058E  0860               	movf	??_SHORTEN_PERIOD+7,w
  2154     058F  00E4               	movwf	SHORTEN_PERIOD@twofiftysix_minus_TMR0_final+3
  2155     0590  085F               	movf	??_SHORTEN_PERIOD+6,w
  2156     0591  00E3               	movwf	SHORTEN_PERIOD@twofiftysix_minus_TMR0_final+2
  2157     0592  085E               	movf	??_SHORTEN_PERIOD+5,w
  2158     0593  00E2               	movwf	SHORTEN_PERIOD@twofiftysix_minus_TMR0_final+1
  2159     0594  085D               	movf	??_SHORTEN_PERIOD+4,w
  2160     0595  00E1               	movwf	SHORTEN_PERIOD@twofiftysix_minus_TMR0_final
  2161                           
  2162                           ;system.c: 193:         final_TMR0 = (256-twofiftysix_minus_TMR0_final);
  2163     0596  3000               	movlw	0
  2164     0597  00D9               	movwf	??_SHORTEN_PERIOD
  2165     0598  3001               	movlw	1
  2166     0599  00DA               	movwf	??_SHORTEN_PERIOD+1
  2167     059A  3000               	movlw	0
  2168     059B  00DB               	movwf	??_SHORTEN_PERIOD+2
  2169     059C  3000               	movlw	0
  2170     059D  00DC               	movwf	??_SHORTEN_PERIOD+3
  2171     059E  0861               	movf	SHORTEN_PERIOD@twofiftysix_minus_TMR0_final,w
  2172     059F  02D9               	subwf	??_SHORTEN_PERIOD,f
  2173     05A0  0862               	movf	SHORTEN_PERIOD@twofiftysix_minus_TMR0_final+1,w
  2174     05A1  3BDA               	subwfb	??_SHORTEN_PERIOD+1,f
  2175     05A2  0863               	movf	SHORTEN_PERIOD@twofiftysix_minus_TMR0_final+2,w
  2176     05A3  3BDB               	subwfb	??_SHORTEN_PERIOD+2,f
  2177     05A4  0864               	movf	SHORTEN_PERIOD@twofiftysix_minus_TMR0_final+3,w
  2178     05A5  3BDC               	subwfb	??_SHORTEN_PERIOD+3,f
  2179     05A6  085C               	movf	??_SHORTEN_PERIOD+3,w
  2180     05A7  00BB               	movwf	_final_TMR0+3	;volatile
  2181     05A8  085B               	movf	??_SHORTEN_PERIOD+2,w
  2182     05A9  00BA               	movwf	_final_TMR0+2	;volatile
  2183     05AA  085A               	movf	??_SHORTEN_PERIOD+1,w
  2184     05AB  00B9               	movwf	_final_TMR0+1	;volatile
  2185     05AC  0859               	movf	??_SHORTEN_PERIOD,w
  2186     05AD  00B8               	movwf	_final_TMR0	;volatile
  2187     05AE  01C7               	clrf	_prescaler_adjust	;volatile
  2188     05AF  0008               	return
  2189     05B0                     __end_of_SHORTEN_PERIOD:
  2190                           
  2191                           	psect	text4
  2192     02F5                     __ptext4:	
  2193 ;; *************** function _LENGTHEN_PERIOD *****************
  2194 ;; Defined at:
  2195 ;;		line 198 in file "system.c"
  2196 ;; Parameters:    Size  Location     Type
  2197 ;;		None
  2198 ;; Auto vars:     Size  Location     Type
  2199 ;;  twofiftysix_    4   24[BANK0 ] unsigned long 
  2200 ;; Return value:  Size  Location     Type
  2201 ;;                  1    wreg      unsigned char 
  2202 ;; Registers used:
  2203 ;;		wreg, status,2, status,0, pclath, cstack
  2204 ;; Tracked objects:
  2205 ;;		On entry : 1F/0
  2206 ;;		On exit  : 1F/0
  2207 ;;		Unchanged: 0/0
  2208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2209 ;;      Params:         0       0       0       0
  2210 ;;      Locals:         0       8       0       0
  2211 ;;      Temps:          0       8       0       0
  2212 ;;      Totals:         0      16       0       0
  2213 ;;Total ram usage:       16 bytes
  2214 ;; Hardware stack levels used: 1
  2215 ;; Hardware stack levels required when called: 3
  2216 ;; This function calls:
  2217 ;;		___lmul
  2218 ;; This function is called by:
  2219 ;;		_PROCESS_TMR0_AND_PRESCALER_ADJUST
  2220 ;; This function uses a non-reentrant model
  2221 ;;
  2222                           
  2223     02F5                     _LENGTHEN_PERIOD:	
  2224                           ;psect for function _LENGTHEN_PERIOD
  2225                           
  2226                           
  2227                           ;system.c: 203:             uint32_t twofiftysix_minus_TMR0_final = (((256-raw_TMR0)*(35
      +                          84 -(3*current_symmetry)))>>11);
  2228                           
  2229                           ;incstack = 0
  2230                           ; Regs used in _LENGTHEN_PERIOD: [wreg+status,2+status,0+pclath+cstack]
  2231     02F5  0833               	movf	_current_symmetry+3,w	;volatile
  2232     02F6  00D0               	movwf	___lmul@multiplier+3
  2233     02F7  0832               	movf	_current_symmetry+2,w	;volatile
  2234     02F8  00CF               	movwf	___lmul@multiplier+2
  2235     02F9  0831               	movf	_current_symmetry+1,w	;volatile
  2236     02FA  00CE               	movwf	___lmul@multiplier+1
  2237     02FB  0830               	movf	_current_symmetry,w	;volatile
  2238     02FC  00CD               	movwf	___lmul@multiplier
  2239     02FD  30FF               	movlw	255
  2240     02FE  00D4               	movwf	___lmul@multiplicand+3
  2241     02FF  30FF               	movlw	255
  2242     0300  00D3               	movwf	___lmul@multiplicand+2
  2243     0301  30FF               	movlw	255
  2244     0302  00D2               	movwf	___lmul@multiplicand+1
  2245     0303  30FD               	movlw	253
  2246     0304  00D1               	movwf	___lmul@multiplicand
  2247     0305  3186  2613  3182   	fcall	___lmul
  2248     0308  3000               	movlw	0
  2249     0309  074D               	addwf	?___lmul,w
  2250     030A  00E1               	movwf	_LENGTHEN_PERIOD$856	;volatile
  2251     030B  300E               	movlw	14
  2252     030C  3D4E               	addwfc	?___lmul+1,w
  2253     030D  00E2               	movwf	_LENGTHEN_PERIOD$856+1	;volatile
  2254     030E  3000               	movlw	0
  2255     030F  3D4F               	addwfc	?___lmul+2,w
  2256     0310  00E3               	movwf	_LENGTHEN_PERIOD$856+2	;volatile
  2257     0311  3000               	movlw	0
  2258     0312  3D50               	addwfc	?___lmul+3,w
  2259     0313  00E4               	movwf	_LENGTHEN_PERIOD$856+3	;volatile
  2260                           
  2261                           ;system.c: 203:             uint32_t twofiftysix_minus_TMR0_final = (((256-raw_TMR0)*(35
      +                          84 -(3*current_symmetry)))>>11);
  2262     0314  0864               	movf	_LENGTHEN_PERIOD$856+3,w	;volatile
  2263     0315  00D0               	movwf	___lmul@multiplier+3
  2264     0316  0863               	movf	_LENGTHEN_PERIOD$856+2,w	;volatile
  2265     0317  00CF               	movwf	___lmul@multiplier+2
  2266     0318  0862               	movf	_LENGTHEN_PERIOD$856+1,w	;volatile
  2267     0319  00CE               	movwf	___lmul@multiplier+1
  2268     031A  0861               	movf	_LENGTHEN_PERIOD$856,w	;volatile
  2269     031B  00CD               	movwf	___lmul@multiplier
  2270     031C  3000               	movlw	0
  2271     031D  00D9               	movwf	??_LENGTHEN_PERIOD
  2272     031E  3001               	movlw	1
  2273     031F  00DA               	movwf	??_LENGTHEN_PERIOD+1
  2274     0320  3000               	movlw	0
  2275     0321  00DB               	movwf	??_LENGTHEN_PERIOD+2
  2276     0322  3000               	movlw	0
  2277     0323  00DC               	movwf	??_LENGTHEN_PERIOD+3
  2278     0324  082C               	movf	_raw_TMR0,w	;volatile
  2279     0325  02D9               	subwf	??_LENGTHEN_PERIOD,f
  2280     0326  082D               	movf	_raw_TMR0+1,w	;volatile
  2281     0327  3BDA               	subwfb	??_LENGTHEN_PERIOD+1,f
  2282     0328  082E               	movf	_raw_TMR0+2,w	;volatile
  2283     0329  3BDB               	subwfb	??_LENGTHEN_PERIOD+2,f
  2284     032A  082F               	movf	_raw_TMR0+3,w	;volatile
  2285     032B  3BDC               	subwfb	??_LENGTHEN_PERIOD+3,f
  2286     032C  085C               	movf	??_LENGTHEN_PERIOD+3,w
  2287     032D  00D4               	movwf	___lmul@multiplicand+3
  2288     032E  085B               	movf	??_LENGTHEN_PERIOD+2,w
  2289     032F  00D3               	movwf	___lmul@multiplicand+2
  2290     0330  085A               	movf	??_LENGTHEN_PERIOD+1,w
  2291     0331  00D2               	movwf	___lmul@multiplicand+1
  2292     0332  0859               	movf	??_LENGTHEN_PERIOD,w
  2293     0333  00D1               	movwf	___lmul@multiplicand
  2294     0334  3186  2613  3182   	fcall	___lmul
  2295     0337  084D               	movf	?___lmul,w
  2296     0338  00DD               	movwf	??_LENGTHEN_PERIOD+4
  2297     0339  084E               	movf	?___lmul+1,w
  2298     033A  00DE               	movwf	??_LENGTHEN_PERIOD+5
  2299     033B  084F               	movf	?___lmul+2,w
  2300     033C  00DF               	movwf	??_LENGTHEN_PERIOD+6
  2301     033D  0850               	movf	?___lmul+3,w
  2302     033E  00E0               	movwf	??_LENGTHEN_PERIOD+7
  2303     033F  300B               	movlw	11
  2304     0340                     u545:
  2305     0340  36E0               	lsrf	??_LENGTHEN_PERIOD+7,f
  2306     0341  0CDF               	rrf	??_LENGTHEN_PERIOD+6,f
  2307     0342  0CDE               	rrf	??_LENGTHEN_PERIOD+5,f
  2308     0343  0CDD               	rrf	??_LENGTHEN_PERIOD+4,f
  2309     0344  0B89               	decfsz	9,f
  2310     0345  2B40               	goto	u545
  2311     0346  0860               	movf	??_LENGTHEN_PERIOD+7,w
  2312     0347  00E8               	movwf	LENGTHEN_PERIOD@twofiftysix_minus_TMR0_final+3
  2313     0348  085F               	movf	??_LENGTHEN_PERIOD+6,w
  2314     0349  00E7               	movwf	LENGTHEN_PERIOD@twofiftysix_minus_TMR0_final+2
  2315     034A  085E               	movf	??_LENGTHEN_PERIOD+5,w
  2316     034B  00E6               	movwf	LENGTHEN_PERIOD@twofiftysix_minus_TMR0_final+1
  2317     034C  085D               	movf	??_LENGTHEN_PERIOD+4,w
  2318     034D  00E5               	movwf	LENGTHEN_PERIOD@twofiftysix_minus_TMR0_final
  2319                           
  2320                           ;system.c: 206:         if(twofiftysix_minus_TMR0_final > 256){
  2321     034E  0868               	movf	LENGTHEN_PERIOD@twofiftysix_minus_TMR0_final+3,w
  2322     034F  1D03               	btfss	3,2
  2323     0350  2B5A               	goto	l1444
  2324     0351  0867               	movf	LENGTHEN_PERIOD@twofiftysix_minus_TMR0_final+2,w
  2325     0352  1D03               	btfss	3,2
  2326     0353  2B5A               	goto	l1444
  2327     0354  3001               	movlw	1
  2328     0355  0265               	subwf	LENGTHEN_PERIOD@twofiftysix_minus_TMR0_final,w
  2329     0356  3001               	movlw	1
  2330     0357  3B66               	subwfb	LENGTHEN_PERIOD@twofiftysix_minus_TMR0_final+1,w
  2331     0358  1C03               	btfss	3,0
  2332     0359  2B8D               	goto	l1450
  2333     035A                     l1444:
  2334                           
  2335                           ;system.c: 207:             twofiftysix_minus_TMR0_final = (twofiftysix_minus_TMR0_final
      +                           >> 1);
  2336     035A  0020               	movlb	0	; select bank0
  2337     035B  0865               	movf	LENGTHEN_PERIOD@twofiftysix_minus_TMR0_final,w
  2338     035C  00D9               	movwf	??_LENGTHEN_PERIOD
  2339     035D  0866               	movf	LENGTHEN_PERIOD@twofiftysix_minus_TMR0_final+1,w
  2340     035E  00DA               	movwf	??_LENGTHEN_PERIOD+1
  2341     035F  0867               	movf	LENGTHEN_PERIOD@twofiftysix_minus_TMR0_final+2,w
  2342     0360  00DB               	movwf	??_LENGTHEN_PERIOD+2
  2343     0361  0868               	movf	LENGTHEN_PERIOD@twofiftysix_minus_TMR0_final+3,w
  2344     0362  00DC               	movwf	??_LENGTHEN_PERIOD+3
  2345     0363  3001               	movlw	1
  2346     0364                     u565:
  2347     0364  36DC               	lsrf	??_LENGTHEN_PERIOD+3,f
  2348     0365  0CDB               	rrf	??_LENGTHEN_PERIOD+2,f
  2349     0366  0CDA               	rrf	??_LENGTHEN_PERIOD+1,f
  2350     0367  0CD9               	rrf	??_LENGTHEN_PERIOD,f
  2351     0368  0B89               	decfsz	9,f
  2352     0369  2B64               	goto	u565
  2353     036A  085C               	movf	??_LENGTHEN_PERIOD+3,w
  2354     036B  00E8               	movwf	LENGTHEN_PERIOD@twofiftysix_minus_TMR0_final+3
  2355     036C  085B               	movf	??_LENGTHEN_PERIOD+2,w
  2356     036D  00E7               	movwf	LENGTHEN_PERIOD@twofiftysix_minus_TMR0_final+2
  2357     036E  085A               	movf	??_LENGTHEN_PERIOD+1,w
  2358     036F  00E6               	movwf	LENGTHEN_PERIOD@twofiftysix_minus_TMR0_final+1
  2359     0370  0859               	movf	??_LENGTHEN_PERIOD,w
  2360     0371  00E5               	movwf	LENGTHEN_PERIOD@twofiftysix_minus_TMR0_final
  2361                           
  2362                           ;system.c: 208:             final_TMR0 = (256-twofiftysix_minus_TMR0_final);
  2363     0372  3000               	movlw	0
  2364     0373  00D9               	movwf	??_LENGTHEN_PERIOD
  2365     0374  3001               	movlw	1
  2366     0375  00DA               	movwf	??_LENGTHEN_PERIOD+1
  2367     0376  3000               	movlw	0
  2368     0377  00DB               	movwf	??_LENGTHEN_PERIOD+2
  2369     0378  3000               	movlw	0
  2370     0379  00DC               	movwf	??_LENGTHEN_PERIOD+3
  2371     037A  0865               	movf	LENGTHEN_PERIOD@twofiftysix_minus_TMR0_final,w
  2372     037B  02D9               	subwf	??_LENGTHEN_PERIOD,f
  2373     037C  0866               	movf	LENGTHEN_PERIOD@twofiftysix_minus_TMR0_final+1,w
  2374     037D  3BDA               	subwfb	??_LENGTHEN_PERIOD+1,f
  2375     037E  0867               	movf	LENGTHEN_PERIOD@twofiftysix_minus_TMR0_final+2,w
  2376     037F  3BDB               	subwfb	??_LENGTHEN_PERIOD+2,f
  2377     0380  0868               	movf	LENGTHEN_PERIOD@twofiftysix_minus_TMR0_final+3,w
  2378     0381  3BDC               	subwfb	??_LENGTHEN_PERIOD+3,f
  2379     0382  085C               	movf	??_LENGTHEN_PERIOD+3,w
  2380     0383  00BB               	movwf	_final_TMR0+3	;volatile
  2381     0384  085B               	movf	??_LENGTHEN_PERIOD+2,w
  2382     0385  00BA               	movwf	_final_TMR0+2	;volatile
  2383     0386  085A               	movf	??_LENGTHEN_PERIOD+1,w
  2384     0387  00B9               	movwf	_final_TMR0+1	;volatile
  2385     0388  0859               	movf	??_LENGTHEN_PERIOD,w
  2386     0389  00B8               	movwf	_final_TMR0	;volatile
  2387     038A  3002               	movlw	2
  2388     038B  00C7               	movwf	_prescaler_adjust	;volatile
  2389                           
  2390                           ;system.c: 210:         }
  2391     038C  0008               	return
  2392     038D                     l1450:
  2393                           
  2394                           ;system.c: 212:             final_TMR0 = 256-twofiftysix_minus_TMR0_final;
  2395     038D  3000               	movlw	0
  2396     038E  0020               	movlb	0	; select bank0
  2397     038F  00D9               	movwf	??_LENGTHEN_PERIOD
  2398     0390  3001               	movlw	1
  2399     0391  00DA               	movwf	??_LENGTHEN_PERIOD+1
  2400     0392  3000               	movlw	0
  2401     0393  00DB               	movwf	??_LENGTHEN_PERIOD+2
  2402     0394  3000               	movlw	0
  2403     0395  00DC               	movwf	??_LENGTHEN_PERIOD+3
  2404     0396  0865               	movf	LENGTHEN_PERIOD@twofiftysix_minus_TMR0_final,w
  2405     0397  02D9               	subwf	??_LENGTHEN_PERIOD,f
  2406     0398  0866               	movf	LENGTHEN_PERIOD@twofiftysix_minus_TMR0_final+1,w
  2407     0399  3BDA               	subwfb	??_LENGTHEN_PERIOD+1,f
  2408     039A  0867               	movf	LENGTHEN_PERIOD@twofiftysix_minus_TMR0_final+2,w
  2409     039B  3BDB               	subwfb	??_LENGTHEN_PERIOD+2,f
  2410     039C  0868               	movf	LENGTHEN_PERIOD@twofiftysix_minus_TMR0_final+3,w
  2411     039D  3BDC               	subwfb	??_LENGTHEN_PERIOD+3,f
  2412     039E  085C               	movf	??_LENGTHEN_PERIOD+3,w
  2413     039F  00BB               	movwf	_final_TMR0+3	;volatile
  2414     03A0  085B               	movf	??_LENGTHEN_PERIOD+2,w
  2415     03A1  00BA               	movwf	_final_TMR0+2	;volatile
  2416     03A2  085A               	movf	??_LENGTHEN_PERIOD+1,w
  2417     03A3  00B9               	movwf	_final_TMR0+1	;volatile
  2418     03A4  0859               	movf	??_LENGTHEN_PERIOD,w
  2419     03A5  00B8               	movwf	_final_TMR0	;volatile
  2420     03A6  01C7               	clrf	_prescaler_adjust	;volatile
  2421     03A7  0008               	return
  2422     03A8                     __end_of_LENGTHEN_PERIOD:
  2423                           
  2424                           	psect	text5
  2425     05B0                     __ptext5:	
  2426 ;; *************** function _ADJUST_AND_SET_PRESCALER *****************
  2427 ;; Defined at:
  2428 ;;		line 148 in file "system.c"
  2429 ;; Parameters:    Size  Location     Type
  2430 ;;		None
  2431 ;; Auto vars:     Size  Location     Type
  2432 ;;		None
  2433 ;; Return value:  Size  Location     Type
  2434 ;;                  1    wreg      unsigned char 
  2435 ;; Registers used:
  2436 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2437 ;; Tracked objects:
  2438 ;;		On entry : 0/0
  2439 ;;		On exit  : 1E/0
  2440 ;;		Unchanged: 0/0
  2441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2442 ;;      Params:         0       0       0       0
  2443 ;;      Locals:         0       0       0       0
  2444 ;;      Temps:          0       0       0       0
  2445 ;;      Totals:         0       0       0       0
  2446 ;;Total ram usage:        0 bytes
  2447 ;; Hardware stack levels used: 1
  2448 ;; Hardware stack levels required when called: 3
  2449 ;; This function calls:
  2450 ;;		_CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1
  2451 ;;		_TURN_PRESCALER_OFF
  2452 ;;		_TURN_PRESCALER_ON
  2453 ;; This function is called by:
  2454 ;;		_PROCESS_TMR0_AND_PRESCALER_ADJUST
  2455 ;; This function uses a non-reentrant model
  2456 ;;
  2457                           
  2458     05B0                     _ADJUST_AND_SET_PRESCALER:	
  2459                           ;psect for function _ADJUST_AND_SET_PRESCALER
  2460                           
  2461                           
  2462                           ;incstack = 0
  2463                           ; Regs used in _ADJUST_AND_SET_PRESCALER: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2464     05B0  0020               	movlb	0	; select bank0
  2465     05B1  0347               	decf	_prescaler_adjust,w	;volatile
  2466     05B2  1D03               	btfss	3,2
  2467     05B3  2DD1               	goto	l1400
  2468                           
  2469                           ;system.c: 150:         prescaler_overflow_flag = CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1();
  2470     05B4  3186  26DA  3185   	fcall	_CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1
  2471     05B7  0020               	movlb	0	; select bank0
  2472     05B8  00C4               	movwf	_prescaler_overflow_flag	;volatile
  2473                           
  2474                           ;system.c: 151:             if(prescaler_overflow_flag){
  2475     05B9  0844               	movf	_prescaler_overflow_flag,w	;volatile
  2476     05BA  1903               	btfsc	3,2
  2477     05BB  2DBF               	goto	l1394
  2478     05BC                     l1388:
  2479                           
  2480                           ;system.c: 152:                 TURN_PRESCALER_OFF();
  2481     05BC  3187  2733         	fcall	_TURN_PRESCALER_OFF
  2482     05BE  0008               	return
  2483     05BF                     l1394:
  2484                           
  2485                           ;system.c: 156:                 TURN_PRESCALER_ON();
  2486     05BF  3187  273C         	fcall	_TURN_PRESCALER_ON
  2487                           
  2488                           ;system.c: 157:                 OPTION_REG = prescaler_bits[base_prescaler_bits_index + 
      +                          1];
  2489     05C1  0020               	movlb	0	; select bank0
  2490     05C2  0846               	movf	_base_prescaler_bits_index,w	;volatile
  2491     05C3  3E18               	addlw	low ((_prescaler_bits+1)| (0+32768))
  2492     05C4  0084               	movwf	4
  2493     05C5  3087               	movlw	high ((_prescaler_bits+1)| (0+32768))
  2494     05C6  1803               	skipnc
  2495     05C7  3E01               	addlw	1
  2496     05C8  0085               	movwf	5
  2497     05C9  0800               	movf	0,w	;code access
  2498     05CA  0021               	movlb	1	; select bank1
  2499     05CB  0095               	movwf	21	;volatile
  2500                           
  2501                           ;system.c: 158:                 prescaler_final_index = base_prescaler_bits_index + 1;
  2502     05CC  0020               	movlb	0	; select bank0
  2503     05CD  0846               	movf	_base_prescaler_bits_index,w	;volatile
  2504     05CE  3E01               	addlw	1
  2505     05CF  00C3               	movwf	_prescaler_final_index	;volatile
  2506     05D0  0008               	return
  2507     05D1                     l1400:
  2508     05D1  3003               	movlw	3
  2509     05D2  0647               	xorwf	_prescaler_adjust,w	;volatile
  2510     05D3  1D03               	btfss	3,2
  2511     05D4  2DEF               	goto	l1418
  2512                           
  2513                           ;system.c: 162:         prescaler_overflow_flag = CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1();
  2514     05D5  3186  26DA  3185   	fcall	_CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1
  2515     05D8  0020               	movlb	0	; select bank0
  2516     05D9  00C4               	movwf	_prescaler_overflow_flag	;volatile
  2517                           
  2518                           ;system.c: 163:             if(prescaler_overflow_flag){
  2519     05DA  0844               	movf	_prescaler_overflow_flag,w	;volatile
  2520     05DB  1D03               	btfss	3,2
  2521     05DC  2DBC               	goto	l1388
  2522                           
  2523                           ;system.c: 168:                 TURN_PRESCALER_ON();
  2524     05DD  3187  273C         	fcall	_TURN_PRESCALER_ON
  2525                           
  2526                           ;system.c: 169:                 OPTION_REG = prescaler_bits[base_prescaler_bits_index + 
      +                          2];
  2527     05DF  0020               	movlb	0	; select bank0
  2528     05E0  0846               	movf	_base_prescaler_bits_index,w	;volatile
  2529     05E1  3E19               	addlw	low ((_prescaler_bits+2)| (0+32768))
  2530     05E2  0084               	movwf	4
  2531     05E3  3087               	movlw	high ((_prescaler_bits+2)| (0+32768))
  2532     05E4  1803               	skipnc
  2533     05E5  3E01               	addlw	1
  2534     05E6  0085               	movwf	5
  2535     05E7  0800               	movf	0,w	;code access
  2536     05E8  0021               	movlb	1	; select bank1
  2537     05E9  0095               	movwf	21	;volatile
  2538                           
  2539                           ;system.c: 170:                 prescaler_final_index = base_prescaler_bits_index + 2;
  2540     05EA  0020               	movlb	0	; select bank0
  2541     05EB  0846               	movf	_base_prescaler_bits_index,w	;volatile
  2542     05EC  3E02               	addlw	2
  2543     05ED  00C3               	movwf	_prescaler_final_index	;volatile
  2544     05EE  0008               	return
  2545     05EF                     l1418:
  2546     05EF  3002               	movlw	2
  2547     05F0  0647               	xorwf	_prescaler_adjust,w	;volatile
  2548     05F1  1D03               	btfss	3,2
  2549     05F2  2E02               	goto	l1424
  2550                           
  2551                           ;system.c: 174:         OPTION_REG = prescaler_bits[base_prescaler_bits_index - 1];
  2552     05F3  0846               	movf	_base_prescaler_bits_index,w	;volatile
  2553     05F4  3E16               	addlw	low ((_prescaler_bits+65535)| (0+32768))
  2554     05F5  0084               	movwf	4
  2555     05F6  3087               	movlw	high ((_prescaler_bits+65535)| (0+32768))
  2556     05F7  1803               	skipnc
  2557     05F8  3E01               	addlw	1
  2558     05F9  0085               	movwf	5
  2559     05FA  0800               	movf	0,w	;code access
  2560     05FB  0021               	movlb	1	; select bank1
  2561     05FC  0095               	movwf	21	;volatile
  2562                           
  2563                           ;system.c: 175:         prescaler_final_index = base_prescaler_bits_index - 1;
  2564     05FD  0020               	movlb	0	; select bank0
  2565     05FE  0846               	movf	_base_prescaler_bits_index,w	;volatile
  2566     05FF  3EFF               	addlw	255
  2567     0600  00C3               	movwf	_prescaler_final_index	;volatile
  2568                           
  2569                           ;system.c: 176:     }
  2570     0601  0008               	return
  2571     0602                     l1424:
  2572     0602  0847               	movf	_prescaler_adjust,w	;volatile
  2573     0603  1D03               	btfss	3,2
  2574     0604  0008               	return
  2575                           
  2576                           ;system.c: 178:         OPTION_REG = prescaler_bits[base_prescaler_bits_index];
  2577     0605  0846               	movf	_base_prescaler_bits_index,w	;volatile
  2578     0606  3E17               	addlw	low (_prescaler_bits| (0+32768))
  2579     0607  0084               	movwf	4
  2580     0608  3087               	movlw	high (_prescaler_bits| (0+32768))
  2581     0609  1803               	skipnc
  2582     060A  3E01               	addlw	1
  2583     060B  0085               	movwf	5
  2584     060C  0800               	movf	0,w	;code access
  2585     060D  0021               	movlb	1	; select bank1
  2586     060E  0095               	movwf	21	;volatile
  2587                           
  2588                           ;system.c: 179:         prescaler_final_index = base_prescaler_bits_index;
  2589     060F  0020               	movlb	0	; select bank0
  2590     0610  0846               	movf	_base_prescaler_bits_index,w	;volatile
  2591     0611  00C3               	movwf	_prescaler_final_index	;volatile
  2592     0612  0008               	return
  2593     0613                     __end_of_ADJUST_AND_SET_PRESCALER:
  2594                           
  2595                           	psect	text6
  2596     073C                     __ptext6:	
  2597 ;; *************** function _TURN_PRESCALER_ON *****************
  2598 ;; Defined at:
  2599 ;;		line 142 in file "system.c"
  2600 ;; Parameters:    Size  Location     Type
  2601 ;;		None
  2602 ;; Auto vars:     Size  Location     Type
  2603 ;;		None
  2604 ;; Return value:  Size  Location     Type
  2605 ;;                  1    wreg      unsigned char 
  2606 ;; Registers used:
  2607 ;;		status,2
  2608 ;; Tracked objects:
  2609 ;;		On entry : 1F/0
  2610 ;;		On exit  : 1F/1
  2611 ;;		Unchanged: 0/0
  2612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2613 ;;      Params:         0       0       0       0
  2614 ;;      Locals:         0       0       0       0
  2615 ;;      Temps:          0       0       0       0
  2616 ;;      Totals:         0       0       0       0
  2617 ;;Total ram usage:        0 bytes
  2618 ;; Hardware stack levels used: 1
  2619 ;; Hardware stack levels required when called: 2
  2620 ;; This function calls:
  2621 ;;		Nothing
  2622 ;; This function is called by:
  2623 ;;		_ADJUST_AND_SET_PRESCALER
  2624 ;; This function uses a non-reentrant model
  2625 ;;
  2626                           
  2627     073C                     _TURN_PRESCALER_ON:	
  2628                           ;psect for function _TURN_PRESCALER_ON
  2629                           
  2630                           
  2631                           ;system.c: 143:     OPTION_REG = OPTION_REG & (0<<3);
  2632                           
  2633                           ;incstack = 0
  2634                           ; Regs used in _TURN_PRESCALER_ON: [status,2]
  2635     073C  0021               	movlb	1	; select bank1
  2636     073D  0195               	clrf	21	;volatile
  2637     073E  0008               	return
  2638     073F                     __end_of_TURN_PRESCALER_ON:
  2639                           
  2640                           	psect	text7
  2641     0733                     __ptext7:	
  2642 ;; *************** function _TURN_PRESCALER_OFF *****************
  2643 ;; Defined at:
  2644 ;;		line 136 in file "system.c"
  2645 ;; Parameters:    Size  Location     Type
  2646 ;;		None
  2647 ;; Auto vars:     Size  Location     Type
  2648 ;;		None
  2649 ;; Return value:  Size  Location     Type
  2650 ;;                  1    wreg      unsigned char 
  2651 ;; Registers used:
  2652 ;;		wreg, status,2
  2653 ;; Tracked objects:
  2654 ;;		On entry : 0/0
  2655 ;;		On exit  : 1F/1
  2656 ;;		Unchanged: 0/0
  2657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2658 ;;      Params:         0       0       0       0
  2659 ;;      Locals:         0       0       0       0
  2660 ;;      Temps:          0       0       0       0
  2661 ;;      Totals:         0       0       0       0
  2662 ;;Total ram usage:        0 bytes
  2663 ;; Hardware stack levels used: 1
  2664 ;; Hardware stack levels required when called: 2
  2665 ;; This function calls:
  2666 ;;		Nothing
  2667 ;; This function is called by:
  2668 ;;		_ADJUST_AND_SET_PRESCALER
  2669 ;; This function uses a non-reentrant model
  2670 ;;
  2671                           
  2672     0733                     _TURN_PRESCALER_OFF:	
  2673                           ;psect for function _TURN_PRESCALER_OFF
  2674                           
  2675                           
  2676                           ;system.c: 137:     OPTION_REG = OPTION_REG & (1<<3);
  2677                           
  2678                           ;incstack = 0
  2679                           ; Regs used in _TURN_PRESCALER_OFF: [wreg+status,2]
  2680     0733  0021               	movlb	1	; select bank1
  2681     0734  0815               	movf	21,w	;volatile
  2682     0735  3908               	andlw	8
  2683     0736  0095               	movwf	21	;volatile
  2684     0737  0008               	return
  2685     0738                     __end_of_TURN_PRESCALER_OFF:
  2686                           
  2687                           	psect	text8
  2688     06DA                     __ptext8:	
  2689 ;; *************** function _CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1 *****************
  2690 ;; Defined at:
  2691 ;;		line 125 in file "system.c"
  2692 ;; Parameters:    Size  Location     Type
  2693 ;;		None
  2694 ;; Auto vars:     Size  Location     Type
  2695 ;;		None
  2696 ;; Return value:  Size  Location     Type
  2697 ;;                  1    wreg      unsigned char 
  2698 ;; Registers used:
  2699 ;;		wreg
  2700 ;; Tracked objects:
  2701 ;;		On entry : 1F/0
  2702 ;;		On exit  : 0/0
  2703 ;;		Unchanged: 0/0
  2704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2705 ;;      Params:         0       0       0       0
  2706 ;;      Locals:         0       0       0       0
  2707 ;;      Temps:          0       3       0       0
  2708 ;;      Totals:         0       3       0       0
  2709 ;;Total ram usage:        3 bytes
  2710 ;; Hardware stack levels used: 1
  2711 ;; Hardware stack levels required when called: 2
  2712 ;; This function calls:
  2713 ;;		Nothing
  2714 ;; This function is called by:
  2715 ;;		_ADJUST_AND_SET_PRESCALER
  2716 ;; This function uses a non-reentrant model
  2717 ;;
  2718                           
  2719     06DA                     _CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1:	
  2720                           ;psect for function _CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1
  2721                           
  2722                           
  2723                           ;system.c: 126:     if((base_prescaler_bits_index + 1) > 7){
  2724                           
  2725                           ;incstack = 0
  2726                           ; Regs used in _CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1: [wreg]
  2727     06DA  0846               	movf	_base_prescaler_bits_index,w	;volatile
  2728     06DB  3E01               	addlw	1
  2729     06DC  00CD               	movwf	??_CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1
  2730     06DD  3000               	movlw	0
  2731     06DE  1803               	skipnc
  2732     06DF  3001               	movlw	1
  2733     06E0  00CE               	movwf	??_CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1+1
  2734     06E1  084E               	movf	??_CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1+1,w
  2735     06E2  3A80               	xorlw	128
  2736     06E3  00CF               	movwf	??_CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1+2
  2737     06E4  3080               	movlw	128
  2738     06E5  024F               	subwf	??_CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1+2,w
  2739     06E6  3008               	movlw	8
  2740     06E7  1903               	btfsc	3,2
  2741     06E8  024D               	subwf	??_CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1,w
  2742     06E9  1C03               	skipc
  2743     06EA  2EED               	goto	l1300
  2744                           
  2745                           ;system.c: 128:         return 1;
  2746     06EB  3001               	movlw	1
  2747     06EC  0008               	return
  2748     06ED                     l1300:
  2749                           
  2750                           ;system.c: 131:         return 0;
  2751     06ED  3000               	movlw	0
  2752     06EE  0008               	return
  2753     06EF                     __end_of_CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1:
  2754                           
  2755                           	psect	text9
  2756     04C1                     __ptext9:	
  2757 ;; *************** function _PROCESS_RAW_SPEED_AND_PRESCALER *****************
  2758 ;; Defined at:
  2759 ;;		line 102 in file "system.c"
  2760 ;; Parameters:    Size  Location     Type
  2761 ;;		None
  2762 ;; Auto vars:     Size  Location     Type
  2763 ;;  speed_contro    2   17[BANK0 ] unsigned short 
  2764 ;; Return value:  Size  Location     Type
  2765 ;;                  1    wreg      unsigned char 
  2766 ;; Registers used:
  2767 ;;		wreg, status,2, status,0, pclath, cstack
  2768 ;; Tracked objects:
  2769 ;;		On entry : 1F/0
  2770 ;;		On exit  : 1F/0
  2771 ;;		Unchanged: 0/0
  2772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2773 ;;      Params:         0       0       0       0
  2774 ;;      Locals:         0       2       0       0
  2775 ;;      Temps:          0       5       0       0
  2776 ;;      Totals:         0       7       0       0
  2777 ;;Total ram usage:        7 bytes
  2778 ;; Hardware stack levels used: 1
  2779 ;; Hardware stack levels required when called: 3
  2780 ;; This function calls:
  2781 ;;		___lmul
  2782 ;; This function is called by:
  2783 ;;		_main
  2784 ;; This function uses a non-reentrant model
  2785 ;;
  2786                           
  2787     04C1                     _PROCESS_RAW_SPEED_AND_PRESCALER:	
  2788                           ;psect for function _PROCESS_RAW_SPEED_AND_PRESCALER
  2789                           
  2790                           
  2791                           ;system.c: 103:     current_speed_linear_32 = current_speed_linear;
  2792                           
  2793                           ;incstack = 0
  2794                           ; Regs used in _PROCESS_RAW_SPEED_AND_PRESCALER: [wreg+status,2+status,0+pclath+cstack]
  2795     04C1  083E               	movf	_current_speed_linear,w	;volatile
  2796     04C2  00B4               	movwf	_current_speed_linear_32	;volatile
  2797     04C3  083F               	movf	_current_speed_linear+1,w	;volatile
  2798     04C4  00B5               	movwf	_current_speed_linear_32+1	;volatile
  2799     04C5  01B6               	clrf	_current_speed_linear_32+2	;volatile
  2800     04C6  01B7               	clrf	_current_speed_linear_32+3	;volatile
  2801                           
  2802                           ;system.c: 104:     speed_control_32 = current_speed_linear_32 * 600;;
  2803     04C7  0837               	movf	_current_speed_linear_32+3,w	;volatile
  2804     04C8  00D0               	movwf	___lmul@multiplier+3
  2805     04C9  0836               	movf	_current_speed_linear_32+2,w	;volatile
  2806     04CA  00CF               	movwf	___lmul@multiplier+2
  2807     04CB  0835               	movf	_current_speed_linear_32+1,w	;volatile
  2808     04CC  00CE               	movwf	___lmul@multiplier+1
  2809     04CD  0834               	movf	_current_speed_linear_32,w	;volatile
  2810     04CE  00CD               	movwf	___lmul@multiplier
  2811     04CF  3000               	movlw	0
  2812     04D0  00D4               	movwf	___lmul@multiplicand+3
  2813     04D1  3000               	movlw	0
  2814     04D2  00D3               	movwf	___lmul@multiplicand+2
  2815     04D3  3002               	movlw	2
  2816     04D4  00D2               	movwf	___lmul@multiplicand+1
  2817     04D5  3058               	movlw	88
  2818     04D6  00D1               	movwf	___lmul@multiplicand
  2819     04D7  3186  2613  3184   	fcall	___lmul
  2820     04DA  0850               	movf	?___lmul+3,w
  2821     04DB  00AB               	movwf	_speed_control_32+3	;volatile
  2822     04DC  084F               	movf	?___lmul+2,w
  2823     04DD  00AA               	movwf	_speed_control_32+2	;volatile
  2824     04DE  084E               	movf	?___lmul+1,w
  2825     04DF  00A9               	movwf	_speed_control_32+1	;volatile
  2826     04E0  084D               	movf	?___lmul,w
  2827     04E1  00A8               	movwf	_speed_control_32	;volatile
  2828                           
  2829                           ;system.c: 105:     speed_control_32 = speed_control_32 >> 10;
  2830     04E2  0828               	movf	_speed_control_32,w	;volatile
  2831     04E3  00D9               	movwf	??_PROCESS_RAW_SPEED_AND_PRESCALER
  2832     04E4  0829               	movf	_speed_control_32+1,w	;volatile
  2833     04E5  00DA               	movwf	??_PROCESS_RAW_SPEED_AND_PRESCALER+1
  2834     04E6  082A               	movf	_speed_control_32+2,w	;volatile
  2835     04E7  00DB               	movwf	??_PROCESS_RAW_SPEED_AND_PRESCALER+2
  2836     04E8  082B               	movf	_speed_control_32+3,w	;volatile
  2837     04E9  00DC               	movwf	??_PROCESS_RAW_SPEED_AND_PRESCALER+3
  2838     04EA  300A               	movlw	10
  2839     04EB                     u635:
  2840     04EB  36DC               	lsrf	??_PROCESS_RAW_SPEED_AND_PRESCALER+3,f
  2841     04EC  0CDB               	rrf	??_PROCESS_RAW_SPEED_AND_PRESCALER+2,f
  2842     04ED  0CDA               	rrf	??_PROCESS_RAW_SPEED_AND_PRESCALER+1,f
  2843     04EE  0CD9               	rrf	??_PROCESS_RAW_SPEED_AND_PRESCALER,f
  2844     04EF  0B89               	decfsz	9,f
  2845     04F0  2CEB               	goto	u635
  2846     04F1  085C               	movf	??_PROCESS_RAW_SPEED_AND_PRESCALER+3,w
  2847     04F2  00AB               	movwf	_speed_control_32+3	;volatile
  2848     04F3  085B               	movf	??_PROCESS_RAW_SPEED_AND_PRESCALER+2,w
  2849     04F4  00AA               	movwf	_speed_control_32+2	;volatile
  2850     04F5  085A               	movf	??_PROCESS_RAW_SPEED_AND_PRESCALER+1,w
  2851     04F6  00A9               	movwf	_speed_control_32+1	;volatile
  2852     04F7  0859               	movf	??_PROCESS_RAW_SPEED_AND_PRESCALER,w
  2853     04F8  00A8               	movwf	_speed_control_32	;volatile
  2854                           
  2855                           ;system.c: 106:     speed_control = (uint16_t) speed_control_32;
  2856     04F9  0829               	movf	_speed_control_32+1,w	;volatile
  2857     04FA  00BD               	movwf	_speed_control+1	;volatile
  2858     04FB  0828               	movf	_speed_control_32,w	;volatile
  2859     04FC  00BC               	movwf	_speed_control	;volatile
  2860                           
  2861                           ;system.c: 108:         if(speed_control <= (127-12)){
  2862     04FD  3000               	movlw	0
  2863     04FE  023D               	subwf	_speed_control+1,w	;volatile
  2864     04FF  3074               	movlw	116
  2865     0500  1903               	skipnz
  2866     0501  023C               	subwf	_speed_control,w	;volatile
  2867     0502  1803               	skipnc
  2868     0503  2D13               	goto	l1516
  2869                           
  2870                           ;system.c: 109:             raw_TMR0 = (uint8_t) speed_control + 12;
  2871     0504  083C               	movf	_speed_control,w	;volatile
  2872     0505  3E0C               	addlw	12
  2873     0506  00AC               	movwf	_raw_TMR0	;volatile
  2874     0507  3000               	movlw	0
  2875     0508  1803               	skipnc
  2876     0509  3001               	movlw	1
  2877     050A  00AD               	movwf	_raw_TMR0+1	;volatile
  2878     050B  01AE               	clrf	_raw_TMR0+2	;volatile
  2879     050C  1BAD               	btfsc	_raw_TMR0+1,7	;volatile
  2880     050D  03AE               	decf	_raw_TMR0+2,f	;volatile
  2881     050E  082E               	movf	_raw_TMR0+2,w	;volatile
  2882     050F  00AF               	movwf	_raw_TMR0+3	;volatile
  2883                           
  2884                           ;system.c: 110:             base_prescaler_bits_index = 1;
  2885     0510  3001               	movlw	1
  2886     0511  00C6               	movwf	_base_prescaler_bits_index	;volatile
  2887                           
  2888                           ;system.c: 111:         }
  2889     0512  0008               	return
  2890     0513                     l1516:
  2891                           
  2892                           ;system.c: 113:             uint16_t speed_control_subtracted;;system.c: 114:           
      +                            speed_control_subtracted = speed_control - (127-12);
  2893     0513  083C               	movf	_speed_control,w	;volatile
  2894     0514  3E8D               	addlw	141
  2895     0515  00DE               	movwf	PROCESS_RAW_SPEED_AND_PRESCALER@speed_control_subtracted
  2896     0516  30FF               	movlw	255
  2897     0517  3D3D               	addwfc	_speed_control+1,w	;volatile
  2898     0518  00DF               	movwf	PROCESS_RAW_SPEED_AND_PRESCALER@speed_control_subtracted+1
  2899                           
  2900                           ;system.c: 115:             how_many_128 = (uint8_t)(speed_control_subtracted >> 7);
  2901     0519  085F               	movf	PROCESS_RAW_SPEED_AND_PRESCALER@speed_control_subtracted+1,w
  2902     051A  00DA               	movwf	??_PROCESS_RAW_SPEED_AND_PRESCALER+1
  2903     051B  085E               	movf	PROCESS_RAW_SPEED_AND_PRESCALER@speed_control_subtracted,w
  2904     051C  00D9               	movwf	??_PROCESS_RAW_SPEED_AND_PRESCALER
  2905     051D  3007               	movlw	7
  2906     051E                     u655:
  2907     051E  36DA               	lsrf	??_PROCESS_RAW_SPEED_AND_PRESCALER+1,f
  2908     051F  0CD9               	rrf	??_PROCESS_RAW_SPEED_AND_PRESCALER,f
  2909     0520  0B89               	decfsz	9,f
  2910     0521  2D1E               	goto	u655
  2911     0522  0859               	movf	??_PROCESS_RAW_SPEED_AND_PRESCALER,w
  2912     0523  00C8               	movwf	_how_many_128	;volatile
  2913                           
  2914                           ;system.c: 116:             raw_TMR0 = (uint8_t)(speed_control_subtracted - (uint16_t)(h
      +                          ow_many_128 << 7));
  2915     0524  0848               	movf	_how_many_128,w	;volatile
  2916     0525  00D9               	movwf	??_PROCESS_RAW_SPEED_AND_PRESCALER
  2917     0526  3006               	movlw	6
  2918     0527                     u665:
  2919     0527  35D9               	lslf	??_PROCESS_RAW_SPEED_AND_PRESCALER,f
  2920     0528  3EFF               	addlw	-1
  2921     0529  1D03               	skipz
  2922     052A  2D27               	goto	u665
  2923     052B  3559               	lslf	??_PROCESS_RAW_SPEED_AND_PRESCALER,w
  2924     052C  075E               	addwf	PROCESS_RAW_SPEED_AND_PRESCALER@speed_control_subtracted,w
  2925     052D  00DA               	movwf	??_PROCESS_RAW_SPEED_AND_PRESCALER+1
  2926     052E  01DB               	clrf	??_PROCESS_RAW_SPEED_AND_PRESCALER+2
  2927     052F  01DC               	clrf	??_PROCESS_RAW_SPEED_AND_PRESCALER+3
  2928     0530  01DD               	clrf	??_PROCESS_RAW_SPEED_AND_PRESCALER+4
  2929     0531  085D               	movf	??_PROCESS_RAW_SPEED_AND_PRESCALER+4,w
  2930     0532  00AF               	movwf	_raw_TMR0+3	;volatile
  2931     0533  085C               	movf	??_PROCESS_RAW_SPEED_AND_PRESCALER+3,w
  2932     0534  00AE               	movwf	_raw_TMR0+2	;volatile
  2933     0535  085B               	movf	??_PROCESS_RAW_SPEED_AND_PRESCALER+2,w
  2934     0536  00AD               	movwf	_raw_TMR0+1	;volatile
  2935     0537  085A               	movf	??_PROCESS_RAW_SPEED_AND_PRESCALER+1,w
  2936     0538  00AC               	movwf	_raw_TMR0	;volatile
  2937                           
  2938                           ;system.c: 119:             base_prescaler_bits_index = (uint8_t)(how_many_128 + 2);
  2939     0539  0848               	movf	_how_many_128,w	;volatile
  2940     053A  3E02               	addlw	2
  2941     053B  00C6               	movwf	_base_prescaler_bits_index	;volatile
  2942     053C  0008               	return
  2943     053D                     __end_of_PROCESS_RAW_SPEED_AND_PRESCALER:
  2944                           
  2945                           	psect	text10
  2946     0613                     __ptext10:	
  2947 ;; *************** function ___lmul *****************
  2948 ;; Defined at:
  2949 ;;		line 15 in file "/Applications/microchip/xc8/v2.45/pic/sources/c99/common/Umul32.c"
  2950 ;; Parameters:    Size  Location     Type
  2951 ;;  multiplier      4    0[BANK0 ] unsigned long 
  2952 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  2953 ;; Auto vars:     Size  Location     Type
  2954 ;;  product         4    8[BANK0 ] unsigned long 
  2955 ;; Return value:  Size  Location     Type
  2956 ;;                  4    0[BANK0 ] unsigned long 
  2957 ;; Registers used:
  2958 ;;		wreg, status,2, status,0
  2959 ;; Tracked objects:
  2960 ;;		On entry : 1F/0
  2961 ;;		On exit  : 1F/0
  2962 ;;		Unchanged: 0/0
  2963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2964 ;;      Params:         0       8       0       0
  2965 ;;      Locals:         0       4       0       0
  2966 ;;      Temps:          0       0       0       0
  2967 ;;      Totals:         0      12       0       0
  2968 ;;Total ram usage:       12 bytes
  2969 ;; Hardware stack levels used: 1
  2970 ;; Hardware stack levels required when called: 2
  2971 ;; This function calls:
  2972 ;;		Nothing
  2973 ;; This function is called by:
  2974 ;;		_PROCESS_RAW_SPEED_AND_PRESCALER
  2975 ;;		_SHORTEN_PERIOD
  2976 ;;		_LENGTHEN_PERIOD
  2977 ;; This function uses a non-reentrant model
  2978 ;;
  2979                           
  2980     0613                     ___lmul:	
  2981                           ;psect for function ___lmul
  2982                           
  2983                           
  2984                           ;incstack = 0
  2985                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  2986     0613  3000               	movlw	0
  2987     0614  00D8               	movwf	___lmul@product+3
  2988     0615  3000               	movlw	0
  2989     0616  00D7               	movwf	___lmul@product+2
  2990     0617  3000               	movlw	0
  2991     0618  00D6               	movwf	___lmul@product+1
  2992     0619  3000               	movlw	0
  2993     061A  00D5               	movwf	___lmul@product
  2994     061B                     l1314:
  2995     061B  1C4D               	btfss	___lmul@multiplier,0
  2996     061C  2E25               	goto	l1318
  2997     061D  0851               	movf	___lmul@multiplicand,w
  2998     061E  07D5               	addwf	___lmul@product,f
  2999     061F  0852               	movf	___lmul@multiplicand+1,w
  3000     0620  3DD6               	addwfc	___lmul@product+1,f
  3001     0621  0853               	movf	___lmul@multiplicand+2,w
  3002     0622  3DD7               	addwfc	___lmul@product+2,f
  3003     0623  0854               	movf	___lmul@multiplicand+3,w
  3004     0624  3DD8               	addwfc	___lmul@product+3,f
  3005     0625                     l1318:
  3006     0625  3001               	movlw	1
  3007     0626                     u415:
  3008     0626  35D1               	lslf	___lmul@multiplicand,f
  3009     0627  0DD2               	rlf	___lmul@multiplicand+1,f
  3010     0628  0DD3               	rlf	___lmul@multiplicand+2,f
  3011     0629  0DD4               	rlf	___lmul@multiplicand+3,f
  3012     062A  0B89               	decfsz	9,f
  3013     062B  2E26               	goto	u415
  3014     062C  3001               	movlw	1
  3015     062D                     u425:
  3016     062D  36D0               	lsrf	___lmul@multiplier+3,f
  3017     062E  0CCF               	rrf	___lmul@multiplier+2,f
  3018     062F  0CCE               	rrf	___lmul@multiplier+1,f
  3019     0630  0CCD               	rrf	___lmul@multiplier,f
  3020     0631  0B89               	decfsz	9,f
  3021     0632  2E2D               	goto	u425
  3022     0633  0850               	movf	___lmul@multiplier+3,w
  3023     0634  044F               	iorwf	___lmul@multiplier+2,w
  3024     0635  044E               	iorwf	___lmul@multiplier+1,w
  3025     0636  044D               	iorwf	___lmul@multiplier,w
  3026     0637  1D03               	skipz
  3027     0638  2E1B               	goto	l1314
  3028     0639  0858               	movf	___lmul@product+3,w
  3029     063A  00D0               	movwf	?___lmul+3
  3030     063B  0857               	movf	___lmul@product+2,w
  3031     063C  00CF               	movwf	?___lmul+2
  3032     063D  0856               	movf	___lmul@product+1,w
  3033     063E  00CE               	movwf	?___lmul+1
  3034     063F  0855               	movf	___lmul@product,w
  3035     0640  00CD               	movwf	?___lmul
  3036     0641  0008               	return
  3037     0642                     __end_of___lmul:
  3038                           
  3039                           	psect	text11
  3040     03A8                     __ptext11:	
  3041 ;; *************** function _GET_CURRENT_POT_VALUES *****************
  3042 ;; Defined at:
  3043 ;;		line 59 in file "system.c"
  3044 ;; Parameters:    Size  Location     Type
  3045 ;;		None
  3046 ;; Auto vars:     Size  Location     Type
  3047 ;;		None
  3048 ;; Return value:  Size  Location     Type
  3049 ;;                  1    wreg      unsigned char 
  3050 ;; Registers used:
  3051 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3052 ;; Tracked objects:
  3053 ;;		On entry : 1E/1
  3054 ;;		On exit  : 1F/0
  3055 ;;		Unchanged: 0/0
  3056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3057 ;;      Params:         0       0       0       0
  3058 ;;      Locals:         0       0       0       0
  3059 ;;      Temps:          0       4       0       0
  3060 ;;      Totals:         0       4       0       0
  3061 ;;Total ram usage:        4 bytes
  3062 ;; Hardware stack levels used: 1
  3063 ;; Hardware stack levels required when called: 4
  3064 ;; This function calls:
  3065 ;;		_DETERMINE_WAVESHAPE
  3066 ;;		_DO_ADC
  3067 ;; This function is called by:
  3068 ;;		_main
  3069 ;; This function uses a non-reentrant model
  3070 ;;
  3071                           
  3072     03A8                     _GET_CURRENT_POT_VALUES:	
  3073                           ;psect for function _GET_CURRENT_POT_VALUES
  3074                           
  3075                           
  3076                           ;system.c: 60:     current_waveshape = DETERMINE_WAVESHAPE();
  3077                           
  3078                           ;incstack = 0
  3079                           ; Regs used in _GET_CURRENT_POT_VALUES: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3080     03A8  3186  266E  3183   	fcall	_DETERMINE_WAVESHAPE
  3081     03AB  00F8               	movwf	_current_waveshape	;volatile
  3082                           
  3083                           ;system.c: 61:     current_speed_linear = DO_ADC(&speed_adc_config_value);
  3084     03AC  304E               	movlw	low (_speed_adc_config_value| (0+32768))
  3085     03AD  00CD               	movwf	DO_ADC@modifier
  3086     03AE  3087               	movlw	high (_speed_adc_config_value| (0+32768))
  3087     03AF  00CE               	movwf	DO_ADC@modifier+1
  3088     03B0  3186  2642  3183   	fcall	_DO_ADC
  3089     03B3  084E               	movf	?_DO_ADC+1,w
  3090     03B4  00BF               	movwf	_current_speed_linear+1	;volatile
  3091     03B5  084D               	movf	?_DO_ADC,w
  3092     03B6  00BE               	movwf	_current_speed_linear	;volatile
  3093                           
  3094                           ;system.c: 63:         current_depth = DO_ADC(&depth_adc_config_value);
  3095     03B7  304D               	movlw	low (_depth_adc_config_value| (0+32768))
  3096     03B8  00CD               	movwf	DO_ADC@modifier
  3097     03B9  3087               	movlw	high (_depth_adc_config_value| (0+32768))
  3098     03BA  00CE               	movwf	DO_ADC@modifier+1
  3099     03BB  3186  2642  3183   	fcall	_DO_ADC
  3100     03BE  084E               	movf	?_DO_ADC+1,w
  3101     03BF  00C1               	movwf	_current_depth+1	;volatile
  3102     03C0  084D               	movf	?_DO_ADC,w
  3103     03C1  00C0               	movwf	_current_depth	;volatile
  3104                           
  3105                           ;system.c: 64:         current_depth = current_depth >> 2;
  3106     03C2  0841               	movf	_current_depth+1,w	;volatile
  3107     03C3  00D6               	movwf	??_GET_CURRENT_POT_VALUES+1
  3108     03C4  0840               	movf	_current_depth,w	;volatile
  3109     03C5  00D5               	movwf	??_GET_CURRENT_POT_VALUES
  3110     03C6  36D6               	lsrf	??_GET_CURRENT_POT_VALUES+1,f
  3111     03C7  0CD5               	rrf	??_GET_CURRENT_POT_VALUES,f
  3112     03C8  36D6               	lsrf	??_GET_CURRENT_POT_VALUES+1,f
  3113     03C9  0CD5               	rrf	??_GET_CURRENT_POT_VALUES,f
  3114     03CA  0855               	movf	??_GET_CURRENT_POT_VALUES,w
  3115     03CB  00C0               	movwf	_current_depth	;volatile
  3116     03CC  0856               	movf	??_GET_CURRENT_POT_VALUES+1,w
  3117     03CD  00C1               	movwf	_current_depth+1	;volatile
  3118                           
  3119                           ;system.c: 67:         current_symmetry = DO_ADC(&symmetry_adc_config_value);
  3120     03CE  304C               	movlw	low (_symmetry_adc_config_value| (0+32768))
  3121     03CF  00CD               	movwf	DO_ADC@modifier
  3122     03D0  3087               	movlw	high (_symmetry_adc_config_value| (0+32768))
  3123     03D1  00CE               	movwf	DO_ADC@modifier+1
  3124     03D2  3186  2642  3183   	fcall	_DO_ADC
  3125     03D5  084D               	movf	?_DO_ADC,w
  3126     03D6  00B0               	movwf	_current_symmetry	;volatile
  3127     03D7  084E               	movf	?_DO_ADC+1,w
  3128     03D8  00B1               	movwf	_current_symmetry+1	;volatile
  3129     03D9  01B2               	clrf	_current_symmetry+2	;volatile
  3130     03DA  01B3               	clrf	_current_symmetry+3	;volatile
  3131                           
  3132                           ;system.c: 73:             if(symmetry_count < 3){
  3133     03DB  3003               	movlw	3
  3134     03DC  0249               	subwf	_symmetry_count,w	;volatile
  3135     03DD  1803               	skipnc
  3136     03DE  2C08               	goto	l1486
  3137                           
  3138                           ;system.c: 74:                 if(not_first_average_flag == 0){
  3139     03DF  0842               	movf	_not_first_average_flag,w	;volatile
  3140     03E0  1D03               	btfss	3,2
  3141     03E1  2BEB               	goto	l1484
  3142                           
  3143                           ;system.c: 75:                     current_symmetry = 512;
  3144     03E2  3000               	movlw	0
  3145     03E3  00B3               	movwf	_current_symmetry+3	;volatile
  3146     03E4  3000               	movlw	0
  3147     03E5  00B2               	movwf	_current_symmetry+2	;volatile
  3148     03E6  3002               	movlw	2
  3149     03E7  00B1               	movwf	_current_symmetry+1	;volatile
  3150     03E8  3000               	movlw	0
  3151     03E9  00B0               	movwf	_current_symmetry	;volatile
  3152                           
  3153                           ;system.c: 76:                 }
  3154     03EA  0008               	return
  3155     03EB                     l1484:
  3156                           
  3157                           ;system.c: 78:                     current_symmetry = last_current_symmetry_average;
  3158     03EB  0823               	movf	_last_current_symmetry_average+3,w	;volatile
  3159     03EC  00B3               	movwf	_current_symmetry+3	;volatile
  3160     03ED  0822               	movf	_last_current_symmetry_average+2,w	;volatile
  3161     03EE  00B2               	movwf	_current_symmetry+2	;volatile
  3162     03EF  0821               	movf	_last_current_symmetry_average+1,w	;volatile
  3163     03F0  00B1               	movwf	_current_symmetry+1	;volatile
  3164     03F1  0820               	movf	_last_current_symmetry_average,w	;volatile
  3165     03F2  00B0               	movwf	_current_symmetry	;volatile
  3166                           
  3167                           ;system.c: 79:                     symmetry_cum = symmetry_cum + current_symmetry;
  3168     03F3  0824               	movf	_symmetry_cum,w	;volatile
  3169     03F4  0730               	addwf	_current_symmetry,w	;volatile
  3170     03F5  00D5               	movwf	??_GET_CURRENT_POT_VALUES
  3171     03F6  0825               	movf	_symmetry_cum+1,w	;volatile
  3172     03F7  3D31               	addwfc	_current_symmetry+1,w	;volatile
  3173     03F8  00D6               	movwf	??_GET_CURRENT_POT_VALUES+1
  3174     03F9  0826               	movf	_symmetry_cum+2,w	;volatile
  3175     03FA  3D32               	addwfc	_current_symmetry+2,w	;volatile
  3176     03FB  00D7               	movwf	??_GET_CURRENT_POT_VALUES+2
  3177     03FC  0827               	movf	_symmetry_cum+3,w	;volatile
  3178     03FD  3D33               	addwfc	_current_symmetry+3,w	;volatile
  3179     03FE  00D8               	movwf	??_GET_CURRENT_POT_VALUES+3
  3180     03FF  0858               	movf	??_GET_CURRENT_POT_VALUES+3,w
  3181     0400  00A7               	movwf	_symmetry_cum+3	;volatile
  3182     0401  0857               	movf	??_GET_CURRENT_POT_VALUES+2,w
  3183     0402  00A6               	movwf	_symmetry_cum+2	;volatile
  3184     0403  0856               	movf	??_GET_CURRENT_POT_VALUES+1,w
  3185     0404  00A5               	movwf	_symmetry_cum+1	;volatile
  3186     0405  0855               	movf	??_GET_CURRENT_POT_VALUES,w
  3187     0406  00A4               	movwf	_symmetry_cum	;volatile
  3188     0407  0008               	return
  3189     0408                     l1486:
  3190                           
  3191                           ;system.c: 83:                 if(not_first_average_flag == 0){
  3192     0408  0842               	movf	_not_first_average_flag,w	;volatile
  3193     0409  1D03               	btfss	3,2
  3194     040A  2C0D               	goto	l1490
  3195                           
  3196                           ;system.c: 84:                     not_first_average_flag = 1;
  3197     040B  3001               	movlw	1
  3198     040C  00C2               	movwf	_not_first_average_flag	;volatile
  3199     040D                     l1490:
  3200                           
  3201                           ;system.c: 85:                     current_symmetry = symmetry_cum >> 2;
  3202     040D  0824               	movf	_symmetry_cum,w	;volatile
  3203     040E  00D5               	movwf	??_GET_CURRENT_POT_VALUES
  3204     040F  0825               	movf	_symmetry_cum+1,w	;volatile
  3205     0410  00D6               	movwf	??_GET_CURRENT_POT_VALUES+1
  3206     0411  0826               	movf	_symmetry_cum+2,w	;volatile
  3207     0412  00D7               	movwf	??_GET_CURRENT_POT_VALUES+2
  3208     0413  0827               	movf	_symmetry_cum+3,w	;volatile
  3209     0414  00D8               	movwf	??_GET_CURRENT_POT_VALUES+3
  3210     0415  3002               	movlw	2
  3211     0416                     u625:
  3212     0416  36D8               	lsrf	??_GET_CURRENT_POT_VALUES+3,f
  3213     0417  0CD7               	rrf	??_GET_CURRENT_POT_VALUES+2,f
  3214     0418  0CD6               	rrf	??_GET_CURRENT_POT_VALUES+1,f
  3215     0419  0CD5               	rrf	??_GET_CURRENT_POT_VALUES,f
  3216     041A  0B89               	decfsz	9,f
  3217     041B  2C16               	goto	u625
  3218     041C  0858               	movf	??_GET_CURRENT_POT_VALUES+3,w
  3219     041D  00B3               	movwf	_current_symmetry+3	;volatile
  3220     041E  0857               	movf	??_GET_CURRENT_POT_VALUES+2,w
  3221     041F  00B2               	movwf	_current_symmetry+2	;volatile
  3222     0420  0856               	movf	??_GET_CURRENT_POT_VALUES+1,w
  3223     0421  00B1               	movwf	_current_symmetry+1	;volatile
  3224     0422  0855               	movf	??_GET_CURRENT_POT_VALUES,w
  3225     0423  00B0               	movwf	_current_symmetry	;volatile
  3226                           
  3227                           ;system.c: 86:                     last_current_symmetry_average = current_symmetry;
  3228     0424  0833               	movf	_current_symmetry+3,w	;volatile
  3229     0425  00A3               	movwf	_last_current_symmetry_average+3	;volatile
  3230     0426  0832               	movf	_current_symmetry+2,w	;volatile
  3231     0427  00A2               	movwf	_last_current_symmetry_average+2	;volatile
  3232     0428  0831               	movf	_current_symmetry+1,w	;volatile
  3233     0429  00A1               	movwf	_last_current_symmetry_average+1	;volatile
  3234     042A  0830               	movf	_current_symmetry,w	;volatile
  3235     042B  00A0               	movwf	_last_current_symmetry_average	;volatile
  3236                           
  3237                           ;system.c: 87:                     symmetry_cum = 0;
  3238     042C  3000               	movlw	0
  3239     042D  00A7               	movwf	_symmetry_cum+3	;volatile
  3240     042E  3000               	movlw	0
  3241     042F  00A6               	movwf	_symmetry_cum+2	;volatile
  3242     0430  3000               	movlw	0
  3243     0431  00A5               	movwf	_symmetry_cum+1	;volatile
  3244     0432  3000               	movlw	0
  3245     0433  00A4               	movwf	_symmetry_cum	;volatile
  3246                           
  3247                           ;system.c: 89:                 }
  3248     0434  0008               	return
  3249     0435                     __end_of_GET_CURRENT_POT_VALUES:
  3250                           
  3251                           	psect	text12
  3252     066E                     __ptext12:	
  3253 ;; *************** function _DETERMINE_WAVESHAPE *****************
  3254 ;; Defined at:
  3255 ;;		line 30 in file "system.c"
  3256 ;; Parameters:    Size  Location     Type
  3257 ;;		None
  3258 ;; Auto vars:     Size  Location     Type
  3259 ;;  ADC             2    6[BANK0 ] unsigned short 
  3260 ;; Return value:  Size  Location     Type
  3261 ;;                  1    wreg      unsigned char 
  3262 ;; Registers used:
  3263 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3264 ;; Tracked objects:
  3265 ;;		On entry : 1E/1
  3266 ;;		On exit  : 1F/0
  3267 ;;		Unchanged: 0/0
  3268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3269 ;;      Params:         0       0       0       0
  3270 ;;      Locals:         0       2       0       0
  3271 ;;      Temps:          0       0       0       0
  3272 ;;      Totals:         0       2       0       0
  3273 ;;Total ram usage:        2 bytes
  3274 ;; Hardware stack levels used: 1
  3275 ;; Hardware stack levels required when called: 3
  3276 ;; This function calls:
  3277 ;;		_DO_ADC
  3278 ;; This function is called by:
  3279 ;;		_GET_CURRENT_POT_VALUES
  3280 ;; This function uses a non-reentrant model
  3281 ;;
  3282                           
  3283     066E                     _DETERMINE_WAVESHAPE:	
  3284                           ;psect for function _DETERMINE_WAVESHAPE
  3285                           
  3286                           
  3287                           ;system.c: 31:     uint16_t ADC = DO_ADC(&waveshape_adc_config_value);
  3288                           
  3289                           ;incstack = 0
  3290                           ; Regs used in _DETERMINE_WAVESHAPE: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3291     066E  304F               	movlw	low (_waveshape_adc_config_value| (0+32768))
  3292     066F  0020               	movlb	0	; select bank0
  3293     0670  00CD               	movwf	DO_ADC@modifier
  3294     0671  3087               	movlw	high (_waveshape_adc_config_value| (0+32768))
  3295     0672  00CE               	movwf	DO_ADC@modifier+1
  3296     0673  3186  2642  3186   	fcall	_DO_ADC
  3297     0676  084E               	movf	?_DO_ADC+1,w
  3298     0677  00D4               	movwf	DETERMINE_WAVESHAPE@ADC+1
  3299     0678  084D               	movf	?_DO_ADC,w
  3300     0679  00D3               	movwf	DETERMINE_WAVESHAPE@ADC
  3301                           
  3302                           ;system.c: 32:     if(ADC <= 341){
  3303     067A  3001               	movlw	1
  3304     067B  0254               	subwf	DETERMINE_WAVESHAPE@ADC+1,w
  3305     067C  3056               	movlw	86
  3306     067D  1903               	skipnz
  3307     067E  0253               	subwf	DETERMINE_WAVESHAPE@ADC,w
  3308     067F  1803               	skipnc
  3309     0680  2E83               	goto	l1360
  3310                           
  3311                           ;system.c: 33:             return 0;
  3312     0681  3000               	movlw	0
  3313     0682  0008               	return
  3314     0683                     l1360:
  3315                           
  3316                           ;system.c: 35:         if (ADC <= 682){
  3317     0683  3002               	movlw	2
  3318     0684  0254               	subwf	DETERMINE_WAVESHAPE@ADC+1,w
  3319     0685  30AB               	movlw	171
  3320     0686  1903               	skipnz
  3321     0687  0253               	subwf	DETERMINE_WAVESHAPE@ADC,w
  3322     0688  1803               	skipnc
  3323     0689  2E8C               	goto	l1366
  3324     068A                     l1362:
  3325                           
  3326                           ;system.c: 36:             return 1;
  3327     068A  3001               	movlw	1
  3328     068B  0008               	return
  3329     068C                     l1366:
  3330                           
  3331                           ;system.c: 38:         if (ADC <= 1023){
  3332     068C  3004               	movlw	4
  3333     068D  0254               	subwf	DETERMINE_WAVESHAPE@ADC+1,w
  3334     068E  3000               	movlw	0
  3335     068F  1903               	skipnz
  3336     0690  0253               	subwf	DETERMINE_WAVESHAPE@ADC,w
  3337     0691  1803               	skipnc
  3338     0692  2E8A               	goto	l1362
  3339                           
  3340                           ;system.c: 39:             return 2;
  3341     0693  3002               	movlw	2
  3342     0694  0008               	return
  3343     0695                     __end_of_DETERMINE_WAVESHAPE:
  3344                           
  3345                           	psect	text13
  3346     0642                     __ptext13:	
  3347 ;; *************** function _DO_ADC *****************
  3348 ;; Defined at:
  3349 ;;		line 25 in file "config.c"
  3350 ;; Parameters:    Size  Location     Type
  3351 ;;  modifier        2    0[BANK0 ] PTR const unsigned char 
  3352 ;;		 -> symmetry_adc_config_value(1), depth_adc_config_value(1), speed_adc_config_value(1), waveshape_adc_config_value(1
      +), 
  3353 ;; Auto vars:     Size  Location     Type
  3354 ;;  adc_result      2    3[BANK0 ] unsigned short 
  3355 ;;  temp            1    5[BANK0 ] unsigned char 
  3356 ;; Return value:  Size  Location     Type
  3357 ;;                  2    0[BANK0 ] unsigned short 
  3358 ;; Registers used:
  3359 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  3360 ;; Tracked objects:
  3361 ;;		On entry : 1F/0
  3362 ;;		On exit  : 1F/0
  3363 ;;		Unchanged: 0/0
  3364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3365 ;;      Params:         0       2       0       0
  3366 ;;      Locals:         0       3       0       0
  3367 ;;      Temps:          0       1       0       0
  3368 ;;      Totals:         0       6       0       0
  3369 ;;Total ram usage:        6 bytes
  3370 ;; Hardware stack levels used: 1
  3371 ;; Hardware stack levels required when called: 2
  3372 ;; This function calls:
  3373 ;;		Nothing
  3374 ;; This function is called by:
  3375 ;;		_DETERMINE_WAVESHAPE
  3376 ;;		_GET_CURRENT_POT_VALUES
  3377 ;; This function uses a non-reentrant model
  3378 ;;
  3379                           
  3380     0642                     _DO_ADC:	
  3381                           ;psect for function _DO_ADC
  3382                           
  3383                           
  3384                           ;config.c: 26:     ADCON0 = 0x00;
  3385                           
  3386                           ;incstack = 0
  3387                           ; Regs used in _DO_ADC: [wreg-fsr0h+status,2+status,0+pclath]
  3388     0642  0021               	movlb	1	; select bank1
  3389     0643  019D               	clrf	29	;volatile
  3390                           
  3391                           ;config.c: 28:     uint8_t temp = (uint8_t)(*modifier << 2);
  3392     0644  0020               	movlb	0	; select bank0
  3393     0645  084D               	movf	DO_ADC@modifier,w
  3394     0646  0084               	movwf	4
  3395     0647  084E               	movf	DO_ADC@modifier+1,w
  3396     0648  0085               	movwf	5
  3397     0649  0800               	movf	0,w	;code access
  3398     064A  00CF               	movwf	??_DO_ADC
  3399     064B  3001               	movlw	1
  3400     064C                     u375:
  3401     064C  35CF               	lslf	??_DO_ADC,f
  3402     064D  3EFF               	addlw	-1
  3403     064E  1D03               	skipz
  3404     064F  2E4C               	goto	u375
  3405     0650  354F               	lslf	??_DO_ADC,w
  3406     0651  00D2               	movwf	DO_ADC@temp
  3407                           
  3408                           ;config.c: 29:     ADCON0 = ADCON0 | temp;
  3409     0652  0021               	movlb	1	; select bank1
  3410     0653  081D               	movf	29,w	;volatile
  3411     0654  0020               	movlb	0	; select bank0
  3412     0655  0452               	iorwf	DO_ADC@temp,w
  3413     0656  0021               	movlb	1	; select bank1
  3414     0657  009D               	movwf	29	;volatile
  3415                           
  3416                           ;config.c: 30:     ADON = 1;
  3417     0658  141D               	bsf	29,0	;volatile
  3418                           
  3419                           ;config.c: 31:     _delay((unsigned long)((0.005)*(32000000/4000.0)));
  3420     0659  300D               	movlw	13
  3421     065A                     u987:
  3422     065A  0B89               	decfsz	9,f
  3423     065B  2E5A               	goto	u987
  3424     065C  0000               	nop
  3425                           
  3426                           ;config.c: 32:     GO_nDONE = 1;
  3427     065D  0021               	movlb	1	; select bank1
  3428     065E  149D               	bsf	29,1	;volatile
  3429     065F                     l161:	
  3430                           ;config.c: 33:     while(GO_nDONE == 1){}
  3431                           
  3432     065F  189D               	btfsc	29,1	;volatile
  3433     0660  2E5F               	goto	l161
  3434                           
  3435                           ;config.c: 34:     ADON = 0;
  3436     0661  101D               	bcf	29,0	;volatile
  3437                           
  3438                           ;config.c: 35:     uint16_t adc_result = ((uint16_t)(ADRESH << 8) | ADRESL);
  3439     0662  081C               	movf	28,w	;volatile
  3440     0663  0020               	movlb	0	; select bank0
  3441     0664  00D1               	movwf	DO_ADC@adc_result+1
  3442     0665  0021               	movlb	1	; select bank1
  3443     0666  081B               	movf	27,w	;volatile
  3444     0667  0020               	movlb	0	; select bank0
  3445     0668  00D0               	movwf	DO_ADC@adc_result
  3446                           
  3447                           ;config.c: 36:     return adc_result;
  3448     0669  0851               	movf	DO_ADC@adc_result+1,w
  3449     066A  00CE               	movwf	?_DO_ADC+1
  3450     066B  0850               	movf	DO_ADC@adc_result,w
  3451     066C  00CD               	movwf	?_DO_ADC
  3452     066D  0008               	return
  3453     066E                     __end_of_DO_ADC:
  3454                           
  3455                           	psect	text14
  3456     0741                     __ptext14:	
  3457 ;; *************** function _CONFIG_TMR0_INTERRUPT *****************
  3458 ;; Defined at:
  3459 ;;		line 58 in file "config.c"
  3460 ;; Parameters:    Size  Location     Type
  3461 ;;		None
  3462 ;; Auto vars:     Size  Location     Type
  3463 ;;		None
  3464 ;; Return value:  Size  Location     Type
  3465 ;;                  1    wreg      unsigned char 
  3466 ;; Registers used:
  3467 ;;		None
  3468 ;; Tracked objects:
  3469 ;;		On entry : B1F/1
  3470 ;;		On exit  : B1F/1
  3471 ;;		Unchanged: B1F/0
  3472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3473 ;;      Params:         0       0       0       0
  3474 ;;      Locals:         0       0       0       0
  3475 ;;      Temps:          0       0       0       0
  3476 ;;      Totals:         0       0       0       0
  3477 ;;Total ram usage:        0 bytes
  3478 ;; Hardware stack levels used: 1
  3479 ;; Hardware stack levels required when called: 2
  3480 ;; This function calls:
  3481 ;;		Nothing
  3482 ;; This function is called by:
  3483 ;;		_main
  3484 ;; This function uses a non-reentrant model
  3485 ;;
  3486                           
  3487     0741                     _CONFIG_TMR0_INTERRUPT:	
  3488                           ;psect for function _CONFIG_TMR0_INTERRUPT
  3489                           
  3490                           
  3491                           ;config.c: 59:     TMR0IE = 1;
  3492                           
  3493                           ;incstack = 0
  3494                           ; Regs used in _CONFIG_TMR0_INTERRUPT: []
  3495     0741  168B               	bsf	11,5	;volatile
  3496                           
  3497                           ;config.c: 60:     return 1;;	Return value of _CONFIG_TMR0_INTERRUPT is never used
  3498     0742  0008               	return
  3499     0743                     __end_of_CONFIG_TMR0_INTERRUPT:
  3500                           
  3501                           	psect	text15
  3502     0702                     __ptext15:	
  3503 ;; *************** function _CONFIG_SYSTEM *****************
  3504 ;; Defined at:
  3505 ;;		line 64 in file "config.c"
  3506 ;; Parameters:    Size  Location     Type
  3507 ;;		None
  3508 ;; Auto vars:     Size  Location     Type
  3509 ;;		None
  3510 ;; Return value:  Size  Location     Type
  3511 ;;                  1    wreg      unsigned char 
  3512 ;; Registers used:
  3513 ;;		wreg, status,2, status,0, pclath, cstack
  3514 ;; Tracked objects:
  3515 ;;		On entry : B1F/0
  3516 ;;		On exit  : B1F/0
  3517 ;;		Unchanged: B00/0
  3518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3519 ;;      Params:         0       0       0       0
  3520 ;;      Locals:         0       0       0       0
  3521 ;;      Temps:          0       0       0       0
  3522 ;;      Totals:         0       0       0       0
  3523 ;;Total ram usage:        0 bytes
  3524 ;; Hardware stack levels used: 1
  3525 ;; Hardware stack levels required when called: 3
  3526 ;; This function calls:
  3527 ;;		_CONFIG_ADC_PINS
  3528 ;;		_CONFIG_INT_OSC
  3529 ;;		_CONFIG_PORTS
  3530 ;;		_CONFIG_PWM_CCP3
  3531 ;; This function is called by:
  3532 ;;		_main
  3533 ;; This function uses a non-reentrant model
  3534 ;;
  3535                           
  3536     0702                     _CONFIG_SYSTEM:	
  3537                           ;psect for function _CONFIG_SYSTEM
  3538                           
  3539                           
  3540                           ;config.c: 65:     CONFIG_INT_OSC();
  3541                           
  3542                           ;incstack = 0
  3543                           ; Regs used in _CONFIG_SYSTEM: [wreg+status,2+status,0+pclath+cstack]
  3544     0702  3187  272D  3187   	fcall	_CONFIG_INT_OSC
  3545                           
  3546                           ;config.c: 66:     CONFIG_PORTS();
  3547     0705  3187  270E  3187   	fcall	_CONFIG_PORTS
  3548                           
  3549                           ;config.c: 67:     CONFIG_ADC_PINS();
  3550     0708  3187  2738  3187   	fcall	_CONFIG_ADC_PINS
  3551                           
  3552                           ;config.c: 68:     CONFIG_PWM_CCP3();
  3553     070B  3186  26EF         	fcall	_CONFIG_PWM_CCP3
  3554     070D  0008               	return
  3555     070E                     __end_of_CONFIG_SYSTEM:
  3556                           
  3557                           	psect	text16
  3558     06EF                     __ptext16:	
  3559 ;; *************** function _CONFIG_PWM_CCP3 *****************
  3560 ;; Defined at:
  3561 ;;		line 40 in file "config.c"
  3562 ;; Parameters:    Size  Location     Type
  3563 ;;		None
  3564 ;; Auto vars:     Size  Location     Type
  3565 ;;		None
  3566 ;; Return value:  Size  Location     Type
  3567 ;;                  1    wreg      unsigned char 
  3568 ;; Registers used:
  3569 ;;		wreg, status,2
  3570 ;; Tracked objects:
  3571 ;;		On entry : B1F/1
  3572 ;;		On exit  : B1F/0
  3573 ;;		Unchanged: B00/0
  3574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3575 ;;      Params:         0       0       0       0
  3576 ;;      Locals:         0       0       0       0
  3577 ;;      Temps:          0       0       0       0
  3578 ;;      Totals:         0       0       0       0
  3579 ;;Total ram usage:        0 bytes
  3580 ;; Hardware stack levels used: 1
  3581 ;; Hardware stack levels required when called: 2
  3582 ;; This function calls:
  3583 ;;		Nothing
  3584 ;; This function is called by:
  3585 ;;		_CONFIG_SYSTEM
  3586 ;; This function uses a non-reentrant model
  3587 ;;
  3588                           
  3589     06EF                     _CONFIG_PWM_CCP3:	
  3590                           ;psect for function _CONFIG_PWM_CCP3
  3591                           
  3592                           
  3593                           ;config.c: 41:     SRLEN = 0;
  3594                           
  3595                           ;incstack = 0
  3596                           ; Regs used in _CONFIG_PWM_CCP3: [wreg+status,2]
  3597     06EF  0022               	movlb	2	; select bank2
  3598     06F0  139A               	bcf	26,7	;volatile
  3599                           
  3600                           ;config.c: 42:     C1ON = 0;
  3601     06F1  1391               	bcf	17,7	;volatile
  3602                           
  3603                           ;config.c: 44:     TRISA2 = 1;
  3604     06F2  0021               	movlb	1	; select bank1
  3605     06F3  150C               	bsf	12,2	;volatile
  3606                           
  3607                           ;config.c: 45:     PR2 = 0xFF;
  3608     06F4  30FF               	movlw	255
  3609     06F5  0020               	movlb	0	; select bank0
  3610     06F6  009B               	movwf	27	;volatile
  3611                           
  3612                           ;config.c: 46:     CCP3CON = CCP3CON | 0b00001111;
  3613     06F7  0026               	movlb	6	; select bank6
  3614     06F8  0813               	movf	19,w	;volatile
  3615     06F9  380F               	iorlw	15
  3616     06FA  0093               	movwf	19	;volatile
  3617                           
  3618                           ;config.c: 48:     CCPTMRS0 = 0x00;
  3619     06FB  0025               	movlb	5	; select bank5
  3620     06FC  019E               	clrf	30	;volatile
  3621                           
  3622                           ;config.c: 49:     TMR2IF = 0;
  3623     06FD  0020               	movlb	0	; select bank0
  3624     06FE  1091               	bcf	17,1	;volatile
  3625                           
  3626                           ;config.c: 50:     T2CON = T2CON | 0b00000000;
  3627     06FF  081C               	movf	28,w	;volatile
  3628     0700  009C               	movwf	28	;volatile
  3629     0701  0008               	return
  3630     0702                     __end_of_CONFIG_PWM_CCP3:
  3631                           
  3632                           	psect	text17
  3633     070E                     __ptext17:	
  3634 ;; *************** function _CONFIG_PORTS *****************
  3635 ;; Defined at:
  3636 ;;		line 11 in file "config.c"
  3637 ;; Parameters:    Size  Location     Type
  3638 ;;		None
  3639 ;; Auto vars:     Size  Location     Type
  3640 ;;		None
  3641 ;; Return value:  Size  Location     Type
  3642 ;;                  1    wreg      unsigned char 
  3643 ;; Registers used:
  3644 ;;		wreg, status,2
  3645 ;; Tracked objects:
  3646 ;;		On entry : B1F/1
  3647 ;;		On exit  : B1F/4
  3648 ;;		Unchanged: B00/0
  3649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3650 ;;      Params:         0       0       0       0
  3651 ;;      Locals:         0       0       0       0
  3652 ;;      Temps:          0       0       0       0
  3653 ;;      Totals:         0       0       0       0
  3654 ;;Total ram usage:        0 bytes
  3655 ;; Hardware stack levels used: 1
  3656 ;; Hardware stack levels required when called: 2
  3657 ;; This function calls:
  3658 ;;		Nothing
  3659 ;; This function is called by:
  3660 ;;		_CONFIG_SYSTEM
  3661 ;; This function uses a non-reentrant model
  3662 ;;
  3663                           
  3664     070E                     _CONFIG_PORTS:	
  3665                           ;psect for function _CONFIG_PORTS
  3666                           
  3667                           
  3668                           ;config.c: 12:     ANSELC = 0b00001111;
  3669                           
  3670                           ;incstack = 0
  3671                           ; Regs used in _CONFIG_PORTS: [wreg+status,2]
  3672     070E  300F               	movlw	15
  3673     070F  0023               	movlb	3	; select bank3
  3674     0710  008E               	movwf	14	;volatile
  3675                           
  3676                           ;config.c: 13:     TRISC = 0b00001111;
  3677     0711  300F               	movlw	15
  3678     0712  0021               	movlb	1	; select bank1
  3679     0713  008E               	movwf	14	;volatile
  3680                           
  3681                           ;config.c: 14:     WPUC = 0b00000000;
  3682     0714  0024               	movlb	4	; select bank4
  3683     0715  018E               	clrf	14	;volatile
  3684     0716  0008               	return
  3685     0717                     __end_of_CONFIG_PORTS:
  3686                           
  3687                           	psect	text18
  3688     072D                     __ptext18:	
  3689 ;; *************** function _CONFIG_INT_OSC *****************
  3690 ;; Defined at:
  3691 ;;		line 3 in file "config.c"
  3692 ;; Parameters:    Size  Location     Type
  3693 ;;		None
  3694 ;; Auto vars:     Size  Location     Type
  3695 ;;		None
  3696 ;; Return value:  Size  Location     Type
  3697 ;;                  1    wreg      unsigned char 
  3698 ;; Registers used:
  3699 ;;		wreg
  3700 ;; Tracked objects:
  3701 ;;		On entry : B1F/0
  3702 ;;		On exit  : B1F/1
  3703 ;;		Unchanged: B00/0
  3704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3705 ;;      Params:         0       0       0       0
  3706 ;;      Locals:         0       0       0       0
  3707 ;;      Temps:          0       0       0       0
  3708 ;;      Totals:         0       0       0       0
  3709 ;;Total ram usage:        0 bytes
  3710 ;; Hardware stack levels used: 1
  3711 ;; Hardware stack levels required when called: 2
  3712 ;; This function calls:
  3713 ;;		Nothing
  3714 ;; This function is called by:
  3715 ;;		_CONFIG_SYSTEM
  3716 ;; This function uses a non-reentrant model
  3717 ;;
  3718                           
  3719     072D                     _CONFIG_INT_OSC:	
  3720                           ;psect for function _CONFIG_INT_OSC
  3721                           
  3722                           
  3723                           ;config.c: 4:     OSCCON = 0b11110000;
  3724                           
  3725                           ;incstack = 0
  3726                           ; Regs used in _CONFIG_INT_OSC: [wreg]
  3727     072D  30F0               	movlw	240
  3728     072E  0021               	movlb	1	; select bank1
  3729     072F  0099               	movwf	25	;volatile
  3730                           
  3731                           ;config.c: 5:     OSCTUNE = 0b00011111;
  3732     0730  301F               	movlw	31
  3733     0731  0098               	movwf	24	;volatile
  3734     0732  0008               	return
  3735     0733                     __end_of_CONFIG_INT_OSC:
  3736                           
  3737                           	psect	text19
  3738     0738                     __ptext19:	
  3739 ;; *************** function _CONFIG_ADC_PINS *****************
  3740 ;; Defined at:
  3741 ;;		line 19 in file "config.c"
  3742 ;; Parameters:    Size  Location     Type
  3743 ;;		None
  3744 ;; Auto vars:     Size  Location     Type
  3745 ;;		None
  3746 ;; Return value:  Size  Location     Type
  3747 ;;                  1    wreg      unsigned char 
  3748 ;; Registers used:
  3749 ;;		wreg
  3750 ;; Tracked objects:
  3751 ;;		On entry : B1F/4
  3752 ;;		On exit  : B1F/1
  3753 ;;		Unchanged: B00/0
  3754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3755 ;;      Params:         0       0       0       0
  3756 ;;      Locals:         0       0       0       0
  3757 ;;      Temps:          0       0       0       0
  3758 ;;      Totals:         0       0       0       0
  3759 ;;Total ram usage:        0 bytes
  3760 ;; Hardware stack levels used: 1
  3761 ;; Hardware stack levels required when called: 2
  3762 ;; This function calls:
  3763 ;;		Nothing
  3764 ;; This function is called by:
  3765 ;;		_CONFIG_SYSTEM
  3766 ;; This function uses a non-reentrant model
  3767 ;;
  3768                           
  3769     0738                     _CONFIG_ADC_PINS:	
  3770                           ;psect for function _CONFIG_ADC_PINS
  3771                           
  3772                           
  3773                           ;config.c: 20:     ADCON1 = 0b10100000;
  3774                           
  3775                           ;incstack = 0
  3776                           ; Regs used in _CONFIG_ADC_PINS: [wreg]
  3777     0738  30A0               	movlw	160
  3778     0739  0021               	movlb	1	; select bank1
  3779     073A  009E               	movwf	30	;volatile
  3780     073B  0008               	return
  3781     073C                     __end_of_CONFIG_ADC_PINS:
  3782                           
  3783                           	psect	intentry
  3784     0004                     __pintentry:	
  3785 ;; *************** function _INTERRUPT_InterruptManager *****************
  3786 ;; Defined at:
  3787 ;;		line 30 in file "main.c"
  3788 ;; Parameters:    Size  Location     Type
  3789 ;;		None
  3790 ;; Auto vars:     Size  Location     Type
  3791 ;;		None
  3792 ;; Return value:  Size  Location     Type
  3793 ;;                  1    wreg      void 
  3794 ;; Registers used:
  3795 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3796 ;; Tracked objects:
  3797 ;;		On entry : 0/0
  3798 ;;		On exit  : 19/0
  3799 ;;		Unchanged: 0/0
  3800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3801 ;;      Params:         0       0       0       0
  3802 ;;      Locals:         0       0       0       0
  3803 ;;      Temps:          2       0       0       0
  3804 ;;      Totals:         2       0       0       0
  3805 ;;Total ram usage:        2 bytes
  3806 ;; Hardware stack levels used: 1
  3807 ;; Hardware stack levels required when called: 1
  3808 ;; This function calls:
  3809 ;;		_SET_DUTY_CCP3
  3810 ;; This function is called by:
  3811 ;;		Interrupt level 1
  3812 ;; This function uses a non-reentrant model
  3813 ;;
  3814                           
  3815     0004                     _INTERRUPT_InterruptManager:
  3816                           
  3817                           ;incstack = 0
  3818     0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  3819                           
  3820                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3821     0005  3180               	pagesel	$
  3822                           
  3823                           ;main.c: 31:     TMR0 = (uint8_t)final_TMR0;
  3824     0006  0020               	movlb	0	; select bank0
  3825     0007  0838               	movf	_final_TMR0,w	;volatile
  3826     0008  0095               	movwf	21	;volatile
  3827                           
  3828                           ;main.c: 32:     if(TMR0IF == 1){
  3829     0009  1D0B               	btfss	11,2	;volatile
  3830     000A  28D5               	goto	i1l97
  3831                           
  3832                           ;main.c: 33:     GIE = 0;
  3833     000B  138B               	bcf	11,7	;volatile
  3834                           
  3835                           ;main.c: 35:     TMR0IF = 0;
  3836     000C  110B               	bcf	11,2	;volatile
  3837                           
  3838                           ;main.c: 37:     if(current_waveshape == 0){
  3839     000D  0878               	movf	_current_waveshape,w	;volatile
  3840     000E  1D03               	btfss	3,2
  3841     000F  2820               	goto	i1l1656
  3842                           
  3843                           ;main.c: 38:         duty = tri_table_one_quadrant[current_one_quadrant_index];
  3844     0010  0877               	movf	_current_one_quadrant_index,w	;volatile
  3845     0011  00F4               	movwf	??_INTERRUPT_InterruptManager
  3846     0012  01F5               	clrf	??_INTERRUPT_InterruptManager+1
  3847     0013  35F4               	lslf	??_INTERRUPT_InterruptManager,f
  3848     0014  0DF5               	rlf	??_INTERRUPT_InterruptManager+1,f
  3849     0015  30F1               	movlw	low _tri_table_one_quadrant
  3850     0016  0774               	addwf	??_INTERRUPT_InterruptManager,w
  3851     0017  0084               	movwf	4
  3852     0018  3000               	movlw	high _tri_table_one_quadrant
  3853     0019  3D75               	addwfc	??_INTERRUPT_InterruptManager+1,w
  3854     001A  3880               	iorlw	128
  3855     001B  0085               	movwf	5
  3856     001C  3F00               	moviw [0]fsr0
  3857     001D  00F9               	movwf	_duty	;volatile
  3858     001E  3F01               	moviw [1]fsr0
  3859     001F  283A               	goto	L2
  3860     0020                     i1l1656:	
  3861                           ;main.c: 39:     }
  3862                           
  3863     0020  0378               	decf	_current_waveshape,w	;volatile
  3864     0021  1D03               	btfss	3,2
  3865     0022  2833               	goto	i1l1660
  3866                           
  3867                           ;main.c: 41:         duty = sine_table_one_quadrant[current_one_quadrant_index];
  3868     0023  0877               	movf	_current_one_quadrant_index,w	;volatile
  3869     0024  00F4               	movwf	??_INTERRUPT_InterruptManager
  3870     0025  01F5               	clrf	??_INTERRUPT_InterruptManager+1
  3871     0026  35F4               	lslf	??_INTERRUPT_InterruptManager,f
  3872     0027  0DF5               	rlf	??_INTERRUPT_InterruptManager+1,f
  3873     0028  30F3               	movlw	low _sine_table_one_quadrant
  3874     0029  0774               	addwf	??_INTERRUPT_InterruptManager,w
  3875     002A  0084               	movwf	4
  3876     002B  3001               	movlw	high _sine_table_one_quadrant
  3877     002C  3D75               	addwfc	??_INTERRUPT_InterruptManager+1,w
  3878     002D  3880               	iorlw	128
  3879     002E  0085               	movwf	5
  3880     002F  3F00               	moviw [0]fsr0
  3881     0030  00F9               	movwf	_duty	;volatile
  3882     0031  3F01               	moviw [1]fsr0
  3883     0032  283A               	goto	L2
  3884     0033                     i1l1660:	
  3885                           ;main.c: 42:     }
  3886                           
  3887     0033  3002               	movlw	2
  3888     0034  0678               	xorwf	_current_waveshape,w	;volatile
  3889     0035  1D03               	btfss	3,2
  3890     0036  283B               	goto	i1l1664
  3891                           
  3892                           ;main.c: 44:         duty = 1023;
  3893     0037  30FF               	movlw	255
  3894     0038  00F9               	movwf	_duty	;volatile
  3895     0039  3003               	movlw	3
  3896     003A                     L2:
  3897     003A  00FA               	movwf	_duty+1	;volatile
  3898     003B                     i1l1664:
  3899                           
  3900                           ;main.c: 46:     if(current_one_quadrant_index == 128){
  3901     003B  3080               	movlw	128
  3902     003C  0677               	xorwf	_current_one_quadrant_index,w	;volatile
  3903     003D  1D03               	btfss	3,2
  3904     003E  2842               	goto	i1l1668
  3905                           
  3906                           ;main.c: 47:         current_quadrant = 1;
  3907     003F  3001               	movlw	1
  3908     0040  00CC               	movwf	_current_quadrant	;volatile
  3909                           
  3910                           ;main.c: 48:     }
  3911     0041  284D               	goto	i1l1678
  3912     0042                     i1l1668:
  3913     0042  0877               	movf	_current_one_quadrant_index,w	;volatile
  3914     0043  1D03               	btfss	3,2
  3915     0044  284D               	goto	i1l1678
  3916                           
  3917                           ;main.c: 50:         current_quadrant = 0;
  3918     0045  01CC               	clrf	_current_quadrant	;volatile
  3919                           
  3920                           ;main.c: 51:         if(current_halfcycle == 0){
  3921     0046  0876               	movf	_current_halfcycle,w	;volatile
  3922     0047  1D03               	btfss	3,2
  3923     0048  284C               	goto	i1l1676
  3924                           
  3925                           ;main.c: 52:             current_halfcycle = 1;
  3926     0049  3001               	movlw	1
  3927     004A  00F6               	movwf	_current_halfcycle	;volatile
  3928                           
  3929                           ;main.c: 53:         }
  3930     004B  284D               	goto	i1l1678
  3931     004C                     i1l1676:
  3932                           
  3933                           ;main.c: 55:             current_halfcycle = 0;
  3934     004C  01F6               	clrf	_current_halfcycle	;volatile
  3935     004D                     i1l1678:
  3936                           
  3937                           ;main.c: 58:     if(current_quadrant == 0){
  3938     004D  084C               	movf	_current_quadrant,w	;volatile
  3939     004E  1D03               	btfss	3,2
  3940     004F  2855               	goto	i1l1682
  3941                           
  3942                           ;main.c: 59:         current_one_quadrant_index++;
  3943     0050  3001               	movlw	1
  3944     0051  00F4               	movwf	??_INTERRUPT_InterruptManager
  3945     0052  0874               	movf	??_INTERRUPT_InterruptManager,w
  3946     0053  07F7               	addwf	_current_one_quadrant_index,f	;volatile
  3947                           
  3948                           ;main.c: 60:     }
  3949     0054  2857               	goto	i1l91
  3950     0055                     i1l1682:
  3951                           
  3952                           ;main.c: 62:         current_one_quadrant_index--;
  3953     0055  3001               	movlw	1
  3954     0056  02F7               	subwf	_current_one_quadrant_index,f	;volatile
  3955     0057                     i1l91:	
  3956                           ;main.c: 63:     }
  3957                           
  3958                           
  3959                           ;main.c: 64:     if(current_halfcycle == 1){
  3960     0057  0376               	decf	_current_halfcycle,w	;volatile
  3961     0058  1D03               	btfss	3,2
  3962     0059  2864               	goto	i1l92
  3963                           
  3964                           ;main.c: 65:     duty = 1023 - duty;
  3965     005A  30FF               	movlw	255
  3966     005B  00F4               	movwf	??_INTERRUPT_InterruptManager
  3967     005C  3003               	movlw	3
  3968     005D  00F5               	movwf	??_INTERRUPT_InterruptManager+1
  3969     005E  0879               	movf	_duty,w	;volatile
  3970     005F  0274               	subwf	??_INTERRUPT_InterruptManager,w
  3971     0060  00F9               	movwf	_duty	;volatile
  3972     0061  087A               	movf	_duty+1,w	;volatile
  3973     0062  3B75               	subwfb	??_INTERRUPT_InterruptManager+1,w
  3974     0063  00FA               	movwf	_duty+1	;volatile
  3975     0064                     i1l92:	
  3976                           ;main.c: 66:     }
  3977                           
  3978                           
  3979                           ;main.c: 70:         if(current_depth == 255){
  3980     0064  0A40               	incf	_current_depth,w	;volatile
  3981     0065  0441               	iorwf	_current_depth+1,w	;volatile
  3982     0066  1D03               	btfss	3,2
  3983     0067  2871               	goto	i1l1688
  3984                           
  3985                           ;main.c: 71:             duty = 1023 - duty;
  3986     0068  30FF               	movlw	255
  3987     0069  00F4               	movwf	??_INTERRUPT_InterruptManager
  3988     006A  3003               	movlw	3
  3989     006B  00F5               	movwf	??_INTERRUPT_InterruptManager+1
  3990     006C  0879               	movf	_duty,w	;volatile
  3991     006D  0274               	subwf	??_INTERRUPT_InterruptManager,w
  3992     006E  00F9               	movwf	_duty	;volatile
  3993     006F  087A               	movf	_duty+1,w	;volatile
  3994     0070  28CB               	goto	L4
  3995     0071                     i1l1688:	
  3996                           ;main.c: 72:         }
  3997                           
  3998     0071  0840               	movf	_current_depth,w	;volatile
  3999     0072  0441               	iorwf	_current_depth+1,w	;volatile
  4000     0073  1903               	btfsc	3,2
  4001     0074  28CD               	goto	i1l1694
  4002                           
  4003                           ;main.c: 74:             duty_low_byte = duty & 0xFF;
  4004     0075  0879               	movf	_duty,w	;volatile
  4005     0076  00CB               	movwf	_duty_low_byte	;volatile
  4006                           
  4007                           ;main.c: 75:             duty_high_byte = duty >> 8;
  4008     0077  087A               	movf	_duty+1,w	;volatile
  4009     0078  00CA               	movwf	_duty_high_byte	;volatile
  4010     0079  01A2               	clrf	34	;# 
  4011     007A  01A0               	clrf	32	;# 
  4012     007B  1003               	bcf	3,0	;# 
  4013     007C  0840               	movf	_current_depth,w	;# 
  4014     007D  184B               	btfsc	_duty_low_byte,0	;# 
  4015     007E  07A2               	addwf	34,f	;# 
  4016     007F  0CA2               	rrf	34,f	;# 
  4017     0080  0CA0               	rrf	32,f	;# 
  4018     0081  18CB               	btfsc	_duty_low_byte,1	;# 
  4019     0082  07A2               	addwf	34,f	;# 
  4020     0083  0CA2               	rrf	34,f	;# 
  4021     0084  0CA0               	rrf	32,f	;# 
  4022     0085  194B               	btfsc	_duty_low_byte,2	;# 
  4023     0086  07A2               	addwf	34,f	;# 
  4024     0087  0CA2               	rrf	34,f	;# 
  4025     0088  0CA0               	rrf	32,f	;# 
  4026     0089  19CB               	btfsc	_duty_low_byte,3	;# 
  4027     008A  07A2               	addwf	34,f	;# 
  4028     008B  0CA2               	rrf	34,f	;# 
  4029     008C  0CA0               	rrf	32,f	;# 
  4030     008D  1A4B               	btfsc	_duty_low_byte,4	;# 
  4031     008E  07A2               	addwf	34,f	;# 
  4032     008F  0CA2               	rrf	34,f	;# 
  4033     0090  0CA0               	rrf	32,f	;# 
  4034     0091  1ACB               	btfsc	_duty_low_byte,5	;# 
  4035     0092  07A2               	addwf	34,f	;# 
  4036     0093  0CA2               	rrf	34,f	;# 
  4037     0094  0CA0               	rrf	32,f	;# 
  4038     0095  1B4B               	btfsc	_duty_low_byte,6	;# 
  4039     0096  07A2               	addwf	34,f	;# 
  4040     0097  0CA2               	rrf	34,f	;# 
  4041     0098  0CA0               	rrf	32,f	;# 
  4042     0099  1BCB               	btfsc	_duty_low_byte,7	;# 
  4043     009A  07A2               	addwf	34,f	;# 
  4044     009B  0CA2               	rrf	34,f	;# 
  4045     009C  0CA0               	rrf	32,f	;# 
  4046     009D  01A1               	clrf	33	;# 
  4047     009E  184A               	btfsc	_duty_high_byte,0	;# 
  4048     009F  07A2               	addwf	34,f	;# 
  4049     00A0  0CA2               	rrf	34,f	;# 
  4050     00A1  0CA1               	rrf	33,f	;# 
  4051     00A2  18CA               	btfsc	_duty_high_byte,1	;# 
  4052     00A3  07A2               	addwf	34,f	;# 
  4053     00A4  0CA2               	rrf	34,f	;# 
  4054     00A5  0CA1               	rrf	33,f	;# 
  4055     00A6  194A               	btfsc	_duty_high_byte,2	;# 
  4056     00A7  07A2               	addwf	34,f	;# 
  4057     00A8  0CA2               	rrf	34,f	;# 
  4058     00A9  0CA1               	rrf	33,f	;# 
  4059     00AA  19CA               	btfsc	_duty_high_byte,3	;# 
  4060     00AB  07A2               	addwf	34,f	;# 
  4061     00AC  0CA2               	rrf	34,f	;# 
  4062     00AD  0CA1               	rrf	33,f	;# 
  4063     00AE  1A4A               	btfsc	_duty_high_byte,4	;# 
  4064     00AF  07A2               	addwf	34,f	;# 
  4065     00B0  0CA2               	rrf	34,f	;# 
  4066     00B1  0CA1               	rrf	33,f	;# 
  4067     00B2  1ACA               	btfsc	_duty_high_byte,5	;# 
  4068     00B3  07A2               	addwf	34,f	;# 
  4069     00B4  0CA2               	rrf	34,f	;# 
  4070     00B5  0CA1               	rrf	33,f	;# 
  4071     00B6  1B4A               	btfsc	_duty_high_byte,6	;# 
  4072     00B7  07A2               	addwf	34,f	;# 
  4073     00B8  0CA2               	rrf	34,f	;# 
  4074     00B9  0CA1               	rrf	33,f	;# 
  4075     00BA  1BCA               	btfsc	_duty_high_byte,7	;# 
  4076     00BB  07A2               	addwf	34,f	;# 
  4077     00BC  0CA2               	rrf	34,f	;# 
  4078     00BD  0CA1               	rrf	33,f	;# 
  4079                           
  4080                           ;main.c: 110:             duty = 1023 - *top_two_bytes_ptr;
  4081     00BE  0020               	movlb	0	; select bank0
  4082     00BF  086E               	movf	_top_two_bytes_ptr,w
  4083     00C0  0086               	movwf	6
  4084     00C1  086F               	movf	_top_two_bytes_ptr+1,w
  4085     00C2  0087               	movwf	7
  4086     00C3  30FF               	movlw	255
  4087     00C4  00F4               	movwf	??_INTERRUPT_InterruptManager
  4088     00C5  3003               	movlw	3
  4089     00C6  00F5               	movwf	??_INTERRUPT_InterruptManager+1
  4090     00C7  3F40               	moviw [0]fsr1
  4091     00C8  0274               	subwf	??_INTERRUPT_InterruptManager,w
  4092     00C9  00F9               	movwf	_duty	;volatile
  4093     00CA  3F41               	moviw [1]fsr1
  4094     00CB                     L4:
  4095     00CB  3B75               	subwfb	??_INTERRUPT_InterruptManager+1,w
  4096     00CC  28D0               	goto	L3
  4097     00CD                     i1l1694:	
  4098                           ;main.c: 111:         }
  4099                           
  4100                           
  4101                           ;main.c: 113:             duty = 1023;
  4102     00CD  30FF               	movlw	255
  4103     00CE  00F9               	movwf	_duty	;volatile
  4104     00CF  3003               	movlw	3
  4105     00D0                     L3:
  4106     00D0  00FA               	movwf	_duty+1	;volatile
  4107                           
  4108                           ;main.c: 118:     SET_DUTY_CCP3(&duty);
  4109     00D1  3079               	movlw	(low (_duty| 0))& (0+255)
  4110     00D2  3186  26BA         	fcall	_SET_DUTY_CCP3
  4111                           
  4112                           ;main.c: 122:     GIE = 1;
  4113     00D4  178B               	bsf	11,7	;volatile
  4114     00D5                     i1l97:
  4115     00D5  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  4116     00D6  0009               	retfie
  4117     00D7                     __end_of_INTERRUPT_InterruptManager:
  4118                           
  4119                           	psect	text21
  4120     06BA                     __ptext21:	
  4121 ;; *************** function _SET_DUTY_CCP3 *****************
  4122 ;; Defined at:
  4123 ;;		line 48 in file "system.c"
  4124 ;; Parameters:    Size  Location     Type
  4125 ;;  duty_ptr        1    wreg     PTR volatile unsigned sh
  4126 ;;		 -> duty(2), 
  4127 ;; Auto vars:     Size  Location     Type
  4128 ;;  duty_ptr        1    3[COMMON] PTR volatile unsigned sh
  4129 ;;		 -> duty(2), 
  4130 ;;  temp            1    2[COMMON] unsigned char 
  4131 ;; Return value:  Size  Location     Type
  4132 ;;                  1    wreg      unsigned char 
  4133 ;; Registers used:
  4134 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4135 ;; Tracked objects:
  4136 ;;		On entry : 1F/0
  4137 ;;		On exit  : 1F/6
  4138 ;;		Unchanged: 0/0
  4139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4140 ;;      Params:         0       0       0       0
  4141 ;;      Locals:         2       0       0       0
  4142 ;;      Temps:          2       0       0       0
  4143 ;;      Totals:         4       0       0       0
  4144 ;;Total ram usage:        4 bytes
  4145 ;; Hardware stack levels used: 1
  4146 ;; This function calls:
  4147 ;;		Nothing
  4148 ;; This function is called by:
  4149 ;;		_INTERRUPT_InterruptManager
  4150 ;; This function uses a non-reentrant model
  4151 ;;
  4152                           
  4153     06BA                     _SET_DUTY_CCP3:	
  4154                           ;psect for function _SET_DUTY_CCP3
  4155                           
  4156                           
  4157                           ;incstack = 0
  4158                           ; Regs used in _SET_DUTY_CCP3: [wreg+fsr1l+fsr1h+status,2+status,0]
  4159                           ;SET_DUTY_CCP3@duty_ptr stored from wreg
  4160     06BA  00F3               	movwf	SET_DUTY_CCP3@duty_ptr
  4161                           
  4162                           ;system.c: 50:     CCPR3L = (uint8_t)(*duty_ptr >> 2);
  4163     06BB  0873               	movf	SET_DUTY_CCP3@duty_ptr,w
  4164     06BC  0086               	movwf	6
  4165     06BD  0187               	clrf	7
  4166     06BE  3F40               	moviw [0]fsr1
  4167     06BF  00F0               	movwf	??_SET_DUTY_CCP3
  4168     06C0  3F41               	moviw [1]fsr1
  4169     06C1  00F1               	movwf	??_SET_DUTY_CCP3+1
  4170     06C2  36F1               	lsrf	??_SET_DUTY_CCP3+1,f
  4171     06C3  0CF0               	rrf	??_SET_DUTY_CCP3,f
  4172     06C4  36F1               	lsrf	??_SET_DUTY_CCP3+1,f
  4173     06C5  0CF0               	rrf	??_SET_DUTY_CCP3,f
  4174     06C6  0870               	movf	??_SET_DUTY_CCP3,w
  4175     06C7  0026               	movlb	6	; select bank6
  4176     06C8  0091               	movwf	17	;volatile
  4177                           
  4178                           ;system.c: 51:     uint8_t temp = *duty_ptr % 0b100;
  4179     06C9  0873               	movf	SET_DUTY_CCP3@duty_ptr,w
  4180     06CA  0086               	movwf	6
  4181     06CB  0187               	clrf	7
  4182     06CC  0801               	movf	1,w
  4183     06CD  3903               	andlw	3
  4184     06CE  00F2               	movwf	SET_DUTY_CCP3@temp
  4185                           
  4186                           ;system.c: 52:     CCP3CON = CCP3CON | ((uint8_t)(temp << 4));
  4187     06CF  0872               	movf	SET_DUTY_CCP3@temp,w
  4188     06D0  00F0               	movwf	??_SET_DUTY_CCP3
  4189     06D1  3003               	movlw	3
  4190     06D2                     u86_25:
  4191     06D2  35F0               	lslf	??_SET_DUTY_CCP3,f
  4192     06D3  3EFF               	addlw	-1
  4193     06D4  1D03               	skipz
  4194     06D5  2ED2               	goto	u86_25
  4195     06D6  3570               	lslf	??_SET_DUTY_CCP3,w
  4196     06D7  0413               	iorwf	19,w	;volatile
  4197     06D8  0093               	movwf	19	;volatile
  4198     06D9  0008               	return
  4199     06DA                     __end_of_SET_DUTY_CCP3:
  4200     007E                     btemp	set	126	;btemp
  4201     007E                     int$flags	set	126
  4202     007E                     wtemp0	set	126
  4203                           
  4204                           	psect	config
  4205                           
  4206                           ;Config register CONFIG1 @ 0x8007
  4207                           ;	Oscillator Selection
  4208                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  4209                           ;	Watchdog Timer Enable
  4210                           ;	WDTE = OFF, WDT disabled
  4211                           ;	Power-up Timer Enable
  4212                           ;	PWRTE = OFF, PWRT disabled
  4213                           ;	MCLR Pin Function Select
  4214                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  4215                           ;	Flash Program Memory Code Protection
  4216                           ;	CP = OFF, Program memory code protection is disabled
  4217                           ;	Data Memory Code Protection
  4218                           ;	CPD = OFF, Data memory code protection is disabled
  4219                           ;	Brown-out Reset Enable
  4220                           ;	BOREN = OFF, Brown-out Reset disabled
  4221                           ;	Clock Out Enable
  4222                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  4223                           ;	Internal/External Switchover
  4224                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4225                           ;	Fail-Safe Clock Monitor Enable
  4226                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4227     8007                     	org	32775
  4228     8007  09E4               	dw	2532
  4229                           
  4230                           ;Config register CONFIG2 @ 0x8008
  4231                           ;	Flash Memory Self-Write Protection
  4232                           ;	WRT = OFF, Write protection off
  4233                           ;	PLL Enable
  4234                           ;	PLLEN = ON, 4x PLL enabled
  4235                           ;	Stack Overflow/Underflow Reset Enable
  4236                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  4237                           ;	Brown-out Reset Voltage Selection
  4238                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  4239                           ;	In-Circuit Debugger Mode
  4240                           ;	DEBUG = ON, In-Circuit Debugger enabled, ICSPCLK and ICSPDAT are dedicated to the debu
      +                          gger
  4241                           ;	Low-Voltage Programming Enable
  4242                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  4243     8008                     	org	32776
  4244     8008  0FFF               	dw	4095

Data Sizes:
    Strings     0
    Constant    537
    Data        2
    BSS         50
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      11
    BANK0            80     33      80
    BANK1            80      1       1
    BANK2            80      0       0

Pointer List with Targets:

    DO_ADC@modifier	PTR const unsigned char  size(2) Largest target is 1
		 -> depth_adc_config_value(CODE[1]), speed_adc_config_value(CODE[1]), symmetry_adc_config_value(CODE[1]), waveshape_adc_config_value(CODE[1]), 

    SET_DUTY_CCP3@duty_ptr	PTR volatile unsigned short  size(1) Largest target is 2
		 -> duty(COMMON[2]), 

    top_two_bytes_ptr	PTR unsigned short  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_SET_DUTY_CCP3

Critical Paths under _main in BANK0

    _main->_PROCESS_TMR0_AND_PRESCALER_ADJUST
    _PROCESS_TMR0_AND_PRESCALER_ADJUST->_LENGTHEN_PERIOD
    _PROCESS_TMR0_AND_PRESCALER_ADJUST->_SHORTEN_PERIOD
    _SHORTEN_PERIOD->___lmul
    _LENGTHEN_PERIOD->___lmul
    _ADJUST_AND_SET_PRESCALER->_CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1
    _PROCESS_RAW_SPEED_AND_PRESCALER->___lmul
    _GET_CURRENT_POT_VALUES->_DETERMINE_WAVESHAPE
    _DETERMINE_WAVESHAPE->_DO_ADC

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    3617
                                              0 BANK1      1     1      0
                      _CONFIG_SYSTEM
              _CONFIG_TMR0_INTERRUPT
             _GET_CURRENT_POT_VALUES
    _PROCESS_RAW_SPEED_AND_PRESCALER
  _PROCESS_TMR0_AND_PRESCALER_ADJUST
                   _TURN_ON_CCP3_PWM
 ---------------------------------------------------------------------------------
 (1) _TURN_ON_CCP3_PWM                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PROCESS_TMR0_AND_PRESCALER_ADJUST                    5     5      0    1909
                                             28 BANK0      5     5      0
           _ADJUST_AND_SET_PRESCALER
                    _LENGTHEN_PERIOD
                     _SHORTEN_PERIOD
 ---------------------------------------------------------------------------------
 (2) _SHORTEN_PERIOD                                      16    16      0     898
                                             12 BANK0     16    16      0
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) _LENGTHEN_PERIOD                                     16    16      0     965
                                             12 BANK0     16    16      0
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) _ADJUST_AND_SET_PRESCALER                             0     0      0       0
 _CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1
                 _TURN_PRESCALER_OFF
                  _TURN_PRESCALER_ON
 ---------------------------------------------------------------------------------
 (3) _TURN_PRESCALER_ON                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TURN_PRESCALER_OFF                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1                   3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _PROCESS_RAW_SPEED_AND_PRESCALER                      7     7      0     897
                                             12 BANK0      7     7      0
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     852
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) _GET_CURRENT_POT_VALUES                               4     4      0     811
                                              8 BANK0      4     4      0
                _DETERMINE_WAVESHAPE
                             _DO_ADC
 ---------------------------------------------------------------------------------
 (2) _DETERMINE_WAVESHAPE                                  2     2      0     439
                                              6 BANK0      2     2      0
                             _DO_ADC
 ---------------------------------------------------------------------------------
 (2) _DO_ADC                                               6     4      2     372
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _CONFIG_TMR0_INTERRUPT                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CONFIG_SYSTEM                                        0     0      0       0
                    _CONFIG_ADC_PINS
                     _CONFIG_INT_OSC
                       _CONFIG_PORTS
                    _CONFIG_PWM_CCP3
 ---------------------------------------------------------------------------------
 (2) _CONFIG_PWM_CCP3                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CONFIG_PORTS                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CONFIG_INT_OSC                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CONFIG_ADC_PINS                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           2     2      0     182
                                              4 COMMON     2     2      0
                      _SET_DUTY_CCP3
 ---------------------------------------------------------------------------------
 (5) _SET_DUTY_CCP3                                        4     4      0     182
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CONFIG_SYSTEM
     _CONFIG_ADC_PINS
     _CONFIG_INT_OSC
     _CONFIG_PORTS
     _CONFIG_PWM_CCP3
   _CONFIG_TMR0_INTERRUPT
   _GET_CURRENT_POT_VALUES
     _DETERMINE_WAVESHAPE
       _DO_ADC
     _DO_ADC
   _PROCESS_RAW_SPEED_AND_PRESCALER
     ___lmul
   _PROCESS_TMR0_AND_PRESCALER_ADJUST
     _ADJUST_AND_SET_PRESCALER
       _CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1
       _TURN_PRESCALER_OFF
       _TURN_PRESCALER_ON
     _LENGTHEN_PERIOD
       ___lmul
     _SHORTEN_PERIOD
       ___lmul
   _TURN_ON_CCP3_PWM

 _INTERRUPT_InterruptManager (ROOT)
   _SET_DUTY_CCP3

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       B       2       78.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      5C       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     21      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      1       1       8        1.2%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      5C      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Mon Feb  5 21:46:48 2024

                                                      r1 0020  
                                                      r2 0021  
                                                      r3 0022  
                                                     _NO 0743  
                                                    l161 065F  
                                                    l176 0721  
                                                    _GIE 005F  
                                                    _PR2 001B  
                                                    u415 0626  
                                                    u425 062D  
                                                    u375 064C  
                                                    u535 0588  
                                                    u625 0416  
                                                    u545 0340  
                                                    u635 04EB  
                                                    u565 0364  
                                                    u655 051E  
                                                    u665 0527  
                                                    u987 065A  
                                                    _YES 0744  
                                                    wreg 0009  
                          _last_current_symmetry_average 0020  
                                                   l1300 06ED  
                                                   l1400 05D1  
                                                   l1314 061B  
                                                   l1318 0625  
                                                   l1360 0683  
                                                   l1424 0602  
                                                   l1362 068A  
                                                   l1418 05EF  
                                                   l1450 038D  
                                                   l1530 0455  
                                                   l1516 0513  
                                                   l1444 035A  
                                                   l1366 068C  
                                                   l1542 047B  
                                                   l1534 0470  
                                                   l1550 0484  
                                                   l1526 0447  
                                                   _C1ON 088F  
                                                   l1490 040D  
                                                   l1394 05BF  
                                                   l1538 0481  
                                                   l1714 06AA  
                                                   l1484 03EB  
                                                   l1388 05BC  
                                                   l1556 04A4  
                                                   l1486 0408  
                                                   _ADON 04E8  
                                                   i1l91 0057  
                                                   i1l92 0064  
                                                   i1l97 00D5  
                                                   _TMR0 0015  
                                                   _WPUC 020E  
                                                   _main 0695  
                                                   _duty 0079  
                                                   fsr0h 0005  
                                                   fsr1h 0007  
                                                   indf0 0000  
                                                   fsr0l 0004  
                                                   indf1 0001  
                                                   fsr1l 0006  
                                                   btemp 007E  
                                      _current_waveshape 0078  
                                                   start 00D7  
                                  _CONFIG_TMR0_INTERRUPT 0741  
                                       __end_of_NEGATIVE 074B  
                                   __end_of_CONFIG_PORTS 0717  
             __end_of_CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1 06EF  
                   ??_CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1 004D  
                    ?_CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1 0070  
                     _CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1 06DA  
                                                  STATUS 0003  
                                                  ?_main 0070  
                                                  _T2CON 001C  
                                                  _SRLEN 08D7  
                                                  _TRISC 008E  
                                                  u86_25 06D2  
                                    ___lmul@multiplicand 0051  
                                       __end_of_POSITIVE 074C  
                               ??_GET_CURRENT_POT_VALUES 0055  
                                     _SHORTEN_PERIOD$855 0065  
                                                  status 0003  
                                                  wtemp0 007E  
                             _current_one_quadrant_index 0077  
                                        __initialization 00D9  
                                           __end_of_main 06BA  
                            ?_INTERRUPT_InterruptManager 0070  
                                      __end_of_DONT_CARE 0746  
                                                 ??_main 00A0  
                                  __end_of_DIVIDE_BY_TWO 0749  
                                 _speed_adc_config_value 074E  
                                  __end_of_CONFIG_SYSTEM 070E  
                                                 _ADCON0 009D  
                                                 _ADCON1 009E  
                                                 _ADRESH 009C  
                                                 _ADRESL 009B  
                                                 _CCPR3L 0311  
                                                 _ANSELC 018E  
                                                 _DO_ADC 0642  
                                                 i1l1660 0033  
                                                 i1l1664 003B  
                                                 i1l1656 0020  
                                                 i1l1682 0055  
                                                 i1l1676 004C  
                                                 i1l1668 0042  
                                                 i1l1694 00CD  
                                                 i1l1678 004D  
                                                 i1l1688 0071  
                                                 _OSCCON 0099  
                                                 _TMR0IE 005D  
                                                 _TMR0IF 005A  
                                                 _TMR2IF 0089  
                                                 _TMR2ON 00E2  
                                                 _TRISA2 0462  
                                 ?_CONFIG_TMR0_INTERRUPT 0070  
                                         DO_ADC@modifier 004D  
                            __end_of_DETERMINE_WAVESHAPE 0695  
                      __end_of_symmetry_adc_config_value 074D  
                                                 ___lmul 0613  
                                           _symmetry_cum 0024  
                                  __end_of_SET_DUTY_CCP3 06DA  
                              ?_ADJUST_AND_SET_PRESCALER 0070  
                                 _not_first_average_flag 0042  
                                      ?_TURN_ON_CCP3_PWM 0070  
                                      ??_CONFIG_ADC_PINS 004D  
                                _current_speed_linear_32 0034  
                                     ??_TURN_ON_CCP3_PWM 004D  
                                __end_of__initialization 00ED  
                                         _SHORTEN_PERIOD 053D  
                                         _DIVIDE_BY_FOUR 0746  
                                         _CONFIG_INT_OSC 072D  
                                         __pcstackCOMMON 0070  
                                           __pidataBANK0 073F  
                                             __end_of_NO 0744  
                                 _tri_table_one_quadrant 00F1  
                                      ??_CONFIG_PWM_CCP3 004D  
                                      _top_two_bytes_ptr 006E  
                                          _current_depth 0040  
                                             __pbssBANK0 0020  
                                                ?_DO_ADC 004D  
                                 __end_of_SHORTEN_PERIOD 05B0  
                                           _CONFIG_PORTS 070E  
                                 __end_of_DIVIDE_BY_FOUR 0747  
                                 __end_of_CONFIG_INT_OSC 0733  
                                     __end_of_DO_NOTHING 074A  
                                             __pmaintext 0695  
                                 _GET_CURRENT_POT_VALUES 03A8  
                                                ?___lmul 004D  
                                             __pintentry 0004  
       PROCESS_TMR0_AND_PRESCALER_ADJUST@symmetry_status 006D  
                                                _CCP3CON 0313  
                                         ___lmul@product 0055  
                                             _final_TMR0 0038  
                                  SET_DUTY_CCP3@duty_ptr 0073  
                                                _OSCTUNE 0098  
                                _sine_table_one_quadrant 01F3  
                                        ?_SHORTEN_PERIOD 0070  
                                        ?_CONFIG_INT_OSC 0070  
                                   _current_speed_linear 003E  
                                      _TURN_PRESCALER_ON 073C  
                              _base_prescaler_bits_index 0046  
                                                __ptext1 071F  
                                                __ptext2 0435  
                                                __ptext3 053D  
                                                __ptext4 02F5  
                                                __ptext5 05B0  
                                                __ptext6 073C  
                                                __ptext7 0733  
                                                __ptext8 06DA  
                                                __ptext9 04C1  
                                     ?_TURN_PRESCALER_ON 0070  
                                        _MULTIPLY_BY_TWO 0747  
                __end_of_PROCESS_RAW_SPEED_AND_PRESCALER 053D  
                      ??_PROCESS_RAW_SPEED_AND_PRESCALER 0059  
                       ?_PROCESS_RAW_SPEED_AND_PRESCALER 0070  
                        _PROCESS_RAW_SPEED_AND_PRESCALER 04C1  
                                              _DONT_CARE 0745  
                                    ??_TURN_PRESCALER_ON 004D  
                                                clrloop0 0728  
                                   end_of_initialization 00ED  
                                ??_CONFIG_TMR0_INTERRUPT 004D  
                                          _duty_low_byte 004B  
                              __end_of_TURN_PRESCALER_ON 073F  
                         __end_of_speed_adc_config_value 074F  
                       __end_of_ADJUST_AND_SET_PRESCALER 0613  
                                 _depth_adc_config_value 074D  
                                        _CONFIG_ADC_PINS 0738  
                                      ??_LENGTHEN_PERIOD 0059  
              __end_of_PROCESS_TMR0_AND_PRESCALER_ADJUST 04C1  
                    ??_PROCESS_TMR0_AND_PRESCALER_ADJUST 0069  
                     ?_PROCESS_TMR0_AND_PRESCALER_ADJUST 0070  
                      _PROCESS_TMR0_AND_PRESCALER_ADJUST 0435  
                                             DO_ADC@temp 0052  
                                         __end_of_DO_ADC 066E  
                                      SET_DUTY_CCP3@temp 0072  
                                _prescaler_overflow_flag 0044  
                                       _current_quadrant 004C  
                             __end_of_TURN_PRESCALER_OFF 0738  
                                __end_of_MULTIPLY_BY_TWO 0748  
                                        _CONFIG_PWM_CCP3 06EF  
                                       _current_symmetry 0030  
                                         __end_of___lmul 0642  
                                    start_initialization 00D9  
                                            __end_of_YES 0745  
                                               ??_DO_ADC 004F  
                                ?_GET_CURRENT_POT_VALUES 0070  
                        __end_of_sine_table_one_quadrant 02F5  
                                __end_of_CONFIG_ADC_PINS 073C  
                                               ??___lmul 0055  
                         __end_of_tri_table_one_quadrant 01F3  
                                            __pdataBANK0 006E  
                                       DO_ADC@adc_result 0050  
                               _ADJUST_AND_SET_PRESCALER 05B0  
                                            __pbssCOMMON 0076  
                                              ___latbits 0001  
                                          _DIVIDE_BY_TWO 0748  
                                          __pcstackBANK0 004D  
                                          __pcstackBANK1 00A0  
                                       ??_SHORTEN_PERIOD 0059  
                                          _CONFIG_SYSTEM 0702  
                                       ??_CONFIG_INT_OSC 004D  
                         __end_of_GET_CURRENT_POT_VALUES 0435  
                                __end_of_CONFIG_PWM_CCP3 0702  
                                         _prescaler_bits 0717  
                           ??_INTERRUPT_InterruptManager 0074  
                                           _how_many_128 0048  
                                          _SET_DUTY_CCP3 06BA  
                                               _CCPTMRS0 029E  
                                         ?_CONFIG_SYSTEM 0070  
                                       _prescaler_adjust 0047  
                                        _symmetry_status 0045  
                                               _NEGATIVE 074A  
                     __end_of_waveshape_adc_config_value 0750  
                             _waveshape_adc_config_value 074F  
                          __end_of_CONFIG_TMR0_INTERRUPT 0743  
                                              clear_ram0 0727  
                                               _GO_nDONE 04E9  
                                       _TURN_ON_CCP3_PWM 071F  
                                 __end_of_prescaler_bits 071F  
                                       ?_CONFIG_ADC_PINS 0070  
                                               _POSITIVE 074B  
                                        _LENGTHEN_PERIOD 02F5  
                                         ?_SET_DUTY_CCP3 0070  
                                      ___lmul@multiplier 004D  
                                    _DETERMINE_WAVESHAPE 066E  
                                 DETERMINE_WAVESHAPE@ADC 0053  
                                       ?_CONFIG_PWM_CCP3 0070  
                         __end_of_depth_adc_config_value 074E  
                                   ?_DETERMINE_WAVESHAPE 0070  
                                     _TURN_PRESCALER_OFF 0733  
                                        ??_CONFIG_SYSTEM 004D  
                                       _speed_control_32 0028  
                                               __ptext10 0613  
                                               __ptext11 03A8  
                                               __ptext12 066E  
                                               __ptext21 06BA  
                                               __ptext13 0642  
                                               __ptext14 0741  
                                               __ptext15 0702  
                                               __ptext16 06EF  
                                               __ptext17 070E  
                                               __ptext18 072D  
                                               __ptext19 0738  
                                    ?_TURN_PRESCALER_OFF 0070  
PROCESS_RAW_SPEED_AND_PRESCALER@speed_control_subtracted 005E  
                                          ?_CONFIG_PORTS 0070  
                                         _symmetry_count 0049  
                                         _duty_high_byte 004A  
                                          _speed_control 003C  
                                               _raw_TMR0 002C  
                                __end_of_LENGTHEN_PERIOD 03A8  
                                  _prescaler_final_index 0043  
                                   ??_TURN_PRESCALER_OFF 004D  
                                               int$flags 007E  
                             ??_ADJUST_AND_SET_PRESCALER 0050  
                                  ??_DETERMINE_WAVESHAPE 0053  
                     __end_of_INTERRUPT_InterruptManager 00D7  
                             _INTERRUPT_InterruptManager 0004  
                                    _LENGTHEN_PERIOD$856 0061  
                                        ??_SET_DUTY_CCP3 0070  
                                             _DO_NOTHING 0749  
                                         __pstringtext10 0749  
                                         __pstringtext11 074A  
                                         __pstringtext12 074B  
                                         __pstringtext13 074C  
                                         __pstringtext14 074D  
                                         __pstringtext15 074E  
                                         __pstringtext16 074F  
                              _symmetry_adc_config_value 074C  
                                         ??_CONFIG_PORTS 004D  
                                               intlevel1 0000  
                                          __pstringtext1 00F1  
                                          __pstringtext2 01F3  
                                          __pstringtext3 0717  
                                          __pstringtext4 0743  
                                          __pstringtext5 0744  
                                          __pstringtext6 0745  
                                          __pstringtext7 0746  
                                          __pstringtext8 0747  
                                          __pstringtext9 0748  
                                             _OPTION_REG 0095  
                               __end_of_TURN_ON_CCP3_PWM 0727  
                                      _current_halfcycle 0076  
            LENGTHEN_PERIOD@twofiftysix_minus_TMR0_final 0065  
             SHORTEN_PERIOD@twofiftysix_minus_TMR0_final 0061  
                                       ?_LENGTHEN_PERIOD 0070  
