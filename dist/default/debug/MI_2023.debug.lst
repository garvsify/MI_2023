

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Wed Jan 24 14:58:52 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og9 
     1                           	processor	16F1824
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    15                           	psect	stringtext11,global,class=STRCODE,delta=2,noexec
    16                           	psect	stringtext12,global,class=STRCODE,delta=2,noexec
    17                           	psect	stringtext13,global,class=STRCODE,delta=2,noexec
    18                           	psect	stringtext14,global,class=STRCODE,delta=2,noexec
    19                           	psect	stringtext15,global,class=STRCODE,delta=2,noexec
    20                           	psect	stringtext16,global,class=STRCODE,delta=2,noexec
    21                           	psect	stringtext17,global,class=STRCODE,delta=2,noexec
    22                           	psect	stringtext18,global,class=STRCODE,delta=2,noexec
    23                           	psect	cinit,global,class=CODE,merge=1,delta=2
    24                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    25                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    26                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    27                           	psect	clrtext,global,class=CODE,delta=2
    28                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    29                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    30                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    31                           	psect	text1,local,class=CODE,merge=1,delta=2
    32                           	psect	text2,local,class=CODE,merge=1,delta=2
    33                           	psect	text3,local,class=CODE,merge=1,delta=2
    34                           	psect	text4,local,class=CODE,merge=1,delta=2
    35                           	psect	text5,local,class=CODE,merge=1,delta=2
    36                           	psect	text6,local,class=CODE,merge=1,delta=2
    37                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text8,local,class=CODE,merge=1,delta=2
    39                           	psect	text9,local,class=CODE,merge=1,delta=2
    40                           	psect	text10,local,class=CODE,merge=1,delta=2
    41                           	psect	text11,local,class=CODE,merge=1,delta=2
    42                           	psect	text12,local,class=CODE,merge=1,delta=2
    43                           	psect	text13,local,class=CODE,merge=1,delta=2
    44                           	psect	text14,local,class=CODE,merge=1,delta=2
    45                           	psect	text15,local,class=CODE,merge=1,delta=2
    46                           	psect	text16,local,class=CODE,merge=1,delta=2
    47                           	psect	text17,local,class=CODE,merge=1,delta=2
    48                           	psect	intentry,global,class=CODE,delta=2
    49                           	psect	text19,local,class=CODE,merge=1,delta=2
    50                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    51                           	dabs	1,0x7E,2
    52     0000                     
    53                           ; Generated 06/07/2023 GMT
    54                           ; 
    55                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution. Publication is not required when
    69                           ;        this file is used in an embedded application.
    70                           ; 
    71                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    72                           ;        software without specific prior written permission.
    73                           ; 
    74                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    75                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    76                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    77                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    78                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    79                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    80                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    81                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    82                           ; 
    83                           ; 
    84                           ; Code-generator required, PIC16F1824 Definitions
    85                           ; 
    86                           ; SFR Addresses
    87     0000                     	;# 
    88     0001                     	;# 
    89     0002                     	;# 
    90     0003                     	;# 
    91     0004                     	;# 
    92     0005                     	;# 
    93     0006                     	;# 
    94     0007                     	;# 
    95     0008                     	;# 
    96     0009                     	;# 
    97     000A                     	;# 
    98     000B                     	;# 
    99     000C                     	;# 
   100     000E                     	;# 
   101     0011                     	;# 
   102     0012                     	;# 
   103     0013                     	;# 
   104     0015                     	;# 
   105     0016                     	;# 
   106     0016                     	;# 
   107     0017                     	;# 
   108     0018                     	;# 
   109     0019                     	;# 
   110     001A                     	;# 
   111     001B                     	;# 
   112     001C                     	;# 
   113     001E                     	;# 
   114     001F                     	;# 
   115     008C                     	;# 
   116     008E                     	;# 
   117     0091                     	;# 
   118     0092                     	;# 
   119     0093                     	;# 
   120     0095                     	;# 
   121     0096                     	;# 
   122     0097                     	;# 
   123     0098                     	;# 
   124     0099                     	;# 
   125     009A                     	;# 
   126     009B                     	;# 
   127     009B                     	;# 
   128     009C                     	;# 
   129     009D                     	;# 
   130     009E                     	;# 
   131     010C                     	;# 
   132     010E                     	;# 
   133     0111                     	;# 
   134     0112                     	;# 
   135     0113                     	;# 
   136     0114                     	;# 
   137     0115                     	;# 
   138     0116                     	;# 
   139     0117                     	;# 
   140     0118                     	;# 
   141     0119                     	;# 
   142     011A                     	;# 
   143     011B                     	;# 
   144     011D                     	;# 
   145     011E                     	;# 
   146     018C                     	;# 
   147     018E                     	;# 
   148     0191                     	;# 
   149     0191                     	;# 
   150     0192                     	;# 
   151     0193                     	;# 
   152     0193                     	;# 
   153     0193                     	;# 
   154     0194                     	;# 
   155     0195                     	;# 
   156     0196                     	;# 
   157     0199                     	;# 
   158     019A                     	;# 
   159     019B                     	;# 
   160     019B                     	;# 
   161     019B                     	;# 
   162     019B                     	;# 
   163     019C                     	;# 
   164     019C                     	;# 
   165     019D                     	;# 
   166     019E                     	;# 
   167     019F                     	;# 
   168     020C                     	;# 
   169     020E                     	;# 
   170     0211                     	;# 
   171     0211                     	;# 
   172     0212                     	;# 
   173     0212                     	;# 
   174     0213                     	;# 
   175     0213                     	;# 
   176     0214                     	;# 
   177     0214                     	;# 
   178     0215                     	;# 
   179     0215                     	;# 
   180     0215                     	;# 
   181     0215                     	;# 
   182     0216                     	;# 
   183     0216                     	;# 
   184     0217                     	;# 
   185     0217                     	;# 
   186     0291                     	;# 
   187     0291                     	;# 
   188     0292                     	;# 
   189     0293                     	;# 
   190     0294                     	;# 
   191     0295                     	;# 
   192     0295                     	;# 
   193     0296                     	;# 
   194     0298                     	;# 
   195     0298                     	;# 
   196     0299                     	;# 
   197     029A                     	;# 
   198     029B                     	;# 
   199     029C                     	;# 
   200     029D                     	;# 
   201     029E                     	;# 
   202     029E                     	;# 
   203     0311                     	;# 
   204     0311                     	;# 
   205     0312                     	;# 
   206     0313                     	;# 
   207     0318                     	;# 
   208     0318                     	;# 
   209     0319                     	;# 
   210     031A                     	;# 
   211     038C                     	;# 
   212     038E                     	;# 
   213     0391                     	;# 
   214     0392                     	;# 
   215     0393                     	;# 
   216     039A                     	;# 
   217     039C                     	;# 
   218     039D                     	;# 
   219     039E                     	;# 
   220     039F                     	;# 
   221     0415                     	;# 
   222     0416                     	;# 
   223     0417                     	;# 
   224     041C                     	;# 
   225     041D                     	;# 
   226     041E                     	;# 
   227     0FE4                     	;# 
   228     0FE5                     	;# 
   229     0FE6                     	;# 
   230     0FE7                     	;# 
   231     0FE8                     	;# 
   232     0FE9                     	;# 
   233     0FEA                     	;# 
   234     0FEB                     	;# 
   235     0FED                     	;# 
   236     0FEE                     	;# 
   237     0FEF                     	;# 
   238     0020                     	;# 
   239     0021                     	;# 
   240     0022                     	;# 
   241     0023                     	;# 
   242     0024                     	;# 
   243     0025                     	;# 
   244     0000                     	;# 
   245     0001                     	;# 
   246     0002                     	;# 
   247     0003                     	;# 
   248     0004                     	;# 
   249     0005                     	;# 
   250     0006                     	;# 
   251     0007                     	;# 
   252     0008                     	;# 
   253     0009                     	;# 
   254     000A                     	;# 
   255     000B                     	;# 
   256     000C                     	;# 
   257     000E                     	;# 
   258     0011                     	;# 
   259     0012                     	;# 
   260     0013                     	;# 
   261     0015                     	;# 
   262     0016                     	;# 
   263     0016                     	;# 
   264     0017                     	;# 
   265     0018                     	;# 
   266     0019                     	;# 
   267     001A                     	;# 
   268     001B                     	;# 
   269     001C                     	;# 
   270     001E                     	;# 
   271     001F                     	;# 
   272     008C                     	;# 
   273     008E                     	;# 
   274     0091                     	;# 
   275     0092                     	;# 
   276     0093                     	;# 
   277     0095                     	;# 
   278     0096                     	;# 
   279     0097                     	;# 
   280     0098                     	;# 
   281     0099                     	;# 
   282     009A                     	;# 
   283     009B                     	;# 
   284     009B                     	;# 
   285     009C                     	;# 
   286     009D                     	;# 
   287     009E                     	;# 
   288     010C                     	;# 
   289     010E                     	;# 
   290     0111                     	;# 
   291     0112                     	;# 
   292     0113                     	;# 
   293     0114                     	;# 
   294     0115                     	;# 
   295     0116                     	;# 
   296     0117                     	;# 
   297     0118                     	;# 
   298     0119                     	;# 
   299     011A                     	;# 
   300     011B                     	;# 
   301     011D                     	;# 
   302     011E                     	;# 
   303     018C                     	;# 
   304     018E                     	;# 
   305     0191                     	;# 
   306     0191                     	;# 
   307     0192                     	;# 
   308     0193                     	;# 
   309     0193                     	;# 
   310     0193                     	;# 
   311     0194                     	;# 
   312     0195                     	;# 
   313     0196                     	;# 
   314     0199                     	;# 
   315     019A                     	;# 
   316     019B                     	;# 
   317     019B                     	;# 
   318     019B                     	;# 
   319     019B                     	;# 
   320     019C                     	;# 
   321     019C                     	;# 
   322     019D                     	;# 
   323     019E                     	;# 
   324     019F                     	;# 
   325     020C                     	;# 
   326     020E                     	;# 
   327     0211                     	;# 
   328     0211                     	;# 
   329     0212                     	;# 
   330     0212                     	;# 
   331     0213                     	;# 
   332     0213                     	;# 
   333     0214                     	;# 
   334     0214                     	;# 
   335     0215                     	;# 
   336     0215                     	;# 
   337     0215                     	;# 
   338     0215                     	;# 
   339     0216                     	;# 
   340     0216                     	;# 
   341     0217                     	;# 
   342     0217                     	;# 
   343     0291                     	;# 
   344     0291                     	;# 
   345     0292                     	;# 
   346     0293                     	;# 
   347     0294                     	;# 
   348     0295                     	;# 
   349     0295                     	;# 
   350     0296                     	;# 
   351     0298                     	;# 
   352     0298                     	;# 
   353     0299                     	;# 
   354     029A                     	;# 
   355     029B                     	;# 
   356     029C                     	;# 
   357     029D                     	;# 
   358     029E                     	;# 
   359     029E                     	;# 
   360     0311                     	;# 
   361     0311                     	;# 
   362     0312                     	;# 
   363     0313                     	;# 
   364     0318                     	;# 
   365     0318                     	;# 
   366     0319                     	;# 
   367     031A                     	;# 
   368     038C                     	;# 
   369     038E                     	;# 
   370     0391                     	;# 
   371     0392                     	;# 
   372     0393                     	;# 
   373     039A                     	;# 
   374     039C                     	;# 
   375     039D                     	;# 
   376     039E                     	;# 
   377     039F                     	;# 
   378     0415                     	;# 
   379     0416                     	;# 
   380     0417                     	;# 
   381     041C                     	;# 
   382     041D                     	;# 
   383     041E                     	;# 
   384     0FE4                     	;# 
   385     0FE5                     	;# 
   386     0FE6                     	;# 
   387     0FE7                     	;# 
   388     0FE8                     	;# 
   389     0FE9                     	;# 
   390     0FEA                     	;# 
   391     0FEB                     	;# 
   392     0FED                     	;# 
   393     0FEE                     	;# 
   394     0FEF                     	;# 
   395                           
   396                           	psect	idataBANK0
   397     07C6                     __pidataBANK0:
   398                           
   399                           ;initializer for _top_two_bytes_ptr
   400     07C6  3421               	retlw	33
   401     07C7  3400               	retlw	0
   402                           
   403                           	psect	stringtext1
   404     00EB                     __pstringtext1:
   405     00EB                     _shorten_period_log_table:
   406     00EB  3400               	retlw	0
   407     00EC  3401               	retlw	1
   408     00ED  34F5               	retlw	245
   409     00EE  3400               	retlw	0
   410     00EF  34EA               	retlw	234
   411     00F0  3400               	retlw	0
   412     00F1  34E0               	retlw	224
   413     00F2  3400               	retlw	0
   414     00F3  34D7               	retlw	215
   415     00F4  3400               	retlw	0
   416     00F5  34CE               	retlw	206
   417     00F6  3400               	retlw	0
   418     00F7  34C5               	retlw	197
   419     00F8  3400               	retlw	0
   420     00F9  34BC               	retlw	188
   421     00FA  3400               	retlw	0
   422     00FB  34B4               	retlw	180
   423     00FC  3400               	retlw	0
   424     00FD  34AD               	retlw	173
   425     00FE  3400               	retlw	0
   426     00FF  34A5               	retlw	165
   427     0100  3400               	retlw	0
   428     0101  349E               	retlw	158
   429     0102  3400               	retlw	0
   430     0103  3498               	retlw	152
   431     0104  3400               	retlw	0
   432     0105  3491               	retlw	145
   433     0106  3400               	retlw	0
   434     0107  348B               	retlw	139
   435     0108  3400               	retlw	0
   436     0109  3485               	retlw	133
   437     010A  3400               	retlw	0
   438     010B  347F               	retlw	127
   439     010C  3400               	retlw	0
   440     010D  347A               	retlw	122
   441     010E  3400               	retlw	0
   442     010F  3475               	retlw	117
   443     0110  3400               	retlw	0
   444     0111  3470               	retlw	112
   445     0112  3400               	retlw	0
   446     0113  346B               	retlw	107
   447     0114  3400               	retlw	0
   448     0115  3466               	retlw	102
   449     0116  3400               	retlw	0
   450     0117  3462               	retlw	98
   451     0118  3400               	retlw	0
   452     0119  345E               	retlw	94
   453     011A  3400               	retlw	0
   454     011B  345A               	retlw	90
   455     011C  3400               	retlw	0
   456     011D  3456               	retlw	86
   457     011E  3400               	retlw	0
   458     011F  3452               	retlw	82
   459     0120  3400               	retlw	0
   460     0121  344F               	retlw	79
   461     0122  3400               	retlw	0
   462     0123  344B               	retlw	75
   463     0124  3400               	retlw	0
   464     0125  3448               	retlw	72
   465     0126  3400               	retlw	0
   466     0127  3445               	retlw	69
   467     0128  3400               	retlw	0
   468     0129  3442               	retlw	66
   469     012A  3400               	retlw	0
   470     012B  343F               	retlw	63
   471     012C  3400               	retlw	0
   472     012D  343C               	retlw	60
   473     012E  3400               	retlw	0
   474     012F  343A               	retlw	58
   475     0130  3400               	retlw	0
   476     0131  3437               	retlw	55
   477     0132  3400               	retlw	0
   478     0133  3435               	retlw	53
   479     0134  3400               	retlw	0
   480     0135  3433               	retlw	51
   481     0136  3400               	retlw	0
   482     0137  3430               	retlw	48
   483     0138  3400               	retlw	0
   484     0139  342E               	retlw	46
   485     013A  3400               	retlw	0
   486     013B  342C               	retlw	44
   487     013C  3400               	retlw	0
   488     013D  342A               	retlw	42
   489     013E  3400               	retlw	0
   490     013F  3429               	retlw	41
   491     0140  3400               	retlw	0
   492     0141  3427               	retlw	39
   493     0142  3400               	retlw	0
   494     0143  3425               	retlw	37
   495     0144  3400               	retlw	0
   496     0145  3423               	retlw	35
   497     0146  3400               	retlw	0
   498     0147  3422               	retlw	34
   499     0148  3400               	retlw	0
   500     0149  3420               	retlw	32
   501     014A  3400               	retlw	0
   502     014B  341F               	retlw	31
   503     014C  3400               	retlw	0
   504     014D  341E               	retlw	30
   505     014E  3400               	retlw	0
   506     014F  341C               	retlw	28
   507     0150  3400               	retlw	0
   508     0151  341B               	retlw	27
   509     0152  3400               	retlw	0
   510     0153  341A               	retlw	26
   511     0154  3400               	retlw	0
   512     0155  3419               	retlw	25
   513     0156  3400               	retlw	0
   514     0157  3418               	retlw	24
   515     0158  3400               	retlw	0
   516     0159  3417               	retlw	23
   517     015A  3400               	retlw	0
   518     015B  3416               	retlw	22
   519     015C  3400               	retlw	0
   520     015D  3415               	retlw	21
   521     015E  3400               	retlw	0
   522     015F  3414               	retlw	20
   523     0160  3400               	retlw	0
   524     0161  3413               	retlw	19
   525     0162  3400               	retlw	0
   526     0163  3412               	retlw	18
   527     0164  3400               	retlw	0
   528     0165  3411               	retlw	17
   529     0166  3400               	retlw	0
   530     0167  3410               	retlw	16
   531     0168  3400               	retlw	0
   532     0169  3410               	retlw	16
   533     016A  3400               	retlw	0
   534     016B  340F               	retlw	15
   535     016C  3400               	retlw	0
   536     016D  340E               	retlw	14
   537     016E  3400               	retlw	0
   538     016F  340E               	retlw	14
   539     0170  3400               	retlw	0
   540     0171  340D               	retlw	13
   541     0172  3400               	retlw	0
   542     0173  340C               	retlw	12
   543     0174  3400               	retlw	0
   544     0175  340C               	retlw	12
   545     0176  3400               	retlw	0
   546     0177  340B               	retlw	11
   547     0178  3400               	retlw	0
   548     0179  340B               	retlw	11
   549     017A  3400               	retlw	0
   550     017B  340A               	retlw	10
   551     017C  3400               	retlw	0
   552     017D  340A               	retlw	10
   553     017E  3400               	retlw	0
   554     017F  3409               	retlw	9
   555     0180  3400               	retlw	0
   556     0181  3409               	retlw	9
   557     0182  3400               	retlw	0
   558     0183  3409               	retlw	9
   559     0184  3400               	retlw	0
   560     0185  3408               	retlw	8
   561     0186  3400               	retlw	0
   562     0187  3408               	retlw	8
   563     0188  3400               	retlw	0
   564     0189  3407               	retlw	7
   565     018A  3400               	retlw	0
   566     018B  3407               	retlw	7
   567     018C  3400               	retlw	0
   568     018D  3407               	retlw	7
   569     018E  3400               	retlw	0
   570     018F  3406               	retlw	6
   571     0190  3400               	retlw	0
   572     0191  3406               	retlw	6
   573     0192  3400               	retlw	0
   574     0193  3406               	retlw	6
   575     0194  3400               	retlw	0
   576     0195  3405               	retlw	5
   577     0196  3400               	retlw	0
   578     0197  3405               	retlw	5
   579     0198  3400               	retlw	0
   580     0199  3405               	retlw	5
   581     019A  3400               	retlw	0
   582     019B  3405               	retlw	5
   583     019C  3400               	retlw	0
   584     019D  3404               	retlw	4
   585     019E  3400               	retlw	0
   586     019F  3404               	retlw	4
   587     01A0  3400               	retlw	0
   588     01A1  3404               	retlw	4
   589     01A2  3400               	retlw	0
   590     01A3  3404               	retlw	4
   591     01A4  3400               	retlw	0
   592     01A5  3404               	retlw	4
   593     01A6  3400               	retlw	0
   594     01A7  3403               	retlw	3
   595     01A8  3400               	retlw	0
   596     01A9  3403               	retlw	3
   597     01AA  3400               	retlw	0
   598     01AB  3403               	retlw	3
   599     01AC  3400               	retlw	0
   600     01AD  3403               	retlw	3
   601     01AE  3400               	retlw	0
   602     01AF  3403               	retlw	3
   603     01B0  3400               	retlw	0
   604     01B1  3403               	retlw	3
   605     01B2  3400               	retlw	0
   606     01B3  3402               	retlw	2
   607     01B4  3400               	retlw	0
   608     01B5  3402               	retlw	2
   609     01B6  3400               	retlw	0
   610     01B7  3402               	retlw	2
   611     01B8  3400               	retlw	0
   612     01B9  3402               	retlw	2
   613     01BA  3400               	retlw	0
   614     01BB  3402               	retlw	2
   615     01BC  3400               	retlw	0
   616     01BD  3402               	retlw	2
   617     01BE  3400               	retlw	0
   618     01BF  3402               	retlw	2
   619     01C0  3400               	retlw	0
   620     01C1  3401               	retlw	1
   621     01C2  3400               	retlw	0
   622     01C3  3401               	retlw	1
   623     01C4  3400               	retlw	0
   624     01C5  3401               	retlw	1
   625     01C6  3400               	retlw	0
   626     01C7  3401               	retlw	1
   627     01C8  3400               	retlw	0
   628     01C9  3401               	retlw	1
   629     01CA  3400               	retlw	0
   630     01CB  3401               	retlw	1
   631     01CC  3400               	retlw	0
   632     01CD  3401               	retlw	1
   633     01CE  3400               	retlw	0
   634     01CF  3401               	retlw	1
   635     01D0  3400               	retlw	0
   636     01D1  3401               	retlw	1
   637     01D2  3400               	retlw	0
   638     01D3  3401               	retlw	1
   639     01D4  3400               	retlw	0
   640     01D5  3401               	retlw	1
   641     01D6  3400               	retlw	0
   642     01D7  3401               	retlw	1
   643     01D8  3400               	retlw	0
   644     01D9  3400               	retlw	0
   645     01DA  3400               	retlw	0
   646     01DB  3400               	retlw	0
   647     01DC  3400               	retlw	0
   648     01DD  3400               	retlw	0
   649     01DE  3400               	retlw	0
   650     01DF  3400               	retlw	0
   651     01E0  3400               	retlw	0
   652     01E1  3400               	retlw	0
   653     01E2  3400               	retlw	0
   654     01E3  3400               	retlw	0
   655     01E4  3400               	retlw	0
   656     01E5  3400               	retlw	0
   657     01E6  3400               	retlw	0
   658     01E7  3400               	retlw	0
   659     01E8  3400               	retlw	0
   660     01E9  3400               	retlw	0
   661     01EA  3400               	retlw	0
   662     01EB  3400               	retlw	0
   663     01EC  3400               	retlw	0
   664     01ED                     __end_of_shorten_period_log_table:
   665                           
   666                           	psect	stringtext2
   667     01ED                     __pstringtext2:
   668     01ED                     _tri_table_one_quadrant:
   669     01ED  3400               	retlw	0
   670     01EE  3402               	retlw	2
   671     01EF  3404               	retlw	4
   672     01F0  3402               	retlw	2
   673     01F1  3408               	retlw	8
   674     01F2  3402               	retlw	2
   675     01F3  340C               	retlw	12
   676     01F4  3402               	retlw	2
   677     01F5  3410               	retlw	16
   678     01F6  3402               	retlw	2
   679     01F7  3414               	retlw	20
   680     01F8  3402               	retlw	2
   681     01F9  3418               	retlw	24
   682     01FA  3402               	retlw	2
   683     01FB  341C               	retlw	28
   684     01FC  3402               	retlw	2
   685     01FD  3420               	retlw	32
   686     01FE  3402               	retlw	2
   687     01FF  3424               	retlw	36
   688     0200  3402               	retlw	2
   689     0201  3428               	retlw	40
   690     0202  3402               	retlw	2
   691     0203  342C               	retlw	44
   692     0204  3402               	retlw	2
   693     0205  3430               	retlw	48
   694     0206  3402               	retlw	2
   695     0207  3434               	retlw	52
   696     0208  3402               	retlw	2
   697     0209  3438               	retlw	56
   698     020A  3402               	retlw	2
   699     020B  343C               	retlw	60
   700     020C  3402               	retlw	2
   701     020D  3440               	retlw	64
   702     020E  3402               	retlw	2
   703     020F  3444               	retlw	68
   704     0210  3402               	retlw	2
   705     0211  3448               	retlw	72
   706     0212  3402               	retlw	2
   707     0213  344C               	retlw	76
   708     0214  3402               	retlw	2
   709     0215  3450               	retlw	80
   710     0216  3402               	retlw	2
   711     0217  3454               	retlw	84
   712     0218  3402               	retlw	2
   713     0219  3458               	retlw	88
   714     021A  3402               	retlw	2
   715     021B  345C               	retlw	92
   716     021C  3402               	retlw	2
   717     021D  3460               	retlw	96
   718     021E  3402               	retlw	2
   719     021F  3464               	retlw	100
   720     0220  3402               	retlw	2
   721     0221  3468               	retlw	104
   722     0222  3402               	retlw	2
   723     0223  346C               	retlw	108
   724     0224  3402               	retlw	2
   725     0225  3470               	retlw	112
   726     0226  3402               	retlw	2
   727     0227  3474               	retlw	116
   728     0228  3402               	retlw	2
   729     0229  3478               	retlw	120
   730     022A  3402               	retlw	2
   731     022B  347C               	retlw	124
   732     022C  3402               	retlw	2
   733     022D  3480               	retlw	128
   734     022E  3402               	retlw	2
   735     022F  3484               	retlw	132
   736     0230  3402               	retlw	2
   737     0231  3488               	retlw	136
   738     0232  3402               	retlw	2
   739     0233  348C               	retlw	140
   740     0234  3402               	retlw	2
   741     0235  3490               	retlw	144
   742     0236  3402               	retlw	2
   743     0237  3494               	retlw	148
   744     0238  3402               	retlw	2
   745     0239  3498               	retlw	152
   746     023A  3402               	retlw	2
   747     023B  349C               	retlw	156
   748     023C  3402               	retlw	2
   749     023D  34A0               	retlw	160
   750     023E  3402               	retlw	2
   751     023F  34A4               	retlw	164
   752     0240  3402               	retlw	2
   753     0241  34A8               	retlw	168
   754     0242  3402               	retlw	2
   755     0243  34AC               	retlw	172
   756     0244  3402               	retlw	2
   757     0245  34B0               	retlw	176
   758     0246  3402               	retlw	2
   759     0247  34B4               	retlw	180
   760     0248  3402               	retlw	2
   761     0249  34B8               	retlw	184
   762     024A  3402               	retlw	2
   763     024B  34BC               	retlw	188
   764     024C  3402               	retlw	2
   765     024D  34C0               	retlw	192
   766     024E  3402               	retlw	2
   767     024F  34C4               	retlw	196
   768     0250  3402               	retlw	2
   769     0251  34C8               	retlw	200
   770     0252  3402               	retlw	2
   771     0253  34CC               	retlw	204
   772     0254  3402               	retlw	2
   773     0255  34D0               	retlw	208
   774     0256  3402               	retlw	2
   775     0257  34D4               	retlw	212
   776     0258  3402               	retlw	2
   777     0259  34D8               	retlw	216
   778     025A  3402               	retlw	2
   779     025B  34DC               	retlw	220
   780     025C  3402               	retlw	2
   781     025D  34E0               	retlw	224
   782     025E  3402               	retlw	2
   783     025F  34E4               	retlw	228
   784     0260  3402               	retlw	2
   785     0261  34E8               	retlw	232
   786     0262  3402               	retlw	2
   787     0263  34EC               	retlw	236
   788     0264  3402               	retlw	2
   789     0265  34F0               	retlw	240
   790     0266  3402               	retlw	2
   791     0267  34F4               	retlw	244
   792     0268  3402               	retlw	2
   793     0269  34F8               	retlw	248
   794     026A  3402               	retlw	2
   795     026B  34FB               	retlw	251
   796     026C  3402               	retlw	2
   797     026D  34FF               	retlw	255
   798     026E  3402               	retlw	2
   799     026F  3403               	retlw	3
   800     0270  3403               	retlw	3
   801     0271  3407               	retlw	7
   802     0272  3403               	retlw	3
   803     0273  340B               	retlw	11
   804     0274  3403               	retlw	3
   805     0275  340F               	retlw	15
   806     0276  3403               	retlw	3
   807     0277  3413               	retlw	19
   808     0278  3403               	retlw	3
   809     0279  3417               	retlw	23
   810     027A  3403               	retlw	3
   811     027B  341B               	retlw	27
   812     027C  3403               	retlw	3
   813     027D  341F               	retlw	31
   814     027E  3403               	retlw	3
   815     027F  3423               	retlw	35
   816     0280  3403               	retlw	3
   817     0281  3427               	retlw	39
   818     0282  3403               	retlw	3
   819     0283  342B               	retlw	43
   820     0284  3403               	retlw	3
   821     0285  342F               	retlw	47
   822     0286  3403               	retlw	3
   823     0287  3433               	retlw	51
   824     0288  3403               	retlw	3
   825     0289  3437               	retlw	55
   826     028A  3403               	retlw	3
   827     028B  343B               	retlw	59
   828     028C  3403               	retlw	3
   829     028D  343F               	retlw	63
   830     028E  3403               	retlw	3
   831     028F  3443               	retlw	67
   832     0290  3403               	retlw	3
   833     0291  3447               	retlw	71
   834     0292  3403               	retlw	3
   835     0293  344B               	retlw	75
   836     0294  3403               	retlw	3
   837     0295  344F               	retlw	79
   838     0296  3403               	retlw	3
   839     0297  3453               	retlw	83
   840     0298  3403               	retlw	3
   841     0299  3457               	retlw	87
   842     029A  3403               	retlw	3
   843     029B  345B               	retlw	91
   844     029C  3403               	retlw	3
   845     029D  345F               	retlw	95
   846     029E  3403               	retlw	3
   847     029F  3463               	retlw	99
   848     02A0  3403               	retlw	3
   849     02A1  3467               	retlw	103
   850     02A2  3403               	retlw	3
   851     02A3  346B               	retlw	107
   852     02A4  3403               	retlw	3
   853     02A5  346F               	retlw	111
   854     02A6  3403               	retlw	3
   855     02A7  3473               	retlw	115
   856     02A8  3403               	retlw	3
   857     02A9  3477               	retlw	119
   858     02AA  3403               	retlw	3
   859     02AB  347B               	retlw	123
   860     02AC  3403               	retlw	3
   861     02AD  347F               	retlw	127
   862     02AE  3403               	retlw	3
   863     02AF  3483               	retlw	131
   864     02B0  3403               	retlw	3
   865     02B1  3487               	retlw	135
   866     02B2  3403               	retlw	3
   867     02B3  348B               	retlw	139
   868     02B4  3403               	retlw	3
   869     02B5  348F               	retlw	143
   870     02B6  3403               	retlw	3
   871     02B7  3493               	retlw	147
   872     02B8  3403               	retlw	3
   873     02B9  3497               	retlw	151
   874     02BA  3403               	retlw	3
   875     02BB  349B               	retlw	155
   876     02BC  3403               	retlw	3
   877     02BD  349F               	retlw	159
   878     02BE  3403               	retlw	3
   879     02BF  34A3               	retlw	163
   880     02C0  3403               	retlw	3
   881     02C1  34A7               	retlw	167
   882     02C2  3403               	retlw	3
   883     02C3  34AB               	retlw	171
   884     02C4  3403               	retlw	3
   885     02C5  34AF               	retlw	175
   886     02C6  3403               	retlw	3
   887     02C7  34B3               	retlw	179
   888     02C8  3403               	retlw	3
   889     02C9  34B7               	retlw	183
   890     02CA  3403               	retlw	3
   891     02CB  34BB               	retlw	187
   892     02CC  3403               	retlw	3
   893     02CD  34BF               	retlw	191
   894     02CE  3403               	retlw	3
   895     02CF  34C3               	retlw	195
   896     02D0  3403               	retlw	3
   897     02D1  34C7               	retlw	199
   898     02D2  3403               	retlw	3
   899     02D3  34CB               	retlw	203
   900     02D4  3403               	retlw	3
   901     02D5  34CF               	retlw	207
   902     02D6  3403               	retlw	3
   903     02D7  34D3               	retlw	211
   904     02D8  3403               	retlw	3
   905     02D9  34D7               	retlw	215
   906     02DA  3403               	retlw	3
   907     02DB  34DB               	retlw	219
   908     02DC  3403               	retlw	3
   909     02DD  34DF               	retlw	223
   910     02DE  3403               	retlw	3
   911     02DF  34E3               	retlw	227
   912     02E0  3403               	retlw	3
   913     02E1  34E7               	retlw	231
   914     02E2  3403               	retlw	3
   915     02E3  34EB               	retlw	235
   916     02E4  3403               	retlw	3
   917     02E5  34EF               	retlw	239
   918     02E6  3403               	retlw	3
   919     02E7  34F3               	retlw	243
   920     02E8  3403               	retlw	3
   921     02E9  34F7               	retlw	247
   922     02EA  3403               	retlw	3
   923     02EB  34FB               	retlw	251
   924     02EC  3403               	retlw	3
   925     02ED  34FF               	retlw	255
   926     02EE  3403               	retlw	3
   927     02EF                     __end_of_tri_table_one_quadrant:
   928                           
   929                           	psect	stringtext3
   930     02EF                     __pstringtext3:
   931     02EF                     _sine_table_one_quadrant:
   932     02EF  3400               	retlw	0
   933     02F0  3402               	retlw	2
   934     02F1  3406               	retlw	6
   935     02F2  3402               	retlw	2
   936     02F3  340C               	retlw	12
   937     02F4  3402               	retlw	2
   938     02F5  3412               	retlw	18
   939     02F6  3402               	retlw	2
   940     02F7  3419               	retlw	25
   941     02F8  3402               	retlw	2
   942     02F9  341F               	retlw	31
   943     02FA  3402               	retlw	2
   944     02FB  3425               	retlw	37
   945     02FC  3402               	retlw	2
   946     02FD  342B               	retlw	43
   947     02FE  3402               	retlw	2
   948     02FF  3432               	retlw	50
   949     0300  3402               	retlw	2
   950     0301  3438               	retlw	56
   951     0302  3402               	retlw	2
   952     0303  343E               	retlw	62
   953     0304  3402               	retlw	2
   954     0305  3444               	retlw	68
   955     0306  3402               	retlw	2
   956     0307  344B               	retlw	75
   957     0308  3402               	retlw	2
   958     0309  3451               	retlw	81
   959     030A  3402               	retlw	2
   960     030B  3457               	retlw	87
   961     030C  3402               	retlw	2
   962     030D  345D               	retlw	93
   963     030E  3402               	retlw	2
   964     030F  3463               	retlw	99
   965     0310  3402               	retlw	2
   966     0311  3469               	retlw	105
   967     0312  3402               	retlw	2
   968     0313  3470               	retlw	112
   969     0314  3402               	retlw	2
   970     0315  3476               	retlw	118
   971     0316  3402               	retlw	2
   972     0317  347C               	retlw	124
   973     0318  3402               	retlw	2
   974     0319  3482               	retlw	130
   975     031A  3402               	retlw	2
   976     031B  3488               	retlw	136
   977     031C  3402               	retlw	2
   978     031D  348E               	retlw	142
   979     031E  3402               	retlw	2
   980     031F  3494               	retlw	148
   981     0320  3402               	retlw	2
   982     0321  349A               	retlw	154
   983     0322  3402               	retlw	2
   984     0323  34A0               	retlw	160
   985     0324  3402               	retlw	2
   986     0325  34A6               	retlw	166
   987     0326  3402               	retlw	2
   988     0327  34AC               	retlw	172
   989     0328  3402               	retlw	2
   990     0329  34B2               	retlw	178
   991     032A  3402               	retlw	2
   992     032B  34B8               	retlw	184
   993     032C  3402               	retlw	2
   994     032D  34BD               	retlw	189
   995     032E  3402               	retlw	2
   996     032F  34C3               	retlw	195
   997     0330  3402               	retlw	2
   998     0331  34C9               	retlw	201
   999     0332  3402               	retlw	2
  1000     0333  34CF               	retlw	207
  1001     0334  3402               	retlw	2
  1002     0335  34D5               	retlw	213
  1003     0336  3402               	retlw	2
  1004     0337  34DA               	retlw	218
  1005     0338  3402               	retlw	2
  1006     0339  34E0               	retlw	224
  1007     033A  3402               	retlw	2
  1008     033B  34E5               	retlw	229
  1009     033C  3402               	retlw	2
  1010     033D  34EB               	retlw	235
  1011     033E  3402               	retlw	2
  1012     033F  34F1               	retlw	241
  1013     0340  3402               	retlw	2
  1014     0341  34F6               	retlw	246
  1015     0342  3402               	retlw	2
  1016     0343  34FC               	retlw	252
  1017     0344  3402               	retlw	2
  1018     0345  3401               	retlw	1
  1019     0346  3403               	retlw	3
  1020     0347  3406               	retlw	6
  1021     0348  3403               	retlw	3
  1022     0349  340C               	retlw	12
  1023     034A  3403               	retlw	3
  1024     034B  3411               	retlw	17
  1025     034C  3403               	retlw	3
  1026     034D  3416               	retlw	22
  1027     034E  3403               	retlw	3
  1028     034F  341C               	retlw	28
  1029     0350  3403               	retlw	3
  1030     0351  3421               	retlw	33
  1031     0352  3403               	retlw	3
  1032     0353  3426               	retlw	38
  1033     0354  3403               	retlw	3
  1034     0355  342B               	retlw	43
  1035     0356  3403               	retlw	3
  1036     0357  3430               	retlw	48
  1037     0358  3403               	retlw	3
  1038     0359  3435               	retlw	53
  1039     035A  3403               	retlw	3
  1040     035B  343A               	retlw	58
  1041     035C  3403               	retlw	3
  1042     035D  343F               	retlw	63
  1043     035E  3403               	retlw	3
  1044     035F  3444               	retlw	68
  1045     0360  3403               	retlw	3
  1046     0361  3449               	retlw	73
  1047     0362  3403               	retlw	3
  1048     0363  344E               	retlw	78
  1049     0364  3403               	retlw	3
  1050     0365  3452               	retlw	82
  1051     0366  3403               	retlw	3
  1052     0367  3457               	retlw	87
  1053     0368  3403               	retlw	3
  1054     0369  345C               	retlw	92
  1055     036A  3403               	retlw	3
  1056     036B  3460               	retlw	96
  1057     036C  3403               	retlw	3
  1058     036D  3465               	retlw	101
  1059     036E  3403               	retlw	3
  1060     036F  3469               	retlw	105
  1061     0370  3403               	retlw	3
  1062     0371  346E               	retlw	110
  1063     0372  3403               	retlw	3
  1064     0373  3472               	retlw	114
  1065     0374  3403               	retlw	3
  1066     0375  3476               	retlw	118
  1067     0376  3403               	retlw	3
  1068     0377  347A               	retlw	122
  1069     0378  3403               	retlw	3
  1070     0379  347F               	retlw	127
  1071     037A  3403               	retlw	3
  1072     037B  3483               	retlw	131
  1073     037C  3403               	retlw	3
  1074     037D  3487               	retlw	135
  1075     037E  3403               	retlw	3
  1076     037F  348B               	retlw	139
  1077     0380  3403               	retlw	3
  1078     0381  348F               	retlw	143
  1079     0382  3403               	retlw	3
  1080     0383  3493               	retlw	147
  1081     0384  3403               	retlw	3
  1082     0385  3497               	retlw	151
  1083     0386  3403               	retlw	3
  1084     0387  349A               	retlw	154
  1085     0388  3403               	retlw	3
  1086     0389  349E               	retlw	158
  1087     038A  3403               	retlw	3
  1088     038B  34A2               	retlw	162
  1089     038C  3403               	retlw	3
  1090     038D  34A5               	retlw	165
  1091     038E  3403               	retlw	3
  1092     038F  34A9               	retlw	169
  1093     0390  3403               	retlw	3
  1094     0391  34AC               	retlw	172
  1095     0392  3403               	retlw	3
  1096     0393  34B0               	retlw	176
  1097     0394  3403               	retlw	3
  1098     0395  34B3               	retlw	179
  1099     0396  3403               	retlw	3
  1100     0397  34B6               	retlw	182
  1101     0398  3403               	retlw	3
  1102     0399  34B9               	retlw	185
  1103     039A  3403               	retlw	3
  1104     039B  34BD               	retlw	189
  1105     039C  3403               	retlw	3
  1106     039D  34C0               	retlw	192
  1107     039E  3403               	retlw	3
  1108     039F  34C3               	retlw	195
  1109     03A0  3403               	retlw	3
  1110     03A1  34C6               	retlw	198
  1111     03A2  3403               	retlw	3
  1112     03A3  34C8               	retlw	200
  1113     03A4  3403               	retlw	3
  1114     03A5  34CB               	retlw	203
  1115     03A6  3403               	retlw	3
  1116     03A7  34CE               	retlw	206
  1117     03A8  3403               	retlw	3
  1118     03A9  34D1               	retlw	209
  1119     03AA  3403               	retlw	3
  1120     03AB  34D3               	retlw	211
  1121     03AC  3403               	retlw	3
  1122     03AD  34D6               	retlw	214
  1123     03AE  3403               	retlw	3
  1124     03AF  34D8               	retlw	216
  1125     03B0  3403               	retlw	3
  1126     03B1  34DA               	retlw	218
  1127     03B2  3403               	retlw	3
  1128     03B3  34DD               	retlw	221
  1129     03B4  3403               	retlw	3
  1130     03B5  34DF               	retlw	223
  1131     03B6  3403               	retlw	3
  1132     03B7  34E1               	retlw	225
  1133     03B8  3403               	retlw	3
  1134     03B9  34E3               	retlw	227
  1135     03BA  3403               	retlw	3
  1136     03BB  34E5               	retlw	229
  1137     03BC  3403               	retlw	3
  1138     03BD  34E7               	retlw	231
  1139     03BE  3403               	retlw	3
  1140     03BF  34E9               	retlw	233
  1141     03C0  3403               	retlw	3
  1142     03C1  34EB               	retlw	235
  1143     03C2  3403               	retlw	3
  1144     03C3  34EC               	retlw	236
  1145     03C4  3403               	retlw	3
  1146     03C5  34EE               	retlw	238
  1147     03C6  3403               	retlw	3
  1148     03C7  34F0               	retlw	240
  1149     03C8  3403               	retlw	3
  1150     03C9  34F1               	retlw	241
  1151     03CA  3403               	retlw	3
  1152     03CB  34F3               	retlw	243
  1153     03CC  3403               	retlw	3
  1154     03CD  34F4               	retlw	244
  1155     03CE  3403               	retlw	3
  1156     03CF  34F5               	retlw	245
  1157     03D0  3403               	retlw	3
  1158     03D1  34F6               	retlw	246
  1159     03D2  3403               	retlw	3
  1160     03D3  34F7               	retlw	247
  1161     03D4  3403               	retlw	3
  1162     03D5  34F9               	retlw	249
  1163     03D6  3403               	retlw	3
  1164     03D7  34F9               	retlw	249
  1165     03D8  3403               	retlw	3
  1166     03D9  34FA               	retlw	250
  1167     03DA  3403               	retlw	3
  1168     03DB  34FB               	retlw	251
  1169     03DC  3403               	retlw	3
  1170     03DD  34FC               	retlw	252
  1171     03DE  3403               	retlw	3
  1172     03DF  34FD               	retlw	253
  1173     03E0  3403               	retlw	3
  1174     03E1  34FD               	retlw	253
  1175     03E2  3403               	retlw	3
  1176     03E3  34FE               	retlw	254
  1177     03E4  3403               	retlw	3
  1178     03E5  34FE               	retlw	254
  1179     03E6  3403               	retlw	3
  1180     03E7  34FE               	retlw	254
  1181     03E8  3403               	retlw	3
  1182     03E9  34FF               	retlw	255
  1183     03EA  3403               	retlw	3
  1184     03EB  34FF               	retlw	255
  1185     03EC  3403               	retlw	3
  1186     03ED  34FF               	retlw	255
  1187     03EE  3403               	retlw	3
  1188     03EF  34FF               	retlw	255
  1189     03F0  3403               	retlw	3
  1190     03F1                     __end_of_sine_table_one_quadrant:
  1191                           
  1192                           	psect	stringtext4
  1193     048A                     __pstringtext4:
  1194     048A                     _lengthen_period_log_table:
  1195     048A  3461               	retlw	97
  1196     048B  3461               	retlw	97
  1197     048C  3461               	retlw	97
  1198     048D  3461               	retlw	97
  1199     048E  3460               	retlw	96
  1200     048F  3460               	retlw	96
  1201     0490  3460               	retlw	96
  1202     0491  3460               	retlw	96
  1203     0492  3460               	retlw	96
  1204     0493  3460               	retlw	96
  1205     0494  345F               	retlw	95
  1206     0495  345F               	retlw	95
  1207     0496  345F               	retlw	95
  1208     0497  345F               	retlw	95
  1209     0498  345F               	retlw	95
  1210     0499  345F               	retlw	95
  1211     049A  345E               	retlw	94
  1212     049B  345E               	retlw	94
  1213     049C  345E               	retlw	94
  1214     049D  345E               	retlw	94
  1215     049E  345E               	retlw	94
  1216     049F  345D               	retlw	93
  1217     04A0  345D               	retlw	93
  1218     04A1  345D               	retlw	93
  1219     04A2  345D               	retlw	93
  1220     04A3  345D               	retlw	93
  1221     04A4  345D               	retlw	93
  1222     04A5  345C               	retlw	92
  1223     04A6  345C               	retlw	92
  1224     04A7  345C               	retlw	92
  1225     04A8  345C               	retlw	92
  1226     04A9  345C               	retlw	92
  1227     04AA  345B               	retlw	91
  1228     04AB  345B               	retlw	91
  1229     04AC  345B               	retlw	91
  1230     04AD  345B               	retlw	91
  1231     04AE  345A               	retlw	90
  1232     04AF  345A               	retlw	90
  1233     04B0  345A               	retlw	90
  1234     04B1  345A               	retlw	90
  1235     04B2  345A               	retlw	90
  1236     04B3  3459               	retlw	89
  1237     04B4  3459               	retlw	89
  1238     04B5  3459               	retlw	89
  1239     04B6  3459               	retlw	89
  1240     04B7  3458               	retlw	88
  1241     04B8  3458               	retlw	88
  1242     04B9  3458               	retlw	88
  1243     04BA  3458               	retlw	88
  1244     04BB  3457               	retlw	87
  1245     04BC  3457               	retlw	87
  1246     04BD  3457               	retlw	87
  1247     04BE  3457               	retlw	87
  1248     04BF  3456               	retlw	86
  1249     04C0  3456               	retlw	86
  1250     04C1  3456               	retlw	86
  1251     04C2  3456               	retlw	86
  1252     04C3  3455               	retlw	85
  1253     04C4  3455               	retlw	85
  1254     04C5  3455               	retlw	85
  1255     04C6  3455               	retlw	85
  1256     04C7  3454               	retlw	84
  1257     04C8  3454               	retlw	84
  1258     04C9  3454               	retlw	84
  1259     04CA  3453               	retlw	83
  1260     04CB  3453               	retlw	83
  1261     04CC  3453               	retlw	83
  1262     04CD  3452               	retlw	82
  1263     04CE  3452               	retlw	82
  1264     04CF  3452               	retlw	82
  1265     04D0  3451               	retlw	81
  1266     04D1  3451               	retlw	81
  1267     04D2  3451               	retlw	81
  1268     04D3  3450               	retlw	80
  1269     04D4  3450               	retlw	80
  1270     04D5  3450               	retlw	80
  1271     04D6  344F               	retlw	79
  1272     04D7  344F               	retlw	79
  1273     04D8  344E               	retlw	78
  1274     04D9  344E               	retlw	78
  1275     04DA  344E               	retlw	78
  1276     04DB  344D               	retlw	77
  1277     04DC  344D               	retlw	77
  1278     04DD  344C               	retlw	76
  1279     04DE  344C               	retlw	76
  1280     04DF  344C               	retlw	76
  1281     04E0  344B               	retlw	75
  1282     04E1  344B               	retlw	75
  1283     04E2  344A               	retlw	74
  1284     04E3  344A               	retlw	74
  1285     04E4  3449               	retlw	73
  1286     04E5  3449               	retlw	73
  1287     04E6  3448               	retlw	72
  1288     04E7  3448               	retlw	72
  1289     04E8  3447               	retlw	71
  1290     04E9  3446               	retlw	70
  1291     04EA  3446               	retlw	70
  1292     04EB  3445               	retlw	69
  1293     04EC  3445               	retlw	69
  1294     04ED  3444               	retlw	68
  1295     04EE  3443               	retlw	67
  1296     04EF  3443               	retlw	67
  1297     04F0  3442               	retlw	66
  1298     04F1  3441               	retlw	65
  1299     04F2  3440               	retlw	64
  1300     04F3  343F               	retlw	63
  1301     04F4  343F               	retlw	63
  1302     04F5  343E               	retlw	62
  1303     04F6  343D               	retlw	61
  1304     04F7  343C               	retlw	60
  1305     04F8  343B               	retlw	59
  1306     04F9  343A               	retlw	58
  1307     04FA  3439               	retlw	57
  1308     04FB  3437               	retlw	55
  1309     04FC  3436               	retlw	54
  1310     04FD  3435               	retlw	53
  1311     04FE  3433               	retlw	51
  1312     04FF  3432               	retlw	50
  1313     0500  3430               	retlw	48
  1314     0501  342E               	retlw	46
  1315     0502  342C               	retlw	44
  1316     0503  342A               	retlw	42
  1317     0504  3427               	retlw	39
  1318     0505  3424               	retlw	36
  1319     0506  3420               	retlw	32
  1320     0507  341C               	retlw	28
  1321     0508  3416               	retlw	22
  1322     0509  340E               	retlw	14
  1323     050A  3400               	retlw	0
  1324     050B                     __end_of_lengthen_period_log_table:
  1325                           
  1326                           	psect	stringtext5
  1327     079E                     __pstringtext5:
  1328     079E                     _prescaler_bits:
  1329     079E  3407               	retlw	7
  1330     079F  3406               	retlw	6
  1331     07A0  3405               	retlw	5
  1332     07A1  3404               	retlw	4
  1333     07A2  3403               	retlw	3
  1334     07A3  3402               	retlw	2
  1335     07A4  3401               	retlw	1
  1336     07A5  3400               	retlw	0
  1337     07A6                     __end_of_prescaler_bits:
  1338                           
  1339                           	psect	stringtext6
  1340     07CA                     __pstringtext6:
  1341     07CA                     _NO:
  1342     07CA  3400               	retlw	0
  1343     07CB                     __end_of_NO:
  1344                           
  1345                           	psect	stringtext7
  1346     07CB                     __pstringtext7:
  1347     07CB                     _YES:
  1348     07CB  3401               	retlw	1
  1349     07CC                     __end_of_YES:
  1350                           
  1351                           	psect	stringtext8
  1352     07CC                     __pstringtext8:
  1353     07CC                     _DONT_CARE:
  1354     07CC  3404               	retlw	4
  1355     07CD                     __end_of_DONT_CARE:
  1356                           
  1357                           	psect	stringtext9
  1358     07CD                     __pstringtext9:
  1359     07CD                     _DIVIDE_BY_FOUR:
  1360     07CD  3403               	retlw	3
  1361     07CE                     __end_of_DIVIDE_BY_FOUR:
  1362                           
  1363                           	psect	stringtext10
  1364     07CE                     __pstringtext10:
  1365     07CE                     _MULTIPLY_BY_TWO:
  1366     07CE  3402               	retlw	2
  1367     07CF                     __end_of_MULTIPLY_BY_TWO:
  1368                           
  1369                           	psect	stringtext11
  1370     07CF                     __pstringtext11:
  1371     07CF                     _DIVIDE_BY_TWO:
  1372     07CF  3401               	retlw	1
  1373     07D0                     __end_of_DIVIDE_BY_TWO:
  1374                           
  1375                           	psect	stringtext12
  1376     07D0                     __pstringtext12:
  1377     07D0                     _DO_NOTHING:
  1378     07D0  3400               	retlw	0
  1379     07D1                     __end_of_DO_NOTHING:
  1380                           
  1381                           	psect	stringtext13
  1382     07D1                     __pstringtext13:
  1383     07D1                     _NEGATIVE:
  1384     07D1  3400               	retlw	0
  1385     07D2                     __end_of_NEGATIVE:
  1386                           
  1387                           	psect	stringtext14
  1388     07D2                     __pstringtext14:
  1389     07D2                     _POSITIVE:
  1390     07D2  3401               	retlw	1
  1391     07D3                     __end_of_POSITIVE:
  1392                           
  1393                           	psect	stringtext15
  1394     07D3                     __pstringtext15:
  1395     07D3                     _symmetry_adc_config_value:
  1396     07D3  3407               	retlw	7
  1397     07D4                     __end_of_symmetry_adc_config_value:
  1398                           
  1399                           	psect	stringtext16
  1400     07D4                     __pstringtext16:
  1401     07D4                     _depth_adc_config_value:
  1402     07D4  3406               	retlw	6
  1403     07D5                     __end_of_depth_adc_config_value:
  1404                           
  1405                           	psect	stringtext17
  1406     07D5                     __pstringtext17:
  1407     07D5                     _speed_adc_config_value:
  1408     07D5  3405               	retlw	5
  1409     07D6                     __end_of_speed_adc_config_value:
  1410                           
  1411                           	psect	stringtext18
  1412     07D6                     __pstringtext18:
  1413     07D6                     _waveshape_adc_config_value:
  1414     07D6  3404               	retlw	4
  1415     07D7                     __end_of_waveshape_adc_config_value:
  1416     0015                     _TMR0	set	21
  1417     001C                     _T2CON	set	28
  1418     001B                     _PR2	set	27
  1419     005F                     _GIE	set	95
  1420     005A                     _TMR0IF	set	90
  1421     005D                     _TMR0IE	set	93
  1422     00E2                     _TMR2ON	set	226
  1423     0089                     _TMR2IF	set	137
  1424     0095                     _OPTION_REG	set	149
  1425     009B                     _ADRESL	set	155
  1426     009C                     _ADRESH	set	156
  1427     009D                     _ADCON0	set	157
  1428     009E                     _ADCON1	set	158
  1429     008E                     _TRISC	set	142
  1430     0098                     _OSCTUNE	set	152
  1431     0099                     _OSCCON	set	153
  1432     0462                     _TRISA2	set	1122
  1433     04E9                     _GO_nDONE	set	1257
  1434     04E8                     _ADON	set	1256
  1435     0875                     _LATC5	set	2165
  1436     088F                     _C1ON	set	2191
  1437     08D7                     _SRLEN	set	2263
  1438     018E                     _ANSELC	set	398
  1439     020E                     _WPUC	set	526
  1440     029E                     _CCPTMRS0	set	670
  1441     0313                     _CCP3CON	set	787
  1442     0311                     _CCPR3L	set	785
  1443                           
  1444                           	psect	cinit
  1445     00D2                     start_initialization:	
  1446                           ; #config settings
  1447                           
  1448     00D2                     __initialization:
  1449                           
  1450                           ; Initialize objects allocated to BANK0
  1451     00D2  3187  27C6  3180   	fcall	__pidataBANK0	;fetch initializer
  1452     00D5  00E5               	movwf	__pdataBANK0& (0+127)
  1453     00D6  3187  27C7  3180   	fcall	__pidataBANK0+1	;fetch initializer
  1454     00D9  00E6               	movwf	(__pdataBANK0+1)& (0+127)
  1455                           
  1456                           ; Clear objects allocated to COMMON
  1457     00DA  01F0               	clrf	__pbssCOMMON& (0+127)
  1458     00DB  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  1459     00DC  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  1460     00DD  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  1461     00DE  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  1462     00DF  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  1463                           
  1464                           ; Clear objects allocated to BANK0
  1465     00E0  3020               	movlw	low __pbssBANK0
  1466     00E1  0084               	movwf	4
  1467     00E2  3000               	movlw	high __pbssBANK0
  1468     00E3  0085               	movwf	5
  1469     00E4  3028               	movlw	40
  1470     00E5  3187  27B6         	fcall	clear_ram0
  1471     00E7                     end_of_initialization:	
  1472                           ;End of C runtime variable initialization code
  1473                           
  1474     00E7                     __end_of__initialization:
  1475     00E7  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1476     00E8  0020               	movlb	0
  1477     00E9  3187  2F08         	ljmp	_main	;jump to C main() function
  1478                           
  1479                           	psect	bssCOMMON
  1480     0070                     __pbssCOMMON:
  1481     0070                     _base_prescaler_bits_index:
  1482     0070                     	ds	1
  1483     0071                     _current_one_quadrant_index:
  1484     0071                     	ds	1
  1485     0072                     _current_waveshape:
  1486     0072                     	ds	1
  1487     0073                     _duty:
  1488     0073                     	ds	2
  1489     0075                     _final_TMR0:
  1490     0075                     	ds	1
  1491                           
  1492                           	psect	bssBANK0
  1493     0020                     __pbssBANK0:
  1494     0020                     _symmetry_total:
  1495     0020                     	ds	4
  1496     0024                     _current_speed_log_32:
  1497     0024                     	ds	4
  1498     0028                     _current_speed_linear_32:
  1499     0028                     	ds	4
  1500     002C                     _speed_control_32:
  1501     002C                     	ds	4
  1502     0030                     _dTMR0_ideal:
  1503     0030                     	ds	2
  1504     0032                     _current_symmetry:
  1505     0032                     	ds	2
  1506     0034                     _current_depth:
  1507     0034                     	ds	2
  1508     0036                     _current_speed_log:
  1509     0036                     	ds	2
  1510     0038                     _current_speed_linear:
  1511     0038                     	ds	2
  1512     003A                     _how_many_128:
  1513     003A                     	ds	2
  1514     003C                     _speed_control:
  1515     003C                     	ds	2
  1516     003E                     _symmetry_status:
  1517     003E                     	ds	1
  1518     003F                     _clear_TMR0_please:
  1519     003F                     	ds	1
  1520     0040                     _raw_TMR0:
  1521     0040                     	ds	1
  1522     0041                     _prescaler_adjust:
  1523     0041                     	ds	1
  1524     0042                     _TMR0_offset_sign:
  1525     0042                     	ds	1
  1526     0043                     _TMR0_offset:
  1527     0043                     	ds	1
  1528     0044                     _current_quadrant:
  1529     0044                     	ds	1
  1530     0045                     _current_halfcycle:
  1531     0045                     	ds	1
  1532     0046                     _duty_high_byte:
  1533     0046                     	ds	1
  1534     0047                     _duty_low_byte:
  1535     0047                     	ds	1
  1536                           
  1537                           	psect	dataBANK0
  1538     0065                     __pdataBANK0:
  1539     0065                     _top_two_bytes_ptr:
  1540     0065                     	ds	2
  1541                           
  1542                           	psect	clrtext
  1543     07B6                     clear_ram0:	
  1544                           ;	Called with FSR0 containing the base address, and
  1545                           ;	WREG with the size to clear
  1546                           
  1547     07B6  0064               	clrwdt	;clear the watchdog before getting into this loop
  1548     07B7                     clrloop0:
  1549     07B7  0180               	clrf	0	;clear RAM location pointed to by FSR
  1550     07B8  3101               	addfsr 0,1
  1551     07B9  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1552     07BA  2FB7               	goto	clrloop0	;have we reached the end yet?
  1553     07BB  3400               	retlw	0	;all done for this memory range, return
  1554                           
  1555                           	psect	cstackCOMMON
  1556     0076                     __pcstackCOMMON:
  1557     0076                     ?_CONFIG_INT_OSC:
  1558     0076                     ?_CONFIG_PORTS:	
  1559                           ; 1 bytes @ 0x0
  1560                           
  1561     0076                     ?_CONFIG_ADC_PINS:	
  1562                           ; 1 bytes @ 0x0
  1563                           
  1564     0076                     ?_DETERMINE_WAVESHAPE:	
  1565                           ; 1 bytes @ 0x0
  1566                           
  1567     0076                     ?_SET_DUTY_CCP3:	
  1568                           ; 1 bytes @ 0x0
  1569                           
  1570     0076                     ??_SET_DUTY_CCP3:	
  1571                           ; 1 bytes @ 0x0
  1572                           
  1573     0076                     ?_CONFIG_PWM_CCP3:	
  1574                           ; 1 bytes @ 0x0
  1575                           
  1576     0076                     ?_TURN_ON_CCP3_PWM:	
  1577                           ; 1 bytes @ 0x0
  1578                           
  1579     0076                     ?_CONFIG_TMR0_INTERRUPT:	
  1580                           ; 1 bytes @ 0x0
  1581                           
  1582     0076                     ?_CONFIG_SYSTEM:	
  1583                           ; 1 bytes @ 0x0
  1584                           
  1585     0076                     ?_TMR0_WRITE:	
  1586                           ; 1 bytes @ 0x0
  1587                           
  1588     0076                     ?_GET_CURRENT_POT_VALUES:	
  1589                           ; 1 bytes @ 0x0
  1590                           
  1591     0076                     ?_PROCESS_RAW_SPEED_AND_PRESCALER:	
  1592                           ; 1 bytes @ 0x0
  1593                           
  1594     0076                     ?_PROCESS_FINAL_SPEED_AND_PRESCALER:	
  1595                           ; 1 bytes @ 0x0
  1596                           
  1597     0076                     ?_SHORTEN_PERIOD:	
  1598                           ; 1 bytes @ 0x0
  1599                           
  1600     0076                     ?_LENGTHEN_PERIOD:	
  1601                           ; 1 bytes @ 0x0
  1602                           
  1603     0076                     ?_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST:	
  1604                           ; 1 bytes @ 0x0
  1605                           
  1606     0076                     ?_INTERRUPT_InterruptManager:	
  1607                           ; 1 bytes @ 0x0
  1608                           
  1609     0076                     ?_main:	
  1610                           ; 1 bytes @ 0x0
  1611                           
  1612                           
  1613                           ; 1 bytes @ 0x0
  1614     0076                     	ds	2
  1615     0078                     SET_DUTY_CCP3@temp:
  1616                           
  1617                           ; 1 bytes @ 0x2
  1618     0078                     	ds	1
  1619     0079                     SET_DUTY_CCP3@duty_ptr:
  1620                           
  1621                           ; 1 bytes @ 0x3
  1622     0079                     	ds	1
  1623     007A                     ??_INTERRUPT_InterruptManager:
  1624                           
  1625                           ; 1 bytes @ 0x4
  1626     007A                     	ds	2
  1627                           
  1628                           	psect	cstackBANK0
  1629     0048                     __pcstackBANK0:
  1630     0048                     ??_CONFIG_INT_OSC:
  1631     0048                     ??_CONFIG_PORTS:	
  1632                           ; 1 bytes @ 0x0
  1633                           
  1634     0048                     ??_CONFIG_ADC_PINS:	
  1635                           ; 1 bytes @ 0x0
  1636                           
  1637     0048                     ??_CONFIG_PWM_CCP3:	
  1638                           ; 1 bytes @ 0x0
  1639                           
  1640     0048                     ??_TURN_ON_CCP3_PWM:	
  1641                           ; 1 bytes @ 0x0
  1642                           
  1643     0048                     ??_CONFIG_TMR0_INTERRUPT:	
  1644                           ; 1 bytes @ 0x0
  1645                           
  1646     0048                     ??_CONFIG_SYSTEM:	
  1647                           ; 1 bytes @ 0x0
  1648                           
  1649     0048                     ??_TMR0_WRITE:	
  1650                           ; 1 bytes @ 0x0
  1651                           
  1652     0048                     ??_PROCESS_FINAL_SPEED_AND_PRESCALER:	
  1653                           ; 1 bytes @ 0x0
  1654                           
  1655     0048                     ?_DO_ADC:	
  1656                           ; 1 bytes @ 0x0
  1657                           
  1658     0048                     ?___lmul:	
  1659                           ; 2 bytes @ 0x0
  1660                           
  1661     0048                     TMR0_WRITE@timer_value_ptr:	
  1662                           ; 4 bytes @ 0x0
  1663                           
  1664     0048                     DO_ADC@modifier:	
  1665                           ; 1 bytes @ 0x0
  1666                           
  1667     0048                     ___lmul@multiplier:	
  1668                           ; 2 bytes @ 0x0
  1669                           
  1670                           
  1671                           ; 4 bytes @ 0x0
  1672     0048                     	ds	2
  1673     004A                     ??_DO_ADC:
  1674                           
  1675                           ; 1 bytes @ 0x2
  1676     004A                     	ds	1
  1677     004B                     DO_ADC@adc_result:
  1678                           
  1679                           ; 2 bytes @ 0x3
  1680     004B                     	ds	1
  1681     004C                     ___lmul@multiplicand:
  1682                           
  1683                           ; 4 bytes @ 0x4
  1684     004C                     	ds	1
  1685     004D                     DO_ADC@temp:
  1686                           
  1687                           ; 1 bytes @ 0x5
  1688     004D                     	ds	1
  1689     004E                     ??_DETERMINE_WAVESHAPE:
  1690     004E                     DETERMINE_WAVESHAPE@ADC:	
  1691                           ; 1 bytes @ 0x6
  1692                           
  1693                           
  1694                           ; 2 bytes @ 0x6
  1695     004E                     	ds	2
  1696     0050                     ??_GET_CURRENT_POT_VALUES:
  1697     0050                     ??___lmul:	
  1698                           ; 1 bytes @ 0x8
  1699                           
  1700     0050                     ___lmul@product:	
  1701                           ; 1 bytes @ 0x8
  1702                           
  1703                           
  1704                           ; 4 bytes @ 0x8
  1705     0050                     	ds	4
  1706     0054                     ??_PROCESS_RAW_SPEED_AND_PRESCALER:
  1707     0054                     ??_SHORTEN_PERIOD:	
  1708                           ; 1 bytes @ 0xC
  1709                           
  1710     0054                     ??_LENGTHEN_PERIOD:	
  1711                           ; 1 bytes @ 0xC
  1712                           
  1713                           
  1714                           ; 1 bytes @ 0xC
  1715     0054                     	ds	4
  1716     0058                     PROCESS_RAW_SPEED_AND_PRESCALER@speed_control_subtracted:
  1717     0058                     SHORTEN_PERIOD@dTMR0_ideal:	
  1718                           ; 2 bytes @ 0x10
  1719                           
  1720     0058                     LENGTHEN_PERIOD@dTMR0_ideal:	
  1721                           ; 2 bytes @ 0x10
  1722                           
  1723                           
  1724                           ; 2 bytes @ 0x10
  1725     0058                     	ds	2
  1726     005A                     SHORTEN_PERIOD@TMR0_raw_extra:
  1727                           
  1728                           ; 2 bytes @ 0x12
  1729     005A                     	ds	2
  1730     005C                     ??_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST:
  1731                           
  1732                           ; 1 bytes @ 0x14
  1733     005C                     	ds	4
  1734     0060                     PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST@temp:
  1735                           
  1736                           ; 4 bytes @ 0x18
  1737     0060                     	ds	4
  1738     0064                     PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST@symmetry_status:
  1739                           
  1740                           ; 1 bytes @ 0x1C
  1741     0064                     	ds	1
  1742     0065                     ??_main:
  1743                           
  1744                           	psect	maintext
  1745     0708                     __pmaintext:	
  1746                           ; 1 bytes @ 0x1D
  1747 ;;
  1748 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1749 ;;
  1750 ;; *************** function _main *****************
  1751 ;; Defined at:
  1752 ;;		line 503 in file "main.c"
  1753 ;; Parameters:    Size  Location     Type
  1754 ;;		None
  1755 ;; Auto vars:     Size  Location     Type
  1756 ;;		None
  1757 ;; Return value:  Size  Location     Type
  1758 ;;                  1    wreg      void 
  1759 ;; Registers used:
  1760 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1761 ;; Tracked objects:
  1762 ;;		On entry : B1F/0
  1763 ;;		On exit  : 1E/0
  1764 ;;		Unchanged: 0/0
  1765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1766 ;;      Params:         0       0       0       0
  1767 ;;      Locals:         0       0       0       0
  1768 ;;      Temps:          0       0       0       0
  1769 ;;      Totals:         0       0       0       0
  1770 ;;Total ram usage:        0 bytes
  1771 ;; Hardware stack levels required when called: 5
  1772 ;; This function calls:
  1773 ;;		_CONFIG_SYSTEM
  1774 ;;		_CONFIG_TMR0_INTERRUPT
  1775 ;;		_GET_CURRENT_POT_VALUES
  1776 ;;		_PROCESS_FINAL_SPEED_AND_PRESCALER
  1777 ;;		_PROCESS_RAW_SPEED_AND_PRESCALER
  1778 ;;		_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST
  1779 ;;		_TMR0_WRITE
  1780 ;;		_TURN_ON_CCP3_PWM
  1781 ;; This function is called by:
  1782 ;;		Startup code after reset
  1783 ;; This function uses a non-reentrant model
  1784 ;;
  1785                           
  1786     0708                     _main:	
  1787                           ;psect for function _main
  1788                           
  1789                           
  1790                           ;main.c: 505:     CONFIG_SYSTEM();
  1791                           
  1792                           ;incstack = 0
  1793                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1794     0708  3187  2789  3187   	fcall	_CONFIG_SYSTEM
  1795                           
  1796                           ;main.c: 506:     TURN_ON_CCP3_PWM();
  1797     070B  3187  27A6  3187   	fcall	_TURN_ON_CCP3_PWM
  1798                           
  1799                           ;main.c: 507:     CONFIG_TMR0_INTERRUPT();
  1800     070E  3187  27C8  3187   	fcall	_CONFIG_TMR0_INTERRUPT
  1801                           
  1802                           ;main.c: 508:     GET_CURRENT_POT_VALUES();
  1803     0711  3186  267C  3187   	fcall	_GET_CURRENT_POT_VALUES
  1804                           
  1805                           ;main.c: 509:     PROCESS_RAW_SPEED_AND_PRESCALER();
  1806     0714  3185  2580  3187   	fcall	_PROCESS_RAW_SPEED_AND_PRESCALER
  1807                           
  1808                           ;main.c: 510:     PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST();
  1809     0717  3185  250B  3187   	fcall	_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST
  1810                           
  1811                           ;main.c: 511:     PROCESS_FINAL_SPEED_AND_PRESCALER();
  1812     071A  3185  25ED  3187   	fcall	_PROCESS_FINAL_SPEED_AND_PRESCALER
  1813                           
  1814                           ;main.c: 512:     TMR0_WRITE(&final_TMR0);
  1815     071D  3075               	movlw	(low (_final_TMR0| 0))& (0+255)
  1816     071E  3187  27AE  3187   	fcall	_TMR0_WRITE
  1817                           
  1818                           ;main.c: 513:     GIE = 1;
  1819     0721  178B               	bsf	11,7	;volatile
  1820     0722                     l1854:
  1821                           
  1822                           ;main.c: 517:         GET_CURRENT_POT_VALUES();
  1823     0722  3186  267C  3187   	fcall	_GET_CURRENT_POT_VALUES
  1824                           
  1825                           ;main.c: 518:         PROCESS_RAW_SPEED_AND_PRESCALER();
  1826     0725  3185  2580  3187   	fcall	_PROCESS_RAW_SPEED_AND_PRESCALER
  1827                           
  1828                           ;main.c: 519:         PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST();
  1829     0728  3185  250B  3187   	fcall	_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST
  1830                           
  1831                           ;main.c: 520:         PROCESS_FINAL_SPEED_AND_PRESCALER();
  1832     072B  3185  25ED  3187   	fcall	_PROCESS_FINAL_SPEED_AND_PRESCALER
  1833     072E  2F22               	goto	l1854
  1834     072F                     __end_of_main:
  1835                           
  1836                           	psect	text1
  1837     07A6                     __ptext1:	
  1838 ;; *************** function _TURN_ON_CCP3_PWM *****************
  1839 ;; Defined at:
  1840 ;;		line 242 in file "main.c"
  1841 ;; Parameters:    Size  Location     Type
  1842 ;;		None
  1843 ;; Auto vars:     Size  Location     Type
  1844 ;;		None
  1845 ;; Return value:  Size  Location     Type
  1846 ;;                  1    wreg      unsigned char 
  1847 ;; Registers used:
  1848 ;;		None
  1849 ;; Tracked objects:
  1850 ;;		On entry : B1F/0
  1851 ;;		On exit  : B1F/1
  1852 ;;		Unchanged: B00/0
  1853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1854 ;;      Params:         0       0       0       0
  1855 ;;      Locals:         0       0       0       0
  1856 ;;      Temps:          0       0       0       0
  1857 ;;      Totals:         0       0       0       0
  1858 ;;Total ram usage:        0 bytes
  1859 ;; Hardware stack levels used: 1
  1860 ;; Hardware stack levels required when called: 2
  1861 ;; This function calls:
  1862 ;;		Nothing
  1863 ;; This function is called by:
  1864 ;;		_main
  1865 ;; This function uses a non-reentrant model
  1866 ;;
  1867                           
  1868     07A6                     _TURN_ON_CCP3_PWM:	
  1869                           ;psect for function _TURN_ON_CCP3_PWM
  1870                           
  1871                           
  1872                           ;main.c: 244:     TMR2IF = 0;
  1873                           
  1874                           ;incstack = 0
  1875                           ; Regs used in _TURN_ON_CCP3_PWM: []
  1876     07A6  1091               	bcf	17,1	;volatile
  1877                           
  1878                           ;main.c: 245:     TMR2ON = 1;
  1879     07A7  151C               	bsf	28,2	;volatile
  1880     07A8                     l177:	
  1881                           ;main.c: 246:     while(TMR2IF == 0){}
  1882                           
  1883     07A8  1C91               	btfss	17,1	;volatile
  1884     07A9  2FA8               	goto	l177
  1885                           
  1886                           ;main.c: 247:     TMR2IF = 0;
  1887     07AA  1091               	bcf	17,1	;volatile
  1888                           
  1889                           ;main.c: 248:     TRISA2 = 0;
  1890     07AB  0021               	movlb	1	; select bank1
  1891     07AC  110C               	bcf	12,2	;volatile
  1892                           
  1893                           ;main.c: 249:     return 1;;	Return value of _TURN_ON_CCP3_PWM is never used
  1894     07AD  0008               	return
  1895     07AE                     __end_of_TURN_ON_CCP3_PWM:
  1896                           
  1897                           	psect	text2
  1898     07AE                     __ptext2:	
  1899 ;; *************** function _TMR0_WRITE *****************
  1900 ;; Defined at:
  1901 ;;		line 265 in file "main.c"
  1902 ;; Parameters:    Size  Location     Type
  1903 ;;  timer_value_    1    wreg     PTR volatile unsigned ch
  1904 ;;		 -> final_TMR0(1), 
  1905 ;; Auto vars:     Size  Location     Type
  1906 ;;  timer_value_    1    0[BANK0 ] PTR volatile unsigned ch
  1907 ;;		 -> final_TMR0(1), 
  1908 ;; Return value:  Size  Location     Type
  1909 ;;                  1    wreg      unsigned char 
  1910 ;; Registers used:
  1911 ;;		wreg, fsr1l, fsr1h
  1912 ;; Tracked objects:
  1913 ;;		On entry : 1E/0
  1914 ;;		On exit  : 1F/0
  1915 ;;		Unchanged: 0/0
  1916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1917 ;;      Params:         0       0       0       0
  1918 ;;      Locals:         0       1       0       0
  1919 ;;      Temps:          0       0       0       0
  1920 ;;      Totals:         0       1       0       0
  1921 ;;Total ram usage:        1 bytes
  1922 ;; Hardware stack levels used: 1
  1923 ;; Hardware stack levels required when called: 2
  1924 ;; This function calls:
  1925 ;;		Nothing
  1926 ;; This function is called by:
  1927 ;;		_main
  1928 ;; This function uses a non-reentrant model
  1929 ;;
  1930                           
  1931     07AE                     _TMR0_WRITE:	
  1932                           ;psect for function _TMR0_WRITE
  1933                           
  1934                           
  1935                           ;incstack = 0
  1936                           ; Regs used in _TMR0_WRITE: [wregfsr1]
  1937                           ;TMR0_WRITE@timer_value_ptr stored from wreg
  1938     07AE  0020               	movlb	0	; select bank0
  1939     07AF  00C8               	movwf	TMR0_WRITE@timer_value_ptr
  1940                           
  1941                           ;main.c: 266:     TMR0 = (uint8_t) *timer_value_ptr;
  1942     07B0  0848               	movf	TMR0_WRITE@timer_value_ptr,w
  1943     07B1  0086               	movwf	6
  1944     07B2  0187               	clrf	7
  1945     07B3  0801               	movf	1,w
  1946     07B4  0095               	movwf	21	;volatile
  1947     07B5  0008               	return
  1948     07B6                     __end_of_TMR0_WRITE:
  1949                           
  1950                           	psect	text3
  1951     050B                     __ptext3:	
  1952 ;; *************** function _PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST *****************
  1953 ;; Defined at:
  1954 ;;		line 380 in file "main.c"
  1955 ;; Parameters:    Size  Location     Type
  1956 ;;		None
  1957 ;; Auto vars:     Size  Location     Type
  1958 ;;  temp            4   24[BANK0 ] unsigned long 
  1959 ;;  symmetry_sta    1   28[BANK0 ] unsigned char 
  1960 ;; Return value:  Size  Location     Type
  1961 ;;                  1    wreg      unsigned char 
  1962 ;; Registers used:
  1963 ;;		wreg, status,2, status,0, pclath, cstack
  1964 ;; Tracked objects:
  1965 ;;		On entry : 1F/0
  1966 ;;		On exit  : 1F/0
  1967 ;;		Unchanged: 0/0
  1968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1969 ;;      Params:         0       0       0       0
  1970 ;;      Locals:         0       5       0       0
  1971 ;;      Temps:          0       4       0       0
  1972 ;;      Totals:         0       9       0       0
  1973 ;;Total ram usage:        9 bytes
  1974 ;; Hardware stack levels used: 1
  1975 ;; Hardware stack levels required when called: 4
  1976 ;; This function calls:
  1977 ;;		_LENGTHEN_PERIOD
  1978 ;;		_SHORTEN_PERIOD
  1979 ;;		___lmul
  1980 ;; This function is called by:
  1981 ;;		_main
  1982 ;; This function uses a non-reentrant model
  1983 ;;
  1984                           
  1985     050B                     _PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST:	
  1986                           ;psect for function _PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST
  1987                           
  1988                           
  1989                           ;main.c: 381:     if(current_symmetry == 512){
  1990                           
  1991                           ;incstack = 0
  1992                           ; Regs used in _PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST: [wreg+status,2+status,0+pclath
      +                          +cstack]
  1993     050B  3002               	movlw	2
  1994     050C  0633               	xorwf	_current_symmetry+1,w	;volatile
  1995     050D  0432               	iorwf	_current_symmetry,w	;volatile
  1996     050E  1D03               	btfss	3,2
  1997     050F  2D16               	goto	l1798
  1998                           
  1999                           ;main.c: 382:         TMR0_offset = 0;
  2000     0510  01C3               	clrf	_TMR0_offset	;volatile
  2001                           
  2002                           ;main.c: 383:         TMR0_offset_sign = POSITIVE;
  2003     0511  3001               	movlw	1
  2004     0512  00C2               	movwf	_TMR0_offset_sign	;volatile
  2005                           
  2006                           ;main.c: 384:         prescaler_adjust = DO_NOTHING;
  2007     0513  01C1               	clrf	_prescaler_adjust	;volatile
  2008                           
  2009                           ;main.c: 385:         clear_TMR0_please = NO;
  2010     0514  01BF               	clrf	_clear_TMR0_please	;volatile
  2011                           
  2012                           ;main.c: 386:         return 1;;	Return value of _PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJU
      +                          ST is never used
  2013     0515  0008               	return
  2014     0516                     l1798:
  2015                           
  2016                           ;main.c: 388:     uint8_t symmetry_status = 0;
  2017     0516  01E4               	clrf	PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST@symmetry_status
  2018                           
  2019                           ;main.c: 389:     if(current_symmetry > 512){
  2020     0517  3002               	movlw	2
  2021     0518  0233               	subwf	_current_symmetry+1,w	;volatile
  2022     0519  3001               	movlw	1
  2023     051A  1903               	skipnz
  2024     051B  0232               	subwf	_current_symmetry,w	;volatile
  2025     051C  1C03               	skipc
  2026     051D  2D2A               	goto	l1806
  2027                           
  2028                           ;main.c: 390:         current_symmetry = 1023 - current_symmetry;
  2029     051E  30FF               	movlw	255
  2030     051F  00DC               	movwf	??_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST
  2031     0520  3003               	movlw	3
  2032     0521  00DD               	movwf	??_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST+1
  2033     0522  0832               	movf	_current_symmetry,w	;volatile
  2034     0523  025C               	subwf	??_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST,w
  2035     0524  00B2               	movwf	_current_symmetry	;volatile
  2036     0525  0833               	movf	_current_symmetry+1,w	;volatile
  2037     0526  3B5D               	subwfb	??_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST+1,w
  2038     0527  00B3               	movwf	_current_symmetry+1	;volatile
  2039                           
  2040                           ;main.c: 391:         symmetry_status = 1;
  2041     0528  01E4               	clrf	PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST@symmetry_status
  2042     0529  0AE4               	incf	PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST@symmetry_status,f
  2043     052A                     l1806:
  2044                           
  2045                           ;main.c: 394:     uint32_t temp = (uint32_t)(361 * (uint32_t)(512 - current_symmetry));
  2046     052A  3000               	movlw	0
  2047     052B  00DC               	movwf	??_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST
  2048     052C  3002               	movlw	2
  2049     052D  00DD               	movwf	??_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST+1
  2050     052E  0832               	movf	_current_symmetry,w	;volatile
  2051     052F  025C               	subwf	??_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST,w
  2052     0530  00C8               	movwf	___lmul@multiplier
  2053     0531  0833               	movf	_current_symmetry+1,w	;volatile
  2054     0532  3B5D               	subwfb	??_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST+1,w
  2055     0533  00C9               	movwf	___lmul@multiplier+1
  2056     0534  01CA               	clrf	___lmul@multiplier+2
  2057     0535  01CB               	clrf	___lmul@multiplier+3
  2058     0536  3000               	movlw	0
  2059     0537  00CF               	movwf	___lmul@multiplicand+3
  2060     0538  3000               	movlw	0
  2061     0539  00CE               	movwf	___lmul@multiplicand+2
  2062     053A  3001               	movlw	1
  2063     053B  00CD               	movwf	___lmul@multiplicand+1
  2064     053C  3069               	movlw	105
  2065     053D  00CC               	movwf	___lmul@multiplicand
  2066     053E  3186  26AD  3185   	fcall	___lmul
  2067     0541  084B               	movf	?___lmul+3,w
  2068     0542  00E3               	movwf	PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST@temp+3
  2069     0543  084A               	movf	?___lmul+2,w
  2070     0544  00E2               	movwf	PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST@temp+2
  2071     0545  0849               	movf	?___lmul+1,w
  2072     0546  00E1               	movwf	PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST@temp+1
  2073     0547  0848               	movf	?___lmul,w
  2074     0548  00E0               	movwf	PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST@temp
  2075                           
  2076                           ;main.c: 395:     symmetry_total = (temp >> 9);
  2077     0549  0860               	movf	PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST@temp,w
  2078     054A  00DC               	movwf	??_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST
  2079     054B  0861               	movf	PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST@temp+1,w
  2080     054C  00DD               	movwf	??_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST+1
  2081     054D  0862               	movf	PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST@temp+2,w
  2082     054E  00DE               	movwf	??_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST+2
  2083     054F  0863               	movf	PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST@temp+3,w
  2084     0550  00DF               	movwf	??_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST+3
  2085     0551  3009               	movlw	9
  2086     0552                     u1425:
  2087     0552  36DF               	lsrf	??_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST+3,f
  2088     0553  0CDE               	rrf	??_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST+2,f
  2089     0554  0CDD               	rrf	??_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST+1,f
  2090     0555  0CDC               	rrf	??_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST,f
  2091     0556  0B89               	decfsz	9,f
  2092     0557  2D52               	goto	u1425
  2093     0558  085F               	movf	??_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST+3,w
  2094     0559  00A3               	movwf	_symmetry_total+3	;volatile
  2095     055A  085E               	movf	??_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST+2,w
  2096     055B  00A2               	movwf	_symmetry_total+2	;volatile
  2097     055C  085D               	movf	??_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST+1,w
  2098     055D  00A1               	movwf	_symmetry_total+1	;volatile
  2099     055E  085C               	movf	??_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST,w
  2100     055F  00A0               	movwf	_symmetry_total	;volatile
  2101                           
  2102                           ;main.c: 397:     if((current_halfcycle == 0) && (symmetry_status == 0)){
  2103     0560  0845               	movf	_current_halfcycle,w	;volatile
  2104     0561  1D03               	btfss	3,2
  2105     0562  2D69               	goto	l1816
  2106     0563  0864               	movf	PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST@symmetry_status,w
  2107     0564  1D03               	btfss	3,2
  2108     0565  2D69               	goto	l1816
  2109     0566                     l1814:
  2110                           
  2111                           ;main.c: 398:         SHORTEN_PERIOD();
  2112     0566  3183  23F1         	fcall	_SHORTEN_PERIOD
  2113                           
  2114                           ;main.c: 399:     }
  2115     0568  0008               	return
  2116     0569                     l1816:
  2117     0569  0845               	movf	_current_halfcycle,w	;volatile
  2118     056A  1D03               	btfss	3,2
  2119     056B  2D76               	goto	l1822
  2120     056C  0364               	decf	PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST@symmetry_status,w
  2121     056D  1903               	btfsc	3,2
  2122     056E  2D73               	goto	l1820
  2123     056F  2D76               	goto	l1822
  2124     0570                     l1824:
  2125     0570  0864               	movf	PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST@symmetry_status,w
  2126     0571  1D03               	btfss	3,2
  2127     0572  2D79               	goto	l1828
  2128     0573                     l1820:
  2129                           
  2130                           ;main.c: 401:         LENGTHEN_PERIOD();
  2131     0573  3186  263A         	fcall	_LENGTHEN_PERIOD
  2132                           
  2133                           ;main.c: 402:     }
  2134     0575  0008               	return
  2135     0576                     l1822:
  2136     0576  0345               	decf	_current_halfcycle,w	;volatile
  2137     0577  1903               	btfsc	3,2
  2138     0578  2D70               	goto	l1824
  2139     0579                     l1828:
  2140     0579  0345               	decf	_current_halfcycle,w	;volatile
  2141     057A  1D03               	btfss	3,2
  2142     057B  0008               	return
  2143     057C  0364               	decf	PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST@symmetry_status,w
  2144     057D  1D03               	btfss	3,2
  2145     057E  0008               	return
  2146     057F  2D66               	goto	l1814
  2147     0580                     __end_of_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST:
  2148                           
  2149                           	psect	text4
  2150     03F1                     __ptext4:	
  2151 ;; *************** function _SHORTEN_PERIOD *****************
  2152 ;; Defined at:
  2153 ;;		line 328 in file "main.c"
  2154 ;; Parameters:    Size  Location     Type
  2155 ;;		None
  2156 ;; Auto vars:     Size  Location     Type
  2157 ;;  TMR0_raw_ext    2   18[BANK0 ] unsigned short 
  2158 ;;  dTMR0_ideal     2   16[BANK0 ] unsigned short 
  2159 ;; Return value:  Size  Location     Type
  2160 ;;                  1    wreg      unsigned char 
  2161 ;; Registers used:
  2162 ;;		wreg, status,2, status,0, pclath, cstack
  2163 ;; Tracked objects:
  2164 ;;		On entry : 1F/0
  2165 ;;		On exit  : 1F/0
  2166 ;;		Unchanged: 0/0
  2167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2168 ;;      Params:         0       0       0       0
  2169 ;;      Locals:         0       4       0       0
  2170 ;;      Temps:          0       4       0       0
  2171 ;;      Totals:         0       8       0       0
  2172 ;;Total ram usage:        8 bytes
  2173 ;; Hardware stack levels used: 1
  2174 ;; Hardware stack levels required when called: 3
  2175 ;; This function calls:
  2176 ;;		___lmul
  2177 ;; This function is called by:
  2178 ;;		_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST
  2179 ;; This function uses a non-reentrant model
  2180 ;;
  2181                           
  2182     03F1                     _SHORTEN_PERIOD:	
  2183                           ;psect for function _SHORTEN_PERIOD
  2184                           
  2185                           
  2186                           ;main.c: 329:     uint16_t dTMR0_ideal = (uint16_t)((uint32_t)(symmetry_total * 47926) >
      +                          > 16);
  2187                           
  2188                           ;incstack = 0
  2189                           ; Regs used in _SHORTEN_PERIOD: [wreg+status,2+status,0+pclath+cstack]
  2190     03F1  0823               	movf	_symmetry_total+3,w	;volatile
  2191     03F2  00CB               	movwf	___lmul@multiplier+3
  2192     03F3  0822               	movf	_symmetry_total+2,w	;volatile
  2193     03F4  00CA               	movwf	___lmul@multiplier+2
  2194     03F5  0821               	movf	_symmetry_total+1,w	;volatile
  2195     03F6  00C9               	movwf	___lmul@multiplier+1
  2196     03F7  0820               	movf	_symmetry_total,w	;volatile
  2197     03F8  00C8               	movwf	___lmul@multiplier
  2198     03F9  3000               	movlw	0
  2199     03FA  00CF               	movwf	___lmul@multiplicand+3
  2200     03FB  3000               	movlw	0
  2201     03FC  00CE               	movwf	___lmul@multiplicand+2
  2202     03FD  30BB               	movlw	187
  2203     03FE  00CD               	movwf	___lmul@multiplicand+1
  2204     03FF  3036               	movlw	54
  2205     0400  00CC               	movwf	___lmul@multiplicand
  2206     0401  3186  26AD  3183   	fcall	___lmul
  2207     0404  0848               	movf	?___lmul,w
  2208     0405  00D4               	movwf	??_SHORTEN_PERIOD
  2209     0406  0849               	movf	?___lmul+1,w
  2210     0407  00D5               	movwf	??_SHORTEN_PERIOD+1
  2211     0408  084A               	movf	?___lmul+2,w
  2212     0409  00D6               	movwf	??_SHORTEN_PERIOD+2
  2213     040A  084B               	movf	?___lmul+3,w
  2214     040B  00D7               	movwf	??_SHORTEN_PERIOD+3
  2215     040C  3010               	movlw	16
  2216     040D                     u1175:
  2217     040D  36D7               	lsrf	??_SHORTEN_PERIOD+3,f
  2218     040E  0CD6               	rrf	??_SHORTEN_PERIOD+2,f
  2219     040F  0CD5               	rrf	??_SHORTEN_PERIOD+1,f
  2220     0410  0CD4               	rrf	??_SHORTEN_PERIOD,f
  2221     0411  0B89               	decfsz	9,f
  2222     0412  2C0D               	goto	u1175
  2223     0413  0855               	movf	??_SHORTEN_PERIOD+1,w
  2224     0414  00D9               	movwf	SHORTEN_PERIOD@dTMR0_ideal+1
  2225     0415  0854               	movf	??_SHORTEN_PERIOD,w
  2226     0416  00D8               	movwf	SHORTEN_PERIOD@dTMR0_ideal
  2227                           
  2228                           ;main.c: 331:     if((dTMR0_ideal + raw_TMR0) < 128){
  2229     0417  0840               	movf	_raw_TMR0,w	;volatile
  2230     0418  0758               	addwf	SHORTEN_PERIOD@dTMR0_ideal,w
  2231     0419  00D4               	movwf	??_SHORTEN_PERIOD
  2232     041A  0859               	movf	SHORTEN_PERIOD@dTMR0_ideal+1,w
  2233     041B  1803               	skipnc
  2234     041C  0A59               	incf	SHORTEN_PERIOD@dTMR0_ideal+1,w
  2235     041D  00D5               	movwf	??_SHORTEN_PERIOD+1
  2236     041E  3000               	movlw	0
  2237     041F  0255               	subwf	??_SHORTEN_PERIOD+1,w
  2238     0420  3080               	movlw	128
  2239     0421  1903               	skipnz
  2240     0422  0254               	subwf	??_SHORTEN_PERIOD,w
  2241     0423  1803               	skipnc
  2242     0424  2C2C               	goto	l1660
  2243                           
  2244                           ;main.c: 332:         TMR0_offset = (uint8_t)dTMR0_ideal;
  2245     0425  0858               	movf	SHORTEN_PERIOD@dTMR0_ideal,w
  2246     0426  00C3               	movwf	_TMR0_offset	;volatile
  2247                           
  2248                           ;main.c: 333:         TMR0_offset_sign = POSITIVE;
  2249     0427  3001               	movlw	1
  2250     0428  00C2               	movwf	_TMR0_offset_sign	;volatile
  2251                           
  2252                           ;main.c: 334:         prescaler_adjust = DO_NOTHING;
  2253     0429  01C1               	clrf	_prescaler_adjust	;volatile
  2254                           
  2255                           ;main.c: 335:         clear_TMR0_please = NO;
  2256     042A  01BF               	clrf	_clear_TMR0_please	;volatile
  2257                           
  2258                           ;main.c: 336:     }
  2259     042B  0008               	return
  2260     042C                     l1660:
  2261     042C  0840               	movf	_raw_TMR0,w	;volatile
  2262     042D  0758               	addwf	SHORTEN_PERIOD@dTMR0_ideal,w
  2263     042E  00D4               	movwf	??_SHORTEN_PERIOD
  2264     042F  0859               	movf	SHORTEN_PERIOD@dTMR0_ideal+1,w
  2265     0430  1803               	skipnc
  2266     0431  0A59               	incf	SHORTEN_PERIOD@dTMR0_ideal+1,w
  2267     0432  00D5               	movwf	??_SHORTEN_PERIOD+1
  2268     0433  3080               	movlw	128
  2269     0434  0654               	xorwf	??_SHORTEN_PERIOD,w
  2270     0435  0455               	iorwf	??_SHORTEN_PERIOD+1,w
  2271     0436  1D03               	btfss	3,2
  2272     0437  2C40               	goto	l1670
  2273                           
  2274                           ;main.c: 338:         TMR0_offset = 0;
  2275     0438  01C3               	clrf	_TMR0_offset	;volatile
  2276                           
  2277                           ;main.c: 339:         TMR0_offset_sign = DONT_CARE;
  2278     0439  3004               	movlw	4
  2279     043A  00C2               	movwf	_TMR0_offset_sign	;volatile
  2280                           
  2281                           ;main.c: 340:         prescaler_adjust = DIVIDE_BY_TWO;
  2282     043B  3001               	movlw	1
  2283     043C                     L1:
  2284     043C  00C1               	movwf	_prescaler_adjust	;volatile
  2285                           
  2286                           ;main.c: 341:         clear_TMR0_please = YES;
  2287     043D  3001               	movlw	1
  2288     043E  00BF               	movwf	_clear_TMR0_please	;volatile
  2289                           
  2290                           ;main.c: 342:     }
  2291     043F  0008               	return
  2292     0440                     l1670:
  2293     0440  0840               	movf	_raw_TMR0,w	;volatile
  2294     0441  0758               	addwf	SHORTEN_PERIOD@dTMR0_ideal,w
  2295     0442  00D4               	movwf	??_SHORTEN_PERIOD
  2296     0443  0859               	movf	SHORTEN_PERIOD@dTMR0_ideal+1,w
  2297     0444  1803               	skipnc
  2298     0445  0A59               	incf	SHORTEN_PERIOD@dTMR0_ideal+1,w
  2299     0446  00D5               	movwf	??_SHORTEN_PERIOD+1
  2300     0447  3000               	movlw	0
  2301     0448  0255               	subwf	??_SHORTEN_PERIOD+1,w
  2302     0449  3081               	movlw	129
  2303     044A  1903               	skipnz
  2304     044B  0254               	subwf	??_SHORTEN_PERIOD,w
  2305     044C  1C03               	skipc
  2306     044D  0008               	return
  2307                           
  2308                           ;main.c: 344:         uint16_t TMR0_raw_extra = dTMR0_ideal + raw_TMR0 - 128;
  2309     044E  0840               	movf	_raw_TMR0,w	;volatile
  2310     044F  0758               	addwf	SHORTEN_PERIOD@dTMR0_ideal,w
  2311     0450  00D4               	movwf	??_SHORTEN_PERIOD
  2312     0451  0859               	movf	SHORTEN_PERIOD@dTMR0_ideal+1,w
  2313     0452  1803               	skipnc
  2314     0453  0A59               	incf	SHORTEN_PERIOD@dTMR0_ideal+1,w
  2315     0454  00D5               	movwf	??_SHORTEN_PERIOD+1
  2316     0455  0854               	movf	??_SHORTEN_PERIOD,w
  2317     0456  3E80               	addlw	128
  2318     0457  00DA               	movwf	SHORTEN_PERIOD@TMR0_raw_extra
  2319     0458  30FF               	movlw	255
  2320     0459  3D55               	addwfc	??_SHORTEN_PERIOD+1,w
  2321     045A  00DB               	movwf	SHORTEN_PERIOD@TMR0_raw_extra+1
  2322                           
  2323                           ;main.c: 345:         if(TMR0_raw_extra >> 7 == 0){
  2324     045B  085B               	movf	SHORTEN_PERIOD@TMR0_raw_extra+1,w
  2325     045C  00D5               	movwf	??_SHORTEN_PERIOD+1
  2326     045D  085A               	movf	SHORTEN_PERIOD@TMR0_raw_extra,w
  2327     045E  00D4               	movwf	??_SHORTEN_PERIOD
  2328     045F  3007               	movlw	7
  2329     0460                     u1215:
  2330     0460  36D5               	lsrf	??_SHORTEN_PERIOD+1,f
  2331     0461  0CD4               	rrf	??_SHORTEN_PERIOD,f
  2332     0462  0B89               	decfsz	9,f
  2333     0463  2C60               	goto	u1215
  2334     0464  0854               	movf	??_SHORTEN_PERIOD,w
  2335     0465  0455               	iorwf	??_SHORTEN_PERIOD+1,w
  2336     0466  1D03               	btfss	3,2
  2337     0467  2C71               	goto	l1676
  2338                           
  2339                           ;main.c: 346:             TMR0_offset = (uint8_t)TMR0_raw_extra;
  2340     0468  085A               	movf	SHORTEN_PERIOD@TMR0_raw_extra,w
  2341     0469  00C3               	movwf	_TMR0_offset	;volatile
  2342                           
  2343                           ;main.c: 347:             TMR0_offset_sign = POSITIVE;
  2344     046A  3001               	movlw	1
  2345     046B  00C2               	movwf	_TMR0_offset_sign	;volatile
  2346                           
  2347                           ;main.c: 348:             prescaler_adjust = DIVIDE_BY_TWO;
  2348     046C  3001               	movlw	1
  2349     046D  00C1               	movwf	_prescaler_adjust	;volatile
  2350                           
  2351                           ;main.c: 349:             clear_TMR0_please = YES;
  2352     046E  3001               	movlw	1
  2353     046F  00BF               	movwf	_clear_TMR0_please	;volatile
  2354                           
  2355                           ;main.c: 350:         }
  2356     0470  0008               	return
  2357     0471                     l1676:
  2358     0471  085B               	movf	SHORTEN_PERIOD@TMR0_raw_extra+1,w
  2359     0472  00D5               	movwf	??_SHORTEN_PERIOD+1
  2360     0473  085A               	movf	SHORTEN_PERIOD@TMR0_raw_extra,w
  2361     0474  00D4               	movwf	??_SHORTEN_PERIOD
  2362     0475  3007               	movlw	7
  2363     0476                     u1235:
  2364     0476  36D5               	lsrf	??_SHORTEN_PERIOD+1,f
  2365     0477  0CD4               	rrf	??_SHORTEN_PERIOD,f
  2366     0478  0B89               	decfsz	9,f
  2367     0479  2C76               	goto	u1235
  2368     047A  0354               	decf	??_SHORTEN_PERIOD,w
  2369     047B  0455               	iorwf	??_SHORTEN_PERIOD+1,w
  2370     047C  1D03               	btfss	3,2
  2371     047D  0008               	return
  2372                           
  2373                           ;main.c: 352:             TMR0_raw_extra = TMR0_raw_extra - 128;
  2374     047E  085A               	movf	SHORTEN_PERIOD@TMR0_raw_extra,w
  2375     047F  3E80               	addlw	128
  2376     0480  00DA               	movwf	SHORTEN_PERIOD@TMR0_raw_extra
  2377     0481  30FF               	movlw	255
  2378     0482  3D5B               	addwfc	SHORTEN_PERIOD@TMR0_raw_extra+1,w
  2379     0483  00DB               	movwf	SHORTEN_PERIOD@TMR0_raw_extra+1
  2380                           
  2381                           ;main.c: 353:             TMR0_offset = (uint8_t)TMR0_raw_extra;
  2382     0484  085A               	movf	SHORTEN_PERIOD@TMR0_raw_extra,w
  2383     0485  00C3               	movwf	_TMR0_offset	;volatile
  2384                           
  2385                           ;main.c: 354:             TMR0_offset_sign = POSITIVE;
  2386     0486  3001               	movlw	1
  2387     0487  00C2               	movwf	_TMR0_offset_sign	;volatile
  2388                           
  2389                           ;main.c: 355:             prescaler_adjust = DIVIDE_BY_FOUR;
  2390     0488  3003               	movlw	3
  2391     0489  2C3C               	goto	L1
  2392     048A                     __end_of_SHORTEN_PERIOD:
  2393                           
  2394                           	psect	text5
  2395     063A                     __ptext5:	
  2396 ;; *************** function _LENGTHEN_PERIOD *****************
  2397 ;; Defined at:
  2398 ;;		line 362 in file "main.c"
  2399 ;; Parameters:    Size  Location     Type
  2400 ;;		None
  2401 ;; Auto vars:     Size  Location     Type
  2402 ;;  dTMR0_ideal     2   16[BANK0 ] unsigned short 
  2403 ;; Return value:  Size  Location     Type
  2404 ;;                  1    wreg      unsigned char 
  2405 ;; Registers used:
  2406 ;;		wreg, status,2, status,0, pclath, cstack
  2407 ;; Tracked objects:
  2408 ;;		On entry : 1F/0
  2409 ;;		On exit  : 1F/0
  2410 ;;		Unchanged: 0/0
  2411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2412 ;;      Params:         0       0       0       0
  2413 ;;      Locals:         0       2       0       0
  2414 ;;      Temps:          0       4       0       0
  2415 ;;      Totals:         0       6       0       0
  2416 ;;Total ram usage:        6 bytes
  2417 ;; Hardware stack levels used: 1
  2418 ;; Hardware stack levels required when called: 3
  2419 ;; This function calls:
  2420 ;;		___lmul
  2421 ;; This function is called by:
  2422 ;;		_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST
  2423 ;; This function uses a non-reentrant model
  2424 ;;
  2425                           
  2426     063A                     _LENGTHEN_PERIOD:	
  2427                           ;psect for function _LENGTHEN_PERIOD
  2428                           
  2429                           
  2430                           ;main.c: 363:     uint16_t dTMR0_ideal = (uint16_t)((uint32_t)(symmetry_total * 17609) >
      +                          > 16);
  2431                           
  2432                           ;incstack = 0
  2433                           ; Regs used in _LENGTHEN_PERIOD: [wreg+status,2+status,0+pclath+cstack]
  2434     063A  0823               	movf	_symmetry_total+3,w	;volatile
  2435     063B  00CB               	movwf	___lmul@multiplier+3
  2436     063C  0822               	movf	_symmetry_total+2,w	;volatile
  2437     063D  00CA               	movwf	___lmul@multiplier+2
  2438     063E  0821               	movf	_symmetry_total+1,w	;volatile
  2439     063F  00C9               	movwf	___lmul@multiplier+1
  2440     0640  0820               	movf	_symmetry_total,w	;volatile
  2441     0641  00C8               	movwf	___lmul@multiplier
  2442     0642  3000               	movlw	0
  2443     0643  00CF               	movwf	___lmul@multiplicand+3
  2444     0644  3000               	movlw	0
  2445     0645  00CE               	movwf	___lmul@multiplicand+2
  2446     0646  3044               	movlw	68
  2447     0647  00CD               	movwf	___lmul@multiplicand+1
  2448     0648  30C9               	movlw	201
  2449     0649  00CC               	movwf	___lmul@multiplicand
  2450     064A  3186  26AD  3186   	fcall	___lmul
  2451     064D  0848               	movf	?___lmul,w
  2452     064E  00D4               	movwf	??_LENGTHEN_PERIOD
  2453     064F  0849               	movf	?___lmul+1,w
  2454     0650  00D5               	movwf	??_LENGTHEN_PERIOD+1
  2455     0651  084A               	movf	?___lmul+2,w
  2456     0652  00D6               	movwf	??_LENGTHEN_PERIOD+2
  2457     0653  084B               	movf	?___lmul+3,w
  2458     0654  00D7               	movwf	??_LENGTHEN_PERIOD+3
  2459     0655  3010               	movlw	16
  2460     0656                     u1255:
  2461     0656  36D7               	lsrf	??_LENGTHEN_PERIOD+3,f
  2462     0657  0CD6               	rrf	??_LENGTHEN_PERIOD+2,f
  2463     0658  0CD5               	rrf	??_LENGTHEN_PERIOD+1,f
  2464     0659  0CD4               	rrf	??_LENGTHEN_PERIOD,f
  2465     065A  0B89               	decfsz	9,f
  2466     065B  2E56               	goto	u1255
  2467     065C  0855               	movf	??_LENGTHEN_PERIOD+1,w
  2468     065D  00D9               	movwf	LENGTHEN_PERIOD@dTMR0_ideal+1
  2469     065E  0854               	movf	??_LENGTHEN_PERIOD,w
  2470     065F  00D8               	movwf	LENGTHEN_PERIOD@dTMR0_ideal
  2471                           
  2472                           ;main.c: 365:         if(raw_TMR0 < dTMR0_ideal){
  2473     0660  0840               	movf	_raw_TMR0,w	;volatile
  2474     0661  00D4               	movwf	??_LENGTHEN_PERIOD
  2475     0662  01D5               	clrf	??_LENGTHEN_PERIOD+1
  2476     0663  0859               	movf	LENGTHEN_PERIOD@dTMR0_ideal+1,w
  2477     0664  0255               	subwf	??_LENGTHEN_PERIOD+1,w
  2478     0665  1D03               	skipz
  2479     0666  2E69               	goto	u1265
  2480     0667  0858               	movf	LENGTHEN_PERIOD@dTMR0_ideal,w
  2481     0668  0254               	subwf	??_LENGTHEN_PERIOD,w
  2482     0669                     u1265:
  2483     0669  1803               	skipnc
  2484     066A  2E76               	goto	l1702
  2485                           
  2486                           ;main.c: 366:             TMR0_offset = (uint8_t)(128 - (dTMR0_ideal - raw_TMR0));
  2487     066B  0858               	movf	LENGTHEN_PERIOD@dTMR0_ideal,w
  2488     066C  0240               	subwf	_raw_TMR0,w
  2489     066D  3E80               	addlw	128
  2490     066E  00C3               	movwf	_TMR0_offset	;volatile
  2491                           
  2492                           ;main.c: 367:             TMR0_offset_sign = POSITIVE;
  2493     066F  3001               	movlw	1
  2494     0670  00C2               	movwf	_TMR0_offset_sign	;volatile
  2495                           
  2496                           ;main.c: 368:             prescaler_adjust = MULTIPLY_BY_TWO;
  2497     0671  3002               	movlw	2
  2498     0672  00C1               	movwf	_prescaler_adjust	;volatile
  2499                           
  2500                           ;main.c: 369:             clear_TMR0_please = YES;
  2501     0673  3001               	movlw	1
  2502     0674  00BF               	movwf	_clear_TMR0_please	;volatile
  2503                           
  2504                           ;main.c: 370:         }
  2505     0675  0008               	return
  2506     0676                     l1702:
  2507                           
  2508                           ;main.c: 372:             TMR0_offset = (uint8_t)dTMR0_ideal;
  2509     0676  0858               	movf	LENGTHEN_PERIOD@dTMR0_ideal,w
  2510     0677  00C3               	movwf	_TMR0_offset	;volatile
  2511                           
  2512                           ;main.c: 373:             TMR0_offset_sign = NEGATIVE;
  2513     0678  01C2               	clrf	_TMR0_offset_sign	;volatile
  2514                           
  2515                           ;main.c: 374:             prescaler_adjust = DO_NOTHING;
  2516     0679  01C1               	clrf	_prescaler_adjust	;volatile
  2517                           
  2518                           ;main.c: 375:             clear_TMR0_please = NO;
  2519     067A  01BF               	clrf	_clear_TMR0_please	;volatile
  2520     067B  0008               	return
  2521     067C                     __end_of_LENGTHEN_PERIOD:
  2522                           
  2523                           	psect	text6
  2524     0580                     __ptext6:	
  2525 ;; *************** function _PROCESS_RAW_SPEED_AND_PRESCALER *****************
  2526 ;; Defined at:
  2527 ;;		line 283 in file "main.c"
  2528 ;; Parameters:    Size  Location     Type
  2529 ;;		None
  2530 ;; Auto vars:     Size  Location     Type
  2531 ;;  speed_contro    2   16[BANK0 ] unsigned short 
  2532 ;; Return value:  Size  Location     Type
  2533 ;;                  1    wreg      unsigned char 
  2534 ;; Registers used:
  2535 ;;		wreg, status,2, status,0, pclath, cstack
  2536 ;; Tracked objects:
  2537 ;;		On entry : 1F/0
  2538 ;;		On exit  : 1F/0
  2539 ;;		Unchanged: 0/0
  2540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2541 ;;      Params:         0       0       0       0
  2542 ;;      Locals:         0       2       0       0
  2543 ;;      Temps:          0       4       0       0
  2544 ;;      Totals:         0       6       0       0
  2545 ;;Total ram usage:        6 bytes
  2546 ;; Hardware stack levels used: 1
  2547 ;; Hardware stack levels required when called: 3
  2548 ;; This function calls:
  2549 ;;		___lmul
  2550 ;; This function is called by:
  2551 ;;		_main
  2552 ;; This function uses a non-reentrant model
  2553 ;;
  2554                           
  2555     0580                     _PROCESS_RAW_SPEED_AND_PRESCALER:	
  2556                           ;psect for function _PROCESS_RAW_SPEED_AND_PRESCALER
  2557                           
  2558                           
  2559                           ;main.c: 284:     current_speed_linear_32 = current_speed_linear;
  2560                           
  2561                           ;incstack = 0
  2562                           ; Regs used in _PROCESS_RAW_SPEED_AND_PRESCALER: [wreg+status,2+status,0+pclath+cstack]
  2563     0580  0838               	movf	_current_speed_linear,w	;volatile
  2564     0581  00A8               	movwf	_current_speed_linear_32	;volatile
  2565     0582  0839               	movf	_current_speed_linear+1,w	;volatile
  2566     0583  00A9               	movwf	_current_speed_linear_32+1	;volatile
  2567     0584  01AA               	clrf	_current_speed_linear_32+2	;volatile
  2568     0585  01AB               	clrf	_current_speed_linear_32+3	;volatile
  2569                           
  2570                           ;main.c: 285:     speed_control_32 = current_speed_linear_32 * 600;;
  2571     0586  082B               	movf	_current_speed_linear_32+3,w	;volatile
  2572     0587  00CB               	movwf	___lmul@multiplier+3
  2573     0588  082A               	movf	_current_speed_linear_32+2,w	;volatile
  2574     0589  00CA               	movwf	___lmul@multiplier+2
  2575     058A  0829               	movf	_current_speed_linear_32+1,w	;volatile
  2576     058B  00C9               	movwf	___lmul@multiplier+1
  2577     058C  0828               	movf	_current_speed_linear_32,w	;volatile
  2578     058D  00C8               	movwf	___lmul@multiplier
  2579     058E  3000               	movlw	0
  2580     058F  00CF               	movwf	___lmul@multiplicand+3
  2581     0590  3000               	movlw	0
  2582     0591  00CE               	movwf	___lmul@multiplicand+2
  2583     0592  3002               	movlw	2
  2584     0593  00CD               	movwf	___lmul@multiplicand+1
  2585     0594  3058               	movlw	88
  2586     0595  00CC               	movwf	___lmul@multiplicand
  2587     0596  3186  26AD  3185   	fcall	___lmul
  2588     0599  084B               	movf	?___lmul+3,w
  2589     059A  00AF               	movwf	_speed_control_32+3	;volatile
  2590     059B  084A               	movf	?___lmul+2,w
  2591     059C  00AE               	movwf	_speed_control_32+2	;volatile
  2592     059D  0849               	movf	?___lmul+1,w
  2593     059E  00AD               	movwf	_speed_control_32+1	;volatile
  2594     059F  0848               	movf	?___lmul,w
  2595     05A0  00AC               	movwf	_speed_control_32	;volatile
  2596                           
  2597                           ;main.c: 286:     speed_control_32 = speed_control_32 >> 10;
  2598     05A1  082C               	movf	_speed_control_32,w	;volatile
  2599     05A2  00D4               	movwf	??_PROCESS_RAW_SPEED_AND_PRESCALER
  2600     05A3  082D               	movf	_speed_control_32+1,w	;volatile
  2601     05A4  00D5               	movwf	??_PROCESS_RAW_SPEED_AND_PRESCALER+1
  2602     05A5  082E               	movf	_speed_control_32+2,w	;volatile
  2603     05A6  00D6               	movwf	??_PROCESS_RAW_SPEED_AND_PRESCALER+2
  2604     05A7  082F               	movf	_speed_control_32+3,w	;volatile
  2605     05A8  00D7               	movwf	??_PROCESS_RAW_SPEED_AND_PRESCALER+3
  2606     05A9  300A               	movlw	10
  2607     05AA                     u1285:
  2608     05AA  36D7               	lsrf	??_PROCESS_RAW_SPEED_AND_PRESCALER+3,f
  2609     05AB  0CD6               	rrf	??_PROCESS_RAW_SPEED_AND_PRESCALER+2,f
  2610     05AC  0CD5               	rrf	??_PROCESS_RAW_SPEED_AND_PRESCALER+1,f
  2611     05AD  0CD4               	rrf	??_PROCESS_RAW_SPEED_AND_PRESCALER,f
  2612     05AE  0B89               	decfsz	9,f
  2613     05AF  2DAA               	goto	u1285
  2614     05B0  0857               	movf	??_PROCESS_RAW_SPEED_AND_PRESCALER+3,w
  2615     05B1  00AF               	movwf	_speed_control_32+3	;volatile
  2616     05B2  0856               	movf	??_PROCESS_RAW_SPEED_AND_PRESCALER+2,w
  2617     05B3  00AE               	movwf	_speed_control_32+2	;volatile
  2618     05B4  0855               	movf	??_PROCESS_RAW_SPEED_AND_PRESCALER+1,w
  2619     05B5  00AD               	movwf	_speed_control_32+1	;volatile
  2620     05B6  0854               	movf	??_PROCESS_RAW_SPEED_AND_PRESCALER,w
  2621     05B7  00AC               	movwf	_speed_control_32	;volatile
  2622                           
  2623                           ;main.c: 287:     speed_control = (uint16_t) speed_control_32;
  2624     05B8  082D               	movf	_speed_control_32+1,w	;volatile
  2625     05B9  00BD               	movwf	_speed_control+1	;volatile
  2626     05BA  082C               	movf	_speed_control_32,w	;volatile
  2627     05BB  00BC               	movwf	_speed_control	;volatile
  2628                           
  2629                           ;main.c: 289:         if(speed_control <= (127-12)){
  2630     05BC  3000               	movlw	0
  2631     05BD  023D               	subwf	_speed_control+1,w	;volatile
  2632     05BE  3074               	movlw	116
  2633     05BF  1903               	skipnz
  2634     05C0  023C               	subwf	_speed_control,w	;volatile
  2635     05C1  1803               	skipnc
  2636     05C2  2DC9               	goto	l1752
  2637                           
  2638                           ;main.c: 290:             raw_TMR0 = (uint8_t) speed_control + 12;
  2639     05C3  083C               	movf	_speed_control,w	;volatile
  2640     05C4  3E0C               	addlw	12
  2641     05C5  00C0               	movwf	_raw_TMR0	;volatile
  2642                           
  2643                           ;main.c: 291:             base_prescaler_bits_index = 1;
  2644     05C6  3001               	movlw	1
  2645     05C7  00F0               	movwf	_base_prescaler_bits_index	;volatile
  2646                           
  2647                           ;main.c: 292:         }
  2648     05C8  0008               	return
  2649     05C9                     l1752:
  2650                           
  2651                           ;main.c: 294:             uint16_t speed_control_subtracted;;main.c: 295:             sp
      +                          eed_control_subtracted = speed_control - (127-12);
  2652     05C9  083C               	movf	_speed_control,w	;volatile
  2653     05CA  3E8D               	addlw	141
  2654     05CB  00D8               	movwf	PROCESS_RAW_SPEED_AND_PRESCALER@speed_control_subtracted
  2655     05CC  30FF               	movlw	255
  2656     05CD  3D3D               	addwfc	_speed_control+1,w	;volatile
  2657     05CE  00D9               	movwf	PROCESS_RAW_SPEED_AND_PRESCALER@speed_control_subtracted+1
  2658                           
  2659                           ;main.c: 296:             how_many_128 = (uint8_t)(speed_control_subtracted >> 7);
  2660     05CF  0859               	movf	PROCESS_RAW_SPEED_AND_PRESCALER@speed_control_subtracted+1,w
  2661     05D0  00D5               	movwf	??_PROCESS_RAW_SPEED_AND_PRESCALER+1
  2662     05D1  0858               	movf	PROCESS_RAW_SPEED_AND_PRESCALER@speed_control_subtracted,w
  2663     05D2  00D4               	movwf	??_PROCESS_RAW_SPEED_AND_PRESCALER
  2664     05D3  3007               	movlw	7
  2665     05D4                     u1305:
  2666     05D4  36D5               	lsrf	??_PROCESS_RAW_SPEED_AND_PRESCALER+1,f
  2667     05D5  0CD4               	rrf	??_PROCESS_RAW_SPEED_AND_PRESCALER,f
  2668     05D6  0B89               	decfsz	9,f
  2669     05D7  2DD4               	goto	u1305
  2670     05D8  0854               	movf	??_PROCESS_RAW_SPEED_AND_PRESCALER,w
  2671     05D9  00D6               	movwf	??_PROCESS_RAW_SPEED_AND_PRESCALER+2
  2672     05DA  01D7               	clrf	??_PROCESS_RAW_SPEED_AND_PRESCALER+3
  2673     05DB  0856               	movf	??_PROCESS_RAW_SPEED_AND_PRESCALER+2,w
  2674     05DC  00BA               	movwf	_how_many_128	;volatile
  2675     05DD  0857               	movf	??_PROCESS_RAW_SPEED_AND_PRESCALER+3,w
  2676     05DE  00BB               	movwf	_how_many_128+1	;volatile
  2677                           
  2678                           ;main.c: 297:             raw_TMR0 = (uint8_t) (speed_control_subtracted - (how_many_128
      +                           << 7));
  2679     05DF  083A               	movf	_how_many_128,w	;volatile
  2680     05E0  00D4               	movwf	??_PROCESS_RAW_SPEED_AND_PRESCALER
  2681     05E1  3006               	movlw	6
  2682     05E2                     u1315:
  2683     05E2  35D4               	lslf	??_PROCESS_RAW_SPEED_AND_PRESCALER,f
  2684     05E3  3EFF               	addlw	-1
  2685     05E4  1D03               	skipz
  2686     05E5  2DE2               	goto	u1315
  2687     05E6  3554               	lslf	??_PROCESS_RAW_SPEED_AND_PRESCALER,w
  2688     05E7  0758               	addwf	PROCESS_RAW_SPEED_AND_PRESCALER@speed_control_subtracted,w
  2689     05E8  00C0               	movwf	_raw_TMR0	;volatile
  2690                           
  2691                           ;main.c: 298:             base_prescaler_bits_index = (uint8_t)(how_many_128 + 2);
  2692     05E9  083A               	movf	_how_many_128,w	;volatile
  2693     05EA  3E02               	addlw	2
  2694     05EB  00F0               	movwf	_base_prescaler_bits_index	;volatile
  2695     05EC  0008               	return
  2696     05ED                     __end_of_PROCESS_RAW_SPEED_AND_PRESCALER:
  2697                           
  2698                           	psect	text7
  2699     06AD                     __ptext7:	
  2700 ;; *************** function ___lmul *****************
  2701 ;; Defined at:
  2702 ;;		line 15 in file "/Applications/microchip/xc8/v2.45/pic/sources/c99/common/Umul32.c"
  2703 ;; Parameters:    Size  Location     Type
  2704 ;;  multiplier      4    0[BANK0 ] unsigned long 
  2705 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  2706 ;; Auto vars:     Size  Location     Type
  2707 ;;  product         4    8[BANK0 ] unsigned long 
  2708 ;; Return value:  Size  Location     Type
  2709 ;;                  4    0[BANK0 ] unsigned long 
  2710 ;; Registers used:
  2711 ;;		wreg, status,2, status,0
  2712 ;; Tracked objects:
  2713 ;;		On entry : 1F/0
  2714 ;;		On exit  : 1F/0
  2715 ;;		Unchanged: 0/0
  2716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2717 ;;      Params:         0       8       0       0
  2718 ;;      Locals:         0       4       0       0
  2719 ;;      Temps:          0       0       0       0
  2720 ;;      Totals:         0      12       0       0
  2721 ;;Total ram usage:       12 bytes
  2722 ;; Hardware stack levels used: 1
  2723 ;; Hardware stack levels required when called: 2
  2724 ;; This function calls:
  2725 ;;		Nothing
  2726 ;; This function is called by:
  2727 ;;		_PROCESS_RAW_SPEED_AND_PRESCALER
  2728 ;;		_SHORTEN_PERIOD
  2729 ;;		_LENGTHEN_PERIOD
  2730 ;;		_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST
  2731 ;; This function uses a non-reentrant model
  2732 ;;
  2733                           
  2734     06AD                     ___lmul:	
  2735                           ;psect for function ___lmul
  2736                           
  2737                           
  2738                           ;incstack = 0
  2739                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  2740     06AD  3000               	movlw	0
  2741     06AE  00D3               	movwf	___lmul@product+3
  2742     06AF  3000               	movlw	0
  2743     06B0  00D2               	movwf	___lmul@product+2
  2744     06B1  3000               	movlw	0
  2745     06B2  00D1               	movwf	___lmul@product+1
  2746     06B3  3000               	movlw	0
  2747     06B4  00D0               	movwf	___lmul@product
  2748     06B5                     l1582:
  2749     06B5  1C48               	btfss	___lmul@multiplier,0
  2750     06B6  2EBF               	goto	l1586
  2751     06B7  084C               	movf	___lmul@multiplicand,w
  2752     06B8  07D0               	addwf	___lmul@product,f
  2753     06B9  084D               	movf	___lmul@multiplicand+1,w
  2754     06BA  3DD1               	addwfc	___lmul@product+1,f
  2755     06BB  084E               	movf	___lmul@multiplicand+2,w
  2756     06BC  3DD2               	addwfc	___lmul@product+2,f
  2757     06BD  084F               	movf	___lmul@multiplicand+3,w
  2758     06BE  3DD3               	addwfc	___lmul@product+3,f
  2759     06BF                     l1586:
  2760     06BF  3001               	movlw	1
  2761     06C0                     u1115:
  2762     06C0  35CC               	lslf	___lmul@multiplicand,f
  2763     06C1  0DCD               	rlf	___lmul@multiplicand+1,f
  2764     06C2  0DCE               	rlf	___lmul@multiplicand+2,f
  2765     06C3  0DCF               	rlf	___lmul@multiplicand+3,f
  2766     06C4  0B89               	decfsz	9,f
  2767     06C5  2EC0               	goto	u1115
  2768     06C6  3001               	movlw	1
  2769     06C7                     u1125:
  2770     06C7  36CB               	lsrf	___lmul@multiplier+3,f
  2771     06C8  0CCA               	rrf	___lmul@multiplier+2,f
  2772     06C9  0CC9               	rrf	___lmul@multiplier+1,f
  2773     06CA  0CC8               	rrf	___lmul@multiplier,f
  2774     06CB  0B89               	decfsz	9,f
  2775     06CC  2EC7               	goto	u1125
  2776     06CD  084B               	movf	___lmul@multiplier+3,w
  2777     06CE  044A               	iorwf	___lmul@multiplier+2,w
  2778     06CF  0449               	iorwf	___lmul@multiplier+1,w
  2779     06D0  0448               	iorwf	___lmul@multiplier,w
  2780     06D1  1D03               	skipz
  2781     06D2  2EB5               	goto	l1582
  2782     06D3  0853               	movf	___lmul@product+3,w
  2783     06D4  00CB               	movwf	?___lmul+3
  2784     06D5  0852               	movf	___lmul@product+2,w
  2785     06D6  00CA               	movwf	?___lmul+2
  2786     06D7  0851               	movf	___lmul@product+1,w
  2787     06D8  00C9               	movwf	?___lmul+1
  2788     06D9  0850               	movf	___lmul@product,w
  2789     06DA  00C8               	movwf	?___lmul
  2790     06DB  0008               	return
  2791     06DC                     __end_of___lmul:
  2792                           
  2793                           	psect	text8
  2794     05ED                     __ptext8:	
  2795 ;; *************** function _PROCESS_FINAL_SPEED_AND_PRESCALER *****************
  2796 ;; Defined at:
  2797 ;;		line 303 in file "main.c"
  2798 ;; Parameters:    Size  Location     Type
  2799 ;;		None
  2800 ;; Auto vars:     Size  Location     Type
  2801 ;;		None
  2802 ;; Return value:  Size  Location     Type
  2803 ;;                  1    wreg      unsigned char 
  2804 ;; Registers used:
  2805 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  2806 ;; Tracked objects:
  2807 ;;		On entry : 1F/0
  2808 ;;		On exit  : 1E/0
  2809 ;;		Unchanged: 0/0
  2810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2811 ;;      Params:         0       0       0       0
  2812 ;;      Locals:         0       0       0       0
  2813 ;;      Temps:          0       0       0       0
  2814 ;;      Totals:         0       0       0       0
  2815 ;;Total ram usage:        0 bytes
  2816 ;; Hardware stack levels used: 1
  2817 ;; Hardware stack levels required when called: 2
  2818 ;; This function calls:
  2819 ;;		Nothing
  2820 ;; This function is called by:
  2821 ;;		_main
  2822 ;; This function uses a non-reentrant model
  2823 ;;
  2824                           
  2825     05ED                     _PROCESS_FINAL_SPEED_AND_PRESCALER:	
  2826                           ;psect for function _PROCESS_FINAL_SPEED_AND_PRESCALER
  2827                           
  2828                           
  2829                           ;main.c: 304:     if(clear_TMR0_please){
  2830                           
  2831                           ;incstack = 0
  2832                           ; Regs used in _PROCESS_FINAL_SPEED_AND_PRESCALER: [wreg-fsr0h+status,2+status,0+pclath]
  2833     05ED  083F               	movf	_clear_TMR0_please,w	;volatile
  2834     05EE  1D03               	btfss	3,2
  2835                           
  2836                           ;main.c: 305:         raw_TMR0 = 0;
  2837     05EF  01C0               	clrf	_raw_TMR0	;volatile
  2838                           
  2839                           ;main.c: 307:     if((TMR0_offset_sign == POSITIVE) || (TMR0_offset_sign == DONT_CARE)){
  2840     05F0  0342               	decf	_TMR0_offset_sign,w	;volatile
  2841     05F1  1903               	btfsc	3,2
  2842     05F2  2DF7               	goto	l1764
  2843     05F3  3004               	movlw	4
  2844     05F4  0642               	xorwf	_TMR0_offset_sign,w	;volatile
  2845     05F5  1D03               	btfss	3,2
  2846     05F6  2DFA               	goto	l1766
  2847     05F7                     l1764:
  2848                           
  2849                           ;main.c: 308:         final_TMR0 = raw_TMR0 + TMR0_offset;
  2850     05F7  0840               	movf	_raw_TMR0,w	;volatile
  2851     05F8  0743               	addwf	_TMR0_offset,w	;volatile
  2852     05F9  2DFF               	goto	L2
  2853     05FA                     l1766:	
  2854                           ;main.c: 309:     }
  2855                           
  2856     05FA  0842               	movf	_TMR0_offset_sign,w	;volatile
  2857     05FB  1D03               	btfss	3,2
  2858     05FC  2E00               	goto	l205
  2859                           
  2860                           ;main.c: 311:         final_TMR0 = raw_TMR0 - TMR0_offset;
  2861     05FD  0843               	movf	_TMR0_offset,w	;volatile
  2862     05FE  0240               	subwf	_raw_TMR0,w	;volatile
  2863     05FF                     L2:
  2864     05FF  00F5               	movwf	_final_TMR0	;volatile
  2865     0600                     l205:
  2866                           
  2867                           ;main.c: 313:     if(prescaler_adjust == DIVIDE_BY_TWO){
  2868     0600  0341               	decf	_prescaler_adjust,w	;volatile
  2869     0601  1D03               	btfss	3,2
  2870     0602  2E0E               	goto	l1772
  2871                           
  2872                           ;main.c: 314:         OPTION_REG = prescaler_bits[base_prescaler_bits_index + 1];
  2873     0603  0870               	movf	_base_prescaler_bits_index,w	;volatile
  2874     0604  3E9F               	addlw	low ((_prescaler_bits+1)| (0+32768))
  2875     0605  0084               	movwf	4
  2876     0606  3087               	movlw	high ((_prescaler_bits+1)| (0+32768))
  2877     0607  1803               	skipnc
  2878     0608  3E01               	addlw	1
  2879     0609  0085               	movwf	5
  2880     060A  0800               	movf	0,w	;code access
  2881     060B  0021               	movlb	1	; select bank1
  2882     060C  0095               	movwf	21	;volatile
  2883                           
  2884                           ;main.c: 315:     }
  2885     060D  0008               	return
  2886     060E                     l1772:
  2887     060E  3003               	movlw	3
  2888     060F  0641               	xorwf	_prescaler_adjust,w	;volatile
  2889     0610  1D03               	btfss	3,2
  2890     0611  2E1D               	goto	l1776
  2891                           
  2892                           ;main.c: 317:         OPTION_REG = prescaler_bits[base_prescaler_bits_index + 2];
  2893     0612  0870               	movf	_base_prescaler_bits_index,w	;volatile
  2894     0613  3EA0               	addlw	low ((_prescaler_bits+2)| (0+32768))
  2895     0614  0084               	movwf	4
  2896     0615  3087               	movlw	high ((_prescaler_bits+2)| (0+32768))
  2897     0616  1803               	skipnc
  2898     0617  3E01               	addlw	1
  2899     0618  0085               	movwf	5
  2900     0619  0800               	movf	0,w	;code access
  2901     061A  0021               	movlb	1	; select bank1
  2902     061B  0095               	movwf	21	;volatile
  2903                           
  2904                           ;main.c: 318:     }
  2905     061C  0008               	return
  2906     061D                     l1776:
  2907     061D  3002               	movlw	2
  2908     061E  0641               	xorwf	_prescaler_adjust,w	;volatile
  2909     061F  1D03               	btfss	3,2
  2910     0620  2E2C               	goto	l1780
  2911                           
  2912                           ;main.c: 320:         OPTION_REG = prescaler_bits[base_prescaler_bits_index - 1];
  2913     0621  0870               	movf	_base_prescaler_bits_index,w	;volatile
  2914     0622  3E9D               	addlw	low ((_prescaler_bits+65535)| (0+32768))
  2915     0623  0084               	movwf	4
  2916     0624  3087               	movlw	high ((_prescaler_bits+65535)| (0+32768))
  2917     0625  1803               	skipnc
  2918     0626  3E01               	addlw	1
  2919     0627  0085               	movwf	5
  2920     0628  0800               	movf	0,w	;code access
  2921     0629  0021               	movlb	1	; select bank1
  2922     062A  0095               	movwf	21	;volatile
  2923                           
  2924                           ;main.c: 321:     }
  2925     062B  0008               	return
  2926     062C                     l1780:
  2927     062C  0841               	movf	_prescaler_adjust,w	;volatile
  2928     062D  1D03               	btfss	3,2
  2929     062E  0008               	return
  2930                           
  2931                           ;main.c: 323:         OPTION_REG = prescaler_bits[base_prescaler_bits_index];
  2932     062F  0870               	movf	_base_prescaler_bits_index,w	;volatile
  2933     0630  3E9E               	addlw	low (_prescaler_bits| (0+32768))
  2934     0631  0084               	movwf	4
  2935     0632  3087               	movlw	high (_prescaler_bits| (0+32768))
  2936     0633  1803               	skipnc
  2937     0634  3E01               	addlw	1
  2938     0635  0085               	movwf	5
  2939     0636  0800               	movf	0,w	;code access
  2940     0637  0021               	movlb	1	; select bank1
  2941     0638  0095               	movwf	21	;volatile
  2942     0639  0008               	return
  2943     063A                     __end_of_PROCESS_FINAL_SPEED_AND_PRESCALER:
  2944                           
  2945                           	psect	text9
  2946     067C                     __ptext9:	
  2947 ;; *************** function _GET_CURRENT_POT_VALUES *****************
  2948 ;; Defined at:
  2949 ;;		line 270 in file "main.c"
  2950 ;; Parameters:    Size  Location     Type
  2951 ;;		None
  2952 ;; Auto vars:     Size  Location     Type
  2953 ;;  symmetry_ADC    1    0        unsigned char 
  2954 ;; Return value:  Size  Location     Type
  2955 ;;                  1    wreg      unsigned char 
  2956 ;; Registers used:
  2957 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2958 ;; Tracked objects:
  2959 ;;		On entry : 1E/1
  2960 ;;		On exit  : 1F/0
  2961 ;;		Unchanged: 0/0
  2962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2963 ;;      Params:         0       0       0       0
  2964 ;;      Locals:         0       0       0       0
  2965 ;;      Temps:          0       2       0       0
  2966 ;;      Totals:         0       2       0       0
  2967 ;;Total ram usage:        2 bytes
  2968 ;; Hardware stack levels used: 1
  2969 ;; Hardware stack levels required when called: 4
  2970 ;; This function calls:
  2971 ;;		_DETERMINE_WAVESHAPE
  2972 ;;		_DO_ADC
  2973 ;; This function is called by:
  2974 ;;		_main
  2975 ;; This function uses a non-reentrant model
  2976 ;;
  2977                           
  2978     067C                     _GET_CURRENT_POT_VALUES:	
  2979                           ;psect for function _GET_CURRENT_POT_VALUES
  2980                           
  2981                           
  2982                           ;main.c: 271:     current_waveshape = DETERMINE_WAVESHAPE();
  2983                           
  2984                           ;incstack = 0
  2985                           ; Regs used in _GET_CURRENT_POT_VALUES: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2986     067C  3187  272F  3186   	fcall	_DETERMINE_WAVESHAPE
  2987     067F  00F2               	movwf	_current_waveshape	;volatile
  2988                           
  2989                           ;main.c: 272:     current_speed_linear = DO_ADC(&speed_adc_config_value);
  2990     0680  30D5               	movlw	low (_speed_adc_config_value| (0+32768))
  2991     0681  00C8               	movwf	DO_ADC@modifier
  2992     0682  3087               	movlw	high (_speed_adc_config_value| (0+32768))
  2993     0683  00C9               	movwf	DO_ADC@modifier+1
  2994     0684  3186  26DC  3186   	fcall	_DO_ADC
  2995     0687  0849               	movf	?_DO_ADC+1,w
  2996     0688  00B9               	movwf	_current_speed_linear+1	;volatile
  2997     0689  0848               	movf	?_DO_ADC,w
  2998     068A  00B8               	movwf	_current_speed_linear	;volatile
  2999                           
  3000                           ;main.c: 273:     current_depth = DO_ADC(&depth_adc_config_value);
  3001     068B  30D4               	movlw	low (_depth_adc_config_value| (0+32768))
  3002     068C  00C8               	movwf	DO_ADC@modifier
  3003     068D  3087               	movlw	high (_depth_adc_config_value| (0+32768))
  3004     068E  00C9               	movwf	DO_ADC@modifier+1
  3005     068F  3186  26DC  3186   	fcall	_DO_ADC
  3006     0692  0849               	movf	?_DO_ADC+1,w
  3007     0693  00B5               	movwf	_current_depth+1	;volatile
  3008     0694  0848               	movf	?_DO_ADC,w
  3009     0695  00B4               	movwf	_current_depth	;volatile
  3010                           
  3011                           ;main.c: 274:     current_depth = current_depth >> 2;
  3012     0696  0835               	movf	_current_depth+1,w	;volatile
  3013     0697  00D1               	movwf	??_GET_CURRENT_POT_VALUES+1
  3014     0698  0834               	movf	_current_depth,w	;volatile
  3015     0699  00D0               	movwf	??_GET_CURRENT_POT_VALUES
  3016     069A  36D1               	lsrf	??_GET_CURRENT_POT_VALUES+1,f
  3017     069B  0CD0               	rrf	??_GET_CURRENT_POT_VALUES,f
  3018     069C  36D1               	lsrf	??_GET_CURRENT_POT_VALUES+1,f
  3019     069D  0CD0               	rrf	??_GET_CURRENT_POT_VALUES,f
  3020     069E  0850               	movf	??_GET_CURRENT_POT_VALUES,w
  3021     069F  00B4               	movwf	_current_depth	;volatile
  3022     06A0  0851               	movf	??_GET_CURRENT_POT_VALUES+1,w
  3023     06A1  00B5               	movwf	_current_depth+1	;volatile
  3024                           
  3025                           ;main.c: 275:     current_symmetry = DO_ADC(&symmetry_adc_config_value);
  3026     06A2  30D3               	movlw	low (_symmetry_adc_config_value| (0+32768))
  3027     06A3  00C8               	movwf	DO_ADC@modifier
  3028     06A4  3087               	movlw	high (_symmetry_adc_config_value| (0+32768))
  3029     06A5  00C9               	movwf	DO_ADC@modifier+1
  3030     06A6  3186  26DC         	fcall	_DO_ADC
  3031     06A8  0849               	movf	?_DO_ADC+1,w
  3032     06A9  00B3               	movwf	_current_symmetry+1	;volatile
  3033     06AA  0848               	movf	?_DO_ADC,w
  3034     06AB  00B2               	movwf	_current_symmetry	;volatile
  3035     06AC  0008               	return
  3036     06AD                     __end_of_GET_CURRENT_POT_VALUES:
  3037                           
  3038                           	psect	text10
  3039     072F                     __ptext10:	
  3040 ;; *************** function _DETERMINE_WAVESHAPE *****************
  3041 ;; Defined at:
  3042 ;;		line 198 in file "main.c"
  3043 ;; Parameters:    Size  Location     Type
  3044 ;;		None
  3045 ;; Auto vars:     Size  Location     Type
  3046 ;;  ADC             2    6[BANK0 ] unsigned short 
  3047 ;; Return value:  Size  Location     Type
  3048 ;;                  1    wreg      unsigned char 
  3049 ;; Registers used:
  3050 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3051 ;; Tracked objects:
  3052 ;;		On entry : 1E/1
  3053 ;;		On exit  : 1F/0
  3054 ;;		Unchanged: 0/0
  3055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3056 ;;      Params:         0       0       0       0
  3057 ;;      Locals:         0       2       0       0
  3058 ;;      Temps:          0       0       0       0
  3059 ;;      Totals:         0       2       0       0
  3060 ;;Total ram usage:        2 bytes
  3061 ;; Hardware stack levels used: 1
  3062 ;; Hardware stack levels required when called: 3
  3063 ;; This function calls:
  3064 ;;		_DO_ADC
  3065 ;; This function is called by:
  3066 ;;		_GET_CURRENT_POT_VALUES
  3067 ;; This function uses a non-reentrant model
  3068 ;;
  3069                           
  3070     072F                     _DETERMINE_WAVESHAPE:	
  3071                           ;psect for function _DETERMINE_WAVESHAPE
  3072                           
  3073                           
  3074                           ;main.c: 199:     uint16_t ADC = DO_ADC(&waveshape_adc_config_value);
  3075                           
  3076                           ;incstack = 0
  3077                           ; Regs used in _DETERMINE_WAVESHAPE: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3078     072F  30D6               	movlw	low (_waveshape_adc_config_value| (0+32768))
  3079     0730  0020               	movlb	0	; select bank0
  3080     0731  00C8               	movwf	DO_ADC@modifier
  3081     0732  3087               	movlw	high (_waveshape_adc_config_value| (0+32768))
  3082     0733  00C9               	movwf	DO_ADC@modifier+1
  3083     0734  3186  26DC  3187   	fcall	_DO_ADC
  3084     0737  0849               	movf	?_DO_ADC+1,w
  3085     0738  00CF               	movwf	DETERMINE_WAVESHAPE@ADC+1
  3086     0739  0848               	movf	?_DO_ADC,w
  3087     073A  00CE               	movwf	DETERMINE_WAVESHAPE@ADC
  3088                           
  3089                           ;main.c: 200:     if(ADC <= 341){
  3090     073B  3001               	movlw	1
  3091     073C  024F               	subwf	DETERMINE_WAVESHAPE@ADC+1,w
  3092     073D  3056               	movlw	86
  3093     073E  1903               	skipnz
  3094     073F  024E               	subwf	DETERMINE_WAVESHAPE@ADC,w
  3095     0740  1803               	skipnc
  3096     0741  2F44               	goto	l1616
  3097                           
  3098                           ;main.c: 201:             return 0;
  3099     0742  3000               	movlw	0
  3100     0743  0008               	return
  3101     0744                     l1616:
  3102                           
  3103                           ;main.c: 203:         if (ADC <= 682){
  3104     0744  3002               	movlw	2
  3105     0745  024F               	subwf	DETERMINE_WAVESHAPE@ADC+1,w
  3106     0746  30AB               	movlw	171
  3107     0747  1903               	skipnz
  3108     0748  024E               	subwf	DETERMINE_WAVESHAPE@ADC,w
  3109     0749  1803               	skipnc
  3110     074A  2F4D               	goto	l1622
  3111     074B                     l1618:
  3112                           
  3113                           ;main.c: 204:             return 1;
  3114     074B  3001               	movlw	1
  3115     074C  0008               	return
  3116     074D                     l1622:
  3117                           
  3118                           ;main.c: 206:         if (ADC <= 1023){
  3119     074D  3004               	movlw	4
  3120     074E  024F               	subwf	DETERMINE_WAVESHAPE@ADC+1,w
  3121     074F  3000               	movlw	0
  3122     0750  1903               	skipnz
  3123     0751  024E               	subwf	DETERMINE_WAVESHAPE@ADC,w
  3124     0752  1803               	skipnc
  3125     0753  2F4B               	goto	l1618
  3126                           
  3127                           ;main.c: 207:             return 2;
  3128     0754  3002               	movlw	2
  3129     0755  0008               	return
  3130     0756                     __end_of_DETERMINE_WAVESHAPE:
  3131                           
  3132                           	psect	text11
  3133     06DC                     __ptext11:	
  3134 ;; *************** function _DO_ADC *****************
  3135 ;; Defined at:
  3136 ;;		line 184 in file "main.c"
  3137 ;; Parameters:    Size  Location     Type
  3138 ;;  modifier        2    0[BANK0 ] PTR const unsigned char 
  3139 ;;		 -> symmetry_adc_config_value(1), depth_adc_config_value(1), speed_adc_config_value(1), waveshape_adc_config_value(1
      +), 
  3140 ;; Auto vars:     Size  Location     Type
  3141 ;;  adc_result      2    3[BANK0 ] unsigned short 
  3142 ;;  temp            1    5[BANK0 ] unsigned char 
  3143 ;; Return value:  Size  Location     Type
  3144 ;;                  2    0[BANK0 ] unsigned short 
  3145 ;; Registers used:
  3146 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  3147 ;; Tracked objects:
  3148 ;;		On entry : 1F/0
  3149 ;;		On exit  : 1F/0
  3150 ;;		Unchanged: 0/0
  3151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3152 ;;      Params:         0       2       0       0
  3153 ;;      Locals:         0       3       0       0
  3154 ;;      Temps:          0       1       0       0
  3155 ;;      Totals:         0       6       0       0
  3156 ;;Total ram usage:        6 bytes
  3157 ;; Hardware stack levels used: 1
  3158 ;; Hardware stack levels required when called: 2
  3159 ;; This function calls:
  3160 ;;		Nothing
  3161 ;; This function is called by:
  3162 ;;		_DETERMINE_WAVESHAPE
  3163 ;;		_GET_CURRENT_POT_VALUES
  3164 ;; This function uses a non-reentrant model
  3165 ;;
  3166                           
  3167     06DC                     _DO_ADC:	
  3168                           ;psect for function _DO_ADC
  3169                           
  3170                           
  3171                           ;main.c: 185:     ADCON0 = 0x00;
  3172                           
  3173                           ;incstack = 0
  3174                           ; Regs used in _DO_ADC: [wreg-fsr0h+status,2+status,0+pclath]
  3175     06DC  0021               	movlb	1	; select bank1
  3176     06DD  019D               	clrf	29	;volatile
  3177                           
  3178                           ;main.c: 187:     uint8_t temp = (uint8_t)(*modifier << 2);
  3179     06DE  0020               	movlb	0	; select bank0
  3180     06DF  0848               	movf	DO_ADC@modifier,w
  3181     06E0  0084               	movwf	4
  3182     06E1  0849               	movf	DO_ADC@modifier+1,w
  3183     06E2  0085               	movwf	5
  3184     06E3  0800               	movf	0,w	;code access
  3185     06E4  00CA               	movwf	??_DO_ADC
  3186     06E5  3001               	movlw	1
  3187     06E6                     u1085:
  3188     06E6  35CA               	lslf	??_DO_ADC,f
  3189     06E7  3EFF               	addlw	-1
  3190     06E8  1D03               	skipz
  3191     06E9  2EE6               	goto	u1085
  3192     06EA  354A               	lslf	??_DO_ADC,w
  3193     06EB  00CD               	movwf	DO_ADC@temp
  3194                           
  3195                           ;main.c: 188:     ADCON0 = ADCON0 | temp;
  3196     06EC  0021               	movlb	1	; select bank1
  3197     06ED  081D               	movf	29,w	;volatile
  3198     06EE  0020               	movlb	0	; select bank0
  3199     06EF  044D               	iorwf	DO_ADC@temp,w
  3200     06F0  0021               	movlb	1	; select bank1
  3201     06F1  009D               	movwf	29	;volatile
  3202                           
  3203                           ;main.c: 189:     ADON = 1;
  3204     06F2  141D               	bsf	29,0	;volatile
  3205                           
  3206                           ;main.c: 190:     _delay((unsigned long)((0.005)*(32000000/4000.0)));
  3207     06F3  300D               	movlw	13
  3208     06F4                     u1517:
  3209     06F4  0B89               	decfsz	9,f
  3210     06F5  2EF4               	goto	u1517
  3211     06F6  0000               	nop
  3212                           
  3213                           ;main.c: 191:     GO_nDONE = 1;
  3214     06F7  0021               	movlb	1	; select bank1
  3215     06F8  149D               	bsf	29,1	;volatile
  3216     06F9                     l158:	
  3217                           ;main.c: 192:     while(GO_nDONE == 1){}
  3218                           
  3219     06F9  189D               	btfsc	29,1	;volatile
  3220     06FA  2EF9               	goto	l158
  3221                           
  3222                           ;main.c: 193:     ADON = 0;
  3223     06FB  101D               	bcf	29,0	;volatile
  3224                           
  3225                           ;main.c: 194:     uint16_t adc_result = ((uint16_t)(ADRESH << 8) | ADRESL);
  3226     06FC  081C               	movf	28,w	;volatile
  3227     06FD  0020               	movlb	0	; select bank0
  3228     06FE  00CC               	movwf	DO_ADC@adc_result+1
  3229     06FF  0021               	movlb	1	; select bank1
  3230     0700  081B               	movf	27,w	;volatile
  3231     0701  0020               	movlb	0	; select bank0
  3232     0702  00CB               	movwf	DO_ADC@adc_result
  3233                           
  3234                           ;main.c: 195:     return adc_result;
  3235     0703  084C               	movf	DO_ADC@adc_result+1,w
  3236     0704  00C9               	movwf	?_DO_ADC+1
  3237     0705  084B               	movf	DO_ADC@adc_result,w
  3238     0706  00C8               	movwf	?_DO_ADC
  3239     0707  0008               	return
  3240     0708                     __end_of_DO_ADC:
  3241                           
  3242                           	psect	text12
  3243     07C8                     __ptext12:	
  3244 ;; *************** function _CONFIG_TMR0_INTERRUPT *****************
  3245 ;; Defined at:
  3246 ;;		line 252 in file "main.c"
  3247 ;; Parameters:    Size  Location     Type
  3248 ;;		None
  3249 ;; Auto vars:     Size  Location     Type
  3250 ;;		None
  3251 ;; Return value:  Size  Location     Type
  3252 ;;                  1    wreg      unsigned char 
  3253 ;; Registers used:
  3254 ;;		None
  3255 ;; Tracked objects:
  3256 ;;		On entry : B1F/1
  3257 ;;		On exit  : B1F/1
  3258 ;;		Unchanged: B1F/0
  3259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3260 ;;      Params:         0       0       0       0
  3261 ;;      Locals:         0       0       0       0
  3262 ;;      Temps:          0       0       0       0
  3263 ;;      Totals:         0       0       0       0
  3264 ;;Total ram usage:        0 bytes
  3265 ;; Hardware stack levels used: 1
  3266 ;; Hardware stack levels required when called: 2
  3267 ;; This function calls:
  3268 ;;		Nothing
  3269 ;; This function is called by:
  3270 ;;		_main
  3271 ;; This function uses a non-reentrant model
  3272 ;;
  3273                           
  3274     07C8                     _CONFIG_TMR0_INTERRUPT:	
  3275                           ;psect for function _CONFIG_TMR0_INTERRUPT
  3276                           
  3277                           
  3278                           ;main.c: 253:     TMR0IE = 1;
  3279                           
  3280                           ;incstack = 0
  3281                           ; Regs used in _CONFIG_TMR0_INTERRUPT: []
  3282     07C8  168B               	bsf	11,5	;volatile
  3283                           
  3284                           ;main.c: 254:     return 1;;	Return value of _CONFIG_TMR0_INTERRUPT is never used
  3285     07C9  0008               	return
  3286     07CA                     __end_of_CONFIG_TMR0_INTERRUPT:
  3287                           
  3288                           	psect	text13
  3289     0789                     __ptext13:	
  3290 ;; *************** function _CONFIG_SYSTEM *****************
  3291 ;; Defined at:
  3292 ;;		line 257 in file "main.c"
  3293 ;; Parameters:    Size  Location     Type
  3294 ;;		None
  3295 ;; Auto vars:     Size  Location     Type
  3296 ;;		None
  3297 ;; Return value:  Size  Location     Type
  3298 ;;                  1    wreg      unsigned char 
  3299 ;; Registers used:
  3300 ;;		wreg, status,2, status,0, pclath, cstack
  3301 ;; Tracked objects:
  3302 ;;		On entry : B1F/0
  3303 ;;		On exit  : B1F/0
  3304 ;;		Unchanged: B00/0
  3305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3306 ;;      Params:         0       0       0       0
  3307 ;;      Locals:         0       0       0       0
  3308 ;;      Temps:          0       0       0       0
  3309 ;;      Totals:         0       0       0       0
  3310 ;;Total ram usage:        0 bytes
  3311 ;; Hardware stack levels used: 1
  3312 ;; Hardware stack levels required when called: 3
  3313 ;; This function calls:
  3314 ;;		_CONFIG_ADC_PINS
  3315 ;;		_CONFIG_INT_OSC
  3316 ;;		_CONFIG_PORTS
  3317 ;;		_CONFIG_PWM_CCP3
  3318 ;; This function is called by:
  3319 ;;		_main
  3320 ;; This function uses a non-reentrant model
  3321 ;;
  3322                           
  3323     0789                     _CONFIG_SYSTEM:	
  3324                           ;psect for function _CONFIG_SYSTEM
  3325                           
  3326                           
  3327                           ;main.c: 258:     CONFIG_INT_OSC();
  3328                           
  3329                           ;incstack = 0
  3330                           ; Regs used in _CONFIG_SYSTEM: [wreg+status,2+status,0+pclath+cstack]
  3331     0789  3187  27BC  3187   	fcall	_CONFIG_INT_OSC
  3332                           
  3333                           ;main.c: 259:     CONFIG_PORTS();
  3334     078C  3187  2795  3187   	fcall	_CONFIG_PORTS
  3335                           
  3336                           ;main.c: 260:     CONFIG_ADC_PINS();
  3337     078F  3187  27C2  3187   	fcall	_CONFIG_ADC_PINS
  3338                           
  3339                           ;main.c: 261:     CONFIG_PWM_CCP3();
  3340     0792  3187  2776         	fcall	_CONFIG_PWM_CCP3
  3341     0794  0008               	return
  3342     0795                     __end_of_CONFIG_SYSTEM:
  3343                           
  3344                           	psect	text14
  3345     0776                     __ptext14:	
  3346 ;; *************** function _CONFIG_PWM_CCP3 *****************
  3347 ;; Defined at:
  3348 ;;		line 225 in file "main.c"
  3349 ;; Parameters:    Size  Location     Type
  3350 ;;		None
  3351 ;; Auto vars:     Size  Location     Type
  3352 ;;		None
  3353 ;; Return value:  Size  Location     Type
  3354 ;;                  1    wreg      unsigned char 
  3355 ;; Registers used:
  3356 ;;		wreg, status,2
  3357 ;; Tracked objects:
  3358 ;;		On entry : B1F/1
  3359 ;;		On exit  : B1F/0
  3360 ;;		Unchanged: B00/0
  3361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3362 ;;      Params:         0       0       0       0
  3363 ;;      Locals:         0       0       0       0
  3364 ;;      Temps:          0       0       0       0
  3365 ;;      Totals:         0       0       0       0
  3366 ;;Total ram usage:        0 bytes
  3367 ;; Hardware stack levels used: 1
  3368 ;; Hardware stack levels required when called: 2
  3369 ;; This function calls:
  3370 ;;		Nothing
  3371 ;; This function is called by:
  3372 ;;		_CONFIG_SYSTEM
  3373 ;; This function uses a non-reentrant model
  3374 ;;
  3375                           
  3376     0776                     _CONFIG_PWM_CCP3:	
  3377                           ;psect for function _CONFIG_PWM_CCP3
  3378                           
  3379                           
  3380                           ;main.c: 226:     SRLEN = 0;
  3381                           
  3382                           ;incstack = 0
  3383                           ; Regs used in _CONFIG_PWM_CCP3: [wreg+status,2]
  3384     0776  0022               	movlb	2	; select bank2
  3385     0777  139A               	bcf	26,7	;volatile
  3386                           
  3387                           ;main.c: 227:     C1ON = 0;
  3388     0778  1391               	bcf	17,7	;volatile
  3389                           
  3390                           ;main.c: 229:     TRISA2 = 1;
  3391     0779  0021               	movlb	1	; select bank1
  3392     077A  150C               	bsf	12,2	;volatile
  3393                           
  3394                           ;main.c: 230:     PR2 = 0xFF;
  3395     077B  30FF               	movlw	255
  3396     077C  0020               	movlb	0	; select bank0
  3397     077D  009B               	movwf	27	;volatile
  3398                           
  3399                           ;main.c: 231:     CCP3CON = CCP3CON | 0b00001111;
  3400     077E  0026               	movlb	6	; select bank6
  3401     077F  0813               	movf	19,w	;volatile
  3402     0780  380F               	iorlw	15
  3403     0781  0093               	movwf	19	;volatile
  3404                           
  3405                           ;main.c: 233:     CCPTMRS0 = 0x00;
  3406     0782  0025               	movlb	5	; select bank5
  3407     0783  019E               	clrf	30	;volatile
  3408                           
  3409                           ;main.c: 234:     TMR2IF = 0;
  3410     0784  0020               	movlb	0	; select bank0
  3411     0785  1091               	bcf	17,1	;volatile
  3412                           
  3413                           ;main.c: 235:     T2CON = T2CON | 0b00000000;
  3414     0786  081C               	movf	28,w	;volatile
  3415     0787  009C               	movwf	28	;volatile
  3416     0788  0008               	return
  3417     0789                     __end_of_CONFIG_PWM_CCP3:
  3418                           
  3419                           	psect	text15
  3420     0795                     __ptext15:	
  3421 ;; *************** function _CONFIG_PORTS *****************
  3422 ;; Defined at:
  3423 ;;		line 172 in file "main.c"
  3424 ;; Parameters:    Size  Location     Type
  3425 ;;		None
  3426 ;; Auto vars:     Size  Location     Type
  3427 ;;		None
  3428 ;; Return value:  Size  Location     Type
  3429 ;;                  1    wreg      unsigned char 
  3430 ;; Registers used:
  3431 ;;		wreg, status,2
  3432 ;; Tracked objects:
  3433 ;;		On entry : B1F/1
  3434 ;;		On exit  : B1F/4
  3435 ;;		Unchanged: B00/0
  3436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3437 ;;      Params:         0       0       0       0
  3438 ;;      Locals:         0       0       0       0
  3439 ;;      Temps:          0       0       0       0
  3440 ;;      Totals:         0       0       0       0
  3441 ;;Total ram usage:        0 bytes
  3442 ;; Hardware stack levels used: 1
  3443 ;; Hardware stack levels required when called: 2
  3444 ;; This function calls:
  3445 ;;		Nothing
  3446 ;; This function is called by:
  3447 ;;		_CONFIG_SYSTEM
  3448 ;; This function uses a non-reentrant model
  3449 ;;
  3450                           
  3451     0795                     _CONFIG_PORTS:	
  3452                           ;psect for function _CONFIG_PORTS
  3453                           
  3454                           
  3455                           ;main.c: 173:     ANSELC = 0b00001111;
  3456                           
  3457                           ;incstack = 0
  3458                           ; Regs used in _CONFIG_PORTS: [wreg+status,2]
  3459     0795  300F               	movlw	15
  3460     0796  0023               	movlb	3	; select bank3
  3461     0797  008E               	movwf	14	;volatile
  3462                           
  3463                           ;main.c: 174:     TRISC = 0b00001111;
  3464     0798  300F               	movlw	15
  3465     0799  0021               	movlb	1	; select bank1
  3466     079A  008E               	movwf	14	;volatile
  3467                           
  3468                           ;main.c: 175:     WPUC = 0b00000000;
  3469     079B  0024               	movlb	4	; select bank4
  3470     079C  018E               	clrf	14	;volatile
  3471     079D  0008               	return
  3472     079E                     __end_of_CONFIG_PORTS:
  3473                           
  3474                           	psect	text16
  3475     07BC                     __ptext16:	
  3476 ;; *************** function _CONFIG_INT_OSC *****************
  3477 ;; Defined at:
  3478 ;;		line 165 in file "main.c"
  3479 ;; Parameters:    Size  Location     Type
  3480 ;;		None
  3481 ;; Auto vars:     Size  Location     Type
  3482 ;;		None
  3483 ;; Return value:  Size  Location     Type
  3484 ;;                  1    wreg      unsigned char 
  3485 ;; Registers used:
  3486 ;;		wreg
  3487 ;; Tracked objects:
  3488 ;;		On entry : B1F/0
  3489 ;;		On exit  : B1F/1
  3490 ;;		Unchanged: B00/0
  3491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3492 ;;      Params:         0       0       0       0
  3493 ;;      Locals:         0       0       0       0
  3494 ;;      Temps:          0       0       0       0
  3495 ;;      Totals:         0       0       0       0
  3496 ;;Total ram usage:        0 bytes
  3497 ;; Hardware stack levels used: 1
  3498 ;; Hardware stack levels required when called: 2
  3499 ;; This function calls:
  3500 ;;		Nothing
  3501 ;; This function is called by:
  3502 ;;		_CONFIG_SYSTEM
  3503 ;; This function uses a non-reentrant model
  3504 ;;
  3505                           
  3506     07BC                     _CONFIG_INT_OSC:	
  3507                           ;psect for function _CONFIG_INT_OSC
  3508                           
  3509                           
  3510                           ;main.c: 166:     OSCCON = 0b11110000;
  3511                           
  3512                           ;incstack = 0
  3513                           ; Regs used in _CONFIG_INT_OSC: [wreg]
  3514     07BC  30F0               	movlw	240
  3515     07BD  0021               	movlb	1	; select bank1
  3516     07BE  0099               	movwf	25	;volatile
  3517                           
  3518                           ;main.c: 167:     OSCTUNE = 0b00011111;
  3519     07BF  301F               	movlw	31
  3520     07C0  0098               	movwf	24	;volatile
  3521     07C1  0008               	return
  3522     07C2                     __end_of_CONFIG_INT_OSC:
  3523                           
  3524                           	psect	text17
  3525     07C2                     __ptext17:	
  3526 ;; *************** function _CONFIG_ADC_PINS *****************
  3527 ;; Defined at:
  3528 ;;		line 179 in file "main.c"
  3529 ;; Parameters:    Size  Location     Type
  3530 ;;		None
  3531 ;; Auto vars:     Size  Location     Type
  3532 ;;		None
  3533 ;; Return value:  Size  Location     Type
  3534 ;;                  1    wreg      unsigned char 
  3535 ;; Registers used:
  3536 ;;		wreg
  3537 ;; Tracked objects:
  3538 ;;		On entry : B1F/4
  3539 ;;		On exit  : B1F/1
  3540 ;;		Unchanged: B00/0
  3541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3542 ;;      Params:         0       0       0       0
  3543 ;;      Locals:         0       0       0       0
  3544 ;;      Temps:          0       0       0       0
  3545 ;;      Totals:         0       0       0       0
  3546 ;;Total ram usage:        0 bytes
  3547 ;; Hardware stack levels used: 1
  3548 ;; Hardware stack levels required when called: 2
  3549 ;; This function calls:
  3550 ;;		Nothing
  3551 ;; This function is called by:
  3552 ;;		_CONFIG_SYSTEM
  3553 ;; This function uses a non-reentrant model
  3554 ;;
  3555                           
  3556     07C2                     _CONFIG_ADC_PINS:	
  3557                           ;psect for function _CONFIG_ADC_PINS
  3558                           
  3559                           
  3560                           ;main.c: 180:     ADCON1 = 0b10100000;
  3561                           
  3562                           ;incstack = 0
  3563                           ; Regs used in _CONFIG_ADC_PINS: [wreg]
  3564     07C2  30A0               	movlw	160
  3565     07C3  0021               	movlb	1	; select bank1
  3566     07C4  009E               	movwf	30	;volatile
  3567     07C5  0008               	return
  3568     07C6                     __end_of_CONFIG_ADC_PINS:
  3569                           
  3570                           	psect	intentry
  3571     0004                     __pintentry:	
  3572 ;; *************** function _INTERRUPT_InterruptManager *****************
  3573 ;; Defined at:
  3574 ;;		line 412 in file "main.c"
  3575 ;; Parameters:    Size  Location     Type
  3576 ;;		None
  3577 ;; Auto vars:     Size  Location     Type
  3578 ;;		None
  3579 ;; Return value:  Size  Location     Type
  3580 ;;                  1    wreg      void 
  3581 ;; Registers used:
  3582 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3583 ;; Tracked objects:
  3584 ;;		On entry : 0/0
  3585 ;;		On exit  : 0/0
  3586 ;;		Unchanged: 0/0
  3587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3588 ;;      Params:         0       0       0       0
  3589 ;;      Locals:         0       0       0       0
  3590 ;;      Temps:          2       0       0       0
  3591 ;;      Totals:         2       0       0       0
  3592 ;;Total ram usage:        2 bytes
  3593 ;; Hardware stack levels used: 1
  3594 ;; Hardware stack levels required when called: 1
  3595 ;; This function calls:
  3596 ;;		_SET_DUTY_CCP3
  3597 ;; This function is called by:
  3598 ;;		Interrupt level 1
  3599 ;; This function uses a non-reentrant model
  3600 ;;
  3601                           
  3602     0004                     _INTERRUPT_InterruptManager:
  3603                           
  3604                           ;incstack = 0
  3605     0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  3606                           
  3607                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3608     0005  3180               	pagesel	$
  3609                           
  3610                           ;main.c: 413:     if(TMR0IF == 1){
  3611     0006  1D0B               	btfss	11,2	;volatile
  3612     0007  28CE               	goto	i1l262
  3613                           
  3614                           ;main.c: 414:     GIE = 0;
  3615     0008  138B               	bcf	11,7	;volatile
  3616                           
  3617                           ;main.c: 415:     TMR0 = final_TMR0;
  3618     0009  0875               	movf	_final_TMR0,w	;volatile
  3619     000A  0020               	movlb	0	; select bank0
  3620     000B  0095               	movwf	21	;volatile
  3621                           
  3622                           ;main.c: 416:     LATC5 = 1;
  3623     000C  0022               	movlb	2	; select bank2
  3624     000D  168E               	bsf	14,5	;volatile
  3625                           
  3626                           ;main.c: 417:     TMR0IF = 0;
  3627     000E  110B               	bcf	11,2	;volatile
  3628                           
  3629                           ;main.c: 419:     if(current_waveshape == 0){
  3630     000F  0872               	movf	_current_waveshape,w	;volatile
  3631     0010  1D03               	btfss	3,2
  3632     0011  2822               	goto	i1l1496
  3633                           
  3634                           ;main.c: 420:         duty = tri_table_one_quadrant[current_one_quadrant_index];
  3635     0012  0871               	movf	_current_one_quadrant_index,w	;volatile
  3636     0013  00FA               	movwf	??_INTERRUPT_InterruptManager
  3637     0014  01FB               	clrf	??_INTERRUPT_InterruptManager+1
  3638     0015  35FA               	lslf	??_INTERRUPT_InterruptManager,f
  3639     0016  0DFB               	rlf	??_INTERRUPT_InterruptManager+1,f
  3640     0017  30ED               	movlw	low _tri_table_one_quadrant
  3641     0018  077A               	addwf	??_INTERRUPT_InterruptManager,w
  3642     0019  0084               	movwf	4
  3643     001A  3001               	movlw	high _tri_table_one_quadrant
  3644     001B  3D7B               	addwfc	??_INTERRUPT_InterruptManager+1,w
  3645     001C  3880               	iorlw	128
  3646     001D  0085               	movwf	5
  3647     001E  3F00               	moviw [0]fsr0
  3648     001F  00F3               	movwf	_duty	;volatile
  3649     0020  3F01               	moviw [1]fsr0
  3650     0021  283C               	goto	L3
  3651     0022                     i1l1496:	
  3652                           ;main.c: 421:     }
  3653                           
  3654     0022  0372               	decf	_current_waveshape,w	;volatile
  3655     0023  1D03               	btfss	3,2
  3656     0024  2835               	goto	i1l1500
  3657                           
  3658                           ;main.c: 423:         duty = sine_table_one_quadrant[current_one_quadrant_index];
  3659     0025  0871               	movf	_current_one_quadrant_index,w	;volatile
  3660     0026  00FA               	movwf	??_INTERRUPT_InterruptManager
  3661     0027  01FB               	clrf	??_INTERRUPT_InterruptManager+1
  3662     0028  35FA               	lslf	??_INTERRUPT_InterruptManager,f
  3663     0029  0DFB               	rlf	??_INTERRUPT_InterruptManager+1,f
  3664     002A  30EF               	movlw	low _sine_table_one_quadrant
  3665     002B  077A               	addwf	??_INTERRUPT_InterruptManager,w
  3666     002C  0084               	movwf	4
  3667     002D  3002               	movlw	high _sine_table_one_quadrant
  3668     002E  3D7B               	addwfc	??_INTERRUPT_InterruptManager+1,w
  3669     002F  3880               	iorlw	128
  3670     0030  0085               	movwf	5
  3671     0031  3F00               	moviw [0]fsr0
  3672     0032  00F3               	movwf	_duty	;volatile
  3673     0033  3F01               	moviw [1]fsr0
  3674     0034  283C               	goto	L3
  3675     0035                     i1l1500:	
  3676                           ;main.c: 424:     }
  3677                           
  3678     0035  3002               	movlw	2
  3679     0036  0672               	xorwf	_current_waveshape,w	;volatile
  3680     0037  1D03               	btfss	3,2
  3681     0038  283D               	goto	i1l1504
  3682                           
  3683                           ;main.c: 426:         duty = 1023;
  3684     0039  30FF               	movlw	255
  3685     003A  00F3               	movwf	_duty	;volatile
  3686     003B  3003               	movlw	3
  3687     003C                     L3:
  3688     003C  00F4               	movwf	_duty+1	;volatile
  3689     003D                     i1l1504:
  3690                           
  3691                           ;main.c: 428:     if(current_one_quadrant_index == 128){
  3692     003D  3080               	movlw	128
  3693     003E  0671               	xorwf	_current_one_quadrant_index,w	;volatile
  3694     003F  1D03               	btfss	3,2
  3695     0040  2844               	goto	i1l1508
  3696                           
  3697                           ;main.c: 429:         current_quadrant = 1;
  3698     0041  3001               	movlw	1
  3699     0042  0020               	movlb	0	; select bank0
  3700     0043  00C4               	movwf	_current_quadrant	;volatile
  3701     0044                     i1l1508:
  3702                           
  3703                           ;main.c: 431:     if(current_one_quadrant_index == 0){
  3704     0044  0871               	movf	_current_one_quadrant_index,w	;volatile
  3705     0045  1D03               	btfss	3,2
  3706     0046  2850               	goto	i1l1518
  3707                           
  3708                           ;main.c: 432:         current_quadrant = 0;
  3709     0047  0020               	movlb	0	; select bank0
  3710     0048  01C4               	clrf	_current_quadrant	;volatile
  3711                           
  3712                           ;main.c: 433:         if(current_halfcycle == 0){
  3713     0049  0845               	movf	_current_halfcycle,w	;volatile
  3714     004A  1D03               	btfss	3,2
  3715     004B  284F               	goto	i1l1516
  3716                           
  3717                           ;main.c: 434:             current_halfcycle = 1;
  3718     004C  3001               	movlw	1
  3719     004D  00C5               	movwf	_current_halfcycle	;volatile
  3720                           
  3721                           ;main.c: 435:         }
  3722     004E  2850               	goto	i1l1518
  3723     004F                     i1l1516:
  3724                           
  3725                           ;main.c: 437:             current_halfcycle = 0;
  3726     004F  01C5               	clrf	_current_halfcycle	;volatile
  3727     0050                     i1l1518:
  3728                           
  3729                           ;main.c: 440:         if(current_quadrant == 0){
  3730     0050  0020               	movlb	0	; select bank0
  3731     0051  0844               	movf	_current_quadrant,w	;volatile
  3732     0052  1D03               	btfss	3,2
  3733     0053  2859               	goto	i1l1522
  3734                           
  3735                           ;main.c: 441:             current_one_quadrant_index++;
  3736     0054  3001               	movlw	1
  3737     0055  00FA               	movwf	??_INTERRUPT_InterruptManager
  3738     0056  087A               	movf	??_INTERRUPT_InterruptManager,w
  3739     0057  07F1               	addwf	_current_one_quadrant_index,f	;volatile
  3740                           
  3741                           ;main.c: 442:         }
  3742     0058  285B               	goto	i1l258
  3743     0059                     i1l1522:
  3744                           
  3745                           ;main.c: 444:             current_one_quadrant_index--;
  3746     0059  3001               	movlw	1
  3747     005A  02F1               	subwf	_current_one_quadrant_index,f	;volatile
  3748     005B                     i1l258:	
  3749                           ;main.c: 445:         }
  3750                           
  3751                           
  3752                           ;main.c: 446:         if(current_halfcycle == 1){
  3753     005B  0345               	decf	_current_halfcycle,w	;volatile
  3754     005C  1D03               	btfss	3,2
  3755     005D  2868               	goto	i1l259
  3756                           
  3757                           ;main.c: 447:         duty = 1023 - duty;
  3758     005E  30FF               	movlw	255
  3759     005F  00FA               	movwf	??_INTERRUPT_InterruptManager
  3760     0060  3003               	movlw	3
  3761     0061  00FB               	movwf	??_INTERRUPT_InterruptManager+1
  3762     0062  0873               	movf	_duty,w	;volatile
  3763     0063  027A               	subwf	??_INTERRUPT_InterruptManager,w
  3764     0064  00F3               	movwf	_duty	;volatile
  3765     0065  0874               	movf	_duty+1,w	;volatile
  3766     0066  3B7B               	subwfb	??_INTERRUPT_InterruptManager+1,w
  3767     0067  00F4               	movwf	_duty+1	;volatile
  3768     0068                     i1l259:	
  3769                           ;main.c: 448:         }
  3770                           
  3771                           
  3772                           ;main.c: 451:     if(current_depth != 0){
  3773     0068  0834               	movf	_current_depth,w	;volatile
  3774     0069  0435               	iorwf	_current_depth+1,w	;volatile
  3775     006A  1903               	btfsc	3,2
  3776     006B  28C4               	goto	i1l1530
  3777                           
  3778                           ;main.c: 452:         duty_low_byte = duty & 0xFF;
  3779     006C  0873               	movf	_duty,w	;volatile
  3780     006D  00C7               	movwf	_duty_low_byte	;volatile
  3781                           
  3782                           ;main.c: 453:         duty_high_byte = duty >> 8;
  3783     006E  0874               	movf	_duty+1,w	;volatile
  3784     006F  00C6               	movwf	_duty_high_byte	;volatile
  3785     0070  01A2               	clrf	34	;# 
  3786     0071  01A0               	clrf	32	;# 
  3787     0072  1003               	bcf	3,0	;# 
  3788     0073  0834               	movf	_current_depth,w	;# 
  3789     0074  1847               	btfsc	_duty_low_byte,0	;# 
  3790     0075  07A2               	addwf	34,f	;# 
  3791     0076  0CA2               	rrf	34,f	;# 
  3792     0077  0CA0               	rrf	32,f	;# 
  3793     0078  18C7               	btfsc	_duty_low_byte,1	;# 
  3794     0079  07A2               	addwf	34,f	;# 
  3795     007A  0CA2               	rrf	34,f	;# 
  3796     007B  0CA0               	rrf	32,f	;# 
  3797     007C  1947               	btfsc	_duty_low_byte,2	;# 
  3798     007D  07A2               	addwf	34,f	;# 
  3799     007E  0CA2               	rrf	34,f	;# 
  3800     007F  0CA0               	rrf	32,f	;# 
  3801     0080  19C7               	btfsc	_duty_low_byte,3	;# 
  3802     0081  07A2               	addwf	34,f	;# 
  3803     0082  0CA2               	rrf	34,f	;# 
  3804     0083  0CA0               	rrf	32,f	;# 
  3805     0084  1A47               	btfsc	_duty_low_byte,4	;# 
  3806     0085  07A2               	addwf	34,f	;# 
  3807     0086  0CA2               	rrf	34,f	;# 
  3808     0087  0CA0               	rrf	32,f	;# 
  3809     0088  1AC7               	btfsc	_duty_low_byte,5	;# 
  3810     0089  07A2               	addwf	34,f	;# 
  3811     008A  0CA2               	rrf	34,f	;# 
  3812     008B  0CA0               	rrf	32,f	;# 
  3813     008C  1B47               	btfsc	_duty_low_byte,6	;# 
  3814     008D  07A2               	addwf	34,f	;# 
  3815     008E  0CA2               	rrf	34,f	;# 
  3816     008F  0CA0               	rrf	32,f	;# 
  3817     0090  1BC7               	btfsc	_duty_low_byte,7	;# 
  3818     0091  07A2               	addwf	34,f	;# 
  3819     0092  0CA2               	rrf	34,f	;# 
  3820     0093  0CA0               	rrf	32,f	;# 
  3821     0094  01A1               	clrf	33	;# 
  3822     0095  1846               	btfsc	_duty_high_byte,0	;# 
  3823     0096  07A2               	addwf	34,f	;# 
  3824     0097  0CA2               	rrf	34,f	;# 
  3825     0098  0CA1               	rrf	33,f	;# 
  3826     0099  18C6               	btfsc	_duty_high_byte,1	;# 
  3827     009A  07A2               	addwf	34,f	;# 
  3828     009B  0CA2               	rrf	34,f	;# 
  3829     009C  0CA1               	rrf	33,f	;# 
  3830     009D  1946               	btfsc	_duty_high_byte,2	;# 
  3831     009E  07A2               	addwf	34,f	;# 
  3832     009F  0CA2               	rrf	34,f	;# 
  3833     00A0  0CA1               	rrf	33,f	;# 
  3834     00A1  19C6               	btfsc	_duty_high_byte,3	;# 
  3835     00A2  07A2               	addwf	34,f	;# 
  3836     00A3  0CA2               	rrf	34,f	;# 
  3837     00A4  0CA1               	rrf	33,f	;# 
  3838     00A5  1A46               	btfsc	_duty_high_byte,4	;# 
  3839     00A6  07A2               	addwf	34,f	;# 
  3840     00A7  0CA2               	rrf	34,f	;# 
  3841     00A8  0CA1               	rrf	33,f	;# 
  3842     00A9  1AC6               	btfsc	_duty_high_byte,5	;# 
  3843     00AA  07A2               	addwf	34,f	;# 
  3844     00AB  0CA2               	rrf	34,f	;# 
  3845     00AC  0CA1               	rrf	33,f	;# 
  3846     00AD  1B46               	btfsc	_duty_high_byte,6	;# 
  3847     00AE  07A2               	addwf	34,f	;# 
  3848     00AF  0CA2               	rrf	34,f	;# 
  3849     00B0  0CA1               	rrf	33,f	;# 
  3850     00B1  1BC6               	btfsc	_duty_high_byte,7	;# 
  3851     00B2  07A2               	addwf	34,f	;# 
  3852     00B3  0CA2               	rrf	34,f	;# 
  3853     00B4  0CA1               	rrf	33,f	;# 
  3854                           
  3855                           ;main.c: 488:         duty = 1023 - *top_two_bytes_ptr;
  3856     00B5  0020               	movlb	0	; select bank0
  3857     00B6  0865               	movf	_top_two_bytes_ptr,w
  3858     00B7  0086               	movwf	6
  3859     00B8  0866               	movf	_top_two_bytes_ptr+1,w
  3860     00B9  0087               	movwf	7
  3861     00BA  30FF               	movlw	255
  3862     00BB  00FA               	movwf	??_INTERRUPT_InterruptManager
  3863     00BC  3003               	movlw	3
  3864     00BD  00FB               	movwf	??_INTERRUPT_InterruptManager+1
  3865     00BE  3F40               	moviw [0]fsr1
  3866     00BF  027A               	subwf	??_INTERRUPT_InterruptManager,w
  3867     00C0  00F3               	movwf	_duty	;volatile
  3868     00C1  3F41               	moviw [1]fsr1
  3869     00C2  3B7B               	subwfb	??_INTERRUPT_InterruptManager+1,w
  3870     00C3  28C7               	goto	L4
  3871     00C4                     i1l1530:	
  3872                           ;main.c: 489:     }
  3873                           
  3874                           
  3875                           ;main.c: 491:         duty = 1023;
  3876     00C4  30FF               	movlw	255
  3877     00C5  00F3               	movwf	_duty	;volatile
  3878     00C6  3003               	movlw	3
  3879     00C7                     L4:
  3880     00C7  00F4               	movwf	_duty+1	;volatile
  3881                           
  3882                           ;main.c: 495:     SET_DUTY_CCP3(&duty);
  3883     00C8  3073               	movlw	(low (_duty| 0))& (0+255)
  3884     00C9  3187  2756         	fcall	_SET_DUTY_CCP3
  3885                           
  3886                           ;main.c: 498:     LATC5 = 0;
  3887     00CB  0022               	movlb	2	; select bank2
  3888     00CC  128E               	bcf	14,5	;volatile
  3889                           
  3890                           ;main.c: 499:     GIE = 1;
  3891     00CD  178B               	bsf	11,7	;volatile
  3892     00CE                     i1l262:
  3893     00CE  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  3894     00CF  0009               	retfie
  3895     00D0                     __end_of_INTERRUPT_InterruptManager:
  3896                           
  3897                           	psect	text19
  3898     0756                     __ptext19:	
  3899 ;; *************** function _SET_DUTY_CCP3 *****************
  3900 ;; Defined at:
  3901 ;;		line 215 in file "main.c"
  3902 ;; Parameters:    Size  Location     Type
  3903 ;;  duty_ptr        1    wreg     PTR volatile unsigned sh
  3904 ;;		 -> duty(2), 
  3905 ;; Auto vars:     Size  Location     Type
  3906 ;;  duty_ptr        1    3[COMMON] PTR volatile unsigned sh
  3907 ;;		 -> duty(2), 
  3908 ;;  temp            1    2[COMMON] unsigned char 
  3909 ;; Return value:  Size  Location     Type
  3910 ;;                  1    wreg      unsigned char 
  3911 ;; Registers used:
  3912 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3913 ;; Tracked objects:
  3914 ;;		On entry : 1F/0
  3915 ;;		On exit  : 1F/6
  3916 ;;		Unchanged: 0/0
  3917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3918 ;;      Params:         0       0       0       0
  3919 ;;      Locals:         2       0       0       0
  3920 ;;      Temps:          2       0       0       0
  3921 ;;      Totals:         4       0       0       0
  3922 ;;Total ram usage:        4 bytes
  3923 ;; Hardware stack levels used: 1
  3924 ;; This function calls:
  3925 ;;		Nothing
  3926 ;; This function is called by:
  3927 ;;		_INTERRUPT_InterruptManager
  3928 ;; This function uses a non-reentrant model
  3929 ;;
  3930                           
  3931     0756                     _SET_DUTY_CCP3:	
  3932                           ;psect for function _SET_DUTY_CCP3
  3933                           
  3934                           
  3935                           ;incstack = 0
  3936                           ; Regs used in _SET_DUTY_CCP3: [wreg+fsr1l+fsr1h+status,2+status,0]
  3937                           ;SET_DUTY_CCP3@duty_ptr stored from wreg
  3938     0756  00F9               	movwf	SET_DUTY_CCP3@duty_ptr
  3939                           
  3940                           ;main.c: 217:     CCPR3L = (uint8_t)(*duty_ptr >> 2);
  3941     0757  0879               	movf	SET_DUTY_CCP3@duty_ptr,w
  3942     0758  0086               	movwf	6
  3943     0759  0187               	clrf	7
  3944     075A  3F40               	moviw [0]fsr1
  3945     075B  00F6               	movwf	??_SET_DUTY_CCP3
  3946     075C  3F41               	moviw [1]fsr1
  3947     075D  00F7               	movwf	??_SET_DUTY_CCP3+1
  3948     075E  36F7               	lsrf	??_SET_DUTY_CCP3+1,f
  3949     075F  0CF6               	rrf	??_SET_DUTY_CCP3,f
  3950     0760  36F7               	lsrf	??_SET_DUTY_CCP3+1,f
  3951     0761  0CF6               	rrf	??_SET_DUTY_CCP3,f
  3952     0762  0876               	movf	??_SET_DUTY_CCP3,w
  3953     0763  0026               	movlb	6	; select bank6
  3954     0764  0091               	movwf	17	;volatile
  3955                           
  3956                           ;main.c: 218:     uint8_t temp = *duty_ptr % 0b100;
  3957     0765  0879               	movf	SET_DUTY_CCP3@duty_ptr,w
  3958     0766  0086               	movwf	6
  3959     0767  0187               	clrf	7
  3960     0768  0801               	movf	1,w
  3961     0769  3903               	andlw	3
  3962     076A  00F8               	movwf	SET_DUTY_CCP3@temp
  3963                           
  3964                           ;main.c: 219:     CCP3CON = CCP3CON | ((uint8_t)(temp << 4));
  3965     076B  0878               	movf	SET_DUTY_CCP3@temp,w
  3966     076C  00F6               	movwf	??_SET_DUTY_CCP3
  3967     076D  3003               	movlw	3
  3968     076E                     u74_25:
  3969     076E  35F6               	lslf	??_SET_DUTY_CCP3,f
  3970     076F  3EFF               	addlw	-1
  3971     0770  1D03               	skipz
  3972     0771  2F6E               	goto	u74_25
  3973     0772  3576               	lslf	??_SET_DUTY_CCP3,w
  3974     0773  0413               	iorwf	19,w	;volatile
  3975     0774  0093               	movwf	19	;volatile
  3976     0775  0008               	return
  3977     0776                     __end_of_SET_DUTY_CCP3:
  3978     007E                     btemp	set	126	;btemp
  3979     007E                     int$flags	set	126
  3980     007E                     wtemp0	set	126
  3981                           
  3982                           	psect	config
  3983                           
  3984                           ;Config register CONFIG1 @ 0x8007
  3985                           ;	Oscillator Selection
  3986                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  3987                           ;	Watchdog Timer Enable
  3988                           ;	WDTE = OFF, WDT disabled
  3989                           ;	Power-up Timer Enable
  3990                           ;	PWRTE = OFF, PWRT disabled
  3991                           ;	MCLR Pin Function Select
  3992                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  3993                           ;	Flash Program Memory Code Protection
  3994                           ;	CP = OFF, Program memory code protection is disabled
  3995                           ;	Data Memory Code Protection
  3996                           ;	CPD = OFF, Data memory code protection is disabled
  3997                           ;	Brown-out Reset Enable
  3998                           ;	BOREN = OFF, Brown-out Reset disabled
  3999                           ;	Clock Out Enable
  4000                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  4001                           ;	Internal/External Switchover
  4002                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4003                           ;	Fail-Safe Clock Monitor Enable
  4004                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4005     8007                     	org	32775
  4006     8007  09E4               	dw	2532
  4007                           
  4008                           ;Config register CONFIG2 @ 0x8008
  4009                           ;	Flash Memory Self-Write Protection
  4010                           ;	WRT = OFF, Write protection off
  4011                           ;	PLL Enable
  4012                           ;	PLLEN = ON, 4x PLL enabled
  4013                           ;	Stack Overflow/Underflow Reset Enable
  4014                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  4015                           ;	Brown-out Reset Voltage Selection
  4016                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  4017                           ;	In-Circuit Debugger Mode
  4018                           ;	DEBUG = ON, In-Circuit Debugger enabled, ICSPCLK and ICSPDAT are dedicated to the debu
      +                          gger
  4019                           ;	Low-Voltage Programming Enable
  4020                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  4021     8008                     	org	32776
  4022     8008  0FFF               	dw	4095

Data Sizes:
    Strings     0
    Constant    924
    Data        2
    BSS         46
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     29      71
    BANK1            80      0       0
    BANK2            64      0       0

Pointer List with Targets:

    DO_ADC@modifier	PTR const unsigned char  size(2) Largest target is 1
		 -> depth_adc_config_value(CODE[1]), speed_adc_config_value(CODE[1]), symmetry_adc_config_value(CODE[1]), waveshape_adc_config_value(CODE[1]), 

    SET_DUTY_CCP3@duty_ptr	PTR volatile unsigned short  size(1) Largest target is 2
		 -> duty(COMMON[2]), 

    TMR0_WRITE@timer_value_ptr	PTR volatile unsigned char  size(1) Largest target is 1
		 -> final_TMR0(COMMON[1]), 

    top_two_bytes_ptr	PTR unsigned short  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_SET_DUTY_CCP3

Critical Paths under _main in BANK0

    _main->_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST
    _PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST->_SHORTEN_PERIOD
    _SHORTEN_PERIOD->___lmul
    _LENGTHEN_PERIOD->___lmul
    _PROCESS_RAW_SPEED_AND_PRESCALER->___lmul
    _GET_CURRENT_POT_VALUES->_DETERMINE_WAVESHAPE
    _DETERMINE_WAVESHAPE->_DO_ADC

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    5171
                      _CONFIG_SYSTEM
              _CONFIG_TMR0_INTERRUPT
             _GET_CURRENT_POT_VALUES
  _PROCESS_FINAL_SPEED_AND_PRESCALER
    _PROCESS_RAW_SPEED_AND_PRESCALER
_PROCESS_TMR0_OFFSET_AND_PRESCALER_A
                         _TMR0_WRITE
                   _TURN_ON_CCP3_PWM
 ---------------------------------------------------------------------------------
 (1) _TURN_ON_CCP3_PWM                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_WRITE                                           1     1      0      55
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST             9     9      0    3147
                                             20 BANK0      9     9      0
                    _LENGTHEN_PERIOD
                     _SHORTEN_PERIOD
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) _SHORTEN_PERIOD                                       8     8      0    1175
                                             12 BANK0      8     8      0
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) _LENGTHEN_PERIOD                                      6     6      0     952
                                             12 BANK0      6     6      0
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) _PROCESS_RAW_SPEED_AND_PRESCALER                      6     6      0     921
                                             12 BANK0      6     6      0
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     856
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) _PROCESS_FINAL_SPEED_AND_PRESCALER                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GET_CURRENT_POT_VALUES                               3     3      0    1048
                                              8 BANK0      2     2      0
                _DETERMINE_WAVESHAPE
                             _DO_ADC
 ---------------------------------------------------------------------------------
 (2) _DETERMINE_WAVESHAPE                                  2     2      0     555
                                              6 BANK0      2     2      0
                             _DO_ADC
 ---------------------------------------------------------------------------------
 (2) _DO_ADC                                               6     4      2     459
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _CONFIG_TMR0_INTERRUPT                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CONFIG_SYSTEM                                        0     0      0       0
                    _CONFIG_ADC_PINS
                     _CONFIG_INT_OSC
                       _CONFIG_PORTS
                    _CONFIG_PWM_CCP3
 ---------------------------------------------------------------------------------
 (2) _CONFIG_PWM_CCP3                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CONFIG_PORTS                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CONFIG_INT_OSC                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CONFIG_ADC_PINS                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           2     2      0     100
                                              4 COMMON     2     2      0
                      _SET_DUTY_CCP3
 ---------------------------------------------------------------------------------
 (5) _SET_DUTY_CCP3                                        4     4      0     100
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CONFIG_SYSTEM
     _CONFIG_ADC_PINS
     _CONFIG_INT_OSC
     _CONFIG_PORTS
     _CONFIG_PWM_CCP3
   _CONFIG_TMR0_INTERRUPT
   _GET_CURRENT_POT_VALUES
     _DETERMINE_WAVESHAPE
       _DO_ADC
     _DO_ADC
   _PROCESS_FINAL_SPEED_AND_PRESCALER
   _PROCESS_RAW_SPEED_AND_PRESCALER
     ___lmul
   _PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST
     _LENGTHEN_PERIOD
       ___lmul
     _SHORTEN_PERIOD
       ___lmul
     ___lmul
   _TMR0_WRITE
   _TURN_ON_CCP3_PWM

 _INTERRUPT_InterruptManager (ROOT)
   _SET_DUTY_CCP3

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              E0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      53       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     1D      47       6       88.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            40      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               40      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      53      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Wed Jan 24 14:58:52 2024

                                                      r1 0020  
                                                      r2 0021  
                                                      r3 0022  
                                                     _NO 07CA  
                                                    l205 0600  
                                                    l158 06F9  
                                                    l177 07A8  
                                                    _GIE 005F  
                                                    _PR2 001B  
                                                    _YES 07CB  
                                                    wreg 0009  
                                                   l1622 074D  
                                                   l1702 0676  
                                                   l1616 0744  
                                                   _C1ON 088F  
                                                   l1618 074B  
                                                   l1660 042C  
                                                   l1820 0573  
                                                   l1582 06B5  
                                                   l1670 0440  
                                                   l1822 0576  
                                                   l1814 0566  
                                                   l1806 052A  
                                                   l1752 05C9  
                                                   l1824 0570  
                                                   l1816 0569  
                                                   l1586 06BF  
                                                   l1780 062C  
                                                   l1772 060E  
                                                   l1764 05F7  
                                                   l1676 0471  
                                                   l1828 0579  
                                                   l1766 05FA  
                                                   l1854 0722  
                                                   l1776 061D  
                                                   l1798 0516  
                                                   _ADON 04E8  
                                                   u1115 06C0  
                                                   u1125 06C7  
                                                   u1215 0460  
                                                   u1305 05D4  
                                                   u1315 05E2  
                                                   u1235 0476  
                                                   u1085 06E6  
                                                   u1255 0656  
                                                   u1175 040D  
                                                   u1265 0669  
                                                   u1425 0552  
                                                   u1517 06F4  
                                                   u1285 05AA  
                                                   _TMR0 0015  
                                                   _WPUC 020E  
                                      _current_speed_log 0036  
                                                   _main 0708  
                                                   _duty 0073  
                                                   fsr0h 0005  
                                                   fsr1h 0007  
                                                   indf0 0000  
                                                   fsr0l 0004  
                                                   indf1 0001  
                                                   fsr1l 0006  
                                                   btemp 007E  
                                      _current_waveshape 0072  
                                                   start 00D0  
                                  _CONFIG_TMR0_INTERRUPT 07C8  
                                       __end_of_NEGATIVE 07D2  
                                   __end_of_CONFIG_PORTS 079E  
                                                  STATUS 0003  
                                                  ?_main 0076  
                                                  _T2CON 001C  
                                                  _LATC5 0875  
                                                  i1l262 00CE  
                                                  i1l258 005B  
                                                  i1l259 0068  
                                                  _SRLEN 08D7  
                                                  _TRISC 008E  
                                                  u74_25 076E  
                                            ?_TMR0_WRITE 0076  
                       __end_of_shorten_period_log_table 01ED  
                                    ___lmul@multiplicand 004C  
                                       __end_of_POSITIVE 07D3  
                               ??_GET_CURRENT_POT_VALUES 0050  
                                                  status 0003  
                                                  wtemp0 007E  
                             _current_one_quadrant_index 0071  
                                        __initialization 00D2  
                             LENGTHEN_PERIOD@dTMR0_ideal 0058  
                                           __end_of_main 072F  
       __end_of_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST 0580  
             ??_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST 005C  
              ?_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST 0076  
               _PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST 050B  
                            ?_INTERRUPT_InterruptManager 0076  
                                      __end_of_DONT_CARE 07CD  
                                                 ??_main 0065  
                                  __end_of_DIVIDE_BY_TWO 07D0  
                                 _speed_adc_config_value 07D5  
                                  __end_of_CONFIG_SYSTEM 0795  
                                                 _ADCON0 009D  
                                                 _ADCON1 009E  
                                                 _ADRESH 009C  
                                                 _ADRESL 009B  
                                                 _CCPR3L 0311  
                                                 _ANSELC 018E  
                                                 _DO_ADC 06DC  
                                                 i1l1500 0035  
                                                 i1l1504 003D  
                                                 i1l1530 00C4  
                                                 i1l1522 0059  
                                                 i1l1516 004F  
                                                 i1l1508 0044  
                                                 i1l1518 0050  
                                                 i1l1496 0022  
                                                 _OSCCON 0099  
                                                 _TMR0IE 005D  
                                                 _TMR0IF 005A  
                                                 _TMR2IF 0089  
                                                 _TMR2ON 00E2  
                                                 _TRISA2 0462  
                                 ?_CONFIG_TMR0_INTERRUPT 0076  
                                         DO_ADC@modifier 0048  
                            __end_of_DETERMINE_WAVESHAPE 0756  
                      __end_of_symmetry_adc_config_value 07D4  
                                                 ___lmul 06AD  
                                  __end_of_SET_DUTY_CCP3 0776  
                                      ?_TURN_ON_CCP3_PWM 0076  
                                      ??_CONFIG_ADC_PINS 0048  
                                _current_speed_linear_32 0028  
                                     ??_TURN_ON_CCP3_PWM 0048  
                                __end_of__initialization 00E7  
                                         _SHORTEN_PERIOD 03F1  
                                         _DIVIDE_BY_FOUR 07CD  
                                         _CONFIG_INT_OSC 07BC  
                                         __pcstackCOMMON 0076  
                                           __pidataBANK0 07C6  
                                            _dTMR0_ideal 0030  
                                             __end_of_NO 07CB  
                                 _tri_table_one_quadrant 01ED  
                                      ??_CONFIG_PWM_CCP3 0048  
                                      _top_two_bytes_ptr 0065  
                                          _current_depth 0034  
                                             __pbssBANK0 0020  
                                                ?_DO_ADC 0048  
                                 __end_of_SHORTEN_PERIOD 048A  
                                           _CONFIG_PORTS 0795  
                                 __end_of_DIVIDE_BY_FOUR 07CE  
                                 __end_of_CONFIG_INT_OSC 07C2  
                                     __end_of_DO_NOTHING 07D1  
                                             __pmaintext 0708  
                                 _GET_CURRENT_POT_VALUES 067C  
                                                ?___lmul 0048  
                                             __pintentry 0004  
PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST@symmetry_status 0064  
                                                _CCP3CON 0313  
                                         ___lmul@product 0050  
                                             _final_TMR0 0075  
                                           ??_TMR0_WRITE 0048  
                                  SET_DUTY_CCP3@duty_ptr 0079  
                                                _OSCTUNE 0098  
                                _sine_table_one_quadrant 02EF  
                              TMR0_WRITE@timer_value_ptr 0048  
                                        ?_SHORTEN_PERIOD 0076  
              __end_of_PROCESS_FINAL_SPEED_AND_PRESCALER 063A  
                    ??_PROCESS_FINAL_SPEED_AND_PRESCALER 0048  
                     ?_PROCESS_FINAL_SPEED_AND_PRESCALER 0076  
                      _PROCESS_FINAL_SPEED_AND_PRESCALER 05ED  
                                        ?_CONFIG_INT_OSC 0076  
                                   _current_speed_log_32 0024  
                                     __end_of_TMR0_WRITE 07B6  
                                   _current_speed_linear 0038  
                              _base_prescaler_bits_index 0070  
                                                __ptext1 07A6  
                                                __ptext2 07AE  
                                                __ptext3 050B  
                                                __ptext4 03F1  
                                                __ptext5 063A  
                                                __ptext6 0580  
                                                __ptext7 06AD  
                                                __ptext8 05ED  
                                                __ptext9 067C  
                                        _MULTIPLY_BY_TWO 07CE  
                __end_of_PROCESS_RAW_SPEED_AND_PRESCALER 05ED  
                      ??_PROCESS_RAW_SPEED_AND_PRESCALER 0054  
                       ?_PROCESS_RAW_SPEED_AND_PRESCALER 0076  
                        _PROCESS_RAW_SPEED_AND_PRESCALER 0580  
                                              _DONT_CARE 07CC  
                                                clrloop0 07B7  
                                   end_of_initialization 00E7  
                                ??_CONFIG_TMR0_INTERRUPT 0048  
                                          _duty_low_byte 0047  
                         __end_of_speed_adc_config_value 07D6  
                                 _depth_adc_config_value 07D4  
                                        _CONFIG_ADC_PINS 07C2  
                                       _TMR0_offset_sign 0042  
                                      ??_LENGTHEN_PERIOD 0054  
                              _lengthen_period_log_table 048A  
                                             DO_ADC@temp 004D  
                                         __end_of_DO_ADC 0708  
                                      SET_DUTY_CCP3@temp 0078  
                                       _current_quadrant 0044  
                                __end_of_MULTIPLY_BY_TWO 07CF  
                                        _CONFIG_PWM_CCP3 0776  
                                       _current_symmetry 0032  
                                         __end_of___lmul 06DC  
                                    start_initialization 00D2  
                                            __end_of_YES 07CC  
                                               ??_DO_ADC 004A  
                                ?_GET_CURRENT_POT_VALUES 0076  
                        __end_of_sine_table_one_quadrant 03F1  
                                __end_of_CONFIG_ADC_PINS 07C6  
                                               ??___lmul 0050  
                         __end_of_tri_table_one_quadrant 02EF  
                                            __pdataBANK0 0065  
                                       DO_ADC@adc_result 004B  
                                            __pbssCOMMON 0070  
                                              ___latbits 0001  
                                          _DIVIDE_BY_TWO 07CF  
                                          __pcstackBANK0 0048  
                                       ??_SHORTEN_PERIOD 0054  
                                          _CONFIG_SYSTEM 0789  
                                       ??_CONFIG_INT_OSC 0048  
                         __end_of_GET_CURRENT_POT_VALUES 06AD  
                               _shorten_period_log_table 00EB  
                                __end_of_CONFIG_PWM_CCP3 0789  
                                         _prescaler_bits 079E  
                           ??_INTERRUPT_InterruptManager 007A  
                                           _how_many_128 003A  
                                          _SET_DUTY_CCP3 0756  
                                               _CCPTMRS0 029E  
                                         ?_CONFIG_SYSTEM 0076  
                                       _prescaler_adjust 0041  
                                        _symmetry_status 003E  
                                               _NEGATIVE 07D1  
                     __end_of_waveshape_adc_config_value 07D7  
                             _waveshape_adc_config_value 07D6  
                          __end_of_CONFIG_TMR0_INTERRUPT 07CA  
                                              clear_ram0 07B6  
                                               _GO_nDONE 04E9  
                                       _TURN_ON_CCP3_PWM 07A6  
                                 __end_of_prescaler_bits 07A6  
                                       ?_CONFIG_ADC_PINS 0076  
                                               _POSITIVE 07D2  
                                        _LENGTHEN_PERIOD 063A  
                                         ?_SET_DUTY_CCP3 0076  
                                      _clear_TMR0_please 003F  
                           SHORTEN_PERIOD@TMR0_raw_extra 005A  
                                      ___lmul@multiplier 0048  
                                    _DETERMINE_WAVESHAPE 072F  
                                 DETERMINE_WAVESHAPE@ADC 004E  
                                       ?_CONFIG_PWM_CCP3 0076  
                         __end_of_depth_adc_config_value 07D5  
                      __end_of_lengthen_period_log_table 050B  
           PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST@temp 0060  
                                   ?_DETERMINE_WAVESHAPE 0076  
                                        ??_CONFIG_SYSTEM 0048  
                                       _speed_control_32 002C  
                                               __ptext10 072F  
                                               __ptext11 06DC  
                                               __ptext12 07C8  
                                               __ptext13 0789  
                                               __ptext14 0776  
                                               __ptext15 0795  
                                               __ptext16 07BC  
                                               __ptext17 07C2  
                                               __ptext19 0756  
PROCESS_RAW_SPEED_AND_PRESCALER@speed_control_subtracted 0058  
                                          ?_CONFIG_PORTS 0076  
                                         _duty_high_byte 0046  
                                          _speed_control 003C  
                                               _raw_TMR0 0040  
                                         _symmetry_total 0020  
                                __end_of_LENGTHEN_PERIOD 067C  
                                               int$flags 007E  
                                  ??_DETERMINE_WAVESHAPE 004E  
                     __end_of_INTERRUPT_InterruptManager 00D0  
                             _INTERRUPT_InterruptManager 0004  
                                        ??_SET_DUTY_CCP3 0076  
                                             _DO_NOTHING 07D0  
                                         __pstringtext10 07CE  
                                         __pstringtext11 07CF  
                                         __pstringtext12 07D0  
                                         __pstringtext13 07D1  
                                         __pstringtext14 07D2  
                                         __pstringtext15 07D3  
                                         __pstringtext16 07D4  
                                         __pstringtext17 07D5  
                                         __pstringtext18 07D6  
                              _symmetry_adc_config_value 07D3  
                                         ??_CONFIG_PORTS 0048  
                                               intlevel1 0000  
                                          __pstringtext1 00EB  
                                          __pstringtext2 01ED  
                                          __pstringtext3 02EF  
                                          __pstringtext4 048A  
                                          __pstringtext5 079E  
                                          __pstringtext6 07CA  
                                          __pstringtext7 07CB  
                                          __pstringtext8 07CC  
                                          __pstringtext9 07CD  
                                            _TMR0_offset 0043  
                                             _OPTION_REG 0095  
                                             _TMR0_WRITE 07AE  
                              SHORTEN_PERIOD@dTMR0_ideal 0058  
                               __end_of_TURN_ON_CCP3_PWM 07AE  
                                      _current_halfcycle 0045  
                                       ?_LENGTHEN_PERIOD 0076  
