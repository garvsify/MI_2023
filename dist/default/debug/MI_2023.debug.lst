

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Wed Jan 24 17:47:29 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og9 
     1                           	processor	16F1824
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    15                           	psect	stringtext11,global,class=STRCODE,delta=2,noexec
    16                           	psect	stringtext12,global,class=STRCODE,delta=2,noexec
    17                           	psect	stringtext13,global,class=STRCODE,delta=2,noexec
    18                           	psect	stringtext14,global,class=STRCODE,delta=2,noexec
    19                           	psect	stringtext15,global,class=STRCODE,delta=2,noexec
    20                           	psect	stringtext16,global,class=STRCODE,delta=2,noexec
    21                           	psect	cinit,global,class=CODE,merge=1,delta=2
    22                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    23                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    24                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    25                           	psect	clrtext,global,class=CODE,delta=2
    26                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    27                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    28                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    29                           	psect	text1,local,class=CODE,merge=1,delta=2
    30                           	psect	text2,local,class=CODE,merge=1,delta=2
    31                           	psect	text3,local,class=CODE,merge=1,delta=2
    32                           	psect	text4,local,class=CODE,merge=1,delta=2
    33                           	psect	text5,local,class=CODE,merge=1,delta=2
    34                           	psect	text6,local,class=CODE,merge=1,delta=2
    35                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text8,local,class=CODE,merge=1,delta=2
    37                           	psect	text9,local,class=CODE,merge=1,delta=2
    38                           	psect	text10,local,class=CODE,merge=1,delta=2
    39                           	psect	text11,local,class=CODE,merge=1,delta=2
    40                           	psect	text12,local,class=CODE,merge=1,delta=2
    41                           	psect	text13,local,class=CODE,merge=1,delta=2
    42                           	psect	text14,local,class=CODE,merge=1,delta=2
    43                           	psect	text15,local,class=CODE,merge=1,delta=2
    44                           	psect	text16,local,class=CODE,merge=1,delta=2
    45                           	psect	text17,local,class=CODE,merge=1,delta=2
    46                           	psect	text18,local,class=CODE,merge=1,delta=2
    47                           	psect	text19,local,class=CODE,merge=1,delta=2
    48                           	psect	text20,local,class=CODE,merge=1,delta=2
    49                           	psect	intentry,global,class=CODE,delta=2
    50                           	psect	text22,local,class=CODE,merge=1,delta=2
    51                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    52                           	dabs	1,0x7E,2
    53     0000                     
    54                           ; Generated 06/07/2023 GMT
    55                           ; 
    56                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    57                           ; All rights reserved.
    58                           ; 
    59                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    60                           ; 
    61                           ; Redistribution and use in source and binary forms, with or without modification, are
    62                           ; permitted provided that the following conditions are met:
    63                           ; 
    64                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    65                           ;        conditions and the following disclaimer.
    66                           ; 
    67                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    68                           ;        of conditions and the following disclaimer in the documentation and/or other
    69                           ;        materials provided with the distribution. Publication is not required when
    70                           ;        this file is used in an embedded application.
    71                           ; 
    72                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    73                           ;        software without specific prior written permission.
    74                           ; 
    75                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    76                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    77                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    78                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    79                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    80                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    81                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    82                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    83                           ; 
    84                           ; 
    85                           ; Code-generator required, PIC16F1824 Definitions
    86                           ; 
    87                           ; SFR Addresses
    88     0000                     	;# 
    89     0001                     	;# 
    90     0002                     	;# 
    91     0003                     	;# 
    92     0004                     	;# 
    93     0005                     	;# 
    94     0006                     	;# 
    95     0007                     	;# 
    96     0008                     	;# 
    97     0009                     	;# 
    98     000A                     	;# 
    99     000B                     	;# 
   100     000C                     	;# 
   101     000E                     	;# 
   102     0011                     	;# 
   103     0012                     	;# 
   104     0013                     	;# 
   105     0015                     	;# 
   106     0016                     	;# 
   107     0016                     	;# 
   108     0017                     	;# 
   109     0018                     	;# 
   110     0019                     	;# 
   111     001A                     	;# 
   112     001B                     	;# 
   113     001C                     	;# 
   114     001E                     	;# 
   115     001F                     	;# 
   116     008C                     	;# 
   117     008E                     	;# 
   118     0091                     	;# 
   119     0092                     	;# 
   120     0093                     	;# 
   121     0095                     	;# 
   122     0096                     	;# 
   123     0097                     	;# 
   124     0098                     	;# 
   125     0099                     	;# 
   126     009A                     	;# 
   127     009B                     	;# 
   128     009B                     	;# 
   129     009C                     	;# 
   130     009D                     	;# 
   131     009E                     	;# 
   132     010C                     	;# 
   133     010E                     	;# 
   134     0111                     	;# 
   135     0112                     	;# 
   136     0113                     	;# 
   137     0114                     	;# 
   138     0115                     	;# 
   139     0116                     	;# 
   140     0117                     	;# 
   141     0118                     	;# 
   142     0119                     	;# 
   143     011A                     	;# 
   144     011B                     	;# 
   145     011D                     	;# 
   146     011E                     	;# 
   147     018C                     	;# 
   148     018E                     	;# 
   149     0191                     	;# 
   150     0191                     	;# 
   151     0192                     	;# 
   152     0193                     	;# 
   153     0193                     	;# 
   154     0193                     	;# 
   155     0194                     	;# 
   156     0195                     	;# 
   157     0196                     	;# 
   158     0199                     	;# 
   159     019A                     	;# 
   160     019B                     	;# 
   161     019B                     	;# 
   162     019B                     	;# 
   163     019B                     	;# 
   164     019C                     	;# 
   165     019C                     	;# 
   166     019D                     	;# 
   167     019E                     	;# 
   168     019F                     	;# 
   169     020C                     	;# 
   170     020E                     	;# 
   171     0211                     	;# 
   172     0211                     	;# 
   173     0212                     	;# 
   174     0212                     	;# 
   175     0213                     	;# 
   176     0213                     	;# 
   177     0214                     	;# 
   178     0214                     	;# 
   179     0215                     	;# 
   180     0215                     	;# 
   181     0215                     	;# 
   182     0215                     	;# 
   183     0216                     	;# 
   184     0216                     	;# 
   185     0217                     	;# 
   186     0217                     	;# 
   187     0291                     	;# 
   188     0291                     	;# 
   189     0292                     	;# 
   190     0293                     	;# 
   191     0294                     	;# 
   192     0295                     	;# 
   193     0295                     	;# 
   194     0296                     	;# 
   195     0298                     	;# 
   196     0298                     	;# 
   197     0299                     	;# 
   198     029A                     	;# 
   199     029B                     	;# 
   200     029C                     	;# 
   201     029D                     	;# 
   202     029E                     	;# 
   203     029E                     	;# 
   204     0311                     	;# 
   205     0311                     	;# 
   206     0312                     	;# 
   207     0313                     	;# 
   208     0318                     	;# 
   209     0318                     	;# 
   210     0319                     	;# 
   211     031A                     	;# 
   212     038C                     	;# 
   213     038E                     	;# 
   214     0391                     	;# 
   215     0392                     	;# 
   216     0393                     	;# 
   217     039A                     	;# 
   218     039C                     	;# 
   219     039D                     	;# 
   220     039E                     	;# 
   221     039F                     	;# 
   222     0415                     	;# 
   223     0416                     	;# 
   224     0417                     	;# 
   225     041C                     	;# 
   226     041D                     	;# 
   227     041E                     	;# 
   228     0FE4                     	;# 
   229     0FE5                     	;# 
   230     0FE6                     	;# 
   231     0FE7                     	;# 
   232     0FE8                     	;# 
   233     0FE9                     	;# 
   234     0FEA                     	;# 
   235     0FEB                     	;# 
   236     0FED                     	;# 
   237     0FEE                     	;# 
   238     0FEF                     	;# 
   239     0020                     	;# 
   240     0021                     	;# 
   241     0022                     	;# 
   242     0023                     	;# 
   243     0024                     	;# 
   244     0025                     	;# 
   245     0000                     	;# 
   246     0001                     	;# 
   247     0002                     	;# 
   248     0003                     	;# 
   249     0004                     	;# 
   250     0005                     	;# 
   251     0006                     	;# 
   252     0007                     	;# 
   253     0008                     	;# 
   254     0009                     	;# 
   255     000A                     	;# 
   256     000B                     	;# 
   257     000C                     	;# 
   258     000E                     	;# 
   259     0011                     	;# 
   260     0012                     	;# 
   261     0013                     	;# 
   262     0015                     	;# 
   263     0016                     	;# 
   264     0016                     	;# 
   265     0017                     	;# 
   266     0018                     	;# 
   267     0019                     	;# 
   268     001A                     	;# 
   269     001B                     	;# 
   270     001C                     	;# 
   271     001E                     	;# 
   272     001F                     	;# 
   273     008C                     	;# 
   274     008E                     	;# 
   275     0091                     	;# 
   276     0092                     	;# 
   277     0093                     	;# 
   278     0095                     	;# 
   279     0096                     	;# 
   280     0097                     	;# 
   281     0098                     	;# 
   282     0099                     	;# 
   283     009A                     	;# 
   284     009B                     	;# 
   285     009B                     	;# 
   286     009C                     	;# 
   287     009D                     	;# 
   288     009E                     	;# 
   289     010C                     	;# 
   290     010E                     	;# 
   291     0111                     	;# 
   292     0112                     	;# 
   293     0113                     	;# 
   294     0114                     	;# 
   295     0115                     	;# 
   296     0116                     	;# 
   297     0117                     	;# 
   298     0118                     	;# 
   299     0119                     	;# 
   300     011A                     	;# 
   301     011B                     	;# 
   302     011D                     	;# 
   303     011E                     	;# 
   304     018C                     	;# 
   305     018E                     	;# 
   306     0191                     	;# 
   307     0191                     	;# 
   308     0192                     	;# 
   309     0193                     	;# 
   310     0193                     	;# 
   311     0193                     	;# 
   312     0194                     	;# 
   313     0195                     	;# 
   314     0196                     	;# 
   315     0199                     	;# 
   316     019A                     	;# 
   317     019B                     	;# 
   318     019B                     	;# 
   319     019B                     	;# 
   320     019B                     	;# 
   321     019C                     	;# 
   322     019C                     	;# 
   323     019D                     	;# 
   324     019E                     	;# 
   325     019F                     	;# 
   326     020C                     	;# 
   327     020E                     	;# 
   328     0211                     	;# 
   329     0211                     	;# 
   330     0212                     	;# 
   331     0212                     	;# 
   332     0213                     	;# 
   333     0213                     	;# 
   334     0214                     	;# 
   335     0214                     	;# 
   336     0215                     	;# 
   337     0215                     	;# 
   338     0215                     	;# 
   339     0215                     	;# 
   340     0216                     	;# 
   341     0216                     	;# 
   342     0217                     	;# 
   343     0217                     	;# 
   344     0291                     	;# 
   345     0291                     	;# 
   346     0292                     	;# 
   347     0293                     	;# 
   348     0294                     	;# 
   349     0295                     	;# 
   350     0295                     	;# 
   351     0296                     	;# 
   352     0298                     	;# 
   353     0298                     	;# 
   354     0299                     	;# 
   355     029A                     	;# 
   356     029B                     	;# 
   357     029C                     	;# 
   358     029D                     	;# 
   359     029E                     	;# 
   360     029E                     	;# 
   361     0311                     	;# 
   362     0311                     	;# 
   363     0312                     	;# 
   364     0313                     	;# 
   365     0318                     	;# 
   366     0318                     	;# 
   367     0319                     	;# 
   368     031A                     	;# 
   369     038C                     	;# 
   370     038E                     	;# 
   371     0391                     	;# 
   372     0392                     	;# 
   373     0393                     	;# 
   374     039A                     	;# 
   375     039C                     	;# 
   376     039D                     	;# 
   377     039E                     	;# 
   378     039F                     	;# 
   379     0415                     	;# 
   380     0416                     	;# 
   381     0417                     	;# 
   382     041C                     	;# 
   383     041D                     	;# 
   384     041E                     	;# 
   385     0FE4                     	;# 
   386     0FE5                     	;# 
   387     0FE6                     	;# 
   388     0FE7                     	;# 
   389     0FE8                     	;# 
   390     0FE9                     	;# 
   391     0FEA                     	;# 
   392     0FEB                     	;# 
   393     0FED                     	;# 
   394     0FEE                     	;# 
   395     0FEF                     	;# 
   396                           
   397                           	psect	idataBANK0
   398     0639                     __pidataBANK0:
   399                           
   400                           ;initializer for _top_two_bytes_ptr
   401     0639  3421               	retlw	33
   402     063A  3400               	retlw	0
   403                           
   404                           	psect	stringtext1
   405     00EA                     __pstringtext1:
   406     00EA                     _tri_table_one_quadrant:
   407     00EA  3400               	retlw	0
   408     00EB  3402               	retlw	2
   409     00EC  3404               	retlw	4
   410     00ED  3402               	retlw	2
   411     00EE  3408               	retlw	8
   412     00EF  3402               	retlw	2
   413     00F0  340C               	retlw	12
   414     00F1  3402               	retlw	2
   415     00F2  3410               	retlw	16
   416     00F3  3402               	retlw	2
   417     00F4  3414               	retlw	20
   418     00F5  3402               	retlw	2
   419     00F6  3418               	retlw	24
   420     00F7  3402               	retlw	2
   421     00F8  341C               	retlw	28
   422     00F9  3402               	retlw	2
   423     00FA  3420               	retlw	32
   424     00FB  3402               	retlw	2
   425     00FC  3424               	retlw	36
   426     00FD  3402               	retlw	2
   427     00FE  3428               	retlw	40
   428     00FF  3402               	retlw	2
   429     0100  342C               	retlw	44
   430     0101  3402               	retlw	2
   431     0102  3430               	retlw	48
   432     0103  3402               	retlw	2
   433     0104  3434               	retlw	52
   434     0105  3402               	retlw	2
   435     0106  3438               	retlw	56
   436     0107  3402               	retlw	2
   437     0108  343C               	retlw	60
   438     0109  3402               	retlw	2
   439     010A  3440               	retlw	64
   440     010B  3402               	retlw	2
   441     010C  3444               	retlw	68
   442     010D  3402               	retlw	2
   443     010E  3448               	retlw	72
   444     010F  3402               	retlw	2
   445     0110  344C               	retlw	76
   446     0111  3402               	retlw	2
   447     0112  3450               	retlw	80
   448     0113  3402               	retlw	2
   449     0114  3454               	retlw	84
   450     0115  3402               	retlw	2
   451     0116  3458               	retlw	88
   452     0117  3402               	retlw	2
   453     0118  345C               	retlw	92
   454     0119  3402               	retlw	2
   455     011A  3460               	retlw	96
   456     011B  3402               	retlw	2
   457     011C  3464               	retlw	100
   458     011D  3402               	retlw	2
   459     011E  3468               	retlw	104
   460     011F  3402               	retlw	2
   461     0120  346C               	retlw	108
   462     0121  3402               	retlw	2
   463     0122  3470               	retlw	112
   464     0123  3402               	retlw	2
   465     0124  3474               	retlw	116
   466     0125  3402               	retlw	2
   467     0126  3478               	retlw	120
   468     0127  3402               	retlw	2
   469     0128  347C               	retlw	124
   470     0129  3402               	retlw	2
   471     012A  3480               	retlw	128
   472     012B  3402               	retlw	2
   473     012C  3484               	retlw	132
   474     012D  3402               	retlw	2
   475     012E  3488               	retlw	136
   476     012F  3402               	retlw	2
   477     0130  348C               	retlw	140
   478     0131  3402               	retlw	2
   479     0132  3490               	retlw	144
   480     0133  3402               	retlw	2
   481     0134  3494               	retlw	148
   482     0135  3402               	retlw	2
   483     0136  3498               	retlw	152
   484     0137  3402               	retlw	2
   485     0138  349C               	retlw	156
   486     0139  3402               	retlw	2
   487     013A  34A0               	retlw	160
   488     013B  3402               	retlw	2
   489     013C  34A4               	retlw	164
   490     013D  3402               	retlw	2
   491     013E  34A8               	retlw	168
   492     013F  3402               	retlw	2
   493     0140  34AC               	retlw	172
   494     0141  3402               	retlw	2
   495     0142  34B0               	retlw	176
   496     0143  3402               	retlw	2
   497     0144  34B4               	retlw	180
   498     0145  3402               	retlw	2
   499     0146  34B8               	retlw	184
   500     0147  3402               	retlw	2
   501     0148  34BC               	retlw	188
   502     0149  3402               	retlw	2
   503     014A  34C0               	retlw	192
   504     014B  3402               	retlw	2
   505     014C  34C4               	retlw	196
   506     014D  3402               	retlw	2
   507     014E  34C8               	retlw	200
   508     014F  3402               	retlw	2
   509     0150  34CC               	retlw	204
   510     0151  3402               	retlw	2
   511     0152  34D0               	retlw	208
   512     0153  3402               	retlw	2
   513     0154  34D4               	retlw	212
   514     0155  3402               	retlw	2
   515     0156  34D8               	retlw	216
   516     0157  3402               	retlw	2
   517     0158  34DC               	retlw	220
   518     0159  3402               	retlw	2
   519     015A  34E0               	retlw	224
   520     015B  3402               	retlw	2
   521     015C  34E4               	retlw	228
   522     015D  3402               	retlw	2
   523     015E  34E8               	retlw	232
   524     015F  3402               	retlw	2
   525     0160  34EC               	retlw	236
   526     0161  3402               	retlw	2
   527     0162  34F0               	retlw	240
   528     0163  3402               	retlw	2
   529     0164  34F4               	retlw	244
   530     0165  3402               	retlw	2
   531     0166  34F8               	retlw	248
   532     0167  3402               	retlw	2
   533     0168  34FB               	retlw	251
   534     0169  3402               	retlw	2
   535     016A  34FF               	retlw	255
   536     016B  3402               	retlw	2
   537     016C  3403               	retlw	3
   538     016D  3403               	retlw	3
   539     016E  3407               	retlw	7
   540     016F  3403               	retlw	3
   541     0170  340B               	retlw	11
   542     0171  3403               	retlw	3
   543     0172  340F               	retlw	15
   544     0173  3403               	retlw	3
   545     0174  3413               	retlw	19
   546     0175  3403               	retlw	3
   547     0176  3417               	retlw	23
   548     0177  3403               	retlw	3
   549     0178  341B               	retlw	27
   550     0179  3403               	retlw	3
   551     017A  341F               	retlw	31
   552     017B  3403               	retlw	3
   553     017C  3423               	retlw	35
   554     017D  3403               	retlw	3
   555     017E  3427               	retlw	39
   556     017F  3403               	retlw	3
   557     0180  342B               	retlw	43
   558     0181  3403               	retlw	3
   559     0182  342F               	retlw	47
   560     0183  3403               	retlw	3
   561     0184  3433               	retlw	51
   562     0185  3403               	retlw	3
   563     0186  3437               	retlw	55
   564     0187  3403               	retlw	3
   565     0188  343B               	retlw	59
   566     0189  3403               	retlw	3
   567     018A  343F               	retlw	63
   568     018B  3403               	retlw	3
   569     018C  3443               	retlw	67
   570     018D  3403               	retlw	3
   571     018E  3447               	retlw	71
   572     018F  3403               	retlw	3
   573     0190  344B               	retlw	75
   574     0191  3403               	retlw	3
   575     0192  344F               	retlw	79
   576     0193  3403               	retlw	3
   577     0194  3453               	retlw	83
   578     0195  3403               	retlw	3
   579     0196  3457               	retlw	87
   580     0197  3403               	retlw	3
   581     0198  345B               	retlw	91
   582     0199  3403               	retlw	3
   583     019A  345F               	retlw	95
   584     019B  3403               	retlw	3
   585     019C  3463               	retlw	99
   586     019D  3403               	retlw	3
   587     019E  3467               	retlw	103
   588     019F  3403               	retlw	3
   589     01A0  346B               	retlw	107
   590     01A1  3403               	retlw	3
   591     01A2  346F               	retlw	111
   592     01A3  3403               	retlw	3
   593     01A4  3473               	retlw	115
   594     01A5  3403               	retlw	3
   595     01A6  3477               	retlw	119
   596     01A7  3403               	retlw	3
   597     01A8  347B               	retlw	123
   598     01A9  3403               	retlw	3
   599     01AA  347F               	retlw	127
   600     01AB  3403               	retlw	3
   601     01AC  3483               	retlw	131
   602     01AD  3403               	retlw	3
   603     01AE  3487               	retlw	135
   604     01AF  3403               	retlw	3
   605     01B0  348B               	retlw	139
   606     01B1  3403               	retlw	3
   607     01B2  348F               	retlw	143
   608     01B3  3403               	retlw	3
   609     01B4  3493               	retlw	147
   610     01B5  3403               	retlw	3
   611     01B6  3497               	retlw	151
   612     01B7  3403               	retlw	3
   613     01B8  349B               	retlw	155
   614     01B9  3403               	retlw	3
   615     01BA  349F               	retlw	159
   616     01BB  3403               	retlw	3
   617     01BC  34A3               	retlw	163
   618     01BD  3403               	retlw	3
   619     01BE  34A7               	retlw	167
   620     01BF  3403               	retlw	3
   621     01C0  34AB               	retlw	171
   622     01C1  3403               	retlw	3
   623     01C2  34AF               	retlw	175
   624     01C3  3403               	retlw	3
   625     01C4  34B3               	retlw	179
   626     01C5  3403               	retlw	3
   627     01C6  34B7               	retlw	183
   628     01C7  3403               	retlw	3
   629     01C8  34BB               	retlw	187
   630     01C9  3403               	retlw	3
   631     01CA  34BF               	retlw	191
   632     01CB  3403               	retlw	3
   633     01CC  34C3               	retlw	195
   634     01CD  3403               	retlw	3
   635     01CE  34C7               	retlw	199
   636     01CF  3403               	retlw	3
   637     01D0  34CB               	retlw	203
   638     01D1  3403               	retlw	3
   639     01D2  34CF               	retlw	207
   640     01D3  3403               	retlw	3
   641     01D4  34D3               	retlw	211
   642     01D5  3403               	retlw	3
   643     01D6  34D7               	retlw	215
   644     01D7  3403               	retlw	3
   645     01D8  34DB               	retlw	219
   646     01D9  3403               	retlw	3
   647     01DA  34DF               	retlw	223
   648     01DB  3403               	retlw	3
   649     01DC  34E3               	retlw	227
   650     01DD  3403               	retlw	3
   651     01DE  34E7               	retlw	231
   652     01DF  3403               	retlw	3
   653     01E0  34EB               	retlw	235
   654     01E1  3403               	retlw	3
   655     01E2  34EF               	retlw	239
   656     01E3  3403               	retlw	3
   657     01E4  34F3               	retlw	243
   658     01E5  3403               	retlw	3
   659     01E6  34F7               	retlw	247
   660     01E7  3403               	retlw	3
   661     01E8  34FB               	retlw	251
   662     01E9  3403               	retlw	3
   663     01EA  34FF               	retlw	255
   664     01EB  3403               	retlw	3
   665     01EC                     __end_of_tri_table_one_quadrant:
   666                           
   667                           	psect	stringtext2
   668     01EC                     __pstringtext2:
   669     01EC                     _sine_table_one_quadrant:
   670     01EC  3400               	retlw	0
   671     01ED  3402               	retlw	2
   672     01EE  3406               	retlw	6
   673     01EF  3402               	retlw	2
   674     01F0  340C               	retlw	12
   675     01F1  3402               	retlw	2
   676     01F2  3412               	retlw	18
   677     01F3  3402               	retlw	2
   678     01F4  3419               	retlw	25
   679     01F5  3402               	retlw	2
   680     01F6  341F               	retlw	31
   681     01F7  3402               	retlw	2
   682     01F8  3425               	retlw	37
   683     01F9  3402               	retlw	2
   684     01FA  342B               	retlw	43
   685     01FB  3402               	retlw	2
   686     01FC  3432               	retlw	50
   687     01FD  3402               	retlw	2
   688     01FE  3438               	retlw	56
   689     01FF  3402               	retlw	2
   690     0200  343E               	retlw	62
   691     0201  3402               	retlw	2
   692     0202  3444               	retlw	68
   693     0203  3402               	retlw	2
   694     0204  344B               	retlw	75
   695     0205  3402               	retlw	2
   696     0206  3451               	retlw	81
   697     0207  3402               	retlw	2
   698     0208  3457               	retlw	87
   699     0209  3402               	retlw	2
   700     020A  345D               	retlw	93
   701     020B  3402               	retlw	2
   702     020C  3463               	retlw	99
   703     020D  3402               	retlw	2
   704     020E  3469               	retlw	105
   705     020F  3402               	retlw	2
   706     0210  3470               	retlw	112
   707     0211  3402               	retlw	2
   708     0212  3476               	retlw	118
   709     0213  3402               	retlw	2
   710     0214  347C               	retlw	124
   711     0215  3402               	retlw	2
   712     0216  3482               	retlw	130
   713     0217  3402               	retlw	2
   714     0218  3488               	retlw	136
   715     0219  3402               	retlw	2
   716     021A  348E               	retlw	142
   717     021B  3402               	retlw	2
   718     021C  3494               	retlw	148
   719     021D  3402               	retlw	2
   720     021E  349A               	retlw	154
   721     021F  3402               	retlw	2
   722     0220  34A0               	retlw	160
   723     0221  3402               	retlw	2
   724     0222  34A6               	retlw	166
   725     0223  3402               	retlw	2
   726     0224  34AC               	retlw	172
   727     0225  3402               	retlw	2
   728     0226  34B2               	retlw	178
   729     0227  3402               	retlw	2
   730     0228  34B8               	retlw	184
   731     0229  3402               	retlw	2
   732     022A  34BD               	retlw	189
   733     022B  3402               	retlw	2
   734     022C  34C3               	retlw	195
   735     022D  3402               	retlw	2
   736     022E  34C9               	retlw	201
   737     022F  3402               	retlw	2
   738     0230  34CF               	retlw	207
   739     0231  3402               	retlw	2
   740     0232  34D5               	retlw	213
   741     0233  3402               	retlw	2
   742     0234  34DA               	retlw	218
   743     0235  3402               	retlw	2
   744     0236  34E0               	retlw	224
   745     0237  3402               	retlw	2
   746     0238  34E5               	retlw	229
   747     0239  3402               	retlw	2
   748     023A  34EB               	retlw	235
   749     023B  3402               	retlw	2
   750     023C  34F1               	retlw	241
   751     023D  3402               	retlw	2
   752     023E  34F6               	retlw	246
   753     023F  3402               	retlw	2
   754     0240  34FC               	retlw	252
   755     0241  3402               	retlw	2
   756     0242  3401               	retlw	1
   757     0243  3403               	retlw	3
   758     0244  3406               	retlw	6
   759     0245  3403               	retlw	3
   760     0246  340C               	retlw	12
   761     0247  3403               	retlw	3
   762     0248  3411               	retlw	17
   763     0249  3403               	retlw	3
   764     024A  3416               	retlw	22
   765     024B  3403               	retlw	3
   766     024C  341C               	retlw	28
   767     024D  3403               	retlw	3
   768     024E  3421               	retlw	33
   769     024F  3403               	retlw	3
   770     0250  3426               	retlw	38
   771     0251  3403               	retlw	3
   772     0252  342B               	retlw	43
   773     0253  3403               	retlw	3
   774     0254  3430               	retlw	48
   775     0255  3403               	retlw	3
   776     0256  3435               	retlw	53
   777     0257  3403               	retlw	3
   778     0258  343A               	retlw	58
   779     0259  3403               	retlw	3
   780     025A  343F               	retlw	63
   781     025B  3403               	retlw	3
   782     025C  3444               	retlw	68
   783     025D  3403               	retlw	3
   784     025E  3449               	retlw	73
   785     025F  3403               	retlw	3
   786     0260  344E               	retlw	78
   787     0261  3403               	retlw	3
   788     0262  3452               	retlw	82
   789     0263  3403               	retlw	3
   790     0264  3457               	retlw	87
   791     0265  3403               	retlw	3
   792     0266  345C               	retlw	92
   793     0267  3403               	retlw	3
   794     0268  3460               	retlw	96
   795     0269  3403               	retlw	3
   796     026A  3465               	retlw	101
   797     026B  3403               	retlw	3
   798     026C  3469               	retlw	105
   799     026D  3403               	retlw	3
   800     026E  346E               	retlw	110
   801     026F  3403               	retlw	3
   802     0270  3472               	retlw	114
   803     0271  3403               	retlw	3
   804     0272  3476               	retlw	118
   805     0273  3403               	retlw	3
   806     0274  347A               	retlw	122
   807     0275  3403               	retlw	3
   808     0276  347F               	retlw	127
   809     0277  3403               	retlw	3
   810     0278  3483               	retlw	131
   811     0279  3403               	retlw	3
   812     027A  3487               	retlw	135
   813     027B  3403               	retlw	3
   814     027C  348B               	retlw	139
   815     027D  3403               	retlw	3
   816     027E  348F               	retlw	143
   817     027F  3403               	retlw	3
   818     0280  3493               	retlw	147
   819     0281  3403               	retlw	3
   820     0282  3497               	retlw	151
   821     0283  3403               	retlw	3
   822     0284  349A               	retlw	154
   823     0285  3403               	retlw	3
   824     0286  349E               	retlw	158
   825     0287  3403               	retlw	3
   826     0288  34A2               	retlw	162
   827     0289  3403               	retlw	3
   828     028A  34A5               	retlw	165
   829     028B  3403               	retlw	3
   830     028C  34A9               	retlw	169
   831     028D  3403               	retlw	3
   832     028E  34AC               	retlw	172
   833     028F  3403               	retlw	3
   834     0290  34B0               	retlw	176
   835     0291  3403               	retlw	3
   836     0292  34B3               	retlw	179
   837     0293  3403               	retlw	3
   838     0294  34B6               	retlw	182
   839     0295  3403               	retlw	3
   840     0296  34B9               	retlw	185
   841     0297  3403               	retlw	3
   842     0298  34BD               	retlw	189
   843     0299  3403               	retlw	3
   844     029A  34C0               	retlw	192
   845     029B  3403               	retlw	3
   846     029C  34C3               	retlw	195
   847     029D  3403               	retlw	3
   848     029E  34C6               	retlw	198
   849     029F  3403               	retlw	3
   850     02A0  34C8               	retlw	200
   851     02A1  3403               	retlw	3
   852     02A2  34CB               	retlw	203
   853     02A3  3403               	retlw	3
   854     02A4  34CE               	retlw	206
   855     02A5  3403               	retlw	3
   856     02A6  34D1               	retlw	209
   857     02A7  3403               	retlw	3
   858     02A8  34D3               	retlw	211
   859     02A9  3403               	retlw	3
   860     02AA  34D6               	retlw	214
   861     02AB  3403               	retlw	3
   862     02AC  34D8               	retlw	216
   863     02AD  3403               	retlw	3
   864     02AE  34DA               	retlw	218
   865     02AF  3403               	retlw	3
   866     02B0  34DD               	retlw	221
   867     02B1  3403               	retlw	3
   868     02B2  34DF               	retlw	223
   869     02B3  3403               	retlw	3
   870     02B4  34E1               	retlw	225
   871     02B5  3403               	retlw	3
   872     02B6  34E3               	retlw	227
   873     02B7  3403               	retlw	3
   874     02B8  34E5               	retlw	229
   875     02B9  3403               	retlw	3
   876     02BA  34E7               	retlw	231
   877     02BB  3403               	retlw	3
   878     02BC  34E9               	retlw	233
   879     02BD  3403               	retlw	3
   880     02BE  34EB               	retlw	235
   881     02BF  3403               	retlw	3
   882     02C0  34EC               	retlw	236
   883     02C1  3403               	retlw	3
   884     02C2  34EE               	retlw	238
   885     02C3  3403               	retlw	3
   886     02C4  34F0               	retlw	240
   887     02C5  3403               	retlw	3
   888     02C6  34F1               	retlw	241
   889     02C7  3403               	retlw	3
   890     02C8  34F3               	retlw	243
   891     02C9  3403               	retlw	3
   892     02CA  34F4               	retlw	244
   893     02CB  3403               	retlw	3
   894     02CC  34F5               	retlw	245
   895     02CD  3403               	retlw	3
   896     02CE  34F6               	retlw	246
   897     02CF  3403               	retlw	3
   898     02D0  34F7               	retlw	247
   899     02D1  3403               	retlw	3
   900     02D2  34F9               	retlw	249
   901     02D3  3403               	retlw	3
   902     02D4  34F9               	retlw	249
   903     02D5  3403               	retlw	3
   904     02D6  34FA               	retlw	250
   905     02D7  3403               	retlw	3
   906     02D8  34FB               	retlw	251
   907     02D9  3403               	retlw	3
   908     02DA  34FC               	retlw	252
   909     02DB  3403               	retlw	3
   910     02DC  34FD               	retlw	253
   911     02DD  3403               	retlw	3
   912     02DE  34FD               	retlw	253
   913     02DF  3403               	retlw	3
   914     02E0  34FE               	retlw	254
   915     02E1  3403               	retlw	3
   916     02E2  34FE               	retlw	254
   917     02E3  3403               	retlw	3
   918     02E4  34FE               	retlw	254
   919     02E5  3403               	retlw	3
   920     02E6  34FF               	retlw	255
   921     02E7  3403               	retlw	3
   922     02E8  34FF               	retlw	255
   923     02E9  3403               	retlw	3
   924     02EA  34FF               	retlw	255
   925     02EB  3403               	retlw	3
   926     02EC  34FF               	retlw	255
   927     02ED  3403               	retlw	3
   928     02EE                     __end_of_sine_table_one_quadrant:
   929                           
   930                           	psect	stringtext3
   931     0609                     __pstringtext3:
   932     0609                     _prescaler_bits:
   933     0609  3407               	retlw	7
   934     060A  3406               	retlw	6
   935     060B  3405               	retlw	5
   936     060C  3404               	retlw	4
   937     060D  3403               	retlw	3
   938     060E  3402               	retlw	2
   939     060F  3401               	retlw	1
   940     0610  3400               	retlw	0
   941     0611                     __end_of_prescaler_bits:
   942                           
   943                           	psect	stringtext4
   944     063D                     __pstringtext4:
   945     063D                     _NO:
   946     063D  3400               	retlw	0
   947     063E                     __end_of_NO:
   948                           
   949                           	psect	stringtext5
   950     063E                     __pstringtext5:
   951     063E                     _YES:
   952     063E  3401               	retlw	1
   953     063F                     __end_of_YES:
   954                           
   955                           	psect	stringtext6
   956     063F                     __pstringtext6:
   957     063F                     _DONT_CARE:
   958     063F  3404               	retlw	4
   959     0640                     __end_of_DONT_CARE:
   960                           
   961                           	psect	stringtext7
   962     0640                     __pstringtext7:
   963     0640                     _DIVIDE_BY_FOUR:
   964     0640  3403               	retlw	3
   965     0641                     __end_of_DIVIDE_BY_FOUR:
   966                           
   967                           	psect	stringtext8
   968     0641                     __pstringtext8:
   969     0641                     _MULTIPLY_BY_TWO:
   970     0641  3402               	retlw	2
   971     0642                     __end_of_MULTIPLY_BY_TWO:
   972                           
   973                           	psect	stringtext9
   974     0642                     __pstringtext9:
   975     0642                     _DIVIDE_BY_TWO:
   976     0642  3401               	retlw	1
   977     0643                     __end_of_DIVIDE_BY_TWO:
   978                           
   979                           	psect	stringtext10
   980     0643                     __pstringtext10:
   981     0643                     _DO_NOTHING:
   982     0643  3400               	retlw	0
   983     0644                     __end_of_DO_NOTHING:
   984                           
   985                           	psect	stringtext11
   986     0644                     __pstringtext11:
   987     0644                     _NEGATIVE:
   988     0644  3400               	retlw	0
   989     0645                     __end_of_NEGATIVE:
   990                           
   991                           	psect	stringtext12
   992     0645                     __pstringtext12:
   993     0645                     _POSITIVE:
   994     0645  3401               	retlw	1
   995     0646                     __end_of_POSITIVE:
   996                           
   997                           	psect	stringtext13
   998     0646                     __pstringtext13:
   999     0646                     _symmetry_adc_config_value:
  1000     0646  3407               	retlw	7
  1001     0647                     __end_of_symmetry_adc_config_value:
  1002                           
  1003                           	psect	stringtext14
  1004     0647                     __pstringtext14:
  1005     0647                     _depth_adc_config_value:
  1006     0647  3406               	retlw	6
  1007     0648                     __end_of_depth_adc_config_value:
  1008                           
  1009                           	psect	stringtext15
  1010     0648                     __pstringtext15:
  1011     0648                     _speed_adc_config_value:
  1012     0648  3405               	retlw	5
  1013     0649                     __end_of_speed_adc_config_value:
  1014                           
  1015                           	psect	stringtext16
  1016     0649                     __pstringtext16:
  1017     0649                     _waveshape_adc_config_value:
  1018     0649  3404               	retlw	4
  1019     064A                     __end_of_waveshape_adc_config_value:
  1020     0015                     _TMR0	set	21
  1021     001C                     _T2CON	set	28
  1022     001B                     _PR2	set	27
  1023     005F                     _GIE	set	95
  1024     005A                     _TMR0IF	set	90
  1025     005D                     _TMR0IE	set	93
  1026     00E2                     _TMR2ON	set	226
  1027     0089                     _TMR2IF	set	137
  1028     0095                     _OPTION_REG	set	149
  1029     009B                     _ADRESL	set	155
  1030     009C                     _ADRESH	set	156
  1031     009D                     _ADCON0	set	157
  1032     009E                     _ADCON1	set	158
  1033     008E                     _TRISC	set	142
  1034     0098                     _OSCTUNE	set	152
  1035     0099                     _OSCCON	set	153
  1036     0462                     _TRISA2	set	1122
  1037     04E9                     _GO_nDONE	set	1257
  1038     04E8                     _ADON	set	1256
  1039     0875                     _LATC5	set	2165
  1040     088F                     _C1ON	set	2191
  1041     08D7                     _SRLEN	set	2263
  1042     018E                     _ANSELC	set	398
  1043     020E                     _WPUC	set	526
  1044     029E                     _CCPTMRS0	set	670
  1045     0313                     _CCP3CON	set	787
  1046     0311                     _CCPR3L	set	785
  1047                           
  1048                           	psect	cinit
  1049     00D1                     start_initialization:	
  1050                           ; #config settings
  1051                           
  1052     00D1                     __initialization:
  1053                           
  1054                           ; Initialize objects allocated to BANK0
  1055     00D1  3186  2639  3180   	fcall	__pidataBANK0	;fetch initializer
  1056     00D4  00E5               	movwf	__pdataBANK0& (0+127)
  1057     00D5  3186  263A  3180   	fcall	__pidataBANK0+1	;fetch initializer
  1058     00D8  00E6               	movwf	(__pdataBANK0+1)& (0+127)
  1059                           
  1060                           ; Clear objects allocated to COMMON
  1061     00D9  01F0               	clrf	__pbssCOMMON& (0+127)
  1062     00DA  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  1063     00DB  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  1064     00DC  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  1065     00DD  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  1066     00DE  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  1067                           
  1068                           ; Clear objects allocated to BANK0
  1069     00DF  3020               	movlw	low __pbssBANK0
  1070     00E0  0084               	movwf	4
  1071     00E1  3000               	movlw	high __pbssBANK0
  1072     00E2  0085               	movwf	5
  1073     00E3  3028               	movlw	40
  1074     00E4  3186  2621         	fcall	clear_ram0
  1075     00E6                     end_of_initialization:	
  1076                           ;End of C runtime variable initialization code
  1077                           
  1078     00E6                     __end_of__initialization:
  1079     00E6  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1080     00E7  0020               	movlb	0
  1081     00E8  3185  2D51         	ljmp	_main	;jump to C main() function
  1082                           
  1083                           	psect	bssCOMMON
  1084     0070                     __pbssCOMMON:
  1085     0070                     _current_quadrant:
  1086     0070                     	ds	1
  1087     0071                     _current_one_quadrant_index:
  1088     0071                     	ds	1
  1089     0072                     _current_waveshape:
  1090     0072                     	ds	1
  1091     0073                     _duty:
  1092     0073                     	ds	2
  1093     0075                     _final_TMR0:
  1094     0075                     	ds	1
  1095                           
  1096                           	psect	bssBANK0
  1097     0020                     __pbssBANK0:
  1098     0020                     _symmetry_total:
  1099     0020                     	ds	4
  1100     0024                     _current_speed_log_32:
  1101     0024                     	ds	4
  1102     0028                     _current_speed_linear_32:
  1103     0028                     	ds	4
  1104     002C                     _speed_control_32:
  1105     002C                     	ds	4
  1106     0030                     _dTMR0_ideal:
  1107     0030                     	ds	2
  1108     0032                     _current_symmetry:
  1109     0032                     	ds	2
  1110     0034                     _current_depth:
  1111     0034                     	ds	2
  1112     0036                     _current_speed_log:
  1113     0036                     	ds	2
  1114     0038                     _current_speed_linear:
  1115     0038                     	ds	2
  1116     003A                     _how_many_128:
  1117     003A                     	ds	2
  1118     003C                     _speed_control:
  1119     003C                     	ds	2
  1120     003E                     _symmetry_status:
  1121     003E                     	ds	1
  1122     003F                     _clear_TMR0_please:
  1123     003F                     	ds	1
  1124     0040                     _base_prescaler_bits_index:
  1125     0040                     	ds	1
  1126     0041                     _raw_TMR0:
  1127     0041                     	ds	1
  1128     0042                     _prescaler_adjust:
  1129     0042                     	ds	1
  1130     0043                     _TMR0_offset_sign:
  1131     0043                     	ds	1
  1132     0044                     _TMR0_offset:
  1133     0044                     	ds	1
  1134     0045                     _current_halfcycle:
  1135     0045                     	ds	1
  1136     0046                     _duty_high_byte:
  1137     0046                     	ds	1
  1138     0047                     _duty_low_byte:
  1139     0047                     	ds	1
  1140                           
  1141                           	psect	dataBANK0
  1142     0065                     __pdataBANK0:
  1143     0065                     _top_two_bytes_ptr:
  1144     0065                     	ds	2
  1145                           
  1146                           	psect	clrtext
  1147     0621                     clear_ram0:	
  1148                           ;	Called with FSR0 containing the base address, and
  1149                           ;	WREG with the size to clear
  1150                           
  1151     0621  0064               	clrwdt	;clear the watchdog before getting into this loop
  1152     0622                     clrloop0:
  1153     0622  0180               	clrf	0	;clear RAM location pointed to by FSR
  1154     0623  3101               	addfsr 0,1
  1155     0624  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1156     0625  2E22               	goto	clrloop0	;have we reached the end yet?
  1157     0626  3400               	retlw	0	;all done for this memory range, return
  1158                           
  1159                           	psect	cstackCOMMON
  1160     0076                     __pcstackCOMMON:
  1161     0076                     ?_CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1:
  1162     0076                     ?_TURN_PRESCALER_OFF:	
  1163                           ; 1 bytes @ 0x0
  1164                           
  1165     0076                     ?_TURN_PRESCALER_ON:	
  1166                           ; 1 bytes @ 0x0
  1167                           
  1168     0076                     ?_CONFIG_INT_OSC:	
  1169                           ; 1 bytes @ 0x0
  1170                           
  1171     0076                     ?_CONFIG_PORTS:	
  1172                           ; 1 bytes @ 0x0
  1173                           
  1174     0076                     ?_CONFIG_ADC_PINS:	
  1175                           ; 1 bytes @ 0x0
  1176                           
  1177     0076                     ?_DETERMINE_WAVESHAPE:	
  1178                           ; 1 bytes @ 0x0
  1179                           
  1180     0076                     ?_SET_DUTY_CCP3:	
  1181                           ; 1 bytes @ 0x0
  1182                           
  1183     0076                     ??_SET_DUTY_CCP3:	
  1184                           ; 1 bytes @ 0x0
  1185                           
  1186     0076                     ?_CONFIG_PWM_CCP3:	
  1187                           ; 1 bytes @ 0x0
  1188                           
  1189     0076                     ?_TURN_ON_CCP3_PWM:	
  1190                           ; 1 bytes @ 0x0
  1191                           
  1192     0076                     ?_CONFIG_TMR0_INTERRUPT:	
  1193                           ; 1 bytes @ 0x0
  1194                           
  1195     0076                     ?_CONFIG_SYSTEM:	
  1196                           ; 1 bytes @ 0x0
  1197                           
  1198     0076                     ?_TMR0_WRITE:	
  1199                           ; 1 bytes @ 0x0
  1200                           
  1201     0076                     ?_GET_CURRENT_POT_VALUES:	
  1202                           ; 1 bytes @ 0x0
  1203                           
  1204     0076                     ?_PROCESS_RAW_SPEED_AND_PRESCALER:	
  1205                           ; 1 bytes @ 0x0
  1206                           
  1207     0076                     ?_PROCESS_FINAL_SPEED_AND_PRESCALER:	
  1208                           ; 1 bytes @ 0x0
  1209                           
  1210     0076                     ?_SHORTEN_PERIOD:	
  1211                           ; 1 bytes @ 0x0
  1212                           
  1213     0076                     ?_LENGTHEN_PERIOD:	
  1214                           ; 1 bytes @ 0x0
  1215                           
  1216     0076                     ?_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST:	
  1217                           ; 1 bytes @ 0x0
  1218                           
  1219     0076                     ?_INTERRUPT_InterruptManager:	
  1220                           ; 1 bytes @ 0x0
  1221                           
  1222     0076                     ?_main:	
  1223                           ; 1 bytes @ 0x0
  1224                           
  1225                           
  1226                           ; 1 bytes @ 0x0
  1227     0076                     	ds	2
  1228     0078                     SET_DUTY_CCP3@temp:
  1229                           
  1230                           ; 1 bytes @ 0x2
  1231     0078                     	ds	1
  1232     0079                     SET_DUTY_CCP3@duty_ptr:
  1233                           
  1234                           ; 1 bytes @ 0x3
  1235     0079                     	ds	1
  1236     007A                     ??_INTERRUPT_InterruptManager:
  1237                           
  1238                           ; 1 bytes @ 0x4
  1239     007A                     	ds	2
  1240                           
  1241                           	psect	cstackBANK0
  1242     0048                     __pcstackBANK0:
  1243     0048                     ??_CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1:
  1244     0048                     ??_TURN_PRESCALER_OFF:	
  1245                           ; 1 bytes @ 0x0
  1246                           
  1247     0048                     ??_TURN_PRESCALER_ON:	
  1248                           ; 1 bytes @ 0x0
  1249                           
  1250     0048                     ??_CONFIG_INT_OSC:	
  1251                           ; 1 bytes @ 0x0
  1252                           
  1253     0048                     ??_CONFIG_PORTS:	
  1254                           ; 1 bytes @ 0x0
  1255                           
  1256     0048                     ??_CONFIG_ADC_PINS:	
  1257                           ; 1 bytes @ 0x0
  1258                           
  1259     0048                     ??_CONFIG_PWM_CCP3:	
  1260                           ; 1 bytes @ 0x0
  1261                           
  1262     0048                     ??_TURN_ON_CCP3_PWM:	
  1263                           ; 1 bytes @ 0x0
  1264                           
  1265     0048                     ??_CONFIG_TMR0_INTERRUPT:	
  1266                           ; 1 bytes @ 0x0
  1267                           
  1268     0048                     ??_CONFIG_SYSTEM:	
  1269                           ; 1 bytes @ 0x0
  1270                           
  1271     0048                     ??_TMR0_WRITE:	
  1272                           ; 1 bytes @ 0x0
  1273                           
  1274     0048                     ??_PROCESS_FINAL_SPEED_AND_PRESCALER:	
  1275                           ; 1 bytes @ 0x0
  1276                           
  1277     0048                     ?_DO_ADC:	
  1278                           ; 1 bytes @ 0x0
  1279                           
  1280     0048                     ?___lmul:	
  1281                           ; 2 bytes @ 0x0
  1282                           
  1283     0048                     TMR0_WRITE@timer_value_ptr:	
  1284                           ; 4 bytes @ 0x0
  1285                           
  1286     0048                     DO_ADC@modifier:	
  1287                           ; 1 bytes @ 0x0
  1288                           
  1289     0048                     ___lmul@multiplier:	
  1290                           ; 2 bytes @ 0x0
  1291                           
  1292                           
  1293                           ; 4 bytes @ 0x0
  1294     0048                     	ds	2
  1295     004A                     ??_DO_ADC:
  1296                           
  1297                           ; 1 bytes @ 0x2
  1298     004A                     	ds	1
  1299     004B                     DO_ADC@adc_result:
  1300                           
  1301                           ; 2 bytes @ 0x3
  1302     004B                     	ds	1
  1303     004C                     ___lmul@multiplicand:
  1304                           
  1305                           ; 4 bytes @ 0x4
  1306     004C                     	ds	1
  1307     004D                     DO_ADC@temp:
  1308                           
  1309                           ; 1 bytes @ 0x5
  1310     004D                     	ds	1
  1311     004E                     ??_DETERMINE_WAVESHAPE:
  1312     004E                     DETERMINE_WAVESHAPE@ADC:	
  1313                           ; 1 bytes @ 0x6
  1314                           
  1315                           
  1316                           ; 2 bytes @ 0x6
  1317     004E                     	ds	2
  1318     0050                     ??_GET_CURRENT_POT_VALUES:
  1319     0050                     ??___lmul:	
  1320                           ; 1 bytes @ 0x8
  1321                           
  1322     0050                     ___lmul@product:	
  1323                           ; 1 bytes @ 0x8
  1324                           
  1325                           
  1326                           ; 4 bytes @ 0x8
  1327     0050                     	ds	4
  1328     0054                     ??_PROCESS_RAW_SPEED_AND_PRESCALER:
  1329     0054                     ??_SHORTEN_PERIOD:	
  1330                           ; 1 bytes @ 0xC
  1331                           
  1332     0054                     ??_LENGTHEN_PERIOD:	
  1333                           ; 1 bytes @ 0xC
  1334                           
  1335                           
  1336                           ; 1 bytes @ 0xC
  1337     0054                     	ds	4
  1338     0058                     PROCESS_RAW_SPEED_AND_PRESCALER@prescaler_overflow_flag:
  1339     0058                     SHORTEN_PERIOD@dTMR0_ideal:	
  1340                           ; 1 bytes @ 0x10
  1341                           
  1342     0058                     LENGTHEN_PERIOD@dTMR0_ideal:	
  1343                           ; 2 bytes @ 0x10
  1344                           
  1345                           
  1346                           ; 2 bytes @ 0x10
  1347     0058                     	ds	1
  1348     0059                     PROCESS_RAW_SPEED_AND_PRESCALER@speed_control_subtracted:
  1349                           
  1350                           ; 2 bytes @ 0x11
  1351     0059                     	ds	1
  1352     005A                     SHORTEN_PERIOD@TMR0_raw_extra:
  1353                           
  1354                           ; 2 bytes @ 0x12
  1355     005A                     	ds	2
  1356     005C                     ??_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST:
  1357                           
  1358                           ; 1 bytes @ 0x14
  1359     005C                     	ds	4
  1360     0060                     PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST@temp:
  1361                           
  1362                           ; 4 bytes @ 0x18
  1363     0060                     	ds	4
  1364     0064                     PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST@symmetry_status:
  1365                           
  1366                           ; 1 bytes @ 0x1C
  1367     0064                     	ds	1
  1368     0065                     ??_main:
  1369                           
  1370                           	psect	maintext
  1371     0551                     __pmaintext:	
  1372                           ; 1 bytes @ 0x1D
  1373 ;;
  1374 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1375 ;;
  1376 ;; *************** function _main *****************
  1377 ;; Defined at:
  1378 ;;		line 615 in file "main.c"
  1379 ;; Parameters:    Size  Location     Type
  1380 ;;		None
  1381 ;; Auto vars:     Size  Location     Type
  1382 ;;		None
  1383 ;; Return value:  Size  Location     Type
  1384 ;;                  1    wreg      void 
  1385 ;; Registers used:
  1386 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1387 ;; Tracked objects:
  1388 ;;		On entry : B1F/0
  1389 ;;		On exit  : 1F/1
  1390 ;;		Unchanged: 0/0
  1391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1392 ;;      Params:         0       0       0       0
  1393 ;;      Locals:         0       0       0       0
  1394 ;;      Temps:          0       0       0       0
  1395 ;;      Totals:         0       0       0       0
  1396 ;;Total ram usage:        0 bytes
  1397 ;; Hardware stack levels required when called: 5
  1398 ;; This function calls:
  1399 ;;		_CONFIG_SYSTEM
  1400 ;;		_CONFIG_TMR0_INTERRUPT
  1401 ;;		_GET_CURRENT_POT_VALUES
  1402 ;;		_PROCESS_FINAL_SPEED_AND_PRESCALER
  1403 ;;		_PROCESS_RAW_SPEED_AND_PRESCALER
  1404 ;;		_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST
  1405 ;;		_TMR0_WRITE
  1406 ;;		_TURN_ON_CCP3_PWM
  1407 ;; This function is called by:
  1408 ;;		Startup code after reset
  1409 ;; This function uses a non-reentrant model
  1410 ;;
  1411                           
  1412     0551                     _main:	
  1413                           ;psect for function _main
  1414                           
  1415                           
  1416                           ;main.c: 617:     CONFIG_SYSTEM();
  1417                           
  1418                           ;incstack = 0
  1419                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1420     0551  3185  25F4  3185   	fcall	_CONFIG_SYSTEM
  1421                           
  1422                           ;main.c: 618:     TURN_ON_CCP3_PWM();
  1423     0554  3186  2611  3185   	fcall	_TURN_ON_CCP3_PWM
  1424                           
  1425                           ;main.c: 619:     CONFIG_TMR0_INTERRUPT();
  1426     0557  3186  263B  3185   	fcall	_CONFIG_TMR0_INTERRUPT
  1427                           
  1428                           ;main.c: 620:     GET_CURRENT_POT_VALUES();
  1429     055A  3184  24B9  3185   	fcall	_GET_CURRENT_POT_VALUES
  1430                           
  1431                           ;main.c: 621:     PROCESS_RAW_SPEED_AND_PRESCALER();
  1432     055D  3183  2388  3185   	fcall	_PROCESS_RAW_SPEED_AND_PRESCALER
  1433                           
  1434                           ;main.c: 624:     PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST();
  1435     0560  3184  2402  3185   	fcall	_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST
  1436                           
  1437                           ;main.c: 627:     PROCESS_FINAL_SPEED_AND_PRESCALER();
  1438     0563  3185  25E7  3185   	fcall	_PROCESS_FINAL_SPEED_AND_PRESCALER
  1439                           
  1440                           ;main.c: 628:     TMR0_WRITE(&final_TMR0);
  1441     0566  3075               	movlw	(low (_final_TMR0| 0))& (0+255)
  1442     0567  3186  2619  3185   	fcall	_TMR0_WRITE
  1443                           
  1444                           ;main.c: 629:     GIE = 1;
  1445     056A  178B               	bsf	11,7	;volatile
  1446     056B                     l1875:
  1447                           
  1448                           ;main.c: 633:         GET_CURRENT_POT_VALUES();
  1449     056B  3184  24B9  3185   	fcall	_GET_CURRENT_POT_VALUES
  1450                           
  1451                           ;main.c: 634:         PROCESS_RAW_SPEED_AND_PRESCALER();
  1452     056E  3183  2388  3185   	fcall	_PROCESS_RAW_SPEED_AND_PRESCALER
  1453                           
  1454                           ;main.c: 637:         PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST();
  1455     0571  3184  2402  3185   	fcall	_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST
  1456                           
  1457                           ;main.c: 640:         PROCESS_FINAL_SPEED_AND_PRESCALER();
  1458     0574  3185  25E7  3185   	fcall	_PROCESS_FINAL_SPEED_AND_PRESCALER
  1459     0577  2D6B               	goto	l1875
  1460     0578                     __end_of_main:
  1461                           
  1462                           	psect	text1
  1463     0611                     __ptext1:	
  1464 ;; *************** function _TURN_ON_CCP3_PWM *****************
  1465 ;; Defined at:
  1466 ;;		line 271 in file "main.c"
  1467 ;; Parameters:    Size  Location     Type
  1468 ;;		None
  1469 ;; Auto vars:     Size  Location     Type
  1470 ;;		None
  1471 ;; Return value:  Size  Location     Type
  1472 ;;                  1    wreg      unsigned char 
  1473 ;; Registers used:
  1474 ;;		None
  1475 ;; Tracked objects:
  1476 ;;		On entry : B1F/0
  1477 ;;		On exit  : B1F/1
  1478 ;;		Unchanged: B00/0
  1479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1480 ;;      Params:         0       0       0       0
  1481 ;;      Locals:         0       0       0       0
  1482 ;;      Temps:          0       0       0       0
  1483 ;;      Totals:         0       0       0       0
  1484 ;;Total ram usage:        0 bytes
  1485 ;; Hardware stack levels used: 1
  1486 ;; Hardware stack levels required when called: 2
  1487 ;; This function calls:
  1488 ;;		Nothing
  1489 ;; This function is called by:
  1490 ;;		_main
  1491 ;; This function uses a non-reentrant model
  1492 ;;
  1493                           
  1494     0611                     _TURN_ON_CCP3_PWM:	
  1495                           ;psect for function _TURN_ON_CCP3_PWM
  1496                           
  1497                           
  1498                           ;main.c: 273:     TMR2IF = 0;
  1499                           
  1500                           ;incstack = 0
  1501                           ; Regs used in _TURN_ON_CCP3_PWM: []
  1502     0611  1091               	bcf	17,1	;volatile
  1503                           
  1504                           ;main.c: 274:     TMR2ON = 1;
  1505     0612  151C               	bsf	28,2	;volatile
  1506     0613                     l179:	
  1507                           ;main.c: 275:     while(TMR2IF == 0){}
  1508                           
  1509     0613  1C91               	btfss	17,1	;volatile
  1510     0614  2E13               	goto	l179
  1511                           
  1512                           ;main.c: 276:     TMR2IF = 0;
  1513     0615  1091               	bcf	17,1	;volatile
  1514                           
  1515                           ;main.c: 277:     TRISA2 = 0;
  1516     0616  0021               	movlb	1	; select bank1
  1517     0617  110C               	bcf	12,2	;volatile
  1518                           
  1519                           ;main.c: 278:     return 1;;	Return value of _TURN_ON_CCP3_PWM is never used
  1520     0618  0008               	return
  1521     0619                     __end_of_TURN_ON_CCP3_PWM:
  1522                           
  1523                           	psect	text2
  1524     0619                     __ptext2:	
  1525 ;; *************** function _TMR0_WRITE *****************
  1526 ;; Defined at:
  1527 ;;		line 297 in file "main.c"
  1528 ;; Parameters:    Size  Location     Type
  1529 ;;  timer_value_    1    wreg     PTR volatile unsigned ch
  1530 ;;		 -> final_TMR0(1), 
  1531 ;; Auto vars:     Size  Location     Type
  1532 ;;  timer_value_    1    0[BANK0 ] PTR volatile unsigned ch
  1533 ;;		 -> final_TMR0(1), 
  1534 ;; Return value:  Size  Location     Type
  1535 ;;                  1    wreg      unsigned char 
  1536 ;; Registers used:
  1537 ;;		wreg, fsr1l, fsr1h
  1538 ;; Tracked objects:
  1539 ;;		On entry : 1F/1
  1540 ;;		On exit  : 1F/0
  1541 ;;		Unchanged: 0/0
  1542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1543 ;;      Params:         0       0       0       0
  1544 ;;      Locals:         0       1       0       0
  1545 ;;      Temps:          0       0       0       0
  1546 ;;      Totals:         0       1       0       0
  1547 ;;Total ram usage:        1 bytes
  1548 ;; Hardware stack levels used: 1
  1549 ;; Hardware stack levels required when called: 2
  1550 ;; This function calls:
  1551 ;;		Nothing
  1552 ;; This function is called by:
  1553 ;;		_main
  1554 ;; This function uses a non-reentrant model
  1555 ;;
  1556                           
  1557     0619                     _TMR0_WRITE:	
  1558                           ;psect for function _TMR0_WRITE
  1559                           
  1560                           
  1561                           ;incstack = 0
  1562                           ; Regs used in _TMR0_WRITE: [wregfsr1]
  1563                           ;TMR0_WRITE@timer_value_ptr stored from wreg
  1564     0619  0020               	movlb	0	; select bank0
  1565     061A  00C8               	movwf	TMR0_WRITE@timer_value_ptr
  1566                           
  1567                           ;main.c: 298:     TMR0 = (uint8_t) *timer_value_ptr;
  1568     061B  0848               	movf	TMR0_WRITE@timer_value_ptr,w
  1569     061C  0086               	movwf	6
  1570     061D  0187               	clrf	7
  1571     061E  0801               	movf	1,w
  1572     061F  0095               	movwf	21	;volatile
  1573     0620  0008               	return
  1574     0621                     __end_of_TMR0_WRITE:
  1575                           
  1576                           	psect	text3
  1577     0402                     __ptext3:	
  1578 ;; *************** function _PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST *****************
  1579 ;; Defined at:
  1580 ;;		line 489 in file "main.c"
  1581 ;; Parameters:    Size  Location     Type
  1582 ;;		None
  1583 ;; Auto vars:     Size  Location     Type
  1584 ;;  temp            4   24[BANK0 ] unsigned long 
  1585 ;;  symmetry_sta    1   28[BANK0 ] unsigned char 
  1586 ;; Return value:  Size  Location     Type
  1587 ;;                  1    wreg      unsigned char 
  1588 ;; Registers used:
  1589 ;;		wreg, status,2, status,0, pclath, cstack
  1590 ;; Tracked objects:
  1591 ;;		On entry : 1E/0
  1592 ;;		On exit  : 1F/0
  1593 ;;		Unchanged: 0/0
  1594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1595 ;;      Params:         0       0       0       0
  1596 ;;      Locals:         0       5       0       0
  1597 ;;      Temps:          0       4       0       0
  1598 ;;      Totals:         0       9       0       0
  1599 ;;Total ram usage:        9 bytes
  1600 ;; Hardware stack levels used: 1
  1601 ;; Hardware stack levels required when called: 4
  1602 ;; This function calls:
  1603 ;;		_LENGTHEN_PERIOD
  1604 ;;		_SHORTEN_PERIOD
  1605 ;;		___lmul
  1606 ;; This function is called by:
  1607 ;;		_main
  1608 ;; This function uses a non-reentrant model
  1609 ;;
  1610                           
  1611     0402                     _PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST:	
  1612                           ;psect for function _PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST
  1613                           
  1614                           
  1615                           ;main.c: 490:     if(current_symmetry == 128){
  1616                           
  1617                           ;incstack = 0
  1618                           ; Regs used in _PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST: [wreg+status,2+status,0+pclath
      +                          +cstack]
  1619     0402  3080               	movlw	128
  1620     0403  0020               	movlb	0	; select bank0
  1621     0404  0632               	xorwf	_current_symmetry,w	;volatile
  1622     0405  0433               	iorwf	_current_symmetry+1,w	;volatile
  1623     0406  1D03               	btfss	3,2
  1624     0407  2C0E               	goto	l1819
  1625                           
  1626                           ;main.c: 491:         TMR0_offset = 0;
  1627     0408  01C4               	clrf	_TMR0_offset	;volatile
  1628                           
  1629                           ;main.c: 492:         TMR0_offset_sign = POSITIVE;
  1630     0409  3001               	movlw	1
  1631     040A  00C3               	movwf	_TMR0_offset_sign	;volatile
  1632                           
  1633                           ;main.c: 493:         prescaler_adjust = DO_NOTHING;
  1634     040B  01C2               	clrf	_prescaler_adjust	;volatile
  1635                           
  1636                           ;main.c: 494:         clear_TMR0_please = NO;
  1637     040C  01BF               	clrf	_clear_TMR0_please	;volatile
  1638                           
  1639                           ;main.c: 495:         return 1;;	Return value of _PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJU
      +                          ST is never used
  1640     040D  0008               	return
  1641     040E                     l1819:
  1642                           
  1643                           ;main.c: 497:     uint8_t symmetry_status = 0;
  1644     040E  01E4               	clrf	PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST@symmetry_status
  1645                           
  1646                           ;main.c: 498:     if(current_symmetry > 128){
  1647     040F  3000               	movlw	0
  1648     0410  0233               	subwf	_current_symmetry+1,w	;volatile
  1649     0411  3081               	movlw	129
  1650     0412  1903               	skipnz
  1651     0413  0232               	subwf	_current_symmetry,w	;volatile
  1652     0414  1C03               	skipc
  1653     0415  2C21               	goto	l1827
  1654                           
  1655                           ;main.c: 499:         current_symmetry = 255 - current_symmetry;
  1656     0416  30FF               	movlw	255
  1657     0417  00DC               	movwf	??_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST
  1658     0418  0832               	movf	_current_symmetry,w	;volatile
  1659     0419  025C               	subwf	??_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST,w
  1660     041A  00B2               	movwf	_current_symmetry	;volatile
  1661     041B  0933               	comf	_current_symmetry+1,w	;volatile
  1662     041C  1803               	skipnc
  1663     041D  0A89               	incf	9,f
  1664     041E  00B3               	movwf	_current_symmetry+1	;volatile
  1665                           
  1666                           ;main.c: 500:         symmetry_status = 1;
  1667     041F  01E4               	clrf	PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST@symmetry_status
  1668     0420  0AE4               	incf	PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST@symmetry_status,f
  1669     0421                     l1827:
  1670                           
  1671                           ;main.c: 503:     uint32_t temp = (uint32_t)(361 * (uint32_t)(128 - current_symmetry));
  1672     0421  3080               	movlw	128
  1673     0422  00DC               	movwf	??_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST
  1674     0423  0832               	movf	_current_symmetry,w	;volatile
  1675     0424  025C               	subwf	??_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST,w
  1676     0425  00C8               	movwf	___lmul@multiplier
  1677     0426  0933               	comf	_current_symmetry+1,w	;volatile
  1678     0427  1803               	skipnc
  1679     0428  0A89               	incf	9,f
  1680     0429  00C9               	movwf	___lmul@multiplier+1
  1681     042A  01CA               	clrf	___lmul@multiplier+2
  1682     042B  01CB               	clrf	___lmul@multiplier+3
  1683     042C  3000               	movlw	0
  1684     042D  00CF               	movwf	___lmul@multiplicand+3
  1685     042E  3000               	movlw	0
  1686     042F  00CE               	movwf	___lmul@multiplicand+2
  1687     0430  3001               	movlw	1
  1688     0431  00CD               	movwf	___lmul@multiplicand+1
  1689     0432  3069               	movlw	105
  1690     0433  00CC               	movwf	___lmul@multiplicand
  1691     0434  3184  24F6  3184   	fcall	___lmul
  1692     0437  084B               	movf	?___lmul+3,w
  1693     0438  00E3               	movwf	PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST@temp+3
  1694     0439  084A               	movf	?___lmul+2,w
  1695     043A  00E2               	movwf	PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST@temp+2
  1696     043B  0849               	movf	?___lmul+1,w
  1697     043C  00E1               	movwf	PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST@temp+1
  1698     043D  0848               	movf	?___lmul,w
  1699     043E  00E0               	movwf	PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST@temp
  1700                           
  1701                           ;main.c: 504:     symmetry_total = (temp >> 7);
  1702     043F  0860               	movf	PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST@temp,w
  1703     0440  00DC               	movwf	??_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST
  1704     0441  0861               	movf	PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST@temp+1,w
  1705     0442  00DD               	movwf	??_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST+1
  1706     0443  0862               	movf	PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST@temp+2,w
  1707     0444  00DE               	movwf	??_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST+2
  1708     0445  0863               	movf	PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST@temp+3,w
  1709     0446  00DF               	movwf	??_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST+3
  1710     0447  3007               	movlw	7
  1711     0448                     u1235:
  1712     0448  36DF               	lsrf	??_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST+3,f
  1713     0449  0CDE               	rrf	??_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST+2,f
  1714     044A  0CDD               	rrf	??_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST+1,f
  1715     044B  0CDC               	rrf	??_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST,f
  1716     044C  0B89               	decfsz	9,f
  1717     044D  2C48               	goto	u1235
  1718     044E  085F               	movf	??_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST+3,w
  1719     044F  00A3               	movwf	_symmetry_total+3	;volatile
  1720     0450  085E               	movf	??_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST+2,w
  1721     0451  00A2               	movwf	_symmetry_total+2	;volatile
  1722     0452  085D               	movf	??_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST+1,w
  1723     0453  00A1               	movwf	_symmetry_total+1	;volatile
  1724     0454  085C               	movf	??_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST,w
  1725     0455  00A0               	movwf	_symmetry_total	;volatile
  1726                           
  1727                           ;main.c: 506:     if((current_halfcycle == 0) && (symmetry_status == 0)){
  1728     0456  0845               	movf	_current_halfcycle,w	;volatile
  1729     0457  1D03               	btfss	3,2
  1730     0458  2C5F               	goto	l1837
  1731     0459  0864               	movf	PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST@symmetry_status,w
  1732     045A  1D03               	btfss	3,2
  1733     045B  2C5F               	goto	l1837
  1734     045C                     l1835:
  1735                           
  1736                           ;main.c: 507:         SHORTEN_PERIOD();
  1737     045C  3182  22EE         	fcall	_SHORTEN_PERIOD
  1738                           
  1739                           ;main.c: 508:     }
  1740     045E  0008               	return
  1741     045F                     l1837:
  1742     045F  0845               	movf	_current_halfcycle,w	;volatile
  1743     0460  1D03               	btfss	3,2
  1744     0461  2C6C               	goto	l1843
  1745     0462  0364               	decf	PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST@symmetry_status,w
  1746     0463  1903               	btfsc	3,2
  1747     0464  2C69               	goto	l1841
  1748     0465  2C6C               	goto	l1843
  1749     0466                     l1845:
  1750     0466  0864               	movf	PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST@symmetry_status,w
  1751     0467  1D03               	btfss	3,2
  1752     0468  2C6F               	goto	l1849
  1753     0469                     l1841:
  1754                           
  1755                           ;main.c: 510:         LENGTHEN_PERIOD();
  1756     0469  3184  2476         	fcall	_LENGTHEN_PERIOD
  1757                           
  1758                           ;main.c: 511:     }
  1759     046B  0008               	return
  1760     046C                     l1843:
  1761     046C  0345               	decf	_current_halfcycle,w	;volatile
  1762     046D  1903               	btfsc	3,2
  1763     046E  2C66               	goto	l1845
  1764     046F                     l1849:
  1765     046F  0345               	decf	_current_halfcycle,w	;volatile
  1766     0470  1D03               	btfss	3,2
  1767     0471  0008               	return
  1768     0472  0364               	decf	PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST@symmetry_status,w
  1769     0473  1D03               	btfss	3,2
  1770     0474  0008               	return
  1771     0475  2C5C               	goto	l1835
  1772     0476                     __end_of_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST:
  1773                           
  1774                           	psect	text4
  1775     02EE                     __ptext4:	
  1776 ;; *************** function _SHORTEN_PERIOD *****************
  1777 ;; Defined at:
  1778 ;;		line 437 in file "main.c"
  1779 ;; Parameters:    Size  Location     Type
  1780 ;;		None
  1781 ;; Auto vars:     Size  Location     Type
  1782 ;;  TMR0_raw_ext    2   18[BANK0 ] unsigned short 
  1783 ;;  dTMR0_ideal     2   16[BANK0 ] unsigned short 
  1784 ;; Return value:  Size  Location     Type
  1785 ;;                  1    wreg      unsigned char 
  1786 ;; Registers used:
  1787 ;;		wreg, status,2, status,0, pclath, cstack
  1788 ;; Tracked objects:
  1789 ;;		On entry : 1E/0
  1790 ;;		On exit  : 1F/0
  1791 ;;		Unchanged: 0/0
  1792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1793 ;;      Params:         0       0       0       0
  1794 ;;      Locals:         0       4       0       0
  1795 ;;      Temps:          0       4       0       0
  1796 ;;      Totals:         0       8       0       0
  1797 ;;Total ram usage:        8 bytes
  1798 ;; Hardware stack levels used: 1
  1799 ;; Hardware stack levels required when called: 3
  1800 ;; This function calls:
  1801 ;;		___lmul
  1802 ;; This function is called by:
  1803 ;;		_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST
  1804 ;; This function uses a non-reentrant model
  1805 ;;
  1806                           
  1807     02EE                     _SHORTEN_PERIOD:	
  1808                           ;psect for function _SHORTEN_PERIOD
  1809                           
  1810                           
  1811                           ;main.c: 438:     uint16_t dTMR0_ideal = (uint16_t)((uint32_t)(symmetry_total * 47926) >
      +                          > 16);
  1812                           
  1813                           ;incstack = 0
  1814                           ; Regs used in _SHORTEN_PERIOD: [wreg+status,2+status,0+pclath+cstack]
  1815     02EE  0020               	movlb	0	; select bank0
  1816     02EF  0823               	movf	_symmetry_total+3,w	;volatile
  1817     02F0  00CB               	movwf	___lmul@multiplier+3
  1818     02F1  0822               	movf	_symmetry_total+2,w	;volatile
  1819     02F2  00CA               	movwf	___lmul@multiplier+2
  1820     02F3  0821               	movf	_symmetry_total+1,w	;volatile
  1821     02F4  00C9               	movwf	___lmul@multiplier+1
  1822     02F5  0820               	movf	_symmetry_total,w	;volatile
  1823     02F6  00C8               	movwf	___lmul@multiplier
  1824     02F7  3000               	movlw	0
  1825     02F8  00CF               	movwf	___lmul@multiplicand+3
  1826     02F9  3000               	movlw	0
  1827     02FA  00CE               	movwf	___lmul@multiplicand+2
  1828     02FB  30BB               	movlw	187
  1829     02FC  00CD               	movwf	___lmul@multiplicand+1
  1830     02FD  3036               	movlw	54
  1831     02FE  00CC               	movwf	___lmul@multiplicand
  1832     02FF  3184  24F6  3182   	fcall	___lmul
  1833     0302  0848               	movf	?___lmul,w
  1834     0303  00D4               	movwf	??_SHORTEN_PERIOD
  1835     0304  0849               	movf	?___lmul+1,w
  1836     0305  00D5               	movwf	??_SHORTEN_PERIOD+1
  1837     0306  084A               	movf	?___lmul+2,w
  1838     0307  00D6               	movwf	??_SHORTEN_PERIOD+2
  1839     0308  084B               	movf	?___lmul+3,w
  1840     0309  00D7               	movwf	??_SHORTEN_PERIOD+3
  1841     030A  3010               	movlw	16
  1842     030B                     u1055:
  1843     030B  36D7               	lsrf	??_SHORTEN_PERIOD+3,f
  1844     030C  0CD6               	rrf	??_SHORTEN_PERIOD+2,f
  1845     030D  0CD5               	rrf	??_SHORTEN_PERIOD+1,f
  1846     030E  0CD4               	rrf	??_SHORTEN_PERIOD,f
  1847     030F  0B89               	decfsz	9,f
  1848     0310  2B0B               	goto	u1055
  1849     0311  0855               	movf	??_SHORTEN_PERIOD+1,w
  1850     0312  00D9               	movwf	SHORTEN_PERIOD@dTMR0_ideal+1
  1851     0313  0854               	movf	??_SHORTEN_PERIOD,w
  1852     0314  00D8               	movwf	SHORTEN_PERIOD@dTMR0_ideal
  1853                           
  1854                           ;main.c: 440:     if((dTMR0_ideal + raw_TMR0) < 128){
  1855     0315  0841               	movf	_raw_TMR0,w	;volatile
  1856     0316  0758               	addwf	SHORTEN_PERIOD@dTMR0_ideal,w
  1857     0317  00D4               	movwf	??_SHORTEN_PERIOD
  1858     0318  0859               	movf	SHORTEN_PERIOD@dTMR0_ideal+1,w
  1859     0319  1803               	skipnc
  1860     031A  0A59               	incf	SHORTEN_PERIOD@dTMR0_ideal+1,w
  1861     031B  00D5               	movwf	??_SHORTEN_PERIOD+1
  1862     031C  3000               	movlw	0
  1863     031D  0255               	subwf	??_SHORTEN_PERIOD+1,w
  1864     031E  3080               	movlw	128
  1865     031F  1903               	skipnz
  1866     0320  0254               	subwf	??_SHORTEN_PERIOD,w
  1867     0321  1803               	skipnc
  1868     0322  2B2A               	goto	l1697
  1869                           
  1870                           ;main.c: 441:         TMR0_offset = (uint8_t)dTMR0_ideal;
  1871     0323  0858               	movf	SHORTEN_PERIOD@dTMR0_ideal,w
  1872     0324  00C4               	movwf	_TMR0_offset	;volatile
  1873                           
  1874                           ;main.c: 442:         TMR0_offset_sign = POSITIVE;
  1875     0325  3001               	movlw	1
  1876     0326  00C3               	movwf	_TMR0_offset_sign	;volatile
  1877                           
  1878                           ;main.c: 443:         prescaler_adjust = DO_NOTHING;
  1879     0327  01C2               	clrf	_prescaler_adjust	;volatile
  1880                           
  1881                           ;main.c: 444:         clear_TMR0_please = NO;
  1882     0328  01BF               	clrf	_clear_TMR0_please	;volatile
  1883                           
  1884                           ;main.c: 445:     }
  1885     0329  0008               	return
  1886     032A                     l1697:
  1887     032A  0841               	movf	_raw_TMR0,w	;volatile
  1888     032B  0758               	addwf	SHORTEN_PERIOD@dTMR0_ideal,w
  1889     032C  00D4               	movwf	??_SHORTEN_PERIOD
  1890     032D  0859               	movf	SHORTEN_PERIOD@dTMR0_ideal+1,w
  1891     032E  1803               	skipnc
  1892     032F  0A59               	incf	SHORTEN_PERIOD@dTMR0_ideal+1,w
  1893     0330  00D5               	movwf	??_SHORTEN_PERIOD+1
  1894     0331  3080               	movlw	128
  1895     0332  0654               	xorwf	??_SHORTEN_PERIOD,w
  1896     0333  0455               	iorwf	??_SHORTEN_PERIOD+1,w
  1897     0334  1D03               	btfss	3,2
  1898     0335  2B3E               	goto	l1707
  1899                           
  1900                           ;main.c: 447:         TMR0_offset = 0;
  1901     0336  01C4               	clrf	_TMR0_offset	;volatile
  1902                           
  1903                           ;main.c: 448:         TMR0_offset_sign = DONT_CARE;
  1904     0337  3004               	movlw	4
  1905     0338  00C3               	movwf	_TMR0_offset_sign	;volatile
  1906                           
  1907                           ;main.c: 449:         prescaler_adjust = DIVIDE_BY_TWO;
  1908     0339  3001               	movlw	1
  1909     033A                     L1:
  1910     033A  00C2               	movwf	_prescaler_adjust	;volatile
  1911                           
  1912                           ;main.c: 450:         clear_TMR0_please = YES;
  1913     033B  3001               	movlw	1
  1914     033C  00BF               	movwf	_clear_TMR0_please	;volatile
  1915                           
  1916                           ;main.c: 451:     }
  1917     033D  0008               	return
  1918     033E                     l1707:
  1919     033E  0841               	movf	_raw_TMR0,w	;volatile
  1920     033F  0758               	addwf	SHORTEN_PERIOD@dTMR0_ideal,w
  1921     0340  00D4               	movwf	??_SHORTEN_PERIOD
  1922     0341  0859               	movf	SHORTEN_PERIOD@dTMR0_ideal+1,w
  1923     0342  1803               	skipnc
  1924     0343  0A59               	incf	SHORTEN_PERIOD@dTMR0_ideal+1,w
  1925     0344  00D5               	movwf	??_SHORTEN_PERIOD+1
  1926     0345  3000               	movlw	0
  1927     0346  0255               	subwf	??_SHORTEN_PERIOD+1,w
  1928     0347  3081               	movlw	129
  1929     0348  1903               	skipnz
  1930     0349  0254               	subwf	??_SHORTEN_PERIOD,w
  1931     034A  1C03               	skipc
  1932     034B  0008               	return
  1933                           
  1934                           ;main.c: 453:         uint16_t TMR0_raw_extra = dTMR0_ideal + raw_TMR0 - 128;
  1935     034C  0841               	movf	_raw_TMR0,w	;volatile
  1936     034D  0758               	addwf	SHORTEN_PERIOD@dTMR0_ideal,w
  1937     034E  00D4               	movwf	??_SHORTEN_PERIOD
  1938     034F  0859               	movf	SHORTEN_PERIOD@dTMR0_ideal+1,w
  1939     0350  1803               	skipnc
  1940     0351  0A59               	incf	SHORTEN_PERIOD@dTMR0_ideal+1,w
  1941     0352  00D5               	movwf	??_SHORTEN_PERIOD+1
  1942     0353  0854               	movf	??_SHORTEN_PERIOD,w
  1943     0354  3E80               	addlw	128
  1944     0355  00DA               	movwf	SHORTEN_PERIOD@TMR0_raw_extra
  1945     0356  30FF               	movlw	255
  1946     0357  3D55               	addwfc	??_SHORTEN_PERIOD+1,w
  1947     0358  00DB               	movwf	SHORTEN_PERIOD@TMR0_raw_extra+1
  1948                           
  1949                           ;main.c: 454:         if(TMR0_raw_extra >> 7 == 0){
  1950     0359  085B               	movf	SHORTEN_PERIOD@TMR0_raw_extra+1,w
  1951     035A  00D5               	movwf	??_SHORTEN_PERIOD+1
  1952     035B  085A               	movf	SHORTEN_PERIOD@TMR0_raw_extra,w
  1953     035C  00D4               	movwf	??_SHORTEN_PERIOD
  1954     035D  3007               	movlw	7
  1955     035E                     u1095:
  1956     035E  36D5               	lsrf	??_SHORTEN_PERIOD+1,f
  1957     035F  0CD4               	rrf	??_SHORTEN_PERIOD,f
  1958     0360  0B89               	decfsz	9,f
  1959     0361  2B5E               	goto	u1095
  1960     0362  0854               	movf	??_SHORTEN_PERIOD,w
  1961     0363  0455               	iorwf	??_SHORTEN_PERIOD+1,w
  1962     0364  1D03               	btfss	3,2
  1963     0365  2B6F               	goto	l1713
  1964                           
  1965                           ;main.c: 455:             TMR0_offset = (uint8_t)TMR0_raw_extra;
  1966     0366  085A               	movf	SHORTEN_PERIOD@TMR0_raw_extra,w
  1967     0367  00C4               	movwf	_TMR0_offset	;volatile
  1968                           
  1969                           ;main.c: 456:             TMR0_offset_sign = POSITIVE;
  1970     0368  3001               	movlw	1
  1971     0369  00C3               	movwf	_TMR0_offset_sign	;volatile
  1972                           
  1973                           ;main.c: 457:             prescaler_adjust = DIVIDE_BY_TWO;
  1974     036A  3001               	movlw	1
  1975     036B  00C2               	movwf	_prescaler_adjust	;volatile
  1976                           
  1977                           ;main.c: 458:             clear_TMR0_please = YES;
  1978     036C  3001               	movlw	1
  1979     036D  00BF               	movwf	_clear_TMR0_please	;volatile
  1980                           
  1981                           ;main.c: 459:         }
  1982     036E  0008               	return
  1983     036F                     l1713:
  1984     036F  085B               	movf	SHORTEN_PERIOD@TMR0_raw_extra+1,w
  1985     0370  00D5               	movwf	??_SHORTEN_PERIOD+1
  1986     0371  085A               	movf	SHORTEN_PERIOD@TMR0_raw_extra,w
  1987     0372  00D4               	movwf	??_SHORTEN_PERIOD
  1988     0373  3007               	movlw	7
  1989     0374                     u1115:
  1990     0374  36D5               	lsrf	??_SHORTEN_PERIOD+1,f
  1991     0375  0CD4               	rrf	??_SHORTEN_PERIOD,f
  1992     0376  0B89               	decfsz	9,f
  1993     0377  2B74               	goto	u1115
  1994     0378  0354               	decf	??_SHORTEN_PERIOD,w
  1995     0379  0455               	iorwf	??_SHORTEN_PERIOD+1,w
  1996     037A  1D03               	btfss	3,2
  1997     037B  0008               	return
  1998                           
  1999                           ;main.c: 461:             TMR0_raw_extra = TMR0_raw_extra - 128;
  2000     037C  085A               	movf	SHORTEN_PERIOD@TMR0_raw_extra,w
  2001     037D  3E80               	addlw	128
  2002     037E  00DA               	movwf	SHORTEN_PERIOD@TMR0_raw_extra
  2003     037F  30FF               	movlw	255
  2004     0380  3D5B               	addwfc	SHORTEN_PERIOD@TMR0_raw_extra+1,w
  2005     0381  00DB               	movwf	SHORTEN_PERIOD@TMR0_raw_extra+1
  2006                           
  2007                           ;main.c: 462:             TMR0_offset = (uint8_t)TMR0_raw_extra;
  2008     0382  085A               	movf	SHORTEN_PERIOD@TMR0_raw_extra,w
  2009     0383  00C4               	movwf	_TMR0_offset	;volatile
  2010                           
  2011                           ;main.c: 463:             TMR0_offset_sign = POSITIVE;
  2012     0384  3001               	movlw	1
  2013     0385  00C3               	movwf	_TMR0_offset_sign	;volatile
  2014                           
  2015                           ;main.c: 464:             prescaler_adjust = DIVIDE_BY_FOUR;
  2016     0386  3003               	movlw	3
  2017     0387  2B3A               	goto	L1
  2018     0388                     __end_of_SHORTEN_PERIOD:
  2019                           
  2020                           	psect	text5
  2021     0476                     __ptext5:	
  2022 ;; *************** function _LENGTHEN_PERIOD *****************
  2023 ;; Defined at:
  2024 ;;		line 471 in file "main.c"
  2025 ;; Parameters:    Size  Location     Type
  2026 ;;		None
  2027 ;; Auto vars:     Size  Location     Type
  2028 ;;  dTMR0_ideal     2   16[BANK0 ] unsigned short 
  2029 ;; Return value:  Size  Location     Type
  2030 ;;                  1    wreg      unsigned char 
  2031 ;; Registers used:
  2032 ;;		wreg, status,2, status,0, pclath, cstack
  2033 ;; Tracked objects:
  2034 ;;		On entry : 1E/0
  2035 ;;		On exit  : 1F/0
  2036 ;;		Unchanged: 0/0
  2037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2038 ;;      Params:         0       0       0       0
  2039 ;;      Locals:         0       2       0       0
  2040 ;;      Temps:          0       4       0       0
  2041 ;;      Totals:         0       6       0       0
  2042 ;;Total ram usage:        6 bytes
  2043 ;; Hardware stack levels used: 1
  2044 ;; Hardware stack levels required when called: 3
  2045 ;; This function calls:
  2046 ;;		___lmul
  2047 ;; This function is called by:
  2048 ;;		_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST
  2049 ;; This function uses a non-reentrant model
  2050 ;;
  2051                           
  2052     0476                     _LENGTHEN_PERIOD:	
  2053                           ;psect for function _LENGTHEN_PERIOD
  2054                           
  2055                           
  2056                           ;main.c: 472:     uint16_t dTMR0_ideal = (uint16_t)((uint32_t)(symmetry_total * 17609) >
      +                          > 16);
  2057                           
  2058                           ;incstack = 0
  2059                           ; Regs used in _LENGTHEN_PERIOD: [wreg+status,2+status,0+pclath+cstack]
  2060     0476  0020               	movlb	0	; select bank0
  2061     0477  0823               	movf	_symmetry_total+3,w	;volatile
  2062     0478  00CB               	movwf	___lmul@multiplier+3
  2063     0479  0822               	movf	_symmetry_total+2,w	;volatile
  2064     047A  00CA               	movwf	___lmul@multiplier+2
  2065     047B  0821               	movf	_symmetry_total+1,w	;volatile
  2066     047C  00C9               	movwf	___lmul@multiplier+1
  2067     047D  0820               	movf	_symmetry_total,w	;volatile
  2068     047E  00C8               	movwf	___lmul@multiplier
  2069     047F  3000               	movlw	0
  2070     0480  00CF               	movwf	___lmul@multiplicand+3
  2071     0481  3000               	movlw	0
  2072     0482  00CE               	movwf	___lmul@multiplicand+2
  2073     0483  3044               	movlw	68
  2074     0484  00CD               	movwf	___lmul@multiplicand+1
  2075     0485  30C9               	movlw	201
  2076     0486  00CC               	movwf	___lmul@multiplicand
  2077     0487  3184  24F6  3184   	fcall	___lmul
  2078     048A  0848               	movf	?___lmul,w
  2079     048B  00D4               	movwf	??_LENGTHEN_PERIOD
  2080     048C  0849               	movf	?___lmul+1,w
  2081     048D  00D5               	movwf	??_LENGTHEN_PERIOD+1
  2082     048E  084A               	movf	?___lmul+2,w
  2083     048F  00D6               	movwf	??_LENGTHEN_PERIOD+2
  2084     0490  084B               	movf	?___lmul+3,w
  2085     0491  00D7               	movwf	??_LENGTHEN_PERIOD+3
  2086     0492  3010               	movlw	16
  2087     0493                     u1135:
  2088     0493  36D7               	lsrf	??_LENGTHEN_PERIOD+3,f
  2089     0494  0CD6               	rrf	??_LENGTHEN_PERIOD+2,f
  2090     0495  0CD5               	rrf	??_LENGTHEN_PERIOD+1,f
  2091     0496  0CD4               	rrf	??_LENGTHEN_PERIOD,f
  2092     0497  0B89               	decfsz	9,f
  2093     0498  2C93               	goto	u1135
  2094     0499  0855               	movf	??_LENGTHEN_PERIOD+1,w
  2095     049A  00D9               	movwf	LENGTHEN_PERIOD@dTMR0_ideal+1
  2096     049B  0854               	movf	??_LENGTHEN_PERIOD,w
  2097     049C  00D8               	movwf	LENGTHEN_PERIOD@dTMR0_ideal
  2098                           
  2099                           ;main.c: 474:         if(raw_TMR0 < dTMR0_ideal){
  2100     049D  0841               	movf	_raw_TMR0,w	;volatile
  2101     049E  00D4               	movwf	??_LENGTHEN_PERIOD
  2102     049F  01D5               	clrf	??_LENGTHEN_PERIOD+1
  2103     04A0  0859               	movf	LENGTHEN_PERIOD@dTMR0_ideal+1,w
  2104     04A1  0255               	subwf	??_LENGTHEN_PERIOD+1,w
  2105     04A2  1D03               	skipz
  2106     04A3  2CA6               	goto	u1145
  2107     04A4  0858               	movf	LENGTHEN_PERIOD@dTMR0_ideal,w
  2108     04A5  0254               	subwf	??_LENGTHEN_PERIOD,w
  2109     04A6                     u1145:
  2110     04A6  1803               	skipnc
  2111     04A7  2CB3               	goto	l1739
  2112                           
  2113                           ;main.c: 475:             TMR0_offset = (uint8_t)(128 - (dTMR0_ideal - raw_TMR0));
  2114     04A8  0858               	movf	LENGTHEN_PERIOD@dTMR0_ideal,w
  2115     04A9  0241               	subwf	_raw_TMR0,w
  2116     04AA  3E80               	addlw	128
  2117     04AB  00C4               	movwf	_TMR0_offset	;volatile
  2118                           
  2119                           ;main.c: 476:             TMR0_offset_sign = POSITIVE;
  2120     04AC  3001               	movlw	1
  2121     04AD  00C3               	movwf	_TMR0_offset_sign	;volatile
  2122                           
  2123                           ;main.c: 477:             prescaler_adjust = MULTIPLY_BY_TWO;
  2124     04AE  3002               	movlw	2
  2125     04AF  00C2               	movwf	_prescaler_adjust	;volatile
  2126                           
  2127                           ;main.c: 478:             clear_TMR0_please = YES;
  2128     04B0  3001               	movlw	1
  2129     04B1  00BF               	movwf	_clear_TMR0_please	;volatile
  2130                           
  2131                           ;main.c: 479:         }
  2132     04B2  0008               	return
  2133     04B3                     l1739:
  2134                           
  2135                           ;main.c: 481:             TMR0_offset = (uint8_t)dTMR0_ideal;
  2136     04B3  0858               	movf	LENGTHEN_PERIOD@dTMR0_ideal,w
  2137     04B4  00C4               	movwf	_TMR0_offset	;volatile
  2138                           
  2139                           ;main.c: 482:             TMR0_offset_sign = NEGATIVE;
  2140     04B5  01C3               	clrf	_TMR0_offset_sign	;volatile
  2141                           
  2142                           ;main.c: 483:             prescaler_adjust = DO_NOTHING;
  2143     04B6  01C2               	clrf	_prescaler_adjust	;volatile
  2144                           
  2145                           ;main.c: 484:             clear_TMR0_please = NO;
  2146     04B7  01BF               	clrf	_clear_TMR0_please	;volatile
  2147     04B8  0008               	return
  2148     04B9                     __end_of_LENGTHEN_PERIOD:
  2149                           
  2150                           	psect	text6
  2151     0388                     __ptext6:	
  2152 ;; *************** function _PROCESS_RAW_SPEED_AND_PRESCALER *****************
  2153 ;; Defined at:
  2154 ;;		line 321 in file "main.c"
  2155 ;; Parameters:    Size  Location     Type
  2156 ;;		None
  2157 ;; Auto vars:     Size  Location     Type
  2158 ;;  speed_contro    2   17[BANK0 ] unsigned short 
  2159 ;;  prescaler_ov    1   16[BANK0 ] unsigned char 
  2160 ;; Return value:  Size  Location     Type
  2161 ;;                  1    wreg      unsigned char 
  2162 ;; Registers used:
  2163 ;;		wreg, status,2, status,0, pclath, cstack
  2164 ;; Tracked objects:
  2165 ;;		On entry : 1F/0
  2166 ;;		On exit  : 1E/0
  2167 ;;		Unchanged: 0/0
  2168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2169 ;;      Params:         0       0       0       0
  2170 ;;      Locals:         0       3       0       0
  2171 ;;      Temps:          0       4       0       0
  2172 ;;      Totals:         0       7       0       0
  2173 ;;Total ram usage:        7 bytes
  2174 ;; Hardware stack levels used: 1
  2175 ;; Hardware stack levels required when called: 3
  2176 ;; This function calls:
  2177 ;;		_CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1
  2178 ;;		_TURN_PRESCALER_OFF
  2179 ;;		_TURN_PRESCALER_ON
  2180 ;;		___lmul
  2181 ;; This function is called by:
  2182 ;;		_main
  2183 ;; This function uses a non-reentrant model
  2184 ;;
  2185                           
  2186     0388                     _PROCESS_RAW_SPEED_AND_PRESCALER:	
  2187                           ;psect for function _PROCESS_RAW_SPEED_AND_PRESCALER
  2188                           
  2189                           
  2190                           ;main.c: 322:     current_speed_linear_32 = current_speed_linear;
  2191                           
  2192                           ;incstack = 0
  2193                           ; Regs used in _PROCESS_RAW_SPEED_AND_PRESCALER: [wreg+status,2+status,0+pclath+cstack]
  2194     0388  0838               	movf	_current_speed_linear,w	;volatile
  2195     0389  00A8               	movwf	_current_speed_linear_32	;volatile
  2196     038A  0839               	movf	_current_speed_linear+1,w	;volatile
  2197     038B  00A9               	movwf	_current_speed_linear_32+1	;volatile
  2198     038C  01AA               	clrf	_current_speed_linear_32+2	;volatile
  2199     038D  01AB               	clrf	_current_speed_linear_32+3	;volatile
  2200                           
  2201                           ;main.c: 323:     speed_control_32 = current_speed_linear_32 * 760;;
  2202     038E  082B               	movf	_current_speed_linear_32+3,w	;volatile
  2203     038F  00CB               	movwf	___lmul@multiplier+3
  2204     0390  082A               	movf	_current_speed_linear_32+2,w	;volatile
  2205     0391  00CA               	movwf	___lmul@multiplier+2
  2206     0392  0829               	movf	_current_speed_linear_32+1,w	;volatile
  2207     0393  00C9               	movwf	___lmul@multiplier+1
  2208     0394  0828               	movf	_current_speed_linear_32,w	;volatile
  2209     0395  00C8               	movwf	___lmul@multiplier
  2210     0396  3000               	movlw	0
  2211     0397  00CF               	movwf	___lmul@multiplicand+3
  2212     0398  3000               	movlw	0
  2213     0399  00CE               	movwf	___lmul@multiplicand+2
  2214     039A  3002               	movlw	2
  2215     039B  00CD               	movwf	___lmul@multiplicand+1
  2216     039C  30F8               	movlw	248
  2217     039D  00CC               	movwf	___lmul@multiplicand
  2218     039E  3184  24F6  3183   	fcall	___lmul
  2219     03A1  084B               	movf	?___lmul+3,w
  2220     03A2  00AF               	movwf	_speed_control_32+3	;volatile
  2221     03A3  084A               	movf	?___lmul+2,w
  2222     03A4  00AE               	movwf	_speed_control_32+2	;volatile
  2223     03A5  0849               	movf	?___lmul+1,w
  2224     03A6  00AD               	movwf	_speed_control_32+1	;volatile
  2225     03A7  0848               	movf	?___lmul,w
  2226     03A8  00AC               	movwf	_speed_control_32	;volatile
  2227                           
  2228                           ;main.c: 324:     speed_control_32 = speed_control_32 >> 10;
  2229     03A9  082C               	movf	_speed_control_32,w	;volatile
  2230     03AA  00D4               	movwf	??_PROCESS_RAW_SPEED_AND_PRESCALER
  2231     03AB  082D               	movf	_speed_control_32+1,w	;volatile
  2232     03AC  00D5               	movwf	??_PROCESS_RAW_SPEED_AND_PRESCALER+1
  2233     03AD  082E               	movf	_speed_control_32+2,w	;volatile
  2234     03AE  00D6               	movwf	??_PROCESS_RAW_SPEED_AND_PRESCALER+2
  2235     03AF  082F               	movf	_speed_control_32+3,w	;volatile
  2236     03B0  00D7               	movwf	??_PROCESS_RAW_SPEED_AND_PRESCALER+3
  2237     03B1  300A               	movlw	10
  2238     03B2                     u1165:
  2239     03B2  36D7               	lsrf	??_PROCESS_RAW_SPEED_AND_PRESCALER+3,f
  2240     03B3  0CD6               	rrf	??_PROCESS_RAW_SPEED_AND_PRESCALER+2,f
  2241     03B4  0CD5               	rrf	??_PROCESS_RAW_SPEED_AND_PRESCALER+1,f
  2242     03B5  0CD4               	rrf	??_PROCESS_RAW_SPEED_AND_PRESCALER,f
  2243     03B6  0B89               	decfsz	9,f
  2244     03B7  2BB2               	goto	u1165
  2245     03B8  0857               	movf	??_PROCESS_RAW_SPEED_AND_PRESCALER+3,w
  2246     03B9  00AF               	movwf	_speed_control_32+3	;volatile
  2247     03BA  0856               	movf	??_PROCESS_RAW_SPEED_AND_PRESCALER+2,w
  2248     03BB  00AE               	movwf	_speed_control_32+2	;volatile
  2249     03BC  0855               	movf	??_PROCESS_RAW_SPEED_AND_PRESCALER+1,w
  2250     03BD  00AD               	movwf	_speed_control_32+1	;volatile
  2251     03BE  0854               	movf	??_PROCESS_RAW_SPEED_AND_PRESCALER,w
  2252     03BF  00AC               	movwf	_speed_control_32	;volatile
  2253                           
  2254                           ;main.c: 325:     speed_control = (uint16_t) speed_control_32;
  2255     03C0  082D               	movf	_speed_control_32+1,w	;volatile
  2256     03C1  00BD               	movwf	_speed_control+1	;volatile
  2257     03C2  082C               	movf	_speed_control_32,w	;volatile
  2258     03C3  00BC               	movwf	_speed_control	;volatile
  2259                           
  2260                           ;main.c: 327:         if(speed_control <= (127-12)){
  2261     03C4  3000               	movlw	0
  2262     03C5  023D               	subwf	_speed_control+1,w	;volatile
  2263     03C6  3074               	movlw	116
  2264     03C7  1903               	skipnz
  2265     03C8  023C               	subwf	_speed_control,w	;volatile
  2266     03C9  1803               	skipnc
  2267     03CA  2BD1               	goto	l1789
  2268                           
  2269                           ;main.c: 328:             raw_TMR0 = (uint8_t) speed_control + 12;
  2270     03CB  083C               	movf	_speed_control,w	;volatile
  2271     03CC  3E0C               	addlw	12
  2272     03CD  00C1               	movwf	_raw_TMR0	;volatile
  2273                           
  2274                           ;main.c: 329:             base_prescaler_bits_index = 1;
  2275     03CE  3001               	movlw	1
  2276     03CF  00C0               	movwf	_base_prescaler_bits_index	;volatile
  2277                           
  2278                           ;main.c: 330:         }
  2279     03D0  0008               	return
  2280     03D1                     l1789:
  2281                           
  2282                           ;main.c: 332:             uint16_t speed_control_subtracted;;main.c: 333:             sp
      +                          eed_control_subtracted = speed_control - (127-12);
  2283     03D1  083C               	movf	_speed_control,w	;volatile
  2284     03D2  3E8D               	addlw	141
  2285     03D3  00D9               	movwf	PROCESS_RAW_SPEED_AND_PRESCALER@speed_control_subtracted
  2286     03D4  30FF               	movlw	255
  2287     03D5  3D3D               	addwfc	_speed_control+1,w	;volatile
  2288     03D6  00DA               	movwf	PROCESS_RAW_SPEED_AND_PRESCALER@speed_control_subtracted+1
  2289                           
  2290                           ;main.c: 334:             how_many_128 = (uint8_t)(speed_control_subtracted >> 7);
  2291     03D7  085A               	movf	PROCESS_RAW_SPEED_AND_PRESCALER@speed_control_subtracted+1,w
  2292     03D8  00D5               	movwf	??_PROCESS_RAW_SPEED_AND_PRESCALER+1
  2293     03D9  0859               	movf	PROCESS_RAW_SPEED_AND_PRESCALER@speed_control_subtracted,w
  2294     03DA  00D4               	movwf	??_PROCESS_RAW_SPEED_AND_PRESCALER
  2295     03DB  3007               	movlw	7
  2296     03DC                     u1185:
  2297     03DC  36D5               	lsrf	??_PROCESS_RAW_SPEED_AND_PRESCALER+1,f
  2298     03DD  0CD4               	rrf	??_PROCESS_RAW_SPEED_AND_PRESCALER,f
  2299     03DE  0B89               	decfsz	9,f
  2300     03DF  2BDC               	goto	u1185
  2301     03E0  0854               	movf	??_PROCESS_RAW_SPEED_AND_PRESCALER,w
  2302     03E1  00D6               	movwf	??_PROCESS_RAW_SPEED_AND_PRESCALER+2
  2303     03E2  01D7               	clrf	??_PROCESS_RAW_SPEED_AND_PRESCALER+3
  2304     03E3  0856               	movf	??_PROCESS_RAW_SPEED_AND_PRESCALER+2,w
  2305     03E4  00BA               	movwf	_how_many_128	;volatile
  2306     03E5  0857               	movf	??_PROCESS_RAW_SPEED_AND_PRESCALER+3,w
  2307     03E6  00BB               	movwf	_how_many_128+1	;volatile
  2308                           
  2309                           ;main.c: 335:             raw_TMR0 = (uint8_t) (speed_control_subtracted - (how_many_128
      +                           << 7));
  2310     03E7  083A               	movf	_how_many_128,w	;volatile
  2311     03E8  00D4               	movwf	??_PROCESS_RAW_SPEED_AND_PRESCALER
  2312     03E9  3006               	movlw	6
  2313     03EA                     u1195:
  2314     03EA  35D4               	lslf	??_PROCESS_RAW_SPEED_AND_PRESCALER,f
  2315     03EB  3EFF               	addlw	-1
  2316     03EC  1D03               	skipz
  2317     03ED  2BEA               	goto	u1195
  2318     03EE  3554               	lslf	??_PROCESS_RAW_SPEED_AND_PRESCALER,w
  2319     03EF  0759               	addwf	PROCESS_RAW_SPEED_AND_PRESCALER@speed_control_subtracted,w
  2320     03F0  00C1               	movwf	_raw_TMR0	;volatile
  2321                           
  2322                           ;main.c: 338:             base_prescaler_bits_index = (uint8_t)(how_many_128 + 2);
  2323     03F1  083A               	movf	_how_many_128,w	;volatile
  2324     03F2  3E02               	addlw	2
  2325     03F3  00C0               	movwf	_base_prescaler_bits_index	;volatile
  2326                           
  2327                           ;main.c: 339:             uint8_t prescaler_overflow_flag = CHECK_IF_PRESCALER_NEEDS_TO_
      +                          BE_1_1();
  2328     03F4  3185  25BF  3183   	fcall	_CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1
  2329     03F7  0020               	movlb	0	; select bank0
  2330     03F8  00D8               	movwf	PROCESS_RAW_SPEED_AND_PRESCALER@prescaler_overflow_flag
  2331                           
  2332                           ;main.c: 340:             if(prescaler_overflow_flag){
  2333     03F9  0858               	movf	PROCESS_RAW_SPEED_AND_PRESCALER@prescaler_overflow_flag,w
  2334     03FA  1903               	btfsc	3,2
  2335     03FB  2BFF               	goto	l1797
  2336                           
  2337                           ;main.c: 341:                 TURN_PRESCALER_OFF();
  2338     03FC  3186  262D         	fcall	_TURN_PRESCALER_OFF
  2339                           
  2340                           ;main.c: 342:             }
  2341     03FE  0008               	return
  2342     03FF                     l1797:
  2343                           
  2344                           ;main.c: 344:                 TURN_PRESCALER_ON();
  2345     03FF  3186  2636         	fcall	_TURN_PRESCALER_ON
  2346     0401  0008               	return
  2347     0402                     __end_of_PROCESS_RAW_SPEED_AND_PRESCALER:
  2348                           
  2349                           	psect	text7
  2350     04F6                     __ptext7:	
  2351 ;; *************** function ___lmul *****************
  2352 ;; Defined at:
  2353 ;;		line 15 in file "/Applications/microchip/xc8/v2.45/pic/sources/c99/common/Umul32.c"
  2354 ;; Parameters:    Size  Location     Type
  2355 ;;  multiplier      4    0[BANK0 ] unsigned long 
  2356 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  2357 ;; Auto vars:     Size  Location     Type
  2358 ;;  product         4    8[BANK0 ] unsigned long 
  2359 ;; Return value:  Size  Location     Type
  2360 ;;                  4    0[BANK0 ] unsigned long 
  2361 ;; Registers used:
  2362 ;;		wreg, status,2, status,0
  2363 ;; Tracked objects:
  2364 ;;		On entry : 1F/0
  2365 ;;		On exit  : 1F/0
  2366 ;;		Unchanged: 0/0
  2367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2368 ;;      Params:         0       8       0       0
  2369 ;;      Locals:         0       4       0       0
  2370 ;;      Temps:          0       0       0       0
  2371 ;;      Totals:         0      12       0       0
  2372 ;;Total ram usage:       12 bytes
  2373 ;; Hardware stack levels used: 1
  2374 ;; Hardware stack levels required when called: 2
  2375 ;; This function calls:
  2376 ;;		Nothing
  2377 ;; This function is called by:
  2378 ;;		_PROCESS_RAW_SPEED_AND_PRESCALER
  2379 ;;		_SHORTEN_PERIOD
  2380 ;;		_LENGTHEN_PERIOD
  2381 ;;		_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST
  2382 ;; This function uses a non-reentrant model
  2383 ;;
  2384                           
  2385     04F6                     ___lmul:	
  2386                           ;psect for function ___lmul
  2387                           
  2388                           
  2389                           ;incstack = 0
  2390                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  2391     04F6  3000               	movlw	0
  2392     04F7  00D3               	movwf	___lmul@product+3
  2393     04F8  3000               	movlw	0
  2394     04F9  00D2               	movwf	___lmul@product+2
  2395     04FA  3000               	movlw	0
  2396     04FB  00D1               	movwf	___lmul@product+1
  2397     04FC  3000               	movlw	0
  2398     04FD  00D0               	movwf	___lmul@product
  2399     04FE                     l1611:
  2400     04FE  1C48               	btfss	___lmul@multiplier,0
  2401     04FF  2D08               	goto	l1615
  2402     0500  084C               	movf	___lmul@multiplicand,w
  2403     0501  07D0               	addwf	___lmul@product,f
  2404     0502  084D               	movf	___lmul@multiplicand+1,w
  2405     0503  3DD1               	addwfc	___lmul@product+1,f
  2406     0504  084E               	movf	___lmul@multiplicand+2,w
  2407     0505  3DD2               	addwfc	___lmul@product+2,f
  2408     0506  084F               	movf	___lmul@multiplicand+3,w
  2409     0507  3DD3               	addwfc	___lmul@product+3,f
  2410     0508                     l1615:
  2411     0508  3001               	movlw	1
  2412     0509                     u995:
  2413     0509  35CC               	lslf	___lmul@multiplicand,f
  2414     050A  0DCD               	rlf	___lmul@multiplicand+1,f
  2415     050B  0DCE               	rlf	___lmul@multiplicand+2,f
  2416     050C  0DCF               	rlf	___lmul@multiplicand+3,f
  2417     050D  0B89               	decfsz	9,f
  2418     050E  2D09               	goto	u995
  2419     050F  3001               	movlw	1
  2420     0510                     u1005:
  2421     0510  36CB               	lsrf	___lmul@multiplier+3,f
  2422     0511  0CCA               	rrf	___lmul@multiplier+2,f
  2423     0512  0CC9               	rrf	___lmul@multiplier+1,f
  2424     0513  0CC8               	rrf	___lmul@multiplier,f
  2425     0514  0B89               	decfsz	9,f
  2426     0515  2D10               	goto	u1005
  2427     0516  084B               	movf	___lmul@multiplier+3,w
  2428     0517  044A               	iorwf	___lmul@multiplier+2,w
  2429     0518  0449               	iorwf	___lmul@multiplier+1,w
  2430     0519  0448               	iorwf	___lmul@multiplier,w
  2431     051A  1D03               	skipz
  2432     051B  2CFE               	goto	l1611
  2433     051C  0853               	movf	___lmul@product+3,w
  2434     051D  00CB               	movwf	?___lmul+3
  2435     051E  0852               	movf	___lmul@product+2,w
  2436     051F  00CA               	movwf	?___lmul+2
  2437     0520  0851               	movf	___lmul@product+1,w
  2438     0521  00C9               	movwf	?___lmul+1
  2439     0522  0850               	movf	___lmul@product,w
  2440     0523  00C8               	movwf	?___lmul
  2441     0524  0008               	return
  2442     0525                     __end_of___lmul:
  2443                           
  2444                           	psect	text8
  2445     0636                     __ptext8:	
  2446 ;; *************** function _TURN_PRESCALER_ON *****************
  2447 ;; Defined at:
  2448 ;;		line 368 in file "main.c"
  2449 ;; Parameters:    Size  Location     Type
  2450 ;;		None
  2451 ;; Auto vars:     Size  Location     Type
  2452 ;;		None
  2453 ;; Return value:  Size  Location     Type
  2454 ;;                  1    wreg      unsigned char 
  2455 ;; Registers used:
  2456 ;;		status,2
  2457 ;; Tracked objects:
  2458 ;;		On entry : 1F/0
  2459 ;;		On exit  : 1F/1
  2460 ;;		Unchanged: 0/0
  2461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2462 ;;      Params:         0       0       0       0
  2463 ;;      Locals:         0       0       0       0
  2464 ;;      Temps:          0       0       0       0
  2465 ;;      Totals:         0       0       0       0
  2466 ;;Total ram usage:        0 bytes
  2467 ;; Hardware stack levels used: 1
  2468 ;; Hardware stack levels required when called: 2
  2469 ;; This function calls:
  2470 ;;		Nothing
  2471 ;; This function is called by:
  2472 ;;		_PROCESS_RAW_SPEED_AND_PRESCALER
  2473 ;; This function uses a non-reentrant model
  2474 ;;
  2475                           
  2476     0636                     _TURN_PRESCALER_ON:	
  2477                           ;psect for function _TURN_PRESCALER_ON
  2478                           
  2479                           
  2480                           ;main.c: 369:     OPTION_REG = OPTION_REG & (0<<3);
  2481                           
  2482                           ;incstack = 0
  2483                           ; Regs used in _TURN_PRESCALER_ON: [status,2]
  2484     0636  0021               	movlb	1	; select bank1
  2485     0637  0195               	clrf	21	;volatile
  2486     0638  0008               	return
  2487     0639                     __end_of_TURN_PRESCALER_ON:
  2488                           
  2489                           	psect	text9
  2490     062D                     __ptext9:	
  2491 ;; *************** function _TURN_PRESCALER_OFF *****************
  2492 ;; Defined at:
  2493 ;;		line 362 in file "main.c"
  2494 ;; Parameters:    Size  Location     Type
  2495 ;;		None
  2496 ;; Auto vars:     Size  Location     Type
  2497 ;;		None
  2498 ;; Return value:  Size  Location     Type
  2499 ;;                  1    wreg      unsigned char 
  2500 ;; Registers used:
  2501 ;;		wreg, status,2
  2502 ;; Tracked objects:
  2503 ;;		On entry : 1F/0
  2504 ;;		On exit  : 1F/1
  2505 ;;		Unchanged: 0/0
  2506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2507 ;;      Params:         0       0       0       0
  2508 ;;      Locals:         0       0       0       0
  2509 ;;      Temps:          0       0       0       0
  2510 ;;      Totals:         0       0       0       0
  2511 ;;Total ram usage:        0 bytes
  2512 ;; Hardware stack levels used: 1
  2513 ;; Hardware stack levels required when called: 2
  2514 ;; This function calls:
  2515 ;;		Nothing
  2516 ;; This function is called by:
  2517 ;;		_PROCESS_RAW_SPEED_AND_PRESCALER
  2518 ;; This function uses a non-reentrant model
  2519 ;;
  2520                           
  2521     062D                     _TURN_PRESCALER_OFF:	
  2522                           ;psect for function _TURN_PRESCALER_OFF
  2523                           
  2524                           
  2525                           ;main.c: 363:     OPTION_REG = OPTION_REG & (1<<3);
  2526                           
  2527                           ;incstack = 0
  2528                           ; Regs used in _TURN_PRESCALER_OFF: [wreg+status,2]
  2529     062D  0021               	movlb	1	; select bank1
  2530     062E  0815               	movf	21,w	;volatile
  2531     062F  3908               	andlw	8
  2532     0630  0095               	movwf	21	;volatile
  2533     0631  0008               	return
  2534     0632                     __end_of_TURN_PRESCALER_OFF:
  2535                           
  2536                           	psect	text10
  2537     05BF                     __ptext10:	
  2538 ;; *************** function _CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1 *****************
  2539 ;; Defined at:
  2540 ;;		line 351 in file "main.c"
  2541 ;; Parameters:    Size  Location     Type
  2542 ;;		None
  2543 ;; Auto vars:     Size  Location     Type
  2544 ;;		None
  2545 ;; Return value:  Size  Location     Type
  2546 ;;                  1    wreg      unsigned char 
  2547 ;; Registers used:
  2548 ;;		wreg
  2549 ;; Tracked objects:
  2550 ;;		On entry : 1F/0
  2551 ;;		On exit  : 0/0
  2552 ;;		Unchanged: 0/0
  2553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2554 ;;      Params:         0       0       0       0
  2555 ;;      Locals:         0       0       0       0
  2556 ;;      Temps:          0       3       0       0
  2557 ;;      Totals:         0       3       0       0
  2558 ;;Total ram usage:        3 bytes
  2559 ;; Hardware stack levels used: 1
  2560 ;; Hardware stack levels required when called: 2
  2561 ;; This function calls:
  2562 ;;		Nothing
  2563 ;; This function is called by:
  2564 ;;		_PROCESS_RAW_SPEED_AND_PRESCALER
  2565 ;; This function uses a non-reentrant model
  2566 ;;
  2567                           
  2568     05BF                     _CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1:	
  2569                           ;psect for function _CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1
  2570                           
  2571                           
  2572                           ;main.c: 352:     if(((base_prescaler_bits_index + 1) > 7)){
  2573                           
  2574                           ;incstack = 0
  2575                           ; Regs used in _CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1: [wreg]
  2576     05BF  0840               	movf	_base_prescaler_bits_index,w	;volatile
  2577     05C0  3E01               	addlw	1
  2578     05C1  00C8               	movwf	??_CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1
  2579     05C2  3000               	movlw	0
  2580     05C3  1803               	skipnc
  2581     05C4  3001               	movlw	1
  2582     05C5  00C9               	movwf	??_CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1+1
  2583     05C6  0849               	movf	??_CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1+1,w
  2584     05C7  3A80               	xorlw	128
  2585     05C8  00CA               	movwf	??_CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1+2
  2586     05C9  3080               	movlw	128
  2587     05CA  024A               	subwf	??_CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1+2,w
  2588     05CB  3008               	movlw	8
  2589     05CC  1903               	btfsc	3,2
  2590     05CD  0248               	subwf	??_CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1,w
  2591     05CE  1C03               	skipc
  2592     05CF  2DD2               	goto	l1333
  2593                           
  2594                           ;main.c: 354:         return 1;
  2595     05D0  3001               	movlw	1
  2596     05D1  0008               	return
  2597     05D2                     l1333:
  2598                           
  2599                           ;main.c: 357:         return 0;
  2600     05D2  3000               	movlw	0
  2601     05D3  0008               	return
  2602     05D4                     __end_of_CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1:
  2603                           
  2604                           	psect	text11
  2605     05E7                     __ptext11:	
  2606 ;; *************** function _PROCESS_FINAL_SPEED_AND_PRESCALER *****************
  2607 ;; Defined at:
  2608 ;;		line 374 in file "main.c"
  2609 ;; Parameters:    Size  Location     Type
  2610 ;;		None
  2611 ;; Auto vars:     Size  Location     Type
  2612 ;;		None
  2613 ;; Return value:  Size  Location     Type
  2614 ;;                  1    wreg      unsigned char 
  2615 ;; Registers used:
  2616 ;;		wreg, fsr0l, fsr0h, pclath
  2617 ;; Tracked objects:
  2618 ;;		On entry : 1F/0
  2619 ;;		On exit  : 1F/1
  2620 ;;		Unchanged: 0/0
  2621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2622 ;;      Params:         0       0       0       0
  2623 ;;      Locals:         0       0       0       0
  2624 ;;      Temps:          0       0       0       0
  2625 ;;      Totals:         0       0       0       0
  2626 ;;Total ram usage:        0 bytes
  2627 ;; Hardware stack levels used: 1
  2628 ;; Hardware stack levels required when called: 2
  2629 ;; This function calls:
  2630 ;;		Nothing
  2631 ;; This function is called by:
  2632 ;;		_main
  2633 ;; This function uses a non-reentrant model
  2634 ;;
  2635                           
  2636     05E7                     _PROCESS_FINAL_SPEED_AND_PRESCALER:	
  2637                           ;psect for function _PROCESS_FINAL_SPEED_AND_PRESCALER
  2638                           
  2639                           
  2640                           ;main.c: 393:     final_TMR0 = raw_TMR0;
  2641                           
  2642                           ;incstack = 0
  2643                           ; Regs used in _PROCESS_FINAL_SPEED_AND_PRESCALER: [wreg-fsr0h+pclath]
  2644     05E7  0841               	movf	_raw_TMR0,w	;volatile
  2645     05E8  00F5               	movwf	_final_TMR0	;volatile
  2646                           
  2647                           ;main.c: 394:     OPTION_REG = prescaler_bits[base_prescaler_bits_index];
  2648     05E9  0840               	movf	_base_prescaler_bits_index,w	;volatile
  2649     05EA  3E09               	addlw	low (_prescaler_bits| (0+32768))
  2650     05EB  0084               	movwf	4
  2651     05EC  3086               	movlw	high (_prescaler_bits| (0+32768))
  2652     05ED  1803               	skipnc
  2653     05EE  3E01               	addlw	1
  2654     05EF  0085               	movwf	5
  2655     05F0  0800               	movf	0,w	;code access
  2656     05F1  0021               	movlb	1	; select bank1
  2657     05F2  0095               	movwf	21	;volatile
  2658     05F3  0008               	return
  2659     05F4                     __end_of_PROCESS_FINAL_SPEED_AND_PRESCALER:
  2660                           
  2661                           	psect	text12
  2662     04B9                     __ptext12:	
  2663 ;; *************** function _GET_CURRENT_POT_VALUES *****************
  2664 ;; Defined at:
  2665 ;;		line 303 in file "main.c"
  2666 ;; Parameters:    Size  Location     Type
  2667 ;;		None
  2668 ;; Auto vars:     Size  Location     Type
  2669 ;;  symmetry_ADC    1    0        unsigned char 
  2670 ;; Return value:  Size  Location     Type
  2671 ;;                  1    wreg      unsigned char 
  2672 ;; Registers used:
  2673 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2674 ;; Tracked objects:
  2675 ;;		On entry : 1E/1
  2676 ;;		On exit  : 1F/0
  2677 ;;		Unchanged: 0/0
  2678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2679 ;;      Params:         0       0       0       0
  2680 ;;      Locals:         0       0       0       0
  2681 ;;      Temps:          0       2       0       0
  2682 ;;      Totals:         0       2       0       0
  2683 ;;Total ram usage:        2 bytes
  2684 ;; Hardware stack levels used: 1
  2685 ;; Hardware stack levels required when called: 4
  2686 ;; This function calls:
  2687 ;;		_DETERMINE_WAVESHAPE
  2688 ;;		_DO_ADC
  2689 ;; This function is called by:
  2690 ;;		_main
  2691 ;; This function uses a non-reentrant model
  2692 ;;
  2693                           
  2694     04B9                     _GET_CURRENT_POT_VALUES:	
  2695                           ;psect for function _GET_CURRENT_POT_VALUES
  2696                           
  2697                           
  2698                           ;main.c: 304:     current_waveshape = DETERMINE_WAVESHAPE();
  2699                           
  2700                           ;incstack = 0
  2701                           ; Regs used in _GET_CURRENT_POT_VALUES: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2702     04B9  3185  2578  3184   	fcall	_DETERMINE_WAVESHAPE
  2703     04BC  00F2               	movwf	_current_waveshape	;volatile
  2704                           
  2705                           ;main.c: 305:     current_speed_linear = DO_ADC(&speed_adc_config_value);
  2706     04BD  3048               	movlw	low (_speed_adc_config_value| (0+32768))
  2707     04BE  00C8               	movwf	DO_ADC@modifier
  2708     04BF  3086               	movlw	high (_speed_adc_config_value| (0+32768))
  2709     04C0  00C9               	movwf	DO_ADC@modifier+1
  2710     04C1  3185  2525  3184   	fcall	_DO_ADC
  2711     04C4  0849               	movf	?_DO_ADC+1,w
  2712     04C5  00B9               	movwf	_current_speed_linear+1	;volatile
  2713     04C6  0848               	movf	?_DO_ADC,w
  2714     04C7  00B8               	movwf	_current_speed_linear	;volatile
  2715                           
  2716                           ;main.c: 307:         current_depth = DO_ADC(&depth_adc_config_value);
  2717     04C8  3047               	movlw	low (_depth_adc_config_value| (0+32768))
  2718     04C9  00C8               	movwf	DO_ADC@modifier
  2719     04CA  3086               	movlw	high (_depth_adc_config_value| (0+32768))
  2720     04CB  00C9               	movwf	DO_ADC@modifier+1
  2721     04CC  3185  2525  3184   	fcall	_DO_ADC
  2722     04CF  0849               	movf	?_DO_ADC+1,w
  2723     04D0  00B5               	movwf	_current_depth+1	;volatile
  2724     04D1  0848               	movf	?_DO_ADC,w
  2725     04D2  00B4               	movwf	_current_depth	;volatile
  2726                           
  2727                           ;main.c: 308:         current_depth = current_depth >> 2;
  2728     04D3  0835               	movf	_current_depth+1,w	;volatile
  2729     04D4  00D1               	movwf	??_GET_CURRENT_POT_VALUES+1
  2730     04D5  0834               	movf	_current_depth,w	;volatile
  2731     04D6  00D0               	movwf	??_GET_CURRENT_POT_VALUES
  2732     04D7  36D1               	lsrf	??_GET_CURRENT_POT_VALUES+1,f
  2733     04D8  0CD0               	rrf	??_GET_CURRENT_POT_VALUES,f
  2734     04D9  36D1               	lsrf	??_GET_CURRENT_POT_VALUES+1,f
  2735     04DA  0CD0               	rrf	??_GET_CURRENT_POT_VALUES,f
  2736     04DB  0850               	movf	??_GET_CURRENT_POT_VALUES,w
  2737     04DC  00B4               	movwf	_current_depth	;volatile
  2738     04DD  0851               	movf	??_GET_CURRENT_POT_VALUES+1,w
  2739     04DE  00B5               	movwf	_current_depth+1	;volatile
  2740                           
  2741                           ;main.c: 311:         current_symmetry = DO_ADC(&symmetry_adc_config_value);
  2742     04DF  3046               	movlw	low (_symmetry_adc_config_value| (0+32768))
  2743     04E0  00C8               	movwf	DO_ADC@modifier
  2744     04E1  3086               	movlw	high (_symmetry_adc_config_value| (0+32768))
  2745     04E2  00C9               	movwf	DO_ADC@modifier+1
  2746     04E3  3185  2525         	fcall	_DO_ADC
  2747     04E5  0849               	movf	?_DO_ADC+1,w
  2748     04E6  00B3               	movwf	_current_symmetry+1	;volatile
  2749     04E7  0848               	movf	?_DO_ADC,w
  2750     04E8  00B2               	movwf	_current_symmetry	;volatile
  2751                           
  2752                           ;main.c: 314:             current_symmetry = current_symmetry >> 2;
  2753                           
  2754                           ;main.c: 313:         if(symmetry_ADC_resolution == 8){
  2755     04E9  0833               	movf	_current_symmetry+1,w	;volatile
  2756     04EA  00D1               	movwf	??_GET_CURRENT_POT_VALUES+1
  2757     04EB  0832               	movf	_current_symmetry,w	;volatile
  2758     04EC  00D0               	movwf	??_GET_CURRENT_POT_VALUES
  2759     04ED  36D1               	lsrf	??_GET_CURRENT_POT_VALUES+1,f
  2760     04EE  0CD0               	rrf	??_GET_CURRENT_POT_VALUES,f
  2761     04EF  36D1               	lsrf	??_GET_CURRENT_POT_VALUES+1,f
  2762     04F0  0CD0               	rrf	??_GET_CURRENT_POT_VALUES,f
  2763     04F1  0850               	movf	??_GET_CURRENT_POT_VALUES,w
  2764     04F2  00B2               	movwf	_current_symmetry	;volatile
  2765     04F3  0851               	movf	??_GET_CURRENT_POT_VALUES+1,w
  2766     04F4  00B3               	movwf	_current_symmetry+1	;volatile
  2767     04F5  0008               	return
  2768     04F6                     __end_of_GET_CURRENT_POT_VALUES:
  2769                           
  2770                           	psect	text13
  2771     0578                     __ptext13:	
  2772 ;; *************** function _DETERMINE_WAVESHAPE *****************
  2773 ;; Defined at:
  2774 ;;		line 224 in file "main.c"
  2775 ;; Parameters:    Size  Location     Type
  2776 ;;		None
  2777 ;; Auto vars:     Size  Location     Type
  2778 ;;  ADC             2    6[BANK0 ] unsigned short 
  2779 ;; Return value:  Size  Location     Type
  2780 ;;                  1    wreg      unsigned char 
  2781 ;; Registers used:
  2782 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2783 ;; Tracked objects:
  2784 ;;		On entry : 1E/1
  2785 ;;		On exit  : 1F/0
  2786 ;;		Unchanged: 0/0
  2787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2788 ;;      Params:         0       0       0       0
  2789 ;;      Locals:         0       2       0       0
  2790 ;;      Temps:          0       0       0       0
  2791 ;;      Totals:         0       2       0       0
  2792 ;;Total ram usage:        2 bytes
  2793 ;; Hardware stack levels used: 1
  2794 ;; Hardware stack levels required when called: 3
  2795 ;; This function calls:
  2796 ;;		_DO_ADC
  2797 ;; This function is called by:
  2798 ;;		_GET_CURRENT_POT_VALUES
  2799 ;; This function uses a non-reentrant model
  2800 ;;
  2801                           
  2802     0578                     _DETERMINE_WAVESHAPE:	
  2803                           ;psect for function _DETERMINE_WAVESHAPE
  2804                           
  2805                           
  2806                           ;main.c: 225:     uint16_t ADC = DO_ADC(&waveshape_adc_config_value);
  2807                           
  2808                           ;incstack = 0
  2809                           ; Regs used in _DETERMINE_WAVESHAPE: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2810     0578  3049               	movlw	low (_waveshape_adc_config_value| (0+32768))
  2811     0579  0020               	movlb	0	; select bank0
  2812     057A  00C8               	movwf	DO_ADC@modifier
  2813     057B  3086               	movlw	high (_waveshape_adc_config_value| (0+32768))
  2814     057C  00C9               	movwf	DO_ADC@modifier+1
  2815     057D  3185  2525  3185   	fcall	_DO_ADC
  2816     0580  0849               	movf	?_DO_ADC+1,w
  2817     0581  00CF               	movwf	DETERMINE_WAVESHAPE@ADC+1
  2818     0582  0848               	movf	?_DO_ADC,w
  2819     0583  00CE               	movwf	DETERMINE_WAVESHAPE@ADC
  2820                           
  2821                           ;main.c: 226:     if(ADC <= 341){
  2822     0584  3001               	movlw	1
  2823     0585  024F               	subwf	DETERMINE_WAVESHAPE@ADC+1,w
  2824     0586  3056               	movlw	86
  2825     0587  1903               	skipnz
  2826     0588  024E               	subwf	DETERMINE_WAVESHAPE@ADC,w
  2827     0589  1803               	skipnc
  2828     058A  2D8D               	goto	l1645
  2829                           
  2830                           ;main.c: 227:             return 0;
  2831     058B  3000               	movlw	0
  2832     058C  0008               	return
  2833     058D                     l1645:
  2834                           
  2835                           ;main.c: 229:         if (ADC <= 682){
  2836     058D  3002               	movlw	2
  2837     058E  024F               	subwf	DETERMINE_WAVESHAPE@ADC+1,w
  2838     058F  30AB               	movlw	171
  2839     0590  1903               	skipnz
  2840     0591  024E               	subwf	DETERMINE_WAVESHAPE@ADC,w
  2841     0592  1803               	skipnc
  2842     0593  2D96               	goto	l1651
  2843     0594                     l1647:
  2844                           
  2845                           ;main.c: 230:             return 1;
  2846     0594  3001               	movlw	1
  2847     0595  0008               	return
  2848     0596                     l1651:
  2849                           
  2850                           ;main.c: 232:         if (ADC <= 1023){
  2851     0596  3004               	movlw	4
  2852     0597  024F               	subwf	DETERMINE_WAVESHAPE@ADC+1,w
  2853     0598  3000               	movlw	0
  2854     0599  1903               	skipnz
  2855     059A  024E               	subwf	DETERMINE_WAVESHAPE@ADC,w
  2856     059B  1803               	skipnc
  2857     059C  2D94               	goto	l1647
  2858                           
  2859                           ;main.c: 233:             return 2;
  2860     059D  3002               	movlw	2
  2861     059E  0008               	return
  2862     059F                     __end_of_DETERMINE_WAVESHAPE:
  2863                           
  2864                           	psect	text14
  2865     0525                     __ptext14:	
  2866 ;; *************** function _DO_ADC *****************
  2867 ;; Defined at:
  2868 ;;		line 209 in file "main.c"
  2869 ;; Parameters:    Size  Location     Type
  2870 ;;  modifier        2    0[BANK0 ] PTR const unsigned char 
  2871 ;;		 -> symmetry_adc_config_value(1), depth_adc_config_value(1), speed_adc_config_value(1), waveshape_adc_config_value(1
      +), 
  2872 ;; Auto vars:     Size  Location     Type
  2873 ;;  adc_result      2    3[BANK0 ] unsigned short 
  2874 ;;  temp            1    5[BANK0 ] unsigned char 
  2875 ;; Return value:  Size  Location     Type
  2876 ;;                  2    0[BANK0 ] unsigned short 
  2877 ;; Registers used:
  2878 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  2879 ;; Tracked objects:
  2880 ;;		On entry : 1F/0
  2881 ;;		On exit  : 1F/0
  2882 ;;		Unchanged: 0/0
  2883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2884 ;;      Params:         0       2       0       0
  2885 ;;      Locals:         0       3       0       0
  2886 ;;      Temps:          0       1       0       0
  2887 ;;      Totals:         0       6       0       0
  2888 ;;Total ram usage:        6 bytes
  2889 ;; Hardware stack levels used: 1
  2890 ;; Hardware stack levels required when called: 2
  2891 ;; This function calls:
  2892 ;;		Nothing
  2893 ;; This function is called by:
  2894 ;;		_DETERMINE_WAVESHAPE
  2895 ;;		_GET_CURRENT_POT_VALUES
  2896 ;; This function uses a non-reentrant model
  2897 ;;
  2898                           
  2899     0525                     _DO_ADC:	
  2900                           ;psect for function _DO_ADC
  2901                           
  2902                           
  2903                           ;main.c: 210:     ADCON0 = 0x00;
  2904                           
  2905                           ;incstack = 0
  2906                           ; Regs used in _DO_ADC: [wreg-fsr0h+status,2+status,0+pclath]
  2907     0525  0021               	movlb	1	; select bank1
  2908     0526  019D               	clrf	29	;volatile
  2909                           
  2910                           ;main.c: 212:     uint8_t temp = (uint8_t)(*modifier << 2);
  2911     0527  0020               	movlb	0	; select bank0
  2912     0528  0848               	movf	DO_ADC@modifier,w
  2913     0529  0084               	movwf	4
  2914     052A  0849               	movf	DO_ADC@modifier+1,w
  2915     052B  0085               	movwf	5
  2916     052C  0800               	movf	0,w	;code access
  2917     052D  00CA               	movwf	??_DO_ADC
  2918     052E  3001               	movlw	1
  2919     052F                     u965:
  2920     052F  35CA               	lslf	??_DO_ADC,f
  2921     0530  3EFF               	addlw	-1
  2922     0531  1D03               	skipz
  2923     0532  2D2F               	goto	u965
  2924     0533  354A               	lslf	??_DO_ADC,w
  2925     0534  00CD               	movwf	DO_ADC@temp
  2926                           
  2927                           ;main.c: 213:     ADCON0 = ADCON0 | temp;
  2928     0535  0021               	movlb	1	; select bank1
  2929     0536  081D               	movf	29,w	;volatile
  2930     0537  0020               	movlb	0	; select bank0
  2931     0538  044D               	iorwf	DO_ADC@temp,w
  2932     0539  0021               	movlb	1	; select bank1
  2933     053A  009D               	movwf	29	;volatile
  2934                           
  2935                           ;main.c: 214:     ADON = 1;
  2936     053B  141D               	bsf	29,0	;volatile
  2937                           
  2938                           ;main.c: 215:     _delay((unsigned long)((0.005)*(32000000/4000.0)));
  2939     053C  300D               	movlw	13
  2940     053D                     u1327:
  2941     053D  0B89               	decfsz	9,f
  2942     053E  2D3D               	goto	u1327
  2943     053F  0000               	nop
  2944                           
  2945                           ;main.c: 216:     GO_nDONE = 1;
  2946     0540  0021               	movlb	1	; select bank1
  2947     0541  149D               	bsf	29,1	;volatile
  2948     0542                     l160:	
  2949                           ;main.c: 217:     while(GO_nDONE == 1){}
  2950                           
  2951     0542  189D               	btfsc	29,1	;volatile
  2952     0543  2D42               	goto	l160
  2953                           
  2954                           ;main.c: 218:     ADON = 0;
  2955     0544  101D               	bcf	29,0	;volatile
  2956                           
  2957                           ;main.c: 219:     uint16_t adc_result = ((uint16_t)(ADRESH << 8) | ADRESL);
  2958     0545  081C               	movf	28,w	;volatile
  2959     0546  0020               	movlb	0	; select bank0
  2960     0547  00CC               	movwf	DO_ADC@adc_result+1
  2961     0548  0021               	movlb	1	; select bank1
  2962     0549  081B               	movf	27,w	;volatile
  2963     054A  0020               	movlb	0	; select bank0
  2964     054B  00CB               	movwf	DO_ADC@adc_result
  2965                           
  2966                           ;main.c: 220:     return adc_result;
  2967     054C  084C               	movf	DO_ADC@adc_result+1,w
  2968     054D  00C9               	movwf	?_DO_ADC+1
  2969     054E  084B               	movf	DO_ADC@adc_result,w
  2970     054F  00C8               	movwf	?_DO_ADC
  2971     0550  0008               	return
  2972     0551                     __end_of_DO_ADC:
  2973                           
  2974                           	psect	text15
  2975     063B                     __ptext15:	
  2976 ;; *************** function _CONFIG_TMR0_INTERRUPT *****************
  2977 ;; Defined at:
  2978 ;;		line 282 in file "main.c"
  2979 ;; Parameters:    Size  Location     Type
  2980 ;;		None
  2981 ;; Auto vars:     Size  Location     Type
  2982 ;;		None
  2983 ;; Return value:  Size  Location     Type
  2984 ;;                  1    wreg      unsigned char 
  2985 ;; Registers used:
  2986 ;;		None
  2987 ;; Tracked objects:
  2988 ;;		On entry : B1F/1
  2989 ;;		On exit  : B1F/1
  2990 ;;		Unchanged: B1F/0
  2991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2992 ;;      Params:         0       0       0       0
  2993 ;;      Locals:         0       0       0       0
  2994 ;;      Temps:          0       0       0       0
  2995 ;;      Totals:         0       0       0       0
  2996 ;;Total ram usage:        0 bytes
  2997 ;; Hardware stack levels used: 1
  2998 ;; Hardware stack levels required when called: 2
  2999 ;; This function calls:
  3000 ;;		Nothing
  3001 ;; This function is called by:
  3002 ;;		_main
  3003 ;; This function uses a non-reentrant model
  3004 ;;
  3005                           
  3006     063B                     _CONFIG_TMR0_INTERRUPT:	
  3007                           ;psect for function _CONFIG_TMR0_INTERRUPT
  3008                           
  3009                           
  3010                           ;main.c: 283:     TMR0IE = 1;
  3011                           
  3012                           ;incstack = 0
  3013                           ; Regs used in _CONFIG_TMR0_INTERRUPT: []
  3014     063B  168B               	bsf	11,5	;volatile
  3015                           
  3016                           ;main.c: 284:     return 1;;	Return value of _CONFIG_TMR0_INTERRUPT is never used
  3017     063C  0008               	return
  3018     063D                     __end_of_CONFIG_TMR0_INTERRUPT:
  3019                           
  3020                           	psect	text16
  3021     05F4                     __ptext16:	
  3022 ;; *************** function _CONFIG_SYSTEM *****************
  3023 ;; Defined at:
  3024 ;;		line 288 in file "main.c"
  3025 ;; Parameters:    Size  Location     Type
  3026 ;;		None
  3027 ;; Auto vars:     Size  Location     Type
  3028 ;;		None
  3029 ;; Return value:  Size  Location     Type
  3030 ;;                  1    wreg      unsigned char 
  3031 ;; Registers used:
  3032 ;;		wreg, status,2, status,0, pclath, cstack
  3033 ;; Tracked objects:
  3034 ;;		On entry : B1F/0
  3035 ;;		On exit  : B1F/0
  3036 ;;		Unchanged: B00/0
  3037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3038 ;;      Params:         0       0       0       0
  3039 ;;      Locals:         0       0       0       0
  3040 ;;      Temps:          0       0       0       0
  3041 ;;      Totals:         0       0       0       0
  3042 ;;Total ram usage:        0 bytes
  3043 ;; Hardware stack levels used: 1
  3044 ;; Hardware stack levels required when called: 3
  3045 ;; This function calls:
  3046 ;;		_CONFIG_ADC_PINS
  3047 ;;		_CONFIG_INT_OSC
  3048 ;;		_CONFIG_PORTS
  3049 ;;		_CONFIG_PWM_CCP3
  3050 ;; This function is called by:
  3051 ;;		_main
  3052 ;; This function uses a non-reentrant model
  3053 ;;
  3054                           
  3055     05F4                     _CONFIG_SYSTEM:	
  3056                           ;psect for function _CONFIG_SYSTEM
  3057                           
  3058                           
  3059                           ;main.c: 289:     CONFIG_INT_OSC();
  3060                           
  3061                           ;incstack = 0
  3062                           ; Regs used in _CONFIG_SYSTEM: [wreg+status,2+status,0+pclath+cstack]
  3063     05F4  3186  2627  3185   	fcall	_CONFIG_INT_OSC
  3064                           
  3065                           ;main.c: 290:     CONFIG_PORTS();
  3066     05F7  3186  2600  3185   	fcall	_CONFIG_PORTS
  3067                           
  3068                           ;main.c: 291:     CONFIG_ADC_PINS();
  3069     05FA  3186  2632  3185   	fcall	_CONFIG_ADC_PINS
  3070                           
  3071                           ;main.c: 292:     CONFIG_PWM_CCP3();
  3072     05FD  3185  25D4         	fcall	_CONFIG_PWM_CCP3
  3073     05FF  0008               	return
  3074     0600                     __end_of_CONFIG_SYSTEM:
  3075                           
  3076                           	psect	text17
  3077     05D4                     __ptext17:	
  3078 ;; *************** function _CONFIG_PWM_CCP3 *****************
  3079 ;; Defined at:
  3080 ;;		line 253 in file "main.c"
  3081 ;; Parameters:    Size  Location     Type
  3082 ;;		None
  3083 ;; Auto vars:     Size  Location     Type
  3084 ;;		None
  3085 ;; Return value:  Size  Location     Type
  3086 ;;                  1    wreg      unsigned char 
  3087 ;; Registers used:
  3088 ;;		wreg, status,2
  3089 ;; Tracked objects:
  3090 ;;		On entry : B1F/1
  3091 ;;		On exit  : B1F/0
  3092 ;;		Unchanged: B00/0
  3093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3094 ;;      Params:         0       0       0       0
  3095 ;;      Locals:         0       0       0       0
  3096 ;;      Temps:          0       0       0       0
  3097 ;;      Totals:         0       0       0       0
  3098 ;;Total ram usage:        0 bytes
  3099 ;; Hardware stack levels used: 1
  3100 ;; Hardware stack levels required when called: 2
  3101 ;; This function calls:
  3102 ;;		Nothing
  3103 ;; This function is called by:
  3104 ;;		_CONFIG_SYSTEM
  3105 ;; This function uses a non-reentrant model
  3106 ;;
  3107                           
  3108     05D4                     _CONFIG_PWM_CCP3:	
  3109                           ;psect for function _CONFIG_PWM_CCP3
  3110                           
  3111                           
  3112                           ;main.c: 254:     SRLEN = 0;
  3113                           
  3114                           ;incstack = 0
  3115                           ; Regs used in _CONFIG_PWM_CCP3: [wreg+status,2]
  3116     05D4  0022               	movlb	2	; select bank2
  3117     05D5  139A               	bcf	26,7	;volatile
  3118                           
  3119                           ;main.c: 255:     C1ON = 0;
  3120     05D6  1391               	bcf	17,7	;volatile
  3121                           
  3122                           ;main.c: 257:     TRISA2 = 1;
  3123     05D7  0021               	movlb	1	; select bank1
  3124     05D8  150C               	bsf	12,2	;volatile
  3125                           
  3126                           ;main.c: 258:     PR2 = 0xFF;
  3127     05D9  30FF               	movlw	255
  3128     05DA  0020               	movlb	0	; select bank0
  3129     05DB  009B               	movwf	27	;volatile
  3130                           
  3131                           ;main.c: 259:     CCP3CON = CCP3CON | 0b00001111;
  3132     05DC  0026               	movlb	6	; select bank6
  3133     05DD  0813               	movf	19,w	;volatile
  3134     05DE  380F               	iorlw	15
  3135     05DF  0093               	movwf	19	;volatile
  3136                           
  3137                           ;main.c: 261:     CCPTMRS0 = 0x00;
  3138     05E0  0025               	movlb	5	; select bank5
  3139     05E1  019E               	clrf	30	;volatile
  3140                           
  3141                           ;main.c: 262:     TMR2IF = 0;
  3142     05E2  0020               	movlb	0	; select bank0
  3143     05E3  1091               	bcf	17,1	;volatile
  3144                           
  3145                           ;main.c: 263:     T2CON = T2CON | 0b00000000;
  3146     05E4  081C               	movf	28,w	;volatile
  3147     05E5  009C               	movwf	28	;volatile
  3148     05E6  0008               	return
  3149     05E7                     __end_of_CONFIG_PWM_CCP3:
  3150                           
  3151                           	psect	text18
  3152     0600                     __ptext18:	
  3153 ;; *************** function _CONFIG_PORTS *****************
  3154 ;; Defined at:
  3155 ;;		line 195 in file "main.c"
  3156 ;; Parameters:    Size  Location     Type
  3157 ;;		None
  3158 ;; Auto vars:     Size  Location     Type
  3159 ;;		None
  3160 ;; Return value:  Size  Location     Type
  3161 ;;                  1    wreg      unsigned char 
  3162 ;; Registers used:
  3163 ;;		wreg, status,2
  3164 ;; Tracked objects:
  3165 ;;		On entry : B1F/1
  3166 ;;		On exit  : B1F/4
  3167 ;;		Unchanged: B00/0
  3168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3169 ;;      Params:         0       0       0       0
  3170 ;;      Locals:         0       0       0       0
  3171 ;;      Temps:          0       0       0       0
  3172 ;;      Totals:         0       0       0       0
  3173 ;;Total ram usage:        0 bytes
  3174 ;; Hardware stack levels used: 1
  3175 ;; Hardware stack levels required when called: 2
  3176 ;; This function calls:
  3177 ;;		Nothing
  3178 ;; This function is called by:
  3179 ;;		_CONFIG_SYSTEM
  3180 ;; This function uses a non-reentrant model
  3181 ;;
  3182                           
  3183     0600                     _CONFIG_PORTS:	
  3184                           ;psect for function _CONFIG_PORTS
  3185                           
  3186                           
  3187                           ;main.c: 196:     ANSELC = 0b00001111;
  3188                           
  3189                           ;incstack = 0
  3190                           ; Regs used in _CONFIG_PORTS: [wreg+status,2]
  3191     0600  300F               	movlw	15
  3192     0601  0023               	movlb	3	; select bank3
  3193     0602  008E               	movwf	14	;volatile
  3194                           
  3195                           ;main.c: 197:     TRISC = 0b00001111;
  3196     0603  300F               	movlw	15
  3197     0604  0021               	movlb	1	; select bank1
  3198     0605  008E               	movwf	14	;volatile
  3199                           
  3200                           ;main.c: 198:     WPUC = 0b00000000;
  3201     0606  0024               	movlb	4	; select bank4
  3202     0607  018E               	clrf	14	;volatile
  3203     0608  0008               	return
  3204     0609                     __end_of_CONFIG_PORTS:
  3205                           
  3206                           	psect	text19
  3207     0627                     __ptext19:	
  3208 ;; *************** function _CONFIG_INT_OSC *****************
  3209 ;; Defined at:
  3210 ;;		line 187 in file "main.c"
  3211 ;; Parameters:    Size  Location     Type
  3212 ;;		None
  3213 ;; Auto vars:     Size  Location     Type
  3214 ;;		None
  3215 ;; Return value:  Size  Location     Type
  3216 ;;                  1    wreg      unsigned char 
  3217 ;; Registers used:
  3218 ;;		wreg
  3219 ;; Tracked objects:
  3220 ;;		On entry : B1F/0
  3221 ;;		On exit  : B1F/1
  3222 ;;		Unchanged: B00/0
  3223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3224 ;;      Params:         0       0       0       0
  3225 ;;      Locals:         0       0       0       0
  3226 ;;      Temps:          0       0       0       0
  3227 ;;      Totals:         0       0       0       0
  3228 ;;Total ram usage:        0 bytes
  3229 ;; Hardware stack levels used: 1
  3230 ;; Hardware stack levels required when called: 2
  3231 ;; This function calls:
  3232 ;;		Nothing
  3233 ;; This function is called by:
  3234 ;;		_CONFIG_SYSTEM
  3235 ;; This function uses a non-reentrant model
  3236 ;;
  3237                           
  3238     0627                     _CONFIG_INT_OSC:	
  3239                           ;psect for function _CONFIG_INT_OSC
  3240                           
  3241                           
  3242                           ;main.c: 188:     OSCCON = 0b11110000;
  3243                           
  3244                           ;incstack = 0
  3245                           ; Regs used in _CONFIG_INT_OSC: [wreg]
  3246     0627  30F0               	movlw	240
  3247     0628  0021               	movlb	1	; select bank1
  3248     0629  0099               	movwf	25	;volatile
  3249                           
  3250                           ;main.c: 189:     OSCTUNE = 0b00011111;
  3251     062A  301F               	movlw	31
  3252     062B  0098               	movwf	24	;volatile
  3253     062C  0008               	return
  3254     062D                     __end_of_CONFIG_INT_OSC:
  3255                           
  3256                           	psect	text20
  3257     0632                     __ptext20:	
  3258 ;; *************** function _CONFIG_ADC_PINS *****************
  3259 ;; Defined at:
  3260 ;;		line 203 in file "main.c"
  3261 ;; Parameters:    Size  Location     Type
  3262 ;;		None
  3263 ;; Auto vars:     Size  Location     Type
  3264 ;;		None
  3265 ;; Return value:  Size  Location     Type
  3266 ;;                  1    wreg      unsigned char 
  3267 ;; Registers used:
  3268 ;;		wreg
  3269 ;; Tracked objects:
  3270 ;;		On entry : B1F/4
  3271 ;;		On exit  : B1F/1
  3272 ;;		Unchanged: B00/0
  3273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3274 ;;      Params:         0       0       0       0
  3275 ;;      Locals:         0       0       0       0
  3276 ;;      Temps:          0       0       0       0
  3277 ;;      Totals:         0       0       0       0
  3278 ;;Total ram usage:        0 bytes
  3279 ;; Hardware stack levels used: 1
  3280 ;; Hardware stack levels required when called: 2
  3281 ;; This function calls:
  3282 ;;		Nothing
  3283 ;; This function is called by:
  3284 ;;		_CONFIG_SYSTEM
  3285 ;; This function uses a non-reentrant model
  3286 ;;
  3287                           
  3288     0632                     _CONFIG_ADC_PINS:	
  3289                           ;psect for function _CONFIG_ADC_PINS
  3290                           
  3291                           
  3292                           ;main.c: 204:     ADCON1 = 0b10100000;
  3293                           
  3294                           ;incstack = 0
  3295                           ; Regs used in _CONFIG_ADC_PINS: [wreg]
  3296     0632  30A0               	movlw	160
  3297     0633  0021               	movlb	1	; select bank1
  3298     0634  009E               	movwf	30	;volatile
  3299     0635  0008               	return
  3300     0636                     __end_of_CONFIG_ADC_PINS:
  3301                           
  3302                           	psect	intentry
  3303     0004                     __pintentry:	
  3304 ;; *************** function _INTERRUPT_InterruptManager *****************
  3305 ;; Defined at:
  3306 ;;		line 522 in file "main.c"
  3307 ;; Parameters:    Size  Location     Type
  3308 ;;		None
  3309 ;; Auto vars:     Size  Location     Type
  3310 ;;		None
  3311 ;; Return value:  Size  Location     Type
  3312 ;;                  1    wreg      void 
  3313 ;; Registers used:
  3314 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3315 ;; Tracked objects:
  3316 ;;		On entry : 0/0
  3317 ;;		On exit  : 0/0
  3318 ;;		Unchanged: 0/0
  3319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3320 ;;      Params:         0       0       0       0
  3321 ;;      Locals:         0       0       0       0
  3322 ;;      Temps:          2       0       0       0
  3323 ;;      Totals:         2       0       0       0
  3324 ;;Total ram usage:        2 bytes
  3325 ;; Hardware stack levels used: 1
  3326 ;; Hardware stack levels required when called: 1
  3327 ;; This function calls:
  3328 ;;		_SET_DUTY_CCP3
  3329 ;; This function is called by:
  3330 ;;		Interrupt level 1
  3331 ;; This function uses a non-reentrant model
  3332 ;;
  3333                           
  3334     0004                     _INTERRUPT_InterruptManager:
  3335                           
  3336                           ;incstack = 0
  3337     0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  3338                           
  3339                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3340     0005  3180               	pagesel	$
  3341                           
  3342                           ;main.c: 523:     if(TMR0IF == 1){
  3343     0006  1D0B               	btfss	11,2	;volatile
  3344     0007  28CD               	goto	i1l283
  3345                           
  3346                           ;main.c: 524:     GIE = 0;
  3347     0008  138B               	bcf	11,7	;volatile
  3348                           
  3349                           ;main.c: 525:     TMR0 = final_TMR0;
  3350     0009  0875               	movf	_final_TMR0,w	;volatile
  3351     000A  0020               	movlb	0	; select bank0
  3352     000B  0095               	movwf	21	;volatile
  3353                           
  3354                           ;main.c: 526:     LATC5 = 1;
  3355     000C  0022               	movlb	2	; select bank2
  3356     000D  168E               	bsf	14,5	;volatile
  3357                           
  3358                           ;main.c: 527:     TMR0IF = 0;
  3359     000E  110B               	bcf	11,2	;volatile
  3360                           
  3361                           ;main.c: 529:     if(current_waveshape == 0){
  3362     000F  0872               	movf	_current_waveshape,w	;volatile
  3363     0010  1D03               	btfss	3,2
  3364     0011  2822               	goto	i1l1525
  3365                           
  3366                           ;main.c: 530:         duty = tri_table_one_quadrant[current_one_quadrant_index];
  3367     0012  0871               	movf	_current_one_quadrant_index,w	;volatile
  3368     0013  00FA               	movwf	??_INTERRUPT_InterruptManager
  3369     0014  01FB               	clrf	??_INTERRUPT_InterruptManager+1
  3370     0015  35FA               	lslf	??_INTERRUPT_InterruptManager,f
  3371     0016  0DFB               	rlf	??_INTERRUPT_InterruptManager+1,f
  3372     0017  30EA               	movlw	low _tri_table_one_quadrant
  3373     0018  077A               	addwf	??_INTERRUPT_InterruptManager,w
  3374     0019  0084               	movwf	4
  3375     001A  3000               	movlw	high _tri_table_one_quadrant
  3376     001B  3D7B               	addwfc	??_INTERRUPT_InterruptManager+1,w
  3377     001C  3880               	iorlw	128
  3378     001D  0085               	movwf	5
  3379     001E  3F00               	moviw [0]fsr0
  3380     001F  00F3               	movwf	_duty	;volatile
  3381     0020  3F01               	moviw [1]fsr0
  3382     0021  283C               	goto	L2
  3383     0022                     i1l1525:	
  3384                           ;main.c: 531:     }
  3385                           
  3386     0022  0372               	decf	_current_waveshape,w	;volatile
  3387     0023  1D03               	btfss	3,2
  3388     0024  2835               	goto	i1l1529
  3389                           
  3390                           ;main.c: 533:         duty = sine_table_one_quadrant[current_one_quadrant_index];
  3391     0025  0871               	movf	_current_one_quadrant_index,w	;volatile
  3392     0026  00FA               	movwf	??_INTERRUPT_InterruptManager
  3393     0027  01FB               	clrf	??_INTERRUPT_InterruptManager+1
  3394     0028  35FA               	lslf	??_INTERRUPT_InterruptManager,f
  3395     0029  0DFB               	rlf	??_INTERRUPT_InterruptManager+1,f
  3396     002A  30EC               	movlw	low _sine_table_one_quadrant
  3397     002B  077A               	addwf	??_INTERRUPT_InterruptManager,w
  3398     002C  0084               	movwf	4
  3399     002D  3001               	movlw	high _sine_table_one_quadrant
  3400     002E  3D7B               	addwfc	??_INTERRUPT_InterruptManager+1,w
  3401     002F  3880               	iorlw	128
  3402     0030  0085               	movwf	5
  3403     0031  3F00               	moviw [0]fsr0
  3404     0032  00F3               	movwf	_duty	;volatile
  3405     0033  3F01               	moviw [1]fsr0
  3406     0034  283C               	goto	L2
  3407     0035                     i1l1529:	
  3408                           ;main.c: 534:     }
  3409                           
  3410     0035  3002               	movlw	2
  3411     0036  0672               	xorwf	_current_waveshape,w	;volatile
  3412     0037  1D03               	btfss	3,2
  3413     0038  283D               	goto	i1l1533
  3414                           
  3415                           ;main.c: 536:         duty = 1023;
  3416     0039  30FF               	movlw	255
  3417     003A  00F3               	movwf	_duty	;volatile
  3418     003B  3003               	movlw	3
  3419     003C                     L2:
  3420     003C  00F4               	movwf	_duty+1	;volatile
  3421     003D                     i1l1533:
  3422                           
  3423                           ;main.c: 538:     if(current_one_quadrant_index == 128){
  3424     003D  3080               	movlw	128
  3425     003E  0671               	xorwf	_current_one_quadrant_index,w	;volatile
  3426     003F  1D03               	btfss	3,2
  3427     0040  2843               	goto	i1l1537
  3428                           
  3429                           ;main.c: 539:         current_quadrant = 1;
  3430     0041  3001               	movlw	1
  3431     0042  00F0               	movwf	_current_quadrant	;volatile
  3432     0043                     i1l1537:
  3433                           
  3434                           ;main.c: 541:     if(current_one_quadrant_index == 0){
  3435     0043  0871               	movf	_current_one_quadrant_index,w	;volatile
  3436     0044  1D03               	btfss	3,2
  3437     0045  284F               	goto	i1l1547
  3438                           
  3439                           ;main.c: 542:         current_quadrant = 0;
  3440     0046  01F0               	clrf	_current_quadrant	;volatile
  3441                           
  3442                           ;main.c: 543:         if(current_halfcycle == 0){
  3443     0047  0020               	movlb	0	; select bank0
  3444     0048  0845               	movf	_current_halfcycle,w	;volatile
  3445     0049  1D03               	btfss	3,2
  3446     004A  284E               	goto	i1l1545
  3447                           
  3448                           ;main.c: 544:             current_halfcycle = 1;
  3449     004B  3001               	movlw	1
  3450     004C  00C5               	movwf	_current_halfcycle	;volatile
  3451                           
  3452                           ;main.c: 545:         }
  3453     004D  284F               	goto	i1l1547
  3454     004E                     i1l1545:
  3455                           
  3456                           ;main.c: 547:             current_halfcycle = 0;
  3457     004E  01C5               	clrf	_current_halfcycle	;volatile
  3458     004F                     i1l1547:
  3459                           
  3460                           ;main.c: 550:         if(current_quadrant == 0){
  3461     004F  0870               	movf	_current_quadrant,w	;volatile
  3462     0050  1D03               	btfss	3,2
  3463     0051  2857               	goto	i1l1551
  3464                           
  3465                           ;main.c: 551:             current_one_quadrant_index++;
  3466     0052  3001               	movlw	1
  3467     0053  00FA               	movwf	??_INTERRUPT_InterruptManager
  3468     0054  087A               	movf	??_INTERRUPT_InterruptManager,w
  3469     0055  07F1               	addwf	_current_one_quadrant_index,f	;volatile
  3470                           
  3471                           ;main.c: 552:         }
  3472     0056  2859               	goto	i1l279
  3473     0057                     i1l1551:
  3474                           
  3475                           ;main.c: 554:             current_one_quadrant_index--;
  3476     0057  3001               	movlw	1
  3477     0058  02F1               	subwf	_current_one_quadrant_index,f	;volatile
  3478     0059                     i1l279:	
  3479                           ;main.c: 555:         }
  3480                           
  3481                           
  3482                           ;main.c: 556:         if(current_halfcycle == 1){
  3483     0059  0020               	movlb	0	; select bank0
  3484     005A  0345               	decf	_current_halfcycle,w	;volatile
  3485     005B  1D03               	btfss	3,2
  3486     005C  2867               	goto	i1l280
  3487                           
  3488                           ;main.c: 557:         duty = 1023 - duty;
  3489     005D  30FF               	movlw	255
  3490     005E  00FA               	movwf	??_INTERRUPT_InterruptManager
  3491     005F  3003               	movlw	3
  3492     0060  00FB               	movwf	??_INTERRUPT_InterruptManager+1
  3493     0061  0873               	movf	_duty,w	;volatile
  3494     0062  027A               	subwf	??_INTERRUPT_InterruptManager,w
  3495     0063  00F3               	movwf	_duty	;volatile
  3496     0064  0874               	movf	_duty+1,w	;volatile
  3497     0065  3B7B               	subwfb	??_INTERRUPT_InterruptManager+1,w
  3498     0066  00F4               	movwf	_duty+1	;volatile
  3499     0067                     i1l280:	
  3500                           ;main.c: 558:         }
  3501                           
  3502                           
  3503                           ;main.c: 562:         if(current_depth != 0){
  3504     0067  0834               	movf	_current_depth,w	;volatile
  3505     0068  0435               	iorwf	_current_depth+1,w	;volatile
  3506     0069  1903               	btfsc	3,2
  3507     006A  28C3               	goto	i1l1559
  3508                           
  3509                           ;main.c: 563:             duty_low_byte = duty & 0xFF;
  3510     006B  0873               	movf	_duty,w	;volatile
  3511     006C  00C7               	movwf	_duty_low_byte	;volatile
  3512                           
  3513                           ;main.c: 564:             duty_high_byte = duty >> 8;
  3514     006D  0874               	movf	_duty+1,w	;volatile
  3515     006E  00C6               	movwf	_duty_high_byte	;volatile
  3516     006F  01A2               	clrf	34	;# 
  3517     0070  01A0               	clrf	32	;# 
  3518     0071  1003               	bcf	3,0	;# 
  3519     0072  0834               	movf	_current_depth,w	;# 
  3520     0073  1847               	btfsc	_duty_low_byte,0	;# 
  3521     0074  07A2               	addwf	34,f	;# 
  3522     0075  0CA2               	rrf	34,f	;# 
  3523     0076  0CA0               	rrf	32,f	;# 
  3524     0077  18C7               	btfsc	_duty_low_byte,1	;# 
  3525     0078  07A2               	addwf	34,f	;# 
  3526     0079  0CA2               	rrf	34,f	;# 
  3527     007A  0CA0               	rrf	32,f	;# 
  3528     007B  1947               	btfsc	_duty_low_byte,2	;# 
  3529     007C  07A2               	addwf	34,f	;# 
  3530     007D  0CA2               	rrf	34,f	;# 
  3531     007E  0CA0               	rrf	32,f	;# 
  3532     007F  19C7               	btfsc	_duty_low_byte,3	;# 
  3533     0080  07A2               	addwf	34,f	;# 
  3534     0081  0CA2               	rrf	34,f	;# 
  3535     0082  0CA0               	rrf	32,f	;# 
  3536     0083  1A47               	btfsc	_duty_low_byte,4	;# 
  3537     0084  07A2               	addwf	34,f	;# 
  3538     0085  0CA2               	rrf	34,f	;# 
  3539     0086  0CA0               	rrf	32,f	;# 
  3540     0087  1AC7               	btfsc	_duty_low_byte,5	;# 
  3541     0088  07A2               	addwf	34,f	;# 
  3542     0089  0CA2               	rrf	34,f	;# 
  3543     008A  0CA0               	rrf	32,f	;# 
  3544     008B  1B47               	btfsc	_duty_low_byte,6	;# 
  3545     008C  07A2               	addwf	34,f	;# 
  3546     008D  0CA2               	rrf	34,f	;# 
  3547     008E  0CA0               	rrf	32,f	;# 
  3548     008F  1BC7               	btfsc	_duty_low_byte,7	;# 
  3549     0090  07A2               	addwf	34,f	;# 
  3550     0091  0CA2               	rrf	34,f	;# 
  3551     0092  0CA0               	rrf	32,f	;# 
  3552     0093  01A1               	clrf	33	;# 
  3553     0094  1846               	btfsc	_duty_high_byte,0	;# 
  3554     0095  07A2               	addwf	34,f	;# 
  3555     0096  0CA2               	rrf	34,f	;# 
  3556     0097  0CA1               	rrf	33,f	;# 
  3557     0098  18C6               	btfsc	_duty_high_byte,1	;# 
  3558     0099  07A2               	addwf	34,f	;# 
  3559     009A  0CA2               	rrf	34,f	;# 
  3560     009B  0CA1               	rrf	33,f	;# 
  3561     009C  1946               	btfsc	_duty_high_byte,2	;# 
  3562     009D  07A2               	addwf	34,f	;# 
  3563     009E  0CA2               	rrf	34,f	;# 
  3564     009F  0CA1               	rrf	33,f	;# 
  3565     00A0  19C6               	btfsc	_duty_high_byte,3	;# 
  3566     00A1  07A2               	addwf	34,f	;# 
  3567     00A2  0CA2               	rrf	34,f	;# 
  3568     00A3  0CA1               	rrf	33,f	;# 
  3569     00A4  1A46               	btfsc	_duty_high_byte,4	;# 
  3570     00A5  07A2               	addwf	34,f	;# 
  3571     00A6  0CA2               	rrf	34,f	;# 
  3572     00A7  0CA1               	rrf	33,f	;# 
  3573     00A8  1AC6               	btfsc	_duty_high_byte,5	;# 
  3574     00A9  07A2               	addwf	34,f	;# 
  3575     00AA  0CA2               	rrf	34,f	;# 
  3576     00AB  0CA1               	rrf	33,f	;# 
  3577     00AC  1B46               	btfsc	_duty_high_byte,6	;# 
  3578     00AD  07A2               	addwf	34,f	;# 
  3579     00AE  0CA2               	rrf	34,f	;# 
  3580     00AF  0CA1               	rrf	33,f	;# 
  3581     00B0  1BC6               	btfsc	_duty_high_byte,7	;# 
  3582     00B1  07A2               	addwf	34,f	;# 
  3583     00B2  0CA2               	rrf	34,f	;# 
  3584     00B3  0CA1               	rrf	33,f	;# 
  3585                           
  3586                           ;main.c: 599:             duty = 1023 - *top_two_bytes_ptr;
  3587     00B4  0020               	movlb	0	; select bank0
  3588     00B5  0865               	movf	_top_two_bytes_ptr,w
  3589     00B6  0086               	movwf	6
  3590     00B7  0866               	movf	_top_two_bytes_ptr+1,w
  3591     00B8  0087               	movwf	7
  3592     00B9  30FF               	movlw	255
  3593     00BA  00FA               	movwf	??_INTERRUPT_InterruptManager
  3594     00BB  3003               	movlw	3
  3595     00BC  00FB               	movwf	??_INTERRUPT_InterruptManager+1
  3596     00BD  3F40               	moviw [0]fsr1
  3597     00BE  027A               	subwf	??_INTERRUPT_InterruptManager,w
  3598     00BF  00F3               	movwf	_duty	;volatile
  3599     00C0  3F41               	moviw [1]fsr1
  3600     00C1  3B7B               	subwfb	??_INTERRUPT_InterruptManager+1,w
  3601     00C2  28C6               	goto	L3
  3602     00C3                     i1l1559:	
  3603                           ;main.c: 600:         }
  3604                           
  3605                           
  3606                           ;main.c: 602:             duty = 1023;
  3607     00C3  30FF               	movlw	255
  3608     00C4  00F3               	movwf	_duty	;volatile
  3609     00C5  3003               	movlw	3
  3610     00C6                     L3:
  3611     00C6  00F4               	movwf	_duty+1	;volatile
  3612                           
  3613                           ;main.c: 607:     SET_DUTY_CCP3(&duty);
  3614     00C7  3073               	movlw	(low (_duty| 0))& (0+255)
  3615     00C8  3185  259F         	fcall	_SET_DUTY_CCP3
  3616                           
  3617                           ;main.c: 610:     LATC5 = 0;
  3618     00CA  0022               	movlb	2	; select bank2
  3619     00CB  128E               	bcf	14,5	;volatile
  3620                           
  3621                           ;main.c: 611:     GIE = 1;
  3622     00CC  178B               	bsf	11,7	;volatile
  3623     00CD                     i1l283:
  3624     00CD  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  3625     00CE  0009               	retfie
  3626     00CF                     __end_of_INTERRUPT_InterruptManager:
  3627                           
  3628                           	psect	text22
  3629     059F                     __ptext22:	
  3630 ;; *************** function _SET_DUTY_CCP3 *****************
  3631 ;; Defined at:
  3632 ;;		line 242 in file "main.c"
  3633 ;; Parameters:    Size  Location     Type
  3634 ;;  duty_ptr        1    wreg     PTR volatile unsigned sh
  3635 ;;		 -> duty(2), 
  3636 ;; Auto vars:     Size  Location     Type
  3637 ;;  duty_ptr        1    3[COMMON] PTR volatile unsigned sh
  3638 ;;		 -> duty(2), 
  3639 ;;  temp            1    2[COMMON] unsigned char 
  3640 ;; Return value:  Size  Location     Type
  3641 ;;                  1    wreg      unsigned char 
  3642 ;; Registers used:
  3643 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3644 ;; Tracked objects:
  3645 ;;		On entry : 1F/0
  3646 ;;		On exit  : 1F/6
  3647 ;;		Unchanged: 0/0
  3648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3649 ;;      Params:         0       0       0       0
  3650 ;;      Locals:         2       0       0       0
  3651 ;;      Temps:          2       0       0       0
  3652 ;;      Totals:         4       0       0       0
  3653 ;;Total ram usage:        4 bytes
  3654 ;; Hardware stack levels used: 1
  3655 ;; This function calls:
  3656 ;;		Nothing
  3657 ;; This function is called by:
  3658 ;;		_INTERRUPT_InterruptManager
  3659 ;; This function uses a non-reentrant model
  3660 ;;
  3661                           
  3662     059F                     _SET_DUTY_CCP3:	
  3663                           ;psect for function _SET_DUTY_CCP3
  3664                           
  3665                           
  3666                           ;incstack = 0
  3667                           ; Regs used in _SET_DUTY_CCP3: [wreg+fsr1l+fsr1h+status,2+status,0]
  3668                           ;SET_DUTY_CCP3@duty_ptr stored from wreg
  3669     059F  00F9               	movwf	SET_DUTY_CCP3@duty_ptr
  3670                           
  3671                           ;main.c: 244:     CCPR3L = (uint8_t)(*duty_ptr >> 2);
  3672     05A0  0879               	movf	SET_DUTY_CCP3@duty_ptr,w
  3673     05A1  0086               	movwf	6
  3674     05A2  0187               	clrf	7
  3675     05A3  3F40               	moviw [0]fsr1
  3676     05A4  00F6               	movwf	??_SET_DUTY_CCP3
  3677     05A5  3F41               	moviw [1]fsr1
  3678     05A6  00F7               	movwf	??_SET_DUTY_CCP3+1
  3679     05A7  36F7               	lsrf	??_SET_DUTY_CCP3+1,f
  3680     05A8  0CF6               	rrf	??_SET_DUTY_CCP3,f
  3681     05A9  36F7               	lsrf	??_SET_DUTY_CCP3+1,f
  3682     05AA  0CF6               	rrf	??_SET_DUTY_CCP3,f
  3683     05AB  0876               	movf	??_SET_DUTY_CCP3,w
  3684     05AC  0026               	movlb	6	; select bank6
  3685     05AD  0091               	movwf	17	;volatile
  3686                           
  3687                           ;main.c: 245:     uint8_t temp = *duty_ptr % 0b100;
  3688     05AE  0879               	movf	SET_DUTY_CCP3@duty_ptr,w
  3689     05AF  0086               	movwf	6
  3690     05B0  0187               	clrf	7
  3691     05B1  0801               	movf	1,w
  3692     05B2  3903               	andlw	3
  3693     05B3  00F8               	movwf	SET_DUTY_CCP3@temp
  3694                           
  3695                           ;main.c: 246:     CCP3CON = CCP3CON | ((uint8_t)(temp << 4));
  3696     05B4  0878               	movf	SET_DUTY_CCP3@temp,w
  3697     05B5  00F6               	movwf	??_SET_DUTY_CCP3
  3698     05B6  3003               	movlw	3
  3699     05B7                     u69_25:
  3700     05B7  35F6               	lslf	??_SET_DUTY_CCP3,f
  3701     05B8  3EFF               	addlw	-1
  3702     05B9  1D03               	skipz
  3703     05BA  2DB7               	goto	u69_25
  3704     05BB  3576               	lslf	??_SET_DUTY_CCP3,w
  3705     05BC  0413               	iorwf	19,w	;volatile
  3706     05BD  0093               	movwf	19	;volatile
  3707     05BE  0008               	return
  3708     05BF                     __end_of_SET_DUTY_CCP3:
  3709     007E                     btemp	set	126	;btemp
  3710     007E                     int$flags	set	126
  3711     007E                     wtemp0	set	126
  3712                           
  3713                           	psect	config
  3714                           
  3715                           ;Config register CONFIG1 @ 0x8007
  3716                           ;	Oscillator Selection
  3717                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  3718                           ;	Watchdog Timer Enable
  3719                           ;	WDTE = OFF, WDT disabled
  3720                           ;	Power-up Timer Enable
  3721                           ;	PWRTE = OFF, PWRT disabled
  3722                           ;	MCLR Pin Function Select
  3723                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  3724                           ;	Flash Program Memory Code Protection
  3725                           ;	CP = OFF, Program memory code protection is disabled
  3726                           ;	Data Memory Code Protection
  3727                           ;	CPD = OFF, Data memory code protection is disabled
  3728                           ;	Brown-out Reset Enable
  3729                           ;	BOREN = OFF, Brown-out Reset disabled
  3730                           ;	Clock Out Enable
  3731                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  3732                           ;	Internal/External Switchover
  3733                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3734                           ;	Fail-Safe Clock Monitor Enable
  3735                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3736     8007                     	org	32775
  3737     8007  09E4               	dw	2532
  3738                           
  3739                           ;Config register CONFIG2 @ 0x8008
  3740                           ;	Flash Memory Self-Write Protection
  3741                           ;	WRT = OFF, Write protection off
  3742                           ;	PLL Enable
  3743                           ;	PLLEN = ON, 4x PLL enabled
  3744                           ;	Stack Overflow/Underflow Reset Enable
  3745                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  3746                           ;	Brown-out Reset Voltage Selection
  3747                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  3748                           ;	In-Circuit Debugger Mode
  3749                           ;	DEBUG = ON, In-Circuit Debugger enabled, ICSPCLK and ICSPDAT are dedicated to the debu
      +                          gger
  3750                           ;	Low-Voltage Programming Enable
  3751                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  3752     8008                     	org	32776
  3753     8008  0FFF               	dw	4095

Data Sizes:
    Strings     0
    Constant    537
    Data        2
    BSS         46
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     29      71
    BANK1            80      0       0
    BANK2            64      0       0

Pointer List with Targets:

    DO_ADC@modifier	PTR const unsigned char  size(2) Largest target is 1
		 -> depth_adc_config_value(CODE[1]), speed_adc_config_value(CODE[1]), symmetry_adc_config_value(CODE[1]), waveshape_adc_config_value(CODE[1]), 

    SET_DUTY_CCP3@duty_ptr	PTR volatile unsigned short  size(1) Largest target is 2
		 -> duty(COMMON[2]), 

    TMR0_WRITE@timer_value_ptr	PTR volatile unsigned char  size(1) Largest target is 1
		 -> final_TMR0(COMMON[1]), 

    top_two_bytes_ptr	PTR unsigned short  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_SET_DUTY_CCP3

Critical Paths under _main in BANK0

    _main->_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST
    _PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST->_SHORTEN_PERIOD
    _SHORTEN_PERIOD->___lmul
    _LENGTHEN_PERIOD->___lmul
    _PROCESS_RAW_SPEED_AND_PRESCALER->___lmul
    _GET_CURRENT_POT_VALUES->_DETERMINE_WAVESHAPE
    _DETERMINE_WAVESHAPE->_DO_ADC

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    5205
                      _CONFIG_SYSTEM
              _CONFIG_TMR0_INTERRUPT
             _GET_CURRENT_POT_VALUES
  _PROCESS_FINAL_SPEED_AND_PRESCALER
    _PROCESS_RAW_SPEED_AND_PRESCALER
_PROCESS_TMR0_OFFSET_AND_PRESCALER_A
                         _TMR0_WRITE
                   _TURN_ON_CCP3_PWM
 ---------------------------------------------------------------------------------
 (1) _TURN_ON_CCP3_PWM                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_WRITE                                           1     1      0      55
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST             9     9      0    3147
                                             20 BANK0      9     9      0
                    _LENGTHEN_PERIOD
                     _SHORTEN_PERIOD
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) _SHORTEN_PERIOD                                       8     8      0    1175
                                             12 BANK0      8     8      0
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) _LENGTHEN_PERIOD                                      6     6      0     952
                                             12 BANK0      6     6      0
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) _PROCESS_RAW_SPEED_AND_PRESCALER                      7     7      0     955
                                             12 BANK0      7     7      0
 _CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1
                 _TURN_PRESCALER_OFF
                  _TURN_PRESCALER_ON
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     856
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) _TURN_PRESCALER_ON                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TURN_PRESCALER_OFF                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1                   3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _PROCESS_FINAL_SPEED_AND_PRESCALER                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GET_CURRENT_POT_VALUES                               3     3      0    1048
                                              8 BANK0      2     2      0
                _DETERMINE_WAVESHAPE
                             _DO_ADC
 ---------------------------------------------------------------------------------
 (2) _DETERMINE_WAVESHAPE                                  2     2      0     555
                                              6 BANK0      2     2      0
                             _DO_ADC
 ---------------------------------------------------------------------------------
 (2) _DO_ADC                                               6     4      2     459
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _CONFIG_TMR0_INTERRUPT                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CONFIG_SYSTEM                                        0     0      0       0
                    _CONFIG_ADC_PINS
                     _CONFIG_INT_OSC
                       _CONFIG_PORTS
                    _CONFIG_PWM_CCP3
 ---------------------------------------------------------------------------------
 (2) _CONFIG_PWM_CCP3                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CONFIG_PORTS                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CONFIG_INT_OSC                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CONFIG_ADC_PINS                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           2     2      0     100
                                              4 COMMON     2     2      0
                      _SET_DUTY_CCP3
 ---------------------------------------------------------------------------------
 (5) _SET_DUTY_CCP3                                        4     4      0     100
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CONFIG_SYSTEM
     _CONFIG_ADC_PINS
     _CONFIG_INT_OSC
     _CONFIG_PORTS
     _CONFIG_PWM_CCP3
   _CONFIG_TMR0_INTERRUPT
   _GET_CURRENT_POT_VALUES
     _DETERMINE_WAVESHAPE
       _DO_ADC
     _DO_ADC
   _PROCESS_FINAL_SPEED_AND_PRESCALER
   _PROCESS_RAW_SPEED_AND_PRESCALER
     _CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1
     _TURN_PRESCALER_OFF
     _TURN_PRESCALER_ON
     ___lmul
   _PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST
     _LENGTHEN_PERIOD
       ___lmul
     _SHORTEN_PERIOD
       ___lmul
     ___lmul
   _TMR0_WRITE
   _TURN_ON_CCP3_PWM

 _INTERRUPT_InterruptManager (ROOT)
   _SET_DUTY_CCP3

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              E0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      53       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     1D      47       6       88.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            40      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               40      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      53      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Wed Jan 24 17:47:29 2024

                                                      r1 0020  
                                                      r2 0021  
                                                      r3 0022  
                                                     _NO 063D  
                                                    l160 0542  
                                                    l179 0613  
                                                    _GIE 005F  
                                                    _PR2 001B  
                                                    u965 052F  
                                                    u995 0509  
                                                    _YES 063E  
                                                    wreg 0009  
                                                   l1333 05D2  
                                                   l1611 04FE  
                                                   l1615 0508  
                                                   _C1ON 088F  
                                                   l1713 036F  
                                                   l1651 0596  
                                                   l1707 033E  
                                                   l1645 058D  
                                                   l1647 0594  
                                                   l1841 0469  
                                                   l1739 04B3  
                                                   l1843 046C  
                                                   l1835 045C  
                                                   l1827 0421  
                                                   l1819 040E  
                                                   l1845 0466  
                                                   l1837 045F  
                                                   l1697 032A  
                                                   l1849 046F  
                                                   l1875 056B  
                                                   l1797 03FF  
                                                   l1789 03D1  
                                                   _ADON 04E8  
                                                   u1005 0510  
                                                   u1115 0374  
                                                   u1135 0493  
                                                   u1055 030B  
                                                   u1145 04A6  
                                                   u1235 0448  
                                                   u1165 03B2  
                                                   u1327 053D  
                                                   u1095 035E  
                                                   u1185 03DC  
                                                   u1195 03EA  
                                                   _TMR0 0015  
                                                   _WPUC 020E  
                                      _current_speed_log 0036  
                                                   _main 0551  
                                                   _duty 0073  
                                                   fsr0h 0005  
                                                   fsr1h 0007  
                                                   indf0 0000  
                                                   fsr0l 0004  
                                                   indf1 0001  
                                                   fsr1l 0006  
                                                   btemp 007E  
                                      _current_waveshape 0072  
                                                   start 00CF  
                                  _CONFIG_TMR0_INTERRUPT 063B  
                                       __end_of_NEGATIVE 0645  
                                   __end_of_CONFIG_PORTS 0609  
             __end_of_CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1 05D4  
                   ??_CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1 0048  
                    ?_CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1 0076  
                     _CHECK_IF_PRESCALER_NEEDS_TO_BE_1_1 05BF  
                                                  STATUS 0003  
                                                  ?_main 0076  
                                                  _T2CON 001C  
                                                  _LATC5 0875  
                                                  i1l280 0067  
                                                  i1l283 00CD  
                                                  i1l279 0059  
                                                  _SRLEN 08D7  
                                                  _TRISC 008E  
                                                  u69_25 05B7  
                                            ?_TMR0_WRITE 0076  
                                    ___lmul@multiplicand 004C  
                                       __end_of_POSITIVE 0646  
                               ??_GET_CURRENT_POT_VALUES 0050  
                                                  status 0003  
                                                  wtemp0 007E  
                             _current_one_quadrant_index 0071  
                                        __initialization 00D1  
                             LENGTHEN_PERIOD@dTMR0_ideal 0058  
                                           __end_of_main 0578  
       __end_of_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST 0476  
             ??_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST 005C  
              ?_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST 0076  
               _PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST 0402  
                            ?_INTERRUPT_InterruptManager 0076  
                                      __end_of_DONT_CARE 0640  
                                                 ??_main 0065  
                                  __end_of_DIVIDE_BY_TWO 0643  
                                 _speed_adc_config_value 0648  
                                  __end_of_CONFIG_SYSTEM 0600  
                                                 _ADCON0 009D  
                                                 _ADCON1 009E  
 PROCESS_RAW_SPEED_AND_PRESCALER@prescaler_overflow_flag 0058  
                                                 _ADRESH 009C  
                                                 _ADRESL 009B  
                                                 _CCPR3L 0311  
                                                 _ANSELC 018E  
                                                 _DO_ADC 0525  
                                                 i1l1533 003D  
                                                 i1l1525 0022  
                                                 i1l1551 0057  
                                                 i1l1545 004E  
                                                 i1l1537 0043  
                                                 i1l1529 0035  
                                                 i1l1547 004F  
                                                 i1l1559 00C3  
                                                 _OSCCON 0099  
                                                 _TMR0IE 005D  
                                                 _TMR0IF 005A  
                                                 _TMR2IF 0089  
                                                 _TMR2ON 00E2  
                                                 _TRISA2 0462  
                                 ?_CONFIG_TMR0_INTERRUPT 0076  
                                         DO_ADC@modifier 0048  
                            __end_of_DETERMINE_WAVESHAPE 059F  
                      __end_of_symmetry_adc_config_value 0647  
                                                 ___lmul 04F6  
                                  __end_of_SET_DUTY_CCP3 05BF  
                                      ?_TURN_ON_CCP3_PWM 0076  
                                      ??_CONFIG_ADC_PINS 0048  
                                _current_speed_linear_32 0028  
                                     ??_TURN_ON_CCP3_PWM 0048  
                                __end_of__initialization 00E6  
                                         _SHORTEN_PERIOD 02EE  
                                         _DIVIDE_BY_FOUR 0640  
                                         _CONFIG_INT_OSC 0627  
                                         __pcstackCOMMON 0076  
                                           __pidataBANK0 0639  
                                            _dTMR0_ideal 0030  
                                             __end_of_NO 063E  
                                 _tri_table_one_quadrant 00EA  
                                      ??_CONFIG_PWM_CCP3 0048  
                                      _top_two_bytes_ptr 0065  
                                          _current_depth 0034  
                                             __pbssBANK0 0020  
                                                ?_DO_ADC 0048  
                                 __end_of_SHORTEN_PERIOD 0388  
                                           _CONFIG_PORTS 0600  
                                 __end_of_DIVIDE_BY_FOUR 0641  
                                 __end_of_CONFIG_INT_OSC 062D  
                                     __end_of_DO_NOTHING 0644  
                                             __pmaintext 0551  
                                 _GET_CURRENT_POT_VALUES 04B9  
                                                ?___lmul 0048  
                                             __pintentry 0004  
PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST@symmetry_status 0064  
                                                _CCP3CON 0313  
                                         ___lmul@product 0050  
                                             _final_TMR0 0075  
                                           ??_TMR0_WRITE 0048  
                                  SET_DUTY_CCP3@duty_ptr 0079  
                                                _OSCTUNE 0098  
                                _sine_table_one_quadrant 01EC  
                              TMR0_WRITE@timer_value_ptr 0048  
                                        ?_SHORTEN_PERIOD 0076  
              __end_of_PROCESS_FINAL_SPEED_AND_PRESCALER 05F4  
                    ??_PROCESS_FINAL_SPEED_AND_PRESCALER 0048  
                     ?_PROCESS_FINAL_SPEED_AND_PRESCALER 0076  
                      _PROCESS_FINAL_SPEED_AND_PRESCALER 05E7  
                                        ?_CONFIG_INT_OSC 0076  
                                   _current_speed_log_32 0024  
                                     __end_of_TMR0_WRITE 0621  
                                   _current_speed_linear 0038  
                                      _TURN_PRESCALER_ON 0636  
                              _base_prescaler_bits_index 0040  
                                                __ptext1 0611  
                                                __ptext2 0619  
                                                __ptext3 0402  
                                                __ptext4 02EE  
                                                __ptext5 0476  
                                                __ptext6 0388  
                                                __ptext7 04F6  
                                                __ptext8 0636  
                                                __ptext9 062D  
                                     ?_TURN_PRESCALER_ON 0076  
                                        _MULTIPLY_BY_TWO 0641  
                __end_of_PROCESS_RAW_SPEED_AND_PRESCALER 0402  
                      ??_PROCESS_RAW_SPEED_AND_PRESCALER 0054  
                       ?_PROCESS_RAW_SPEED_AND_PRESCALER 0076  
                        _PROCESS_RAW_SPEED_AND_PRESCALER 0388  
                                              _DONT_CARE 063F  
                                    ??_TURN_PRESCALER_ON 0048  
                                                clrloop0 0622  
                                   end_of_initialization 00E6  
                                ??_CONFIG_TMR0_INTERRUPT 0048  
                                          _duty_low_byte 0047  
                              __end_of_TURN_PRESCALER_ON 0639  
                         __end_of_speed_adc_config_value 0649  
                                 _depth_adc_config_value 0647  
                                        _CONFIG_ADC_PINS 0632  
                                       _TMR0_offset_sign 0043  
                                      ??_LENGTHEN_PERIOD 0054  
                                             DO_ADC@temp 004D  
                                         __end_of_DO_ADC 0551  
                                      SET_DUTY_CCP3@temp 0078  
                                       _current_quadrant 0070  
                             __end_of_TURN_PRESCALER_OFF 0632  
                                __end_of_MULTIPLY_BY_TWO 0642  
                                        _CONFIG_PWM_CCP3 05D4  
                                       _current_symmetry 0032  
                                         __end_of___lmul 0525  
                                    start_initialization 00D1  
                                            __end_of_YES 063F  
                                               ??_DO_ADC 004A  
                                ?_GET_CURRENT_POT_VALUES 0076  
                        __end_of_sine_table_one_quadrant 02EE  
                                __end_of_CONFIG_ADC_PINS 0636  
                                               ??___lmul 0050  
                         __end_of_tri_table_one_quadrant 01EC  
                                            __pdataBANK0 0065  
                                       DO_ADC@adc_result 004B  
                                            __pbssCOMMON 0070  
                                              ___latbits 0001  
                                          _DIVIDE_BY_TWO 0642  
                                          __pcstackBANK0 0048  
                                       ??_SHORTEN_PERIOD 0054  
                                          _CONFIG_SYSTEM 05F4  
                                       ??_CONFIG_INT_OSC 0048  
                         __end_of_GET_CURRENT_POT_VALUES 04F6  
                                __end_of_CONFIG_PWM_CCP3 05E7  
                                         _prescaler_bits 0609  
                           ??_INTERRUPT_InterruptManager 007A  
                                           _how_many_128 003A  
                                          _SET_DUTY_CCP3 059F  
                                               _CCPTMRS0 029E  
                                         ?_CONFIG_SYSTEM 0076  
                                       _prescaler_adjust 0042  
                                        _symmetry_status 003E  
                                               _NEGATIVE 0644  
                     __end_of_waveshape_adc_config_value 064A  
                             _waveshape_adc_config_value 0649  
                          __end_of_CONFIG_TMR0_INTERRUPT 063D  
                                              clear_ram0 0621  
                                               _GO_nDONE 04E9  
                                       _TURN_ON_CCP3_PWM 0611  
                                 __end_of_prescaler_bits 0611  
                                       ?_CONFIG_ADC_PINS 0076  
                                               _POSITIVE 0645  
                                        _LENGTHEN_PERIOD 0476  
                                         ?_SET_DUTY_CCP3 0076  
                                      _clear_TMR0_please 003F  
                           SHORTEN_PERIOD@TMR0_raw_extra 005A  
                                      ___lmul@multiplier 0048  
                                    _DETERMINE_WAVESHAPE 0578  
                                 DETERMINE_WAVESHAPE@ADC 004E  
                                       ?_CONFIG_PWM_CCP3 0076  
                         __end_of_depth_adc_config_value 0648  
           PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST@temp 0060  
                                   ?_DETERMINE_WAVESHAPE 0076  
                                     _TURN_PRESCALER_OFF 062D  
                                        ??_CONFIG_SYSTEM 0048  
                                       _speed_control_32 002C  
                                               __ptext10 05BF  
                                               __ptext11 05E7  
                                               __ptext20 0632  
                                               __ptext12 04B9  
                                               __ptext13 0578  
                                               __ptext22 059F  
                                               __ptext14 0525  
                                               __ptext15 063B  
                                               __ptext16 05F4  
                                               __ptext17 05D4  
                                               __ptext18 0600  
                                               __ptext19 0627  
                                    ?_TURN_PRESCALER_OFF 0076  
PROCESS_RAW_SPEED_AND_PRESCALER@speed_control_subtracted 0059  
                                          ?_CONFIG_PORTS 0076  
                                         _duty_high_byte 0046  
                                          _speed_control 003C  
                                               _raw_TMR0 0041  
                                         _symmetry_total 0020  
                                __end_of_LENGTHEN_PERIOD 04B9  
                                   ??_TURN_PRESCALER_OFF 0048  
                                               int$flags 007E  
                                  ??_DETERMINE_WAVESHAPE 004E  
                     __end_of_INTERRUPT_InterruptManager 00CF  
                             _INTERRUPT_InterruptManager 0004  
                                        ??_SET_DUTY_CCP3 0076  
                                             _DO_NOTHING 0643  
                                         __pstringtext10 0643  
                                         __pstringtext11 0644  
                                         __pstringtext12 0645  
                                         __pstringtext13 0646  
                                         __pstringtext14 0647  
                                         __pstringtext15 0648  
                                         __pstringtext16 0649  
                              _symmetry_adc_config_value 0646  
                                         ??_CONFIG_PORTS 0048  
                                               intlevel1 0000  
                                          __pstringtext1 00EA  
                                          __pstringtext2 01EC  
                                          __pstringtext3 0609  
                                          __pstringtext4 063D  
                                          __pstringtext5 063E  
                                          __pstringtext6 063F  
                                          __pstringtext7 0640  
                                          __pstringtext8 0641  
                                          __pstringtext9 0642  
                                            _TMR0_offset 0044  
                                             _OPTION_REG 0095  
                                             _TMR0_WRITE 0619  
                              SHORTEN_PERIOD@dTMR0_ideal 0058  
                               __end_of_TURN_ON_CCP3_PWM 0619  
                                      _current_halfcycle 0045  
                                       ?_LENGTHEN_PERIOD 0076  
