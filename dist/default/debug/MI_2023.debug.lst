

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Sat Jan 20 15:09:21 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og9 
     1                           	processor	16F1824
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    15                           	psect	stringtext11,global,class=STRCODE,delta=2,noexec
    16                           	psect	stringtext12,global,class=STRCODE,delta=2,noexec
    17                           	psect	stringtext13,global,class=STRCODE,delta=2,noexec
    18                           	psect	stringtext14,global,class=STRCODE,delta=2,noexec
    19                           	psect	stringtext15,global,class=STRCODE,delta=2,noexec
    20                           	psect	stringtext16,global,class=STRCODE,delta=2,noexec
    21                           	psect	stringtext17,global,class=STRCODE,delta=2,noexec
    22                           	psect	stringtext18,global,class=STRCODE,delta=2,noexec
    23                           	psect	cinit,global,class=CODE,merge=1,delta=2
    24                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    25                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    26                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    27                           	psect	clrtext,global,class=CODE,delta=2
    28                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    29                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    30                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    31                           	psect	text1,local,class=CODE,merge=1,delta=2
    32                           	psect	text2,local,class=CODE,merge=1,delta=2
    33                           	psect	text3,local,class=CODE,merge=1,delta=2
    34                           	psect	text4,local,class=CODE,merge=1,delta=2
    35                           	psect	text5,local,class=CODE,merge=1,delta=2
    36                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text7,local,class=CODE,merge=1,delta=2
    38                           	psect	text8,local,class=CODE,merge=1,delta=2
    39                           	psect	text9,local,class=CODE,merge=1,delta=2
    40                           	psect	text10,local,class=CODE,merge=1,delta=2
    41                           	psect	text11,local,class=CODE,merge=1,delta=2
    42                           	psect	text12,local,class=CODE,merge=1,delta=2
    43                           	psect	text13,local,class=CODE,merge=1,delta=2
    44                           	psect	text14,local,class=CODE,merge=1,delta=2
    45                           	psect	text15,local,class=CODE,merge=1,delta=2
    46                           	psect	text16,local,class=CODE,merge=1,delta=2
    47                           	psect	intentry,global,class=CODE,delta=2
    48                           	psect	text18,local,class=CODE,merge=1,delta=2
    49                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    50                           	dabs	1,0x7E,2
    51     0000                     
    52                           ; Generated 06/07/2023 GMT
    53                           ; 
    54                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    55                           ; All rights reserved.
    56                           ; 
    57                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    58                           ; 
    59                           ; Redistribution and use in source and binary forms, with or without modification, are
    60                           ; permitted provided that the following conditions are met:
    61                           ; 
    62                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    63                           ;        conditions and the following disclaimer.
    64                           ; 
    65                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    66                           ;        of conditions and the following disclaimer in the documentation and/or other
    67                           ;        materials provided with the distribution. Publication is not required when
    68                           ;        this file is used in an embedded application.
    69                           ; 
    70                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    71                           ;        software without specific prior written permission.
    72                           ; 
    73                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    74                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    75                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    76                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    77                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    78                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    79                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    80                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    81                           ; 
    82                           ; 
    83                           ; Code-generator required, PIC16F1824 Definitions
    84                           ; 
    85                           ; SFR Addresses
    86     0000                     	;# 
    87     0001                     	;# 
    88     0002                     	;# 
    89     0003                     	;# 
    90     0004                     	;# 
    91     0005                     	;# 
    92     0006                     	;# 
    93     0007                     	;# 
    94     0008                     	;# 
    95     0009                     	;# 
    96     000A                     	;# 
    97     000B                     	;# 
    98     000C                     	;# 
    99     000E                     	;# 
   100     0011                     	;# 
   101     0012                     	;# 
   102     0013                     	;# 
   103     0015                     	;# 
   104     0016                     	;# 
   105     0016                     	;# 
   106     0017                     	;# 
   107     0018                     	;# 
   108     0019                     	;# 
   109     001A                     	;# 
   110     001B                     	;# 
   111     001C                     	;# 
   112     001E                     	;# 
   113     001F                     	;# 
   114     008C                     	;# 
   115     008E                     	;# 
   116     0091                     	;# 
   117     0092                     	;# 
   118     0093                     	;# 
   119     0095                     	;# 
   120     0096                     	;# 
   121     0097                     	;# 
   122     0098                     	;# 
   123     0099                     	;# 
   124     009A                     	;# 
   125     009B                     	;# 
   126     009B                     	;# 
   127     009C                     	;# 
   128     009D                     	;# 
   129     009E                     	;# 
   130     010C                     	;# 
   131     010E                     	;# 
   132     0111                     	;# 
   133     0112                     	;# 
   134     0113                     	;# 
   135     0114                     	;# 
   136     0115                     	;# 
   137     0116                     	;# 
   138     0117                     	;# 
   139     0118                     	;# 
   140     0119                     	;# 
   141     011A                     	;# 
   142     011B                     	;# 
   143     011D                     	;# 
   144     011E                     	;# 
   145     018C                     	;# 
   146     018E                     	;# 
   147     0191                     	;# 
   148     0191                     	;# 
   149     0192                     	;# 
   150     0193                     	;# 
   151     0193                     	;# 
   152     0193                     	;# 
   153     0194                     	;# 
   154     0195                     	;# 
   155     0196                     	;# 
   156     0199                     	;# 
   157     019A                     	;# 
   158     019B                     	;# 
   159     019B                     	;# 
   160     019B                     	;# 
   161     019B                     	;# 
   162     019C                     	;# 
   163     019C                     	;# 
   164     019D                     	;# 
   165     019E                     	;# 
   166     019F                     	;# 
   167     020C                     	;# 
   168     020E                     	;# 
   169     0211                     	;# 
   170     0211                     	;# 
   171     0212                     	;# 
   172     0212                     	;# 
   173     0213                     	;# 
   174     0213                     	;# 
   175     0214                     	;# 
   176     0214                     	;# 
   177     0215                     	;# 
   178     0215                     	;# 
   179     0215                     	;# 
   180     0215                     	;# 
   181     0216                     	;# 
   182     0216                     	;# 
   183     0217                     	;# 
   184     0217                     	;# 
   185     0291                     	;# 
   186     0291                     	;# 
   187     0292                     	;# 
   188     0293                     	;# 
   189     0294                     	;# 
   190     0295                     	;# 
   191     0295                     	;# 
   192     0296                     	;# 
   193     0298                     	;# 
   194     0298                     	;# 
   195     0299                     	;# 
   196     029A                     	;# 
   197     029B                     	;# 
   198     029C                     	;# 
   199     029D                     	;# 
   200     029E                     	;# 
   201     029E                     	;# 
   202     0311                     	;# 
   203     0311                     	;# 
   204     0312                     	;# 
   205     0313                     	;# 
   206     0318                     	;# 
   207     0318                     	;# 
   208     0319                     	;# 
   209     031A                     	;# 
   210     038C                     	;# 
   211     038E                     	;# 
   212     0391                     	;# 
   213     0392                     	;# 
   214     0393                     	;# 
   215     039A                     	;# 
   216     039C                     	;# 
   217     039D                     	;# 
   218     039E                     	;# 
   219     039F                     	;# 
   220     0415                     	;# 
   221     0416                     	;# 
   222     0417                     	;# 
   223     041C                     	;# 
   224     041D                     	;# 
   225     041E                     	;# 
   226     0FE4                     	;# 
   227     0FE5                     	;# 
   228     0FE6                     	;# 
   229     0FE7                     	;# 
   230     0FE8                     	;# 
   231     0FE9                     	;# 
   232     0FEA                     	;# 
   233     0FEB                     	;# 
   234     0FED                     	;# 
   235     0FEE                     	;# 
   236     0FEF                     	;# 
   237     0020                     	;# 
   238     0021                     	;# 
   239     0022                     	;# 
   240     0023                     	;# 
   241     0024                     	;# 
   242     0025                     	;# 
   243     0000                     	;# 
   244     0001                     	;# 
   245     0002                     	;# 
   246     0003                     	;# 
   247     0004                     	;# 
   248     0005                     	;# 
   249     0006                     	;# 
   250     0007                     	;# 
   251     0008                     	;# 
   252     0009                     	;# 
   253     000A                     	;# 
   254     000B                     	;# 
   255     000C                     	;# 
   256     000E                     	;# 
   257     0011                     	;# 
   258     0012                     	;# 
   259     0013                     	;# 
   260     0015                     	;# 
   261     0016                     	;# 
   262     0016                     	;# 
   263     0017                     	;# 
   264     0018                     	;# 
   265     0019                     	;# 
   266     001A                     	;# 
   267     001B                     	;# 
   268     001C                     	;# 
   269     001E                     	;# 
   270     001F                     	;# 
   271     008C                     	;# 
   272     008E                     	;# 
   273     0091                     	;# 
   274     0092                     	;# 
   275     0093                     	;# 
   276     0095                     	;# 
   277     0096                     	;# 
   278     0097                     	;# 
   279     0098                     	;# 
   280     0099                     	;# 
   281     009A                     	;# 
   282     009B                     	;# 
   283     009B                     	;# 
   284     009C                     	;# 
   285     009D                     	;# 
   286     009E                     	;# 
   287     010C                     	;# 
   288     010E                     	;# 
   289     0111                     	;# 
   290     0112                     	;# 
   291     0113                     	;# 
   292     0114                     	;# 
   293     0115                     	;# 
   294     0116                     	;# 
   295     0117                     	;# 
   296     0118                     	;# 
   297     0119                     	;# 
   298     011A                     	;# 
   299     011B                     	;# 
   300     011D                     	;# 
   301     011E                     	;# 
   302     018C                     	;# 
   303     018E                     	;# 
   304     0191                     	;# 
   305     0191                     	;# 
   306     0192                     	;# 
   307     0193                     	;# 
   308     0193                     	;# 
   309     0193                     	;# 
   310     0194                     	;# 
   311     0195                     	;# 
   312     0196                     	;# 
   313     0199                     	;# 
   314     019A                     	;# 
   315     019B                     	;# 
   316     019B                     	;# 
   317     019B                     	;# 
   318     019B                     	;# 
   319     019C                     	;# 
   320     019C                     	;# 
   321     019D                     	;# 
   322     019E                     	;# 
   323     019F                     	;# 
   324     020C                     	;# 
   325     020E                     	;# 
   326     0211                     	;# 
   327     0211                     	;# 
   328     0212                     	;# 
   329     0212                     	;# 
   330     0213                     	;# 
   331     0213                     	;# 
   332     0214                     	;# 
   333     0214                     	;# 
   334     0215                     	;# 
   335     0215                     	;# 
   336     0215                     	;# 
   337     0215                     	;# 
   338     0216                     	;# 
   339     0216                     	;# 
   340     0217                     	;# 
   341     0217                     	;# 
   342     0291                     	;# 
   343     0291                     	;# 
   344     0292                     	;# 
   345     0293                     	;# 
   346     0294                     	;# 
   347     0295                     	;# 
   348     0295                     	;# 
   349     0296                     	;# 
   350     0298                     	;# 
   351     0298                     	;# 
   352     0299                     	;# 
   353     029A                     	;# 
   354     029B                     	;# 
   355     029C                     	;# 
   356     029D                     	;# 
   357     029E                     	;# 
   358     029E                     	;# 
   359     0311                     	;# 
   360     0311                     	;# 
   361     0312                     	;# 
   362     0313                     	;# 
   363     0318                     	;# 
   364     0318                     	;# 
   365     0319                     	;# 
   366     031A                     	;# 
   367     038C                     	;# 
   368     038E                     	;# 
   369     0391                     	;# 
   370     0392                     	;# 
   371     0393                     	;# 
   372     039A                     	;# 
   373     039C                     	;# 
   374     039D                     	;# 
   375     039E                     	;# 
   376     039F                     	;# 
   377     0415                     	;# 
   378     0416                     	;# 
   379     0417                     	;# 
   380     041C                     	;# 
   381     041D                     	;# 
   382     041E                     	;# 
   383     0FE4                     	;# 
   384     0FE5                     	;# 
   385     0FE6                     	;# 
   386     0FE7                     	;# 
   387     0FE8                     	;# 
   388     0FE9                     	;# 
   389     0FEA                     	;# 
   390     0FEB                     	;# 
   391     0FED                     	;# 
   392     0FEE                     	;# 
   393     0FEF                     	;# 
   394                           
   395                           	psect	idataBANK0
   396     05BB                     __pidataBANK0:
   397                           
   398                           ;initializer for _top_two_bytes_ptr
   399     05BB  3421               	retlw	33
   400     05BC  3400               	retlw	0
   401                           
   402                           	psect	stringtext1
   403     00EE                     __pstringtext1:
   404     00EE                     _tri_table_one_quadrant:
   405     00EE  3400               	retlw	0
   406     00EF  3402               	retlw	2
   407     00F0  3404               	retlw	4
   408     00F1  3402               	retlw	2
   409     00F2  3408               	retlw	8
   410     00F3  3402               	retlw	2
   411     00F4  340C               	retlw	12
   412     00F5  3402               	retlw	2
   413     00F6  3410               	retlw	16
   414     00F7  3402               	retlw	2
   415     00F8  3414               	retlw	20
   416     00F9  3402               	retlw	2
   417     00FA  3418               	retlw	24
   418     00FB  3402               	retlw	2
   419     00FC  341C               	retlw	28
   420     00FD  3402               	retlw	2
   421     00FE  3420               	retlw	32
   422     00FF  3402               	retlw	2
   423     0100  3424               	retlw	36
   424     0101  3402               	retlw	2
   425     0102  3428               	retlw	40
   426     0103  3402               	retlw	2
   427     0104  342C               	retlw	44
   428     0105  3402               	retlw	2
   429     0106  3430               	retlw	48
   430     0107  3402               	retlw	2
   431     0108  3434               	retlw	52
   432     0109  3402               	retlw	2
   433     010A  3438               	retlw	56
   434     010B  3402               	retlw	2
   435     010C  343C               	retlw	60
   436     010D  3402               	retlw	2
   437     010E  3440               	retlw	64
   438     010F  3402               	retlw	2
   439     0110  3444               	retlw	68
   440     0111  3402               	retlw	2
   441     0112  3448               	retlw	72
   442     0113  3402               	retlw	2
   443     0114  344C               	retlw	76
   444     0115  3402               	retlw	2
   445     0116  3450               	retlw	80
   446     0117  3402               	retlw	2
   447     0118  3454               	retlw	84
   448     0119  3402               	retlw	2
   449     011A  3458               	retlw	88
   450     011B  3402               	retlw	2
   451     011C  345C               	retlw	92
   452     011D  3402               	retlw	2
   453     011E  3460               	retlw	96
   454     011F  3402               	retlw	2
   455     0120  3464               	retlw	100
   456     0121  3402               	retlw	2
   457     0122  3468               	retlw	104
   458     0123  3402               	retlw	2
   459     0124  346C               	retlw	108
   460     0125  3402               	retlw	2
   461     0126  3470               	retlw	112
   462     0127  3402               	retlw	2
   463     0128  3474               	retlw	116
   464     0129  3402               	retlw	2
   465     012A  3478               	retlw	120
   466     012B  3402               	retlw	2
   467     012C  347C               	retlw	124
   468     012D  3402               	retlw	2
   469     012E  3480               	retlw	128
   470     012F  3402               	retlw	2
   471     0130  3484               	retlw	132
   472     0131  3402               	retlw	2
   473     0132  3488               	retlw	136
   474     0133  3402               	retlw	2
   475     0134  348C               	retlw	140
   476     0135  3402               	retlw	2
   477     0136  3490               	retlw	144
   478     0137  3402               	retlw	2
   479     0138  3494               	retlw	148
   480     0139  3402               	retlw	2
   481     013A  3498               	retlw	152
   482     013B  3402               	retlw	2
   483     013C  349C               	retlw	156
   484     013D  3402               	retlw	2
   485     013E  34A0               	retlw	160
   486     013F  3402               	retlw	2
   487     0140  34A4               	retlw	164
   488     0141  3402               	retlw	2
   489     0142  34A8               	retlw	168
   490     0143  3402               	retlw	2
   491     0144  34AC               	retlw	172
   492     0145  3402               	retlw	2
   493     0146  34B0               	retlw	176
   494     0147  3402               	retlw	2
   495     0148  34B4               	retlw	180
   496     0149  3402               	retlw	2
   497     014A  34B8               	retlw	184
   498     014B  3402               	retlw	2
   499     014C  34BC               	retlw	188
   500     014D  3402               	retlw	2
   501     014E  34C0               	retlw	192
   502     014F  3402               	retlw	2
   503     0150  34C4               	retlw	196
   504     0151  3402               	retlw	2
   505     0152  34C8               	retlw	200
   506     0153  3402               	retlw	2
   507     0154  34CC               	retlw	204
   508     0155  3402               	retlw	2
   509     0156  34D0               	retlw	208
   510     0157  3402               	retlw	2
   511     0158  34D4               	retlw	212
   512     0159  3402               	retlw	2
   513     015A  34D8               	retlw	216
   514     015B  3402               	retlw	2
   515     015C  34DC               	retlw	220
   516     015D  3402               	retlw	2
   517     015E  34E0               	retlw	224
   518     015F  3402               	retlw	2
   519     0160  34E4               	retlw	228
   520     0161  3402               	retlw	2
   521     0162  34E8               	retlw	232
   522     0163  3402               	retlw	2
   523     0164  34EC               	retlw	236
   524     0165  3402               	retlw	2
   525     0166  34F0               	retlw	240
   526     0167  3402               	retlw	2
   527     0168  34F4               	retlw	244
   528     0169  3402               	retlw	2
   529     016A  34F8               	retlw	248
   530     016B  3402               	retlw	2
   531     016C  34FB               	retlw	251
   532     016D  3402               	retlw	2
   533     016E  34FF               	retlw	255
   534     016F  3402               	retlw	2
   535     0170  3403               	retlw	3
   536     0171  3403               	retlw	3
   537     0172  3407               	retlw	7
   538     0173  3403               	retlw	3
   539     0174  340B               	retlw	11
   540     0175  3403               	retlw	3
   541     0176  340F               	retlw	15
   542     0177  3403               	retlw	3
   543     0178  3413               	retlw	19
   544     0179  3403               	retlw	3
   545     017A  3417               	retlw	23
   546     017B  3403               	retlw	3
   547     017C  341B               	retlw	27
   548     017D  3403               	retlw	3
   549     017E  341F               	retlw	31
   550     017F  3403               	retlw	3
   551     0180  3423               	retlw	35
   552     0181  3403               	retlw	3
   553     0182  3427               	retlw	39
   554     0183  3403               	retlw	3
   555     0184  342B               	retlw	43
   556     0185  3403               	retlw	3
   557     0186  342F               	retlw	47
   558     0187  3403               	retlw	3
   559     0188  3433               	retlw	51
   560     0189  3403               	retlw	3
   561     018A  3437               	retlw	55
   562     018B  3403               	retlw	3
   563     018C  343B               	retlw	59
   564     018D  3403               	retlw	3
   565     018E  343F               	retlw	63
   566     018F  3403               	retlw	3
   567     0190  3443               	retlw	67
   568     0191  3403               	retlw	3
   569     0192  3447               	retlw	71
   570     0193  3403               	retlw	3
   571     0194  344B               	retlw	75
   572     0195  3403               	retlw	3
   573     0196  344F               	retlw	79
   574     0197  3403               	retlw	3
   575     0198  3453               	retlw	83
   576     0199  3403               	retlw	3
   577     019A  3457               	retlw	87
   578     019B  3403               	retlw	3
   579     019C  345B               	retlw	91
   580     019D  3403               	retlw	3
   581     019E  345F               	retlw	95
   582     019F  3403               	retlw	3
   583     01A0  3463               	retlw	99
   584     01A1  3403               	retlw	3
   585     01A2  3467               	retlw	103
   586     01A3  3403               	retlw	3
   587     01A4  346B               	retlw	107
   588     01A5  3403               	retlw	3
   589     01A6  346F               	retlw	111
   590     01A7  3403               	retlw	3
   591     01A8  3473               	retlw	115
   592     01A9  3403               	retlw	3
   593     01AA  3477               	retlw	119
   594     01AB  3403               	retlw	3
   595     01AC  347B               	retlw	123
   596     01AD  3403               	retlw	3
   597     01AE  347F               	retlw	127
   598     01AF  3403               	retlw	3
   599     01B0  3483               	retlw	131
   600     01B1  3403               	retlw	3
   601     01B2  3487               	retlw	135
   602     01B3  3403               	retlw	3
   603     01B4  348B               	retlw	139
   604     01B5  3403               	retlw	3
   605     01B6  348F               	retlw	143
   606     01B7  3403               	retlw	3
   607     01B8  3493               	retlw	147
   608     01B9  3403               	retlw	3
   609     01BA  3497               	retlw	151
   610     01BB  3403               	retlw	3
   611     01BC  349B               	retlw	155
   612     01BD  3403               	retlw	3
   613     01BE  349F               	retlw	159
   614     01BF  3403               	retlw	3
   615     01C0  34A3               	retlw	163
   616     01C1  3403               	retlw	3
   617     01C2  34A7               	retlw	167
   618     01C3  3403               	retlw	3
   619     01C4  34AB               	retlw	171
   620     01C5  3403               	retlw	3
   621     01C6  34AF               	retlw	175
   622     01C7  3403               	retlw	3
   623     01C8  34B3               	retlw	179
   624     01C9  3403               	retlw	3
   625     01CA  34B7               	retlw	183
   626     01CB  3403               	retlw	3
   627     01CC  34BB               	retlw	187
   628     01CD  3403               	retlw	3
   629     01CE  34BF               	retlw	191
   630     01CF  3403               	retlw	3
   631     01D0  34C3               	retlw	195
   632     01D1  3403               	retlw	3
   633     01D2  34C7               	retlw	199
   634     01D3  3403               	retlw	3
   635     01D4  34CB               	retlw	203
   636     01D5  3403               	retlw	3
   637     01D6  34CF               	retlw	207
   638     01D7  3403               	retlw	3
   639     01D8  34D3               	retlw	211
   640     01D9  3403               	retlw	3
   641     01DA  34D7               	retlw	215
   642     01DB  3403               	retlw	3
   643     01DC  34DB               	retlw	219
   644     01DD  3403               	retlw	3
   645     01DE  34DF               	retlw	223
   646     01DF  3403               	retlw	3
   647     01E0  34E3               	retlw	227
   648     01E1  3403               	retlw	3
   649     01E2  34E7               	retlw	231
   650     01E3  3403               	retlw	3
   651     01E4  34EB               	retlw	235
   652     01E5  3403               	retlw	3
   653     01E6  34EF               	retlw	239
   654     01E7  3403               	retlw	3
   655     01E8  34F3               	retlw	243
   656     01E9  3403               	retlw	3
   657     01EA  34F7               	retlw	247
   658     01EB  3403               	retlw	3
   659     01EC  34FB               	retlw	251
   660     01ED  3403               	retlw	3
   661     01EE  34FF               	retlw	255
   662     01EF  3403               	retlw	3
   663     01F0                     __end_of_tri_table_one_quadrant:
   664                           
   665                           	psect	stringtext2
   666     01F0                     __pstringtext2:
   667     01F0                     _sine_table_one_quadrant:
   668     01F0  3400               	retlw	0
   669     01F1  3402               	retlw	2
   670     01F2  3406               	retlw	6
   671     01F3  3402               	retlw	2
   672     01F4  340C               	retlw	12
   673     01F5  3402               	retlw	2
   674     01F6  3412               	retlw	18
   675     01F7  3402               	retlw	2
   676     01F8  3419               	retlw	25
   677     01F9  3402               	retlw	2
   678     01FA  341F               	retlw	31
   679     01FB  3402               	retlw	2
   680     01FC  3425               	retlw	37
   681     01FD  3402               	retlw	2
   682     01FE  342B               	retlw	43
   683     01FF  3402               	retlw	2
   684     0200  3432               	retlw	50
   685     0201  3402               	retlw	2
   686     0202  3438               	retlw	56
   687     0203  3402               	retlw	2
   688     0204  343E               	retlw	62
   689     0205  3402               	retlw	2
   690     0206  3444               	retlw	68
   691     0207  3402               	retlw	2
   692     0208  344B               	retlw	75
   693     0209  3402               	retlw	2
   694     020A  3451               	retlw	81
   695     020B  3402               	retlw	2
   696     020C  3457               	retlw	87
   697     020D  3402               	retlw	2
   698     020E  345D               	retlw	93
   699     020F  3402               	retlw	2
   700     0210  3463               	retlw	99
   701     0211  3402               	retlw	2
   702     0212  3469               	retlw	105
   703     0213  3402               	retlw	2
   704     0214  3470               	retlw	112
   705     0215  3402               	retlw	2
   706     0216  3476               	retlw	118
   707     0217  3402               	retlw	2
   708     0218  347C               	retlw	124
   709     0219  3402               	retlw	2
   710     021A  3482               	retlw	130
   711     021B  3402               	retlw	2
   712     021C  3488               	retlw	136
   713     021D  3402               	retlw	2
   714     021E  348E               	retlw	142
   715     021F  3402               	retlw	2
   716     0220  3494               	retlw	148
   717     0221  3402               	retlw	2
   718     0222  349A               	retlw	154
   719     0223  3402               	retlw	2
   720     0224  34A0               	retlw	160
   721     0225  3402               	retlw	2
   722     0226  34A6               	retlw	166
   723     0227  3402               	retlw	2
   724     0228  34AC               	retlw	172
   725     0229  3402               	retlw	2
   726     022A  34B2               	retlw	178
   727     022B  3402               	retlw	2
   728     022C  34B8               	retlw	184
   729     022D  3402               	retlw	2
   730     022E  34BD               	retlw	189
   731     022F  3402               	retlw	2
   732     0230  34C3               	retlw	195
   733     0231  3402               	retlw	2
   734     0232  34C9               	retlw	201
   735     0233  3402               	retlw	2
   736     0234  34CF               	retlw	207
   737     0235  3402               	retlw	2
   738     0236  34D5               	retlw	213
   739     0237  3402               	retlw	2
   740     0238  34DA               	retlw	218
   741     0239  3402               	retlw	2
   742     023A  34E0               	retlw	224
   743     023B  3402               	retlw	2
   744     023C  34E5               	retlw	229
   745     023D  3402               	retlw	2
   746     023E  34EB               	retlw	235
   747     023F  3402               	retlw	2
   748     0240  34F1               	retlw	241
   749     0241  3402               	retlw	2
   750     0242  34F6               	retlw	246
   751     0243  3402               	retlw	2
   752     0244  34FC               	retlw	252
   753     0245  3402               	retlw	2
   754     0246  3401               	retlw	1
   755     0247  3403               	retlw	3
   756     0248  3406               	retlw	6
   757     0249  3403               	retlw	3
   758     024A  340C               	retlw	12
   759     024B  3403               	retlw	3
   760     024C  3411               	retlw	17
   761     024D  3403               	retlw	3
   762     024E  3416               	retlw	22
   763     024F  3403               	retlw	3
   764     0250  341C               	retlw	28
   765     0251  3403               	retlw	3
   766     0252  3421               	retlw	33
   767     0253  3403               	retlw	3
   768     0254  3426               	retlw	38
   769     0255  3403               	retlw	3
   770     0256  342B               	retlw	43
   771     0257  3403               	retlw	3
   772     0258  3430               	retlw	48
   773     0259  3403               	retlw	3
   774     025A  3435               	retlw	53
   775     025B  3403               	retlw	3
   776     025C  343A               	retlw	58
   777     025D  3403               	retlw	3
   778     025E  343F               	retlw	63
   779     025F  3403               	retlw	3
   780     0260  3444               	retlw	68
   781     0261  3403               	retlw	3
   782     0262  3449               	retlw	73
   783     0263  3403               	retlw	3
   784     0264  344E               	retlw	78
   785     0265  3403               	retlw	3
   786     0266  3452               	retlw	82
   787     0267  3403               	retlw	3
   788     0268  3457               	retlw	87
   789     0269  3403               	retlw	3
   790     026A  345C               	retlw	92
   791     026B  3403               	retlw	3
   792     026C  3460               	retlw	96
   793     026D  3403               	retlw	3
   794     026E  3465               	retlw	101
   795     026F  3403               	retlw	3
   796     0270  3469               	retlw	105
   797     0271  3403               	retlw	3
   798     0272  346E               	retlw	110
   799     0273  3403               	retlw	3
   800     0274  3472               	retlw	114
   801     0275  3403               	retlw	3
   802     0276  3476               	retlw	118
   803     0277  3403               	retlw	3
   804     0278  347A               	retlw	122
   805     0279  3403               	retlw	3
   806     027A  347F               	retlw	127
   807     027B  3403               	retlw	3
   808     027C  3483               	retlw	131
   809     027D  3403               	retlw	3
   810     027E  3487               	retlw	135
   811     027F  3403               	retlw	3
   812     0280  348B               	retlw	139
   813     0281  3403               	retlw	3
   814     0282  348F               	retlw	143
   815     0283  3403               	retlw	3
   816     0284  3493               	retlw	147
   817     0285  3403               	retlw	3
   818     0286  3497               	retlw	151
   819     0287  3403               	retlw	3
   820     0288  349A               	retlw	154
   821     0289  3403               	retlw	3
   822     028A  349E               	retlw	158
   823     028B  3403               	retlw	3
   824     028C  34A2               	retlw	162
   825     028D  3403               	retlw	3
   826     028E  34A5               	retlw	165
   827     028F  3403               	retlw	3
   828     0290  34A9               	retlw	169
   829     0291  3403               	retlw	3
   830     0292  34AC               	retlw	172
   831     0293  3403               	retlw	3
   832     0294  34B0               	retlw	176
   833     0295  3403               	retlw	3
   834     0296  34B3               	retlw	179
   835     0297  3403               	retlw	3
   836     0298  34B6               	retlw	182
   837     0299  3403               	retlw	3
   838     029A  34B9               	retlw	185
   839     029B  3403               	retlw	3
   840     029C  34BD               	retlw	189
   841     029D  3403               	retlw	3
   842     029E  34C0               	retlw	192
   843     029F  3403               	retlw	3
   844     02A0  34C3               	retlw	195
   845     02A1  3403               	retlw	3
   846     02A2  34C6               	retlw	198
   847     02A3  3403               	retlw	3
   848     02A4  34C8               	retlw	200
   849     02A5  3403               	retlw	3
   850     02A6  34CB               	retlw	203
   851     02A7  3403               	retlw	3
   852     02A8  34CE               	retlw	206
   853     02A9  3403               	retlw	3
   854     02AA  34D1               	retlw	209
   855     02AB  3403               	retlw	3
   856     02AC  34D3               	retlw	211
   857     02AD  3403               	retlw	3
   858     02AE  34D6               	retlw	214
   859     02AF  3403               	retlw	3
   860     02B0  34D8               	retlw	216
   861     02B1  3403               	retlw	3
   862     02B2  34DA               	retlw	218
   863     02B3  3403               	retlw	3
   864     02B4  34DD               	retlw	221
   865     02B5  3403               	retlw	3
   866     02B6  34DF               	retlw	223
   867     02B7  3403               	retlw	3
   868     02B8  34E1               	retlw	225
   869     02B9  3403               	retlw	3
   870     02BA  34E3               	retlw	227
   871     02BB  3403               	retlw	3
   872     02BC  34E5               	retlw	229
   873     02BD  3403               	retlw	3
   874     02BE  34E7               	retlw	231
   875     02BF  3403               	retlw	3
   876     02C0  34E9               	retlw	233
   877     02C1  3403               	retlw	3
   878     02C2  34EB               	retlw	235
   879     02C3  3403               	retlw	3
   880     02C4  34EC               	retlw	236
   881     02C5  3403               	retlw	3
   882     02C6  34EE               	retlw	238
   883     02C7  3403               	retlw	3
   884     02C8  34F0               	retlw	240
   885     02C9  3403               	retlw	3
   886     02CA  34F1               	retlw	241
   887     02CB  3403               	retlw	3
   888     02CC  34F3               	retlw	243
   889     02CD  3403               	retlw	3
   890     02CE  34F4               	retlw	244
   891     02CF  3403               	retlw	3
   892     02D0  34F5               	retlw	245
   893     02D1  3403               	retlw	3
   894     02D2  34F6               	retlw	246
   895     02D3  3403               	retlw	3
   896     02D4  34F7               	retlw	247
   897     02D5  3403               	retlw	3
   898     02D6  34F9               	retlw	249
   899     02D7  3403               	retlw	3
   900     02D8  34F9               	retlw	249
   901     02D9  3403               	retlw	3
   902     02DA  34FA               	retlw	250
   903     02DB  3403               	retlw	3
   904     02DC  34FB               	retlw	251
   905     02DD  3403               	retlw	3
   906     02DE  34FC               	retlw	252
   907     02DF  3403               	retlw	3
   908     02E0  34FD               	retlw	253
   909     02E1  3403               	retlw	3
   910     02E2  34FD               	retlw	253
   911     02E3  3403               	retlw	3
   912     02E4  34FE               	retlw	254
   913     02E5  3403               	retlw	3
   914     02E6  34FE               	retlw	254
   915     02E7  3403               	retlw	3
   916     02E8  34FE               	retlw	254
   917     02E9  3403               	retlw	3
   918     02EA  34FF               	retlw	255
   919     02EB  3403               	retlw	3
   920     02EC  34FF               	retlw	255
   921     02ED  3403               	retlw	3
   922     02EE  34FF               	retlw	255
   923     02EF  3403               	retlw	3
   924     02F0  34FF               	retlw	255
   925     02F1  3403               	retlw	3
   926     02F2                     __end_of_sine_table_one_quadrant:
   927                           
   928                           	psect	stringtext3
   929     0593                     __pstringtext3:
   930     0593                     _prescaler_bits:
   931     0593  3407               	retlw	7
   932     0594  3406               	retlw	6
   933     0595  3405               	retlw	5
   934     0596  3404               	retlw	4
   935     0597  3403               	retlw	3
   936     0598  3402               	retlw	2
   937     0599  3401               	retlw	1
   938     059A  3400               	retlw	0
   939     059B                     __end_of_prescaler_bits:
   940                           
   941                           	psect	stringtext4
   942     05BF                     __pstringtext4:
   943     05BF                     _CW:
   944     05BF  3401               	retlw	1
   945     05C0                     __end_of_CW:
   946                           
   947                           	psect	stringtext5
   948     05C0                     __pstringtext5:
   949     05C0                     _CCW:
   950     05C0  3400               	retlw	0
   951     05C1                     __end_of_CCW:
   952                           
   953                           	psect	stringtext6
   954     05C1                     __pstringtext6:
   955     05C1                     _NO:
   956     05C1  3400               	retlw	0
   957     05C2                     __end_of_NO:
   958                           
   959                           	psect	stringtext7
   960     05C2                     __pstringtext7:
   961     05C2                     _YES:
   962     05C2  3401               	retlw	1
   963     05C3                     __end_of_YES:
   964                           
   965                           	psect	stringtext8
   966     05C3                     __pstringtext8:
   967     05C3                     _DONT_CARE:
   968     05C3  3404               	retlw	4
   969     05C4                     __end_of_DONT_CARE:
   970                           
   971                           	psect	stringtext9
   972     05C4                     __pstringtext9:
   973     05C4                     _DIVIDE_BY_FOUR:
   974     05C4  3403               	retlw	3
   975     05C5                     __end_of_DIVIDE_BY_FOUR:
   976                           
   977                           	psect	stringtext10
   978     05C5                     __pstringtext10:
   979     05C5                     _MULTIPLY_BY_TWO:
   980     05C5  3402               	retlw	2
   981     05C6                     __end_of_MULTIPLY_BY_TWO:
   982                           
   983                           	psect	stringtext11
   984     05C6                     __pstringtext11:
   985     05C6                     _DIVIDE_BY_TWO:
   986     05C6  3401               	retlw	1
   987     05C7                     __end_of_DIVIDE_BY_TWO:
   988                           
   989                           	psect	stringtext12
   990     05C7                     __pstringtext12:
   991     05C7                     _DO_NOTHING:
   992     05C7  3400               	retlw	0
   993     05C8                     __end_of_DO_NOTHING:
   994                           
   995                           	psect	stringtext13
   996     05C8                     __pstringtext13:
   997     05C8                     _NEGATIVE:
   998     05C8  3400               	retlw	0
   999     05C9                     __end_of_NEGATIVE:
  1000                           
  1001                           	psect	stringtext14
  1002     05C9                     __pstringtext14:
  1003     05C9                     _POSITIVE:
  1004     05C9  3401               	retlw	1
  1005     05CA                     __end_of_POSITIVE:
  1006                           
  1007                           	psect	stringtext15
  1008     05CA                     __pstringtext15:
  1009     05CA                     _symmetry_adc_config_value:
  1010     05CA  3407               	retlw	7
  1011     05CB                     __end_of_symmetry_adc_config_value:
  1012                           
  1013                           	psect	stringtext16
  1014     05CB                     __pstringtext16:
  1015     05CB                     _depth_adc_config_value:
  1016     05CB  3406               	retlw	6
  1017     05CC                     __end_of_depth_adc_config_value:
  1018                           
  1019                           	psect	stringtext17
  1020     05CC                     __pstringtext17:
  1021     05CC                     _speed_adc_config_value:
  1022     05CC  3405               	retlw	5
  1023     05CD                     __end_of_speed_adc_config_value:
  1024                           
  1025                           	psect	stringtext18
  1026     05CD                     __pstringtext18:
  1027     05CD                     _waveshape_adc_config_value:
  1028     05CD  3404               	retlw	4
  1029     05CE                     __end_of_waveshape_adc_config_value:
  1030     0015                     _TMR0	set	21
  1031     001C                     _T2CON	set	28
  1032     001B                     _PR2	set	27
  1033     005F                     _GIE	set	95
  1034     005A                     _TMR0IF	set	90
  1035     005D                     _TMR0IE	set	93
  1036     00E2                     _TMR2ON	set	226
  1037     0089                     _TMR2IF	set	137
  1038     0095                     _OPTION_REG	set	149
  1039     009B                     _ADRESL	set	155
  1040     009C                     _ADRESH	set	156
  1041     009D                     _ADCON0	set	157
  1042     009E                     _ADCON1	set	158
  1043     008E                     _TRISC	set	142
  1044     0098                     _OSCTUNE	set	152
  1045     0099                     _OSCCON	set	153
  1046     0462                     _TRISA2	set	1122
  1047     04E9                     _GO_nDONE	set	1257
  1048     04E8                     _ADON	set	1256
  1049     0875                     _LATC5	set	2165
  1050     088F                     _C1ON	set	2191
  1051     08D7                     _SRLEN	set	2263
  1052     018E                     _ANSELC	set	398
  1053     020E                     _WPUC	set	526
  1054     029E                     _CCPTMRS0	set	670
  1055     0313                     _CCP3CON	set	787
  1056     0311                     _CCPR3L	set	785
  1057                           
  1058                           	psect	cinit
  1059     00D5                     start_initialization:	
  1060                           ; #config settings
  1061                           
  1062     00D5                     __initialization:
  1063                           
  1064                           ; Initialize objects allocated to BANK0
  1065     00D5  3185  25BB  3180   	fcall	__pidataBANK0	;fetch initializer
  1066     00D8  00D6               	movwf	__pdataBANK0& (0+127)
  1067     00D9  3185  25BC  3180   	fcall	__pidataBANK0+1	;fetch initializer
  1068     00DC  00D7               	movwf	(__pdataBANK0+1)& (0+127)
  1069                           
  1070                           ; Clear objects allocated to COMMON
  1071     00DD  01F0               	clrf	__pbssCOMMON& (0+127)
  1072     00DE  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  1073     00DF  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  1074     00E0  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  1075     00E1  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  1076     00E2  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  1077                           
  1078                           ; Clear objects allocated to BANK0
  1079     00E3  3020               	movlw	low __pbssBANK0
  1080     00E4  0084               	movwf	4
  1081     00E5  3000               	movlw	high __pbssBANK0
  1082     00E6  0085               	movwf	5
  1083     00E7  3026               	movlw	38
  1084     00E8  3185  25AB         	fcall	clear_ram0
  1085     00EA                     end_of_initialization:	
  1086                           ;End of C runtime variable initialization code
  1087                           
  1088     00EA                     __end_of__initialization:
  1089     00EA  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1090     00EB  0020               	movlb	0
  1091     00EC  3184  2CFD         	ljmp	_main	;jump to C main() function
  1092                           
  1093                           	psect	bssCOMMON
  1094     0070                     __pbssCOMMON:
  1095     0070                     _dTMR0_ideal:
  1096     0070                     	ds	2
  1097     0072                     _raw_TMR0:
  1098     0072                     	ds	1
  1099     0073                     _prescaler_adjust:
  1100     0073                     	ds	1
  1101     0074                     _current_one_quadrant_index:
  1102     0074                     	ds	1
  1103     0075                     _current_waveshape:
  1104     0075                     	ds	1
  1105                           
  1106                           	psect	bssBANK0
  1107     0020                     __pbssBANK0:
  1108     0020                     _current_speed_log_32:
  1109     0020                     	ds	4
  1110     0024                     _current_speed_linear_32:
  1111     0024                     	ds	4
  1112     0028                     _speed_control_32:
  1113     0028                     	ds	4
  1114     002C                     _current_symmetry:
  1115     002C                     	ds	2
  1116     002E                     _current_depth:
  1117     002E                     	ds	2
  1118     0030                     _current_speed_log:
  1119     0030                     	ds	2
  1120     0032                     _current_speed_linear:
  1121     0032                     	ds	2
  1122     0034                     _how_many_128:
  1123     0034                     	ds	2
  1124     0036                     _speed_control_subtracted:
  1125     0036                     	ds	2
  1126     0038                     _speed_control:
  1127     0038                     	ds	2
  1128     003A                     _symmetry_status:
  1129     003A                     	ds	1
  1130     003B                     _clear_TMR0_please:
  1131     003B                     	ds	1
  1132     003C                     _base_prescaler_bits_index:
  1133     003C                     	ds	1
  1134     003D                     _TMR0_offset_sign:
  1135     003D                     	ds	1
  1136     003E                     _TMR0_offset:
  1137     003E                     	ds	1
  1138     003F                     _current_quadrant:
  1139     003F                     	ds	1
  1140     0040                     _current_halfcycle:
  1141     0040                     	ds	1
  1142     0041                     _duty_high_byte:
  1143     0041                     	ds	1
  1144     0042                     _duty_low_byte:
  1145     0042                     	ds	1
  1146     0043                     _duty:
  1147     0043                     	ds	2
  1148     0045                     _final_TMR0:
  1149     0045                     	ds	1
  1150                           
  1151                           	psect	dataBANK0
  1152     0056                     __pdataBANK0:
  1153     0056                     _top_two_bytes_ptr:
  1154     0056                     	ds	2
  1155                           
  1156                           	psect	clrtext
  1157     05AB                     clear_ram0:	
  1158                           ;	Called with FSR0 containing the base address, and
  1159                           ;	WREG with the size to clear
  1160                           
  1161     05AB  0064               	clrwdt	;clear the watchdog before getting into this loop
  1162     05AC                     clrloop0:
  1163     05AC  0180               	clrf	0	;clear RAM location pointed to by FSR
  1164     05AD  3101               	addfsr 0,1
  1165     05AE  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1166     05AF  2DAC               	goto	clrloop0	;have we reached the end yet?
  1167     05B0  3400               	retlw	0	;all done for this memory range, return
  1168                           
  1169                           	psect	cstackCOMMON
  1170     0076                     __pcstackCOMMON:
  1171     0076                     ?_CONFIG_INT_OSC:
  1172     0076                     ?_CONFIG_PORTS:	
  1173                           ; 1 bytes @ 0x0
  1174                           
  1175     0076                     ?_CONFIG_ADC_PINS:	
  1176                           ; 1 bytes @ 0x0
  1177                           
  1178     0076                     ?_DETERMINE_WAVESHAPE:	
  1179                           ; 1 bytes @ 0x0
  1180                           
  1181     0076                     ?_SET_DUTY_CCP3:	
  1182                           ; 1 bytes @ 0x0
  1183                           
  1184     0076                     ??_SET_DUTY_CCP3:	
  1185                           ; 1 bytes @ 0x0
  1186                           
  1187     0076                     ?_CONFIG_PWM_CCP3:	
  1188                           ; 1 bytes @ 0x0
  1189                           
  1190     0076                     ?_TURN_ON_CCP3_PWM:	
  1191                           ; 1 bytes @ 0x0
  1192                           
  1193     0076                     ?_CONFIG_TMR0_INTERRUPT:	
  1194                           ; 1 bytes @ 0x0
  1195                           
  1196     0076                     ?_CONFIG_SYSTEM:	
  1197                           ; 1 bytes @ 0x0
  1198                           
  1199     0076                     ?_TMR0_WRITE:	
  1200                           ; 1 bytes @ 0x0
  1201                           
  1202     0076                     ?_GET_CURRENT_POT_VALUES:	
  1203                           ; 1 bytes @ 0x0
  1204                           
  1205     0076                     ?_PROCESS_RAW_SPEED_AND_PRESCALER:	
  1206                           ; 1 bytes @ 0x0
  1207                           
  1208     0076                     ?_PROCESS_FINAL_SPEED_AND_PRESCALER:	
  1209                           ; 1 bytes @ 0x0
  1210                           
  1211     0076                     ?_SHORTEN_PERIOD:	
  1212                           ; 1 bytes @ 0x0
  1213                           
  1214     0076                     ?_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST:	
  1215                           ; 1 bytes @ 0x0
  1216                           
  1217     0076                     ?_INTERRUPT_InterruptManager:	
  1218                           ; 1 bytes @ 0x0
  1219                           
  1220     0076                     ?_main:	
  1221                           ; 1 bytes @ 0x0
  1222                           
  1223                           
  1224                           ; 1 bytes @ 0x0
  1225     0076                     	ds	2
  1226     0078                     SET_DUTY_CCP3@temp:
  1227                           
  1228                           ; 1 bytes @ 0x2
  1229     0078                     	ds	1
  1230     0079                     SET_DUTY_CCP3@duty_ptr:
  1231                           
  1232                           ; 1 bytes @ 0x3
  1233     0079                     	ds	1
  1234     007A                     ??_INTERRUPT_InterruptManager:
  1235                           
  1236                           ; 1 bytes @ 0x4
  1237     007A                     	ds	2
  1238                           
  1239                           	psect	cstackBANK0
  1240     0046                     __pcstackBANK0:
  1241     0046                     ??_CONFIG_INT_OSC:
  1242     0046                     ??_CONFIG_PORTS:	
  1243                           ; 1 bytes @ 0x0
  1244                           
  1245     0046                     ??_CONFIG_ADC_PINS:	
  1246                           ; 1 bytes @ 0x0
  1247                           
  1248     0046                     ??_CONFIG_PWM_CCP3:	
  1249                           ; 1 bytes @ 0x0
  1250                           
  1251     0046                     ??_TURN_ON_CCP3_PWM:	
  1252                           ; 1 bytes @ 0x0
  1253                           
  1254     0046                     ??_CONFIG_TMR0_INTERRUPT:	
  1255                           ; 1 bytes @ 0x0
  1256                           
  1257     0046                     ??_CONFIG_SYSTEM:	
  1258                           ; 1 bytes @ 0x0
  1259                           
  1260     0046                     ??_TMR0_WRITE:	
  1261                           ; 1 bytes @ 0x0
  1262                           
  1263     0046                     ??_PROCESS_FINAL_SPEED_AND_PRESCALER:	
  1264                           ; 1 bytes @ 0x0
  1265                           
  1266     0046                     ??_SHORTEN_PERIOD:	
  1267                           ; 1 bytes @ 0x0
  1268                           
  1269     0046                     ?_DO_ADC:	
  1270                           ; 1 bytes @ 0x0
  1271                           
  1272     0046                     ?___lmul:	
  1273                           ; 2 bytes @ 0x0
  1274                           
  1275     0046                     TMR0_WRITE@timer_value_ptr:	
  1276                           ; 4 bytes @ 0x0
  1277                           
  1278     0046                     DO_ADC@modifier:	
  1279                           ; 1 bytes @ 0x0
  1280                           
  1281     0046                     ___lmul@multiplier:	
  1282                           ; 2 bytes @ 0x0
  1283                           
  1284                           
  1285                           ; 4 bytes @ 0x0
  1286     0046                     	ds	2
  1287     0048                     ??_DO_ADC:
  1288                           
  1289                           ; 1 bytes @ 0x2
  1290     0048                     	ds	1
  1291     0049                     DO_ADC@adc_result:
  1292     0049                     SHORTEN_PERIOD@TMR0_raw_extra:	
  1293                           ; 2 bytes @ 0x3
  1294                           
  1295                           
  1296                           ; 2 bytes @ 0x3
  1297     0049                     	ds	1
  1298     004A                     ___lmul@multiplicand:
  1299                           
  1300                           ; 4 bytes @ 0x4
  1301     004A                     	ds	1
  1302     004B                     ??_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST:
  1303     004B                     DO_ADC@temp:	
  1304                           ; 1 bytes @ 0x5
  1305                           
  1306                           
  1307                           ; 1 bytes @ 0x5
  1308     004B                     	ds	1
  1309     004C                     ??_DETERMINE_WAVESHAPE:
  1310     004C                     PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST@symmetry_status:	
  1311                           ; 1 bytes @ 0x6
  1312                           
  1313     004C                     DETERMINE_WAVESHAPE@ADC:	
  1314                           ; 1 bytes @ 0x6
  1315                           
  1316                           
  1317                           ; 2 bytes @ 0x6
  1318     004C                     	ds	2
  1319     004E                     ??_GET_CURRENT_POT_VALUES:
  1320     004E                     ??___lmul:	
  1321                           ; 1 bytes @ 0x8
  1322                           
  1323     004E                     ___lmul@product:	
  1324                           ; 1 bytes @ 0x8
  1325                           
  1326                           
  1327                           ; 4 bytes @ 0x8
  1328     004E                     	ds	4
  1329     0052                     ??_PROCESS_RAW_SPEED_AND_PRESCALER:
  1330                           
  1331                           ; 1 bytes @ 0xC
  1332     0052                     	ds	4
  1333     0056                     ??_main:
  1334                           
  1335                           	psect	maintext
  1336     04FD                     __pmaintext:	
  1337                           ; 1 bytes @ 0x10
  1338 ;;
  1339 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1340 ;;
  1341 ;; *************** function _main *****************
  1342 ;; Defined at:
  1343 ;;		line 480 in file "main.c"
  1344 ;; Parameters:    Size  Location     Type
  1345 ;;		None
  1346 ;; Auto vars:     Size  Location     Type
  1347 ;;		None
  1348 ;; Return value:  Size  Location     Type
  1349 ;;                  1    wreg      void 
  1350 ;; Registers used:
  1351 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1352 ;; Tracked objects:
  1353 ;;		On entry : B1F/0
  1354 ;;		On exit  : 1E/0
  1355 ;;		Unchanged: 0/0
  1356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1357 ;;      Params:         0       0       0       0
  1358 ;;      Locals:         0       0       0       0
  1359 ;;      Temps:          0       0       0       0
  1360 ;;      Totals:         0       0       0       0
  1361 ;;Total ram usage:        0 bytes
  1362 ;; Hardware stack levels required when called: 5
  1363 ;; This function calls:
  1364 ;;		_CONFIG_SYSTEM
  1365 ;;		_CONFIG_TMR0_INTERRUPT
  1366 ;;		_GET_CURRENT_POT_VALUES
  1367 ;;		_PROCESS_FINAL_SPEED_AND_PRESCALER
  1368 ;;		_PROCESS_RAW_SPEED_AND_PRESCALER
  1369 ;;		_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST
  1370 ;;		_TMR0_WRITE
  1371 ;;		_TURN_ON_CCP3_PWM
  1372 ;; This function is called by:
  1373 ;;		Startup code after reset
  1374 ;; This function uses a non-reentrant model
  1375 ;;
  1376                           
  1377     04FD                     _main:	
  1378                           ;psect for function _main
  1379                           
  1380                           
  1381                           ;main.c: 482:     CONFIG_SYSTEM();
  1382                           
  1383                           ;incstack = 0
  1384                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1385     04FD  3185  257E  3184   	fcall	_CONFIG_SYSTEM
  1386                           
  1387                           ;main.c: 483:     TURN_ON_CCP3_PWM();
  1388     0500  3185  259B  3184   	fcall	_TURN_ON_CCP3_PWM
  1389                           
  1390                           ;main.c: 484:     CONFIG_TMR0_INTERRUPT();
  1391     0503  3185  25BD  3184   	fcall	_CONFIG_TMR0_INTERRUPT
  1392                           
  1393                           ;main.c: 485:     GET_CURRENT_POT_VALUES();
  1394     0506  3184  2465  3184   	fcall	_GET_CURRENT_POT_VALUES
  1395                           
  1396                           ;main.c: 486:     PROCESS_RAW_SPEED_AND_PRESCALER();
  1397     0509  3183  2372  3184   	fcall	_PROCESS_RAW_SPEED_AND_PRESCALER
  1398                           
  1399                           ;main.c: 487:     PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST();
  1400     050C  3184  2425  3184   	fcall	_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST
  1401                           
  1402                           ;main.c: 488:     PROCESS_FINAL_SPEED_AND_PRESCALER();
  1403     050F  3183  23DC  3184   	fcall	_PROCESS_FINAL_SPEED_AND_PRESCALER
  1404                           
  1405                           ;main.c: 489:     TMR0_WRITE(&final_TMR0);
  1406     0512  3045               	movlw	(low (_final_TMR0| 0))& (0+255)
  1407     0513  3185  25A3  3184   	fcall	_TMR0_WRITE
  1408                           
  1409                           ;main.c: 490:     GIE = 1;
  1410     0516  178B               	bsf	11,7	;volatile
  1411     0517                     l1829:
  1412                           
  1413                           ;main.c: 494:         GET_CURRENT_POT_VALUES();
  1414     0517  3184  2465  3184   	fcall	_GET_CURRENT_POT_VALUES
  1415                           
  1416                           ;main.c: 495:         PROCESS_RAW_SPEED_AND_PRESCALER();
  1417     051A  3183  2372  3184   	fcall	_PROCESS_RAW_SPEED_AND_PRESCALER
  1418                           
  1419                           ;main.c: 496:         PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST();
  1420     051D  3184  2425  3184   	fcall	_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST
  1421                           
  1422                           ;main.c: 497:         PROCESS_FINAL_SPEED_AND_PRESCALER();
  1423     0520  3183  23DC  3184   	fcall	_PROCESS_FINAL_SPEED_AND_PRESCALER
  1424     0523  2D17               	goto	l1829
  1425     0524                     __end_of_main:
  1426                           
  1427                           	psect	text1
  1428     059B                     __ptext1:	
  1429 ;; *************** function _TURN_ON_CCP3_PWM *****************
  1430 ;; Defined at:
  1431 ;;		line 220 in file "main.c"
  1432 ;; Parameters:    Size  Location     Type
  1433 ;;		None
  1434 ;; Auto vars:     Size  Location     Type
  1435 ;;		None
  1436 ;; Return value:  Size  Location     Type
  1437 ;;                  1    wreg      unsigned char 
  1438 ;; Registers used:
  1439 ;;		None
  1440 ;; Tracked objects:
  1441 ;;		On entry : B1F/0
  1442 ;;		On exit  : B1F/1
  1443 ;;		Unchanged: B00/0
  1444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1445 ;;      Params:         0       0       0       0
  1446 ;;      Locals:         0       0       0       0
  1447 ;;      Temps:          0       0       0       0
  1448 ;;      Totals:         0       0       0       0
  1449 ;;Total ram usage:        0 bytes
  1450 ;; Hardware stack levels used: 1
  1451 ;; Hardware stack levels required when called: 2
  1452 ;; This function calls:
  1453 ;;		Nothing
  1454 ;; This function is called by:
  1455 ;;		_main
  1456 ;; This function uses a non-reentrant model
  1457 ;;
  1458                           
  1459     059B                     _TURN_ON_CCP3_PWM:	
  1460                           ;psect for function _TURN_ON_CCP3_PWM
  1461                           
  1462                           
  1463                           ;main.c: 222:     TMR2IF = 0;
  1464                           
  1465                           ;incstack = 0
  1466                           ; Regs used in _TURN_ON_CCP3_PWM: []
  1467     059B  1091               	bcf	17,1	;volatile
  1468                           
  1469                           ;main.c: 223:     TMR2ON = 1;
  1470     059C  151C               	bsf	28,2	;volatile
  1471     059D                     l177:	
  1472                           ;main.c: 224:     while(TMR2IF == 0){}
  1473                           
  1474     059D  1C91               	btfss	17,1	;volatile
  1475     059E  2D9D               	goto	l177
  1476                           
  1477                           ;main.c: 225:     TMR2IF = 0;
  1478     059F  1091               	bcf	17,1	;volatile
  1479                           
  1480                           ;main.c: 226:     TRISA2 = 0;
  1481     05A0  0021               	movlb	1	; select bank1
  1482     05A1  110C               	bcf	12,2	;volatile
  1483                           
  1484                           ;main.c: 227:     return 1;;	Return value of _TURN_ON_CCP3_PWM is never used
  1485     05A2  0008               	return
  1486     05A3                     __end_of_TURN_ON_CCP3_PWM:
  1487                           
  1488                           	psect	text2
  1489     05A3                     __ptext2:	
  1490 ;; *************** function _TMR0_WRITE *****************
  1491 ;; Defined at:
  1492 ;;		line 243 in file "main.c"
  1493 ;; Parameters:    Size  Location     Type
  1494 ;;  timer_value_    1    wreg     PTR volatile unsigned ch
  1495 ;;		 -> final_TMR0(1), 
  1496 ;; Auto vars:     Size  Location     Type
  1497 ;;  timer_value_    1    0[BANK0 ] PTR volatile unsigned ch
  1498 ;;		 -> final_TMR0(1), 
  1499 ;; Return value:  Size  Location     Type
  1500 ;;                  1    wreg      unsigned char 
  1501 ;; Registers used:
  1502 ;;		wreg, fsr1l, fsr1h
  1503 ;; Tracked objects:
  1504 ;;		On entry : 1E/0
  1505 ;;		On exit  : 1F/0
  1506 ;;		Unchanged: 0/0
  1507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1508 ;;      Params:         0       0       0       0
  1509 ;;      Locals:         0       1       0       0
  1510 ;;      Temps:          0       0       0       0
  1511 ;;      Totals:         0       1       0       0
  1512 ;;Total ram usage:        1 bytes
  1513 ;; Hardware stack levels used: 1
  1514 ;; Hardware stack levels required when called: 2
  1515 ;; This function calls:
  1516 ;;		Nothing
  1517 ;; This function is called by:
  1518 ;;		_main
  1519 ;; This function uses a non-reentrant model
  1520 ;;
  1521                           
  1522     05A3                     _TMR0_WRITE:	
  1523                           ;psect for function _TMR0_WRITE
  1524                           
  1525                           
  1526                           ;incstack = 0
  1527                           ; Regs used in _TMR0_WRITE: [wregfsr1]
  1528                           ;TMR0_WRITE@timer_value_ptr stored from wreg
  1529     05A3  0020               	movlb	0	; select bank0
  1530     05A4  00C6               	movwf	TMR0_WRITE@timer_value_ptr
  1531                           
  1532                           ;main.c: 244:     TMR0 = (uint8_t) *timer_value_ptr;
  1533     05A5  0846               	movf	TMR0_WRITE@timer_value_ptr,w
  1534     05A6  0086               	movwf	6
  1535     05A7  0187               	clrf	7
  1536     05A8  0801               	movf	1,w
  1537     05A9  0095               	movwf	21	;volatile
  1538     05AA  0008               	return
  1539     05AB                     __end_of_TMR0_WRITE:
  1540                           
  1541                           	psect	text3
  1542     0425                     __ptext3:	
  1543 ;; *************** function _PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST *****************
  1544 ;; Defined at:
  1545 ;;		line 353 in file "main.c"
  1546 ;; Parameters:    Size  Location     Type
  1547 ;;		None
  1548 ;; Auto vars:     Size  Location     Type
  1549 ;;  symmetry_sta    1    6[BANK0 ] unsigned char 
  1550 ;; Return value:  Size  Location     Type
  1551 ;;                  1    wreg      unsigned char 
  1552 ;; Registers used:
  1553 ;;		wreg, status,2, status,0, pclath, cstack
  1554 ;; Tracked objects:
  1555 ;;		On entry : 1F/0
  1556 ;;		On exit  : 1F/0
  1557 ;;		Unchanged: 0/0
  1558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1559 ;;      Params:         0       0       0       0
  1560 ;;      Locals:         0       1       0       0
  1561 ;;      Temps:          0       1       0       0
  1562 ;;      Totals:         0       2       0       0
  1563 ;;Total ram usage:        2 bytes
  1564 ;; Hardware stack levels used: 1
  1565 ;; Hardware stack levels required when called: 3
  1566 ;; This function calls:
  1567 ;;		_SHORTEN_PERIOD
  1568 ;; This function is called by:
  1569 ;;		_main
  1570 ;; This function uses a non-reentrant model
  1571 ;;
  1572                           
  1573     0425                     _PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST:	
  1574                           ;psect for function _PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST
  1575                           
  1576                           
  1577                           ;main.c: 354:     if(current_symmetry == 128){
  1578                           
  1579                           ;incstack = 0
  1580                           ; Regs used in _PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST: [wreg+status,2+status,0+pclath
      +                          +cstack]
  1581     0425  3080               	movlw	128
  1582     0426  062C               	xorwf	_current_symmetry,w	;volatile
  1583     0427  042D               	iorwf	_current_symmetry+1,w	;volatile
  1584     0428  1D03               	btfss	3,2
  1585     0429  2C30               	goto	l1769
  1586                           
  1587                           ;main.c: 355:         TMR0_offset = 0;
  1588     042A  01BE               	clrf	_TMR0_offset	;volatile
  1589                           
  1590                           ;main.c: 356:         TMR0_offset_sign = POSITIVE;
  1591     042B  3001               	movlw	1
  1592     042C  00BD               	movwf	_TMR0_offset_sign	;volatile
  1593                           
  1594                           ;main.c: 357:         prescaler_adjust = DO_NOTHING;
  1595     042D  01F3               	clrf	_prescaler_adjust	;volatile
  1596                           
  1597                           ;main.c: 358:         clear_TMR0_please = NO;
  1598     042E  01BB               	clrf	_clear_TMR0_please	;volatile
  1599                           
  1600                           ;main.c: 359:         return 1;;	Return value of _PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJU
      +                          ST is never used
  1601     042F  0008               	return
  1602     0430                     l1769:
  1603                           
  1604                           ;main.c: 361:     uint8_t symmetry_status = CCW;
  1605     0430  01CC               	clrf	PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST@symmetry_status
  1606                           
  1607                           ;main.c: 362:     if(current_symmetry > 128){
  1608     0431  3000               	movlw	0
  1609     0432  022D               	subwf	_current_symmetry+1,w	;volatile
  1610     0433  3081               	movlw	129
  1611     0434  1903               	skipnz
  1612     0435  022C               	subwf	_current_symmetry,w	;volatile
  1613     0436  1C03               	skipc
  1614     0437  2C43               	goto	l1777
  1615                           
  1616                           ;main.c: 363:         current_symmetry = 255 - current_symmetry;
  1617     0438  30FF               	movlw	255
  1618     0439  00CB               	movwf	??_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST
  1619     043A  082C               	movf	_current_symmetry,w	;volatile
  1620     043B  024B               	subwf	??_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST,w
  1621     043C  00AC               	movwf	_current_symmetry	;volatile
  1622     043D  092D               	comf	_current_symmetry+1,w	;volatile
  1623     043E  1803               	skipnc
  1624     043F  0A89               	incf	9,f
  1625     0440  00AD               	movwf	_current_symmetry+1	;volatile
  1626                           
  1627                           ;main.c: 364:         symmetry_status = CW;
  1628     0441  01CC               	clrf	PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST@symmetry_status
  1629     0442  0ACC               	incf	PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST@symmetry_status,f
  1630     0443                     l1777:
  1631                           
  1632                           ;main.c: 366:     if((current_halfcycle == 0) && (symmetry_status == CCW)){
  1633     0443  0840               	movf	_current_halfcycle,w	;volatile
  1634     0444  1D03               	btfss	3,2
  1635     0445  2C4C               	goto	l1783
  1636     0446  084C               	movf	PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST@symmetry_status,w
  1637     0447  1D03               	btfss	3,2
  1638     0448  2C4C               	goto	l1783
  1639     0449                     l1781:
  1640                           
  1641                           ;main.c: 367:         SHORTEN_PERIOD();
  1642     0449  3182  22F2         	fcall	_SHORTEN_PERIOD
  1643                           
  1644                           ;main.c: 368:     }
  1645     044B  0008               	return
  1646     044C                     l1783:
  1647     044C  0840               	movf	_current_halfcycle,w	;volatile
  1648     044D  1D03               	btfss	3,2
  1649     044E  2C5B               	goto	l1793
  1650     044F  034C               	decf	PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST@symmetry_status,w
  1651     0450  1903               	btfsc	3,2
  1652     0451  2C56               	goto	l1787
  1653     0452  2C5B               	goto	l1793
  1654     0453                     l1795:
  1655     0453  084C               	movf	PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST@symmetry_status,w
  1656     0454  1D03               	btfss	3,2
  1657     0455  2C5E               	goto	l1803
  1658     0456                     l1787:
  1659                           
  1660                           ;main.c: 371:         TMR0_offset=0;
  1661     0456  01BE               	clrf	_TMR0_offset	;volatile
  1662                           
  1663                           ;main.c: 372:         TMR0_offset_sign=DONT_CARE;
  1664     0457  3004               	movlw	4
  1665     0458  00BD               	movwf	_TMR0_offset_sign	;volatile
  1666                           
  1667                           ;main.c: 373:         prescaler_adjust=DO_NOTHING;
  1668     0459  01F3               	clrf	_prescaler_adjust	;volatile
  1669                           
  1670                           ;main.c: 374:     }
  1671     045A  0008               	return
  1672     045B                     l1793:
  1673     045B  0340               	decf	_current_halfcycle,w	;volatile
  1674     045C  1903               	btfsc	3,2
  1675     045D  2C53               	goto	l1795
  1676     045E                     l1803:
  1677     045E  0340               	decf	_current_halfcycle,w	;volatile
  1678     045F  1D03               	btfss	3,2
  1679     0460  0008               	return
  1680     0461  034C               	decf	PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST@symmetry_status,w
  1681     0462  1D03               	btfss	3,2
  1682     0463  0008               	return
  1683     0464  2C49               	goto	l1781
  1684     0465                     __end_of_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST:
  1685                           
  1686                           	psect	text4
  1687     02F2                     __ptext4:	
  1688 ;; *************** function _SHORTEN_PERIOD *****************
  1689 ;; Defined at:
  1690 ;;		line 302 in file "main.c"
  1691 ;; Parameters:    Size  Location     Type
  1692 ;;		None
  1693 ;; Auto vars:     Size  Location     Type
  1694 ;;  TMR0_raw_ext    2    3[BANK0 ] unsigned short 
  1695 ;; Return value:  Size  Location     Type
  1696 ;;                  1    wreg      unsigned char 
  1697 ;; Registers used:
  1698 ;;		wreg, status,2, status,0
  1699 ;; Tracked objects:
  1700 ;;		On entry : 1F/0
  1701 ;;		On exit  : 1F/0
  1702 ;;		Unchanged: 0/0
  1703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1704 ;;      Params:         0       0       0       0
  1705 ;;      Locals:         0       2       0       0
  1706 ;;      Temps:          0       3       0       0
  1707 ;;      Totals:         0       5       0       0
  1708 ;;Total ram usage:        5 bytes
  1709 ;; Hardware stack levels used: 1
  1710 ;; Hardware stack levels required when called: 2
  1711 ;; This function calls:
  1712 ;;		Nothing
  1713 ;; This function is called by:
  1714 ;;		_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST
  1715 ;; This function uses a non-reentrant model
  1716 ;;
  1717                           
  1718     02F2                     _SHORTEN_PERIOD:	
  1719                           ;psect for function _SHORTEN_PERIOD
  1720                           
  1721                           
  1722                           ;main.c: 303:     dTMR0_ideal = (128 - current_symmetry) << 1;
  1723                           
  1724                           ;incstack = 0
  1725                           ; Regs used in _SHORTEN_PERIOD: [wreg+status,2+status,0]
  1726     02F2  3080               	movlw	128
  1727     02F3  00C6               	movwf	??_SHORTEN_PERIOD
  1728     02F4  082C               	movf	_current_symmetry,w	;volatile
  1729     02F5  0246               	subwf	??_SHORTEN_PERIOD,w
  1730     02F6  00C7               	movwf	??_SHORTEN_PERIOD+1
  1731     02F7  092D               	comf	_current_symmetry+1,w	;volatile
  1732     02F8  1803               	skipnc
  1733     02F9  0A89               	incf	9,f
  1734     02FA  00C8               	movwf	??_SHORTEN_PERIOD+2
  1735     02FB  3547               	lslf	??_SHORTEN_PERIOD+1,w
  1736     02FC  00F0               	movwf	_dTMR0_ideal	;volatile
  1737     02FD  0D48               	rlf	??_SHORTEN_PERIOD+2,w
  1738     02FE  00F1               	movwf	_dTMR0_ideal+1	;volatile
  1739                           
  1740                           ;main.c: 304:     if((dTMR0_ideal + raw_TMR0) < 128){
  1741     02FF  0872               	movf	_raw_TMR0,w	;volatile
  1742     0300  0770               	addwf	_dTMR0_ideal,w	;volatile
  1743     0301  00C6               	movwf	??_SHORTEN_PERIOD
  1744     0302  0871               	movf	_dTMR0_ideal+1,w	;volatile
  1745     0303  1803               	skipnc
  1746     0304  0A71               	incf	_dTMR0_ideal+1,w	;volatile
  1747     0305  00C7               	movwf	??_SHORTEN_PERIOD+1
  1748     0306  3000               	movlw	0
  1749     0307  0247               	subwf	??_SHORTEN_PERIOD+1,w
  1750     0308  3080               	movlw	128
  1751     0309  1903               	skipnz
  1752     030A  0246               	subwf	??_SHORTEN_PERIOD,w
  1753     030B  1803               	skipnc
  1754     030C  2B14               	goto	l1641
  1755                           
  1756                           ;main.c: 305:         TMR0_offset = (uint8_t)dTMR0_ideal;
  1757     030D  0870               	movf	_dTMR0_ideal,w	;volatile
  1758     030E  00BE               	movwf	_TMR0_offset	;volatile
  1759                           
  1760                           ;main.c: 306:         TMR0_offset_sign = POSITIVE;
  1761     030F  3001               	movlw	1
  1762     0310  00BD               	movwf	_TMR0_offset_sign	;volatile
  1763                           
  1764                           ;main.c: 307:         prescaler_adjust = DO_NOTHING;
  1765     0311  01F3               	clrf	_prescaler_adjust	;volatile
  1766                           
  1767                           ;main.c: 308:         clear_TMR0_please = NO;
  1768     0312  01BB               	clrf	_clear_TMR0_please	;volatile
  1769                           
  1770                           ;main.c: 309:     }
  1771     0313  0008               	return
  1772     0314                     l1641:
  1773     0314  0872               	movf	_raw_TMR0,w	;volatile
  1774     0315  0770               	addwf	_dTMR0_ideal,w	;volatile
  1775     0316  00C6               	movwf	??_SHORTEN_PERIOD
  1776     0317  0871               	movf	_dTMR0_ideal+1,w	;volatile
  1777     0318  1803               	skipnc
  1778     0319  0A71               	incf	_dTMR0_ideal+1,w	;volatile
  1779     031A  00C7               	movwf	??_SHORTEN_PERIOD+1
  1780     031B  3080               	movlw	128
  1781     031C  0646               	xorwf	??_SHORTEN_PERIOD,w
  1782     031D  0447               	iorwf	??_SHORTEN_PERIOD+1,w
  1783     031E  1D03               	btfss	3,2
  1784     031F  2B28               	goto	l1651
  1785                           
  1786                           ;main.c: 311:         TMR0_offset = 0;
  1787     0320  01BE               	clrf	_TMR0_offset	;volatile
  1788                           
  1789                           ;main.c: 312:         TMR0_offset_sign = DONT_CARE;
  1790     0321  3004               	movlw	4
  1791     0322  00BD               	movwf	_TMR0_offset_sign	;volatile
  1792                           
  1793                           ;main.c: 313:         prescaler_adjust = DIVIDE_BY_TWO;
  1794     0323  3001               	movlw	1
  1795     0324                     L1:
  1796     0324  00F3               	movwf	_prescaler_adjust	;volatile
  1797                           
  1798                           ;main.c: 314:         clear_TMR0_please = YES;
  1799     0325  3001               	movlw	1
  1800     0326  00BB               	movwf	_clear_TMR0_please	;volatile
  1801                           
  1802                           ;main.c: 315:     }
  1803     0327  0008               	return
  1804     0328                     l1651:
  1805     0328  0872               	movf	_raw_TMR0,w	;volatile
  1806     0329  0770               	addwf	_dTMR0_ideal,w	;volatile
  1807     032A  00C6               	movwf	??_SHORTEN_PERIOD
  1808     032B  0871               	movf	_dTMR0_ideal+1,w	;volatile
  1809     032C  1803               	skipnc
  1810     032D  0A71               	incf	_dTMR0_ideal+1,w	;volatile
  1811     032E  00C7               	movwf	??_SHORTEN_PERIOD+1
  1812     032F  3000               	movlw	0
  1813     0330  0247               	subwf	??_SHORTEN_PERIOD+1,w
  1814     0331  3081               	movlw	129
  1815     0332  1903               	skipnz
  1816     0333  0246               	subwf	??_SHORTEN_PERIOD,w
  1817     0334  1C03               	skipc
  1818     0335  0008               	return
  1819                           
  1820                           ;main.c: 317:         uint16_t TMR0_raw_extra = dTMR0_ideal + raw_TMR0 - 128;
  1821     0336  0872               	movf	_raw_TMR0,w	;volatile
  1822     0337  0770               	addwf	_dTMR0_ideal,w	;volatile
  1823     0338  00C6               	movwf	??_SHORTEN_PERIOD
  1824     0339  0871               	movf	_dTMR0_ideal+1,w	;volatile
  1825     033A  1803               	skipnc
  1826     033B  0A71               	incf	_dTMR0_ideal+1,w	;volatile
  1827     033C  00C7               	movwf	??_SHORTEN_PERIOD+1
  1828     033D  0846               	movf	??_SHORTEN_PERIOD,w
  1829     033E  3E80               	addlw	128
  1830     033F  00C9               	movwf	SHORTEN_PERIOD@TMR0_raw_extra
  1831     0340  30FF               	movlw	255
  1832     0341  3D47               	addwfc	??_SHORTEN_PERIOD+1,w
  1833     0342  00CA               	movwf	SHORTEN_PERIOD@TMR0_raw_extra+1
  1834                           
  1835                           ;main.c: 318:         if(TMR0_raw_extra >> 7 == 0){
  1836     0343  084A               	movf	SHORTEN_PERIOD@TMR0_raw_extra+1,w
  1837     0344  00C7               	movwf	??_SHORTEN_PERIOD+1
  1838     0345  0849               	movf	SHORTEN_PERIOD@TMR0_raw_extra,w
  1839     0346  00C6               	movwf	??_SHORTEN_PERIOD
  1840     0347  3007               	movlw	7
  1841     0348                     u1075:
  1842     0348  36C7               	lsrf	??_SHORTEN_PERIOD+1,f
  1843     0349  0CC6               	rrf	??_SHORTEN_PERIOD,f
  1844     034A  0B89               	decfsz	9,f
  1845     034B  2B48               	goto	u1075
  1846     034C  0846               	movf	??_SHORTEN_PERIOD,w
  1847     034D  0447               	iorwf	??_SHORTEN_PERIOD+1,w
  1848     034E  1D03               	btfss	3,2
  1849     034F  2B59               	goto	l1657
  1850                           
  1851                           ;main.c: 319:             TMR0_offset = (uint8_t)TMR0_raw_extra;
  1852     0350  0849               	movf	SHORTEN_PERIOD@TMR0_raw_extra,w
  1853     0351  00BE               	movwf	_TMR0_offset	;volatile
  1854                           
  1855                           ;main.c: 320:             TMR0_offset_sign = POSITIVE;
  1856     0352  3001               	movlw	1
  1857     0353  00BD               	movwf	_TMR0_offset_sign	;volatile
  1858                           
  1859                           ;main.c: 321:             prescaler_adjust = DIVIDE_BY_TWO;
  1860     0354  3001               	movlw	1
  1861     0355  00F3               	movwf	_prescaler_adjust	;volatile
  1862                           
  1863                           ;main.c: 322:             clear_TMR0_please = YES;
  1864     0356  3001               	movlw	1
  1865     0357  00BB               	movwf	_clear_TMR0_please	;volatile
  1866                           
  1867                           ;main.c: 323:         }
  1868     0358  0008               	return
  1869     0359                     l1657:
  1870     0359  084A               	movf	SHORTEN_PERIOD@TMR0_raw_extra+1,w
  1871     035A  00C7               	movwf	??_SHORTEN_PERIOD+1
  1872     035B  0849               	movf	SHORTEN_PERIOD@TMR0_raw_extra,w
  1873     035C  00C6               	movwf	??_SHORTEN_PERIOD
  1874     035D  3007               	movlw	7
  1875     035E                     u1095:
  1876     035E  36C7               	lsrf	??_SHORTEN_PERIOD+1,f
  1877     035F  0CC6               	rrf	??_SHORTEN_PERIOD,f
  1878     0360  0B89               	decfsz	9,f
  1879     0361  2B5E               	goto	u1095
  1880     0362  0346               	decf	??_SHORTEN_PERIOD,w
  1881     0363  0447               	iorwf	??_SHORTEN_PERIOD+1,w
  1882     0364  1D03               	btfss	3,2
  1883     0365  0008               	return
  1884                           
  1885                           ;main.c: 325:             TMR0_raw_extra = TMR0_raw_extra - 128;
  1886     0366  0849               	movf	SHORTEN_PERIOD@TMR0_raw_extra,w
  1887     0367  3E80               	addlw	128
  1888     0368  00C9               	movwf	SHORTEN_PERIOD@TMR0_raw_extra
  1889     0369  30FF               	movlw	255
  1890     036A  3D4A               	addwfc	SHORTEN_PERIOD@TMR0_raw_extra+1,w
  1891     036B  00CA               	movwf	SHORTEN_PERIOD@TMR0_raw_extra+1
  1892                           
  1893                           ;main.c: 326:             TMR0_offset = (uint8_t)TMR0_raw_extra;
  1894     036C  0849               	movf	SHORTEN_PERIOD@TMR0_raw_extra,w
  1895     036D  00BE               	movwf	_TMR0_offset	;volatile
  1896                           
  1897                           ;main.c: 327:             TMR0_offset_sign = POSITIVE;
  1898     036E  3001               	movlw	1
  1899     036F  00BD               	movwf	_TMR0_offset_sign	;volatile
  1900                           
  1901                           ;main.c: 328:             prescaler_adjust = DIVIDE_BY_FOUR;
  1902     0370  3003               	movlw	3
  1903     0371  2B24               	goto	L1
  1904     0372                     __end_of_SHORTEN_PERIOD:
  1905                           
  1906                           	psect	text5
  1907     0372                     __ptext5:	
  1908 ;; *************** function _PROCESS_RAW_SPEED_AND_PRESCALER *****************
  1909 ;; Defined at:
  1910 ;;		line 258 in file "main.c"
  1911 ;; Parameters:    Size  Location     Type
  1912 ;;		None
  1913 ;; Auto vars:     Size  Location     Type
  1914 ;;		None
  1915 ;; Return value:  Size  Location     Type
  1916 ;;                  1    wreg      unsigned char 
  1917 ;; Registers used:
  1918 ;;		wreg, status,2, status,0, pclath, cstack
  1919 ;; Tracked objects:
  1920 ;;		On entry : 1F/0
  1921 ;;		On exit  : 1F/0
  1922 ;;		Unchanged: 0/0
  1923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1924 ;;      Params:         0       0       0       0
  1925 ;;      Locals:         0       0       0       0
  1926 ;;      Temps:          0       4       0       0
  1927 ;;      Totals:         0       4       0       0
  1928 ;;Total ram usage:        4 bytes
  1929 ;; Hardware stack levels used: 1
  1930 ;; Hardware stack levels required when called: 3
  1931 ;; This function calls:
  1932 ;;		___lmul
  1933 ;; This function is called by:
  1934 ;;		_main
  1935 ;; This function uses a non-reentrant model
  1936 ;;
  1937                           
  1938     0372                     _PROCESS_RAW_SPEED_AND_PRESCALER:	
  1939                           ;psect for function _PROCESS_RAW_SPEED_AND_PRESCALER
  1940                           
  1941                           
  1942                           ;main.c: 259:     current_speed_linear_32 = current_speed_linear;
  1943                           
  1944                           ;incstack = 0
  1945                           ; Regs used in _PROCESS_RAW_SPEED_AND_PRESCALER: [wreg+status,2+status,0+pclath+cstack]
  1946     0372  0832               	movf	_current_speed_linear,w	;volatile
  1947     0373  00A4               	movwf	_current_speed_linear_32	;volatile
  1948     0374  0833               	movf	_current_speed_linear+1,w	;volatile
  1949     0375  00A5               	movwf	_current_speed_linear_32+1	;volatile
  1950     0376  01A6               	clrf	_current_speed_linear_32+2	;volatile
  1951     0377  01A7               	clrf	_current_speed_linear_32+3	;volatile
  1952                           
  1953                           ;main.c: 260:     speed_control_32 = current_speed_linear_32 * 600;;
  1954     0378  0827               	movf	_current_speed_linear_32+3,w	;volatile
  1955     0379  00C9               	movwf	___lmul@multiplier+3
  1956     037A  0826               	movf	_current_speed_linear_32+2,w	;volatile
  1957     037B  00C8               	movwf	___lmul@multiplier+2
  1958     037C  0825               	movf	_current_speed_linear_32+1,w	;volatile
  1959     037D  00C7               	movwf	___lmul@multiplier+1
  1960     037E  0824               	movf	_current_speed_linear_32,w	;volatile
  1961     037F  00C6               	movwf	___lmul@multiplier
  1962     0380  3000               	movlw	0
  1963     0381  00CD               	movwf	___lmul@multiplicand+3
  1964     0382  3000               	movlw	0
  1965     0383  00CC               	movwf	___lmul@multiplicand+2
  1966     0384  3002               	movlw	2
  1967     0385  00CB               	movwf	___lmul@multiplicand+1
  1968     0386  3058               	movlw	88
  1969     0387  00CA               	movwf	___lmul@multiplicand
  1970     0388  3184  24A2  3183   	fcall	___lmul
  1971     038B  0849               	movf	?___lmul+3,w
  1972     038C  00AB               	movwf	_speed_control_32+3	;volatile
  1973     038D  0848               	movf	?___lmul+2,w
  1974     038E  00AA               	movwf	_speed_control_32+2	;volatile
  1975     038F  0847               	movf	?___lmul+1,w
  1976     0390  00A9               	movwf	_speed_control_32+1	;volatile
  1977     0391  0846               	movf	?___lmul,w
  1978     0392  00A8               	movwf	_speed_control_32	;volatile
  1979                           
  1980                           ;main.c: 261:     speed_control_32 = speed_control_32 >> 10;
  1981     0393  0828               	movf	_speed_control_32,w	;volatile
  1982     0394  00D2               	movwf	??_PROCESS_RAW_SPEED_AND_PRESCALER
  1983     0395  0829               	movf	_speed_control_32+1,w	;volatile
  1984     0396  00D3               	movwf	??_PROCESS_RAW_SPEED_AND_PRESCALER+1
  1985     0397  082A               	movf	_speed_control_32+2,w	;volatile
  1986     0398  00D4               	movwf	??_PROCESS_RAW_SPEED_AND_PRESCALER+2
  1987     0399  082B               	movf	_speed_control_32+3,w	;volatile
  1988     039A  00D5               	movwf	??_PROCESS_RAW_SPEED_AND_PRESCALER+3
  1989     039B  300A               	movlw	10
  1990     039C                     u1165:
  1991     039C  36D5               	lsrf	??_PROCESS_RAW_SPEED_AND_PRESCALER+3,f
  1992     039D  0CD4               	rrf	??_PROCESS_RAW_SPEED_AND_PRESCALER+2,f
  1993     039E  0CD3               	rrf	??_PROCESS_RAW_SPEED_AND_PRESCALER+1,f
  1994     039F  0CD2               	rrf	??_PROCESS_RAW_SPEED_AND_PRESCALER,f
  1995     03A0  0B89               	decfsz	9,f
  1996     03A1  2B9C               	goto	u1165
  1997     03A2  0855               	movf	??_PROCESS_RAW_SPEED_AND_PRESCALER+3,w
  1998     03A3  00AB               	movwf	_speed_control_32+3	;volatile
  1999     03A4  0854               	movf	??_PROCESS_RAW_SPEED_AND_PRESCALER+2,w
  2000     03A5  00AA               	movwf	_speed_control_32+2	;volatile
  2001     03A6  0853               	movf	??_PROCESS_RAW_SPEED_AND_PRESCALER+1,w
  2002     03A7  00A9               	movwf	_speed_control_32+1	;volatile
  2003     03A8  0852               	movf	??_PROCESS_RAW_SPEED_AND_PRESCALER,w
  2004     03A9  00A8               	movwf	_speed_control_32	;volatile
  2005                           
  2006                           ;main.c: 262:     speed_control = (uint16_t) speed_control_32;
  2007     03AA  0829               	movf	_speed_control_32+1,w	;volatile
  2008     03AB  00B9               	movwf	_speed_control+1	;volatile
  2009     03AC  0828               	movf	_speed_control_32,w	;volatile
  2010     03AD  00B8               	movwf	_speed_control	;volatile
  2011                           
  2012                           ;main.c: 264:         if(speed_control <= (127-12)){
  2013     03AE  3000               	movlw	0
  2014     03AF  0239               	subwf	_speed_control+1,w	;volatile
  2015     03B0  3074               	movlw	116
  2016     03B1  1903               	skipnz
  2017     03B2  0238               	subwf	_speed_control,w	;volatile
  2018     03B3  1803               	skipnc
  2019     03B4  2BBB               	goto	l1719
  2020                           
  2021                           ;main.c: 265:             raw_TMR0 = (uint8_t) speed_control + 12;
  2022     03B5  0838               	movf	_speed_control,w	;volatile
  2023     03B6  3E0C               	addlw	12
  2024     03B7  00F2               	movwf	_raw_TMR0	;volatile
  2025                           
  2026                           ;main.c: 266:             base_prescaler_bits_index = 1;
  2027     03B8  3001               	movlw	1
  2028     03B9  00BC               	movwf	_base_prescaler_bits_index	;volatile
  2029                           
  2030                           ;main.c: 267:         }
  2031     03BA  0008               	return
  2032     03BB                     l1719:
  2033                           
  2034                           ;main.c: 269:             speed_control_subtracted = speed_control - (127-12);
  2035     03BB  0838               	movf	_speed_control,w	;volatile
  2036     03BC  3E8D               	addlw	141
  2037     03BD  00B6               	movwf	_speed_control_subtracted	;volatile
  2038     03BE  30FF               	movlw	255
  2039     03BF  3D39               	addwfc	_speed_control+1,w	;volatile
  2040     03C0  00B7               	movwf	_speed_control_subtracted+1	;volatile
  2041                           
  2042                           ;main.c: 270:             how_many_128 = speed_control_subtracted >> 7;
  2043     03C1  0837               	movf	_speed_control_subtracted+1,w	;volatile
  2044     03C2  00D3               	movwf	??_PROCESS_RAW_SPEED_AND_PRESCALER+1
  2045     03C3  0836               	movf	_speed_control_subtracted,w	;volatile
  2046     03C4  00D2               	movwf	??_PROCESS_RAW_SPEED_AND_PRESCALER
  2047     03C5  3007               	movlw	7
  2048     03C6                     u1185:
  2049     03C6  36D3               	lsrf	??_PROCESS_RAW_SPEED_AND_PRESCALER+1,f
  2050     03C7  0CD2               	rrf	??_PROCESS_RAW_SPEED_AND_PRESCALER,f
  2051     03C8  0B89               	decfsz	9,f
  2052     03C9  2BC6               	goto	u1185
  2053     03CA  0852               	movf	??_PROCESS_RAW_SPEED_AND_PRESCALER,w
  2054     03CB  00B4               	movwf	_how_many_128	;volatile
  2055     03CC  0853               	movf	??_PROCESS_RAW_SPEED_AND_PRESCALER+1,w
  2056     03CD  00B5               	movwf	_how_many_128+1	;volatile
  2057                           
  2058                           ;main.c: 271:             raw_TMR0 = (uint8_t) (speed_control_subtracted - (how_many_128
      +                           << 7));
  2059     03CE  0834               	movf	_how_many_128,w	;volatile
  2060     03CF  00D2               	movwf	??_PROCESS_RAW_SPEED_AND_PRESCALER
  2061     03D0  3006               	movlw	6
  2062     03D1                     u1195:
  2063     03D1  35D2               	lslf	??_PROCESS_RAW_SPEED_AND_PRESCALER,f
  2064     03D2  3EFF               	addlw	-1
  2065     03D3  1D03               	skipz
  2066     03D4  2BD1               	goto	u1195
  2067     03D5  3552               	lslf	??_PROCESS_RAW_SPEED_AND_PRESCALER,w
  2068     03D6  0736               	addwf	_speed_control_subtracted,w	;volatile
  2069     03D7  00F2               	movwf	_raw_TMR0	;volatile
  2070                           
  2071                           ;main.c: 272:             base_prescaler_bits_index = how_many_128 + 2;
  2072     03D8  0834               	movf	_how_many_128,w	;volatile
  2073     03D9  3E02               	addlw	2
  2074     03DA  00BC               	movwf	_base_prescaler_bits_index	;volatile
  2075     03DB  0008               	return
  2076     03DC                     __end_of_PROCESS_RAW_SPEED_AND_PRESCALER:
  2077                           
  2078                           	psect	text6
  2079     04A2                     __ptext6:	
  2080 ;; *************** function ___lmul *****************
  2081 ;; Defined at:
  2082 ;;		line 15 in file "/Applications/microchip/xc8/v2.45/pic/sources/c99/common/Umul32.c"
  2083 ;; Parameters:    Size  Location     Type
  2084 ;;  multiplier      4    0[BANK0 ] unsigned long 
  2085 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  2086 ;; Auto vars:     Size  Location     Type
  2087 ;;  product         4    8[BANK0 ] unsigned long 
  2088 ;; Return value:  Size  Location     Type
  2089 ;;                  4    0[BANK0 ] unsigned long 
  2090 ;; Registers used:
  2091 ;;		wreg, status,2, status,0
  2092 ;; Tracked objects:
  2093 ;;		On entry : 1F/0
  2094 ;;		On exit  : 1F/0
  2095 ;;		Unchanged: 0/0
  2096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2097 ;;      Params:         0       8       0       0
  2098 ;;      Locals:         0       4       0       0
  2099 ;;      Temps:          0       0       0       0
  2100 ;;      Totals:         0      12       0       0
  2101 ;;Total ram usage:       12 bytes
  2102 ;; Hardware stack levels used: 1
  2103 ;; Hardware stack levels required when called: 2
  2104 ;; This function calls:
  2105 ;;		Nothing
  2106 ;; This function is called by:
  2107 ;;		_PROCESS_RAW_SPEED_AND_PRESCALER
  2108 ;; This function uses a non-reentrant model
  2109 ;;
  2110                           
  2111     04A2                     ___lmul:	
  2112                           ;psect for function ___lmul
  2113                           
  2114                           
  2115                           ;incstack = 0
  2116                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  2117     04A2  3000               	movlw	0
  2118     04A3  00D1               	movwf	___lmul@product+3
  2119     04A4  3000               	movlw	0
  2120     04A5  00D0               	movwf	___lmul@product+2
  2121     04A6  3000               	movlw	0
  2122     04A7  00CF               	movwf	___lmul@product+1
  2123     04A8  3000               	movlw	0
  2124     04A9  00CE               	movwf	___lmul@product
  2125     04AA                     l1673:
  2126     04AA  1C46               	btfss	___lmul@multiplier,0
  2127     04AB  2CB4               	goto	l1677
  2128     04AC  084A               	movf	___lmul@multiplicand,w
  2129     04AD  07CE               	addwf	___lmul@product,f
  2130     04AE  084B               	movf	___lmul@multiplicand+1,w
  2131     04AF  3DCF               	addwfc	___lmul@product+1,f
  2132     04B0  084C               	movf	___lmul@multiplicand+2,w
  2133     04B1  3DD0               	addwfc	___lmul@product+2,f
  2134     04B2  084D               	movf	___lmul@multiplicand+3,w
  2135     04B3  3DD1               	addwfc	___lmul@product+3,f
  2136     04B4                     l1677:
  2137     04B4  3001               	movlw	1
  2138     04B5                     u1125:
  2139     04B5  35CA               	lslf	___lmul@multiplicand,f
  2140     04B6  0DCB               	rlf	___lmul@multiplicand+1,f
  2141     04B7  0DCC               	rlf	___lmul@multiplicand+2,f
  2142     04B8  0DCD               	rlf	___lmul@multiplicand+3,f
  2143     04B9  0B89               	decfsz	9,f
  2144     04BA  2CB5               	goto	u1125
  2145     04BB  3001               	movlw	1
  2146     04BC                     u1135:
  2147     04BC  36C9               	lsrf	___lmul@multiplier+3,f
  2148     04BD  0CC8               	rrf	___lmul@multiplier+2,f
  2149     04BE  0CC7               	rrf	___lmul@multiplier+1,f
  2150     04BF  0CC6               	rrf	___lmul@multiplier,f
  2151     04C0  0B89               	decfsz	9,f
  2152     04C1  2CBC               	goto	u1135
  2153     04C2  0849               	movf	___lmul@multiplier+3,w
  2154     04C3  0448               	iorwf	___lmul@multiplier+2,w
  2155     04C4  0447               	iorwf	___lmul@multiplier+1,w
  2156     04C5  0446               	iorwf	___lmul@multiplier,w
  2157     04C6  1D03               	skipz
  2158     04C7  2CAA               	goto	l1673
  2159     04C8  0851               	movf	___lmul@product+3,w
  2160     04C9  00C9               	movwf	?___lmul+3
  2161     04CA  0850               	movf	___lmul@product+2,w
  2162     04CB  00C8               	movwf	?___lmul+2
  2163     04CC  084F               	movf	___lmul@product+1,w
  2164     04CD  00C7               	movwf	?___lmul+1
  2165     04CE  084E               	movf	___lmul@product,w
  2166     04CF  00C6               	movwf	?___lmul
  2167     04D0  0008               	return
  2168     04D1                     __end_of___lmul:
  2169                           
  2170                           	psect	text7
  2171     03DC                     __ptext7:	
  2172 ;; *************** function _PROCESS_FINAL_SPEED_AND_PRESCALER *****************
  2173 ;; Defined at:
  2174 ;;		line 277 in file "main.c"
  2175 ;; Parameters:    Size  Location     Type
  2176 ;;		None
  2177 ;; Auto vars:     Size  Location     Type
  2178 ;;		None
  2179 ;; Return value:  Size  Location     Type
  2180 ;;                  1    wreg      unsigned char 
  2181 ;; Registers used:
  2182 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  2183 ;; Tracked objects:
  2184 ;;		On entry : 1F/0
  2185 ;;		On exit  : 1E/0
  2186 ;;		Unchanged: 0/0
  2187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2188 ;;      Params:         0       0       0       0
  2189 ;;      Locals:         0       0       0       0
  2190 ;;      Temps:          0       0       0       0
  2191 ;;      Totals:         0       0       0       0
  2192 ;;Total ram usage:        0 bytes
  2193 ;; Hardware stack levels used: 1
  2194 ;; Hardware stack levels required when called: 2
  2195 ;; This function calls:
  2196 ;;		Nothing
  2197 ;; This function is called by:
  2198 ;;		_main
  2199 ;; This function uses a non-reentrant model
  2200 ;;
  2201                           
  2202     03DC                     _PROCESS_FINAL_SPEED_AND_PRESCALER:	
  2203                           ;psect for function _PROCESS_FINAL_SPEED_AND_PRESCALER
  2204                           
  2205                           
  2206                           ;main.c: 278:     if(clear_TMR0_please){
  2207                           
  2208                           ;incstack = 0
  2209                           ; Regs used in _PROCESS_FINAL_SPEED_AND_PRESCALER: [wreg-fsr0h+status,2+status,0+pclath]
  2210     03DC  083B               	movf	_clear_TMR0_please,w	;volatile
  2211     03DD  1D03               	btfss	3,2
  2212                           
  2213                           ;main.c: 279:         raw_TMR0 = 0;
  2214     03DE  01F2               	clrf	_raw_TMR0	;volatile
  2215     03DF  033D               	decf	_TMR0_offset_sign,w	;volatile
  2216     03E0  1D03               	btfss	3,2
  2217     03E1  2BE5               	goto	l1737
  2218                           
  2219                           ;main.c: 282:         final_TMR0 = raw_TMR0 + TMR0_offset;
  2220     03E2  0872               	movf	_raw_TMR0,w	;volatile
  2221     03E3  073E               	addwf	_TMR0_offset,w	;volatile
  2222     03E4  2BEA               	goto	L2
  2223     03E5                     l1737:	
  2224                           ;main.c: 283:     }
  2225                           
  2226     03E5  083D               	movf	_TMR0_offset_sign,w	;volatile
  2227     03E6  1D03               	btfss	3,2
  2228     03E7  2BEB               	goto	l204
  2229                           
  2230                           ;main.c: 285:         final_TMR0 = raw_TMR0 - TMR0_offset;
  2231     03E8  083E               	movf	_TMR0_offset,w	;volatile
  2232     03E9  0272               	subwf	_raw_TMR0,w	;volatile
  2233     03EA                     L2:
  2234     03EA  00C5               	movwf	_final_TMR0	;volatile
  2235     03EB                     l204:
  2236                           
  2237                           ;main.c: 287:     if(prescaler_adjust == DIVIDE_BY_TWO){
  2238     03EB  0373               	decf	_prescaler_adjust,w	;volatile
  2239     03EC  1D03               	btfss	3,2
  2240     03ED  2BF9               	goto	l1743
  2241                           
  2242                           ;main.c: 288:         OPTION_REG = prescaler_bits[base_prescaler_bits_index + 1];
  2243     03EE  083C               	movf	_base_prescaler_bits_index,w	;volatile
  2244     03EF  3E94               	addlw	low ((_prescaler_bits+1)| (0+32768))
  2245     03F0  0084               	movwf	4
  2246     03F1  3085               	movlw	high ((_prescaler_bits+1)| (0+32768))
  2247     03F2  1803               	skipnc
  2248     03F3  3E01               	addlw	1
  2249     03F4  0085               	movwf	5
  2250     03F5  0800               	movf	0,w	;code access
  2251     03F6  0021               	movlb	1	; select bank1
  2252     03F7  0095               	movwf	21	;volatile
  2253                           
  2254                           ;main.c: 289:     }
  2255     03F8  0008               	return
  2256     03F9                     l1743:
  2257     03F9  3003               	movlw	3
  2258     03FA  0673               	xorwf	_prescaler_adjust,w	;volatile
  2259     03FB  1D03               	btfss	3,2
  2260     03FC  2C08               	goto	l1747
  2261                           
  2262                           ;main.c: 291:         OPTION_REG = prescaler_bits[base_prescaler_bits_index + 2];
  2263     03FD  083C               	movf	_base_prescaler_bits_index,w	;volatile
  2264     03FE  3E95               	addlw	low ((_prescaler_bits+2)| (0+32768))
  2265     03FF  0084               	movwf	4
  2266     0400  3085               	movlw	high ((_prescaler_bits+2)| (0+32768))
  2267     0401  1803               	skipnc
  2268     0402  3E01               	addlw	1
  2269     0403  0085               	movwf	5
  2270     0404  0800               	movf	0,w	;code access
  2271     0405  0021               	movlb	1	; select bank1
  2272     0406  0095               	movwf	21	;volatile
  2273                           
  2274                           ;main.c: 292:     }
  2275     0407  0008               	return
  2276     0408                     l1747:
  2277     0408  3002               	movlw	2
  2278     0409  0673               	xorwf	_prescaler_adjust,w	;volatile
  2279     040A  1D03               	btfss	3,2
  2280     040B  2C17               	goto	l1751
  2281                           
  2282                           ;main.c: 294:         OPTION_REG = prescaler_bits[base_prescaler_bits_index - 1];
  2283     040C  083C               	movf	_base_prescaler_bits_index,w	;volatile
  2284     040D  3E92               	addlw	low ((_prescaler_bits+65535)| (0+32768))
  2285     040E  0084               	movwf	4
  2286     040F  3085               	movlw	high ((_prescaler_bits+65535)| (0+32768))
  2287     0410  1803               	skipnc
  2288     0411  3E01               	addlw	1
  2289     0412  0085               	movwf	5
  2290     0413  0800               	movf	0,w	;code access
  2291     0414  0021               	movlb	1	; select bank1
  2292     0415  0095               	movwf	21	;volatile
  2293                           
  2294                           ;main.c: 295:     }
  2295     0416  0008               	return
  2296     0417                     l1751:
  2297     0417  0873               	movf	_prescaler_adjust,w	;volatile
  2298     0418  1D03               	btfss	3,2
  2299     0419  0008               	return
  2300                           
  2301                           ;main.c: 297:         OPTION_REG = prescaler_bits[base_prescaler_bits_index];
  2302     041A  083C               	movf	_base_prescaler_bits_index,w	;volatile
  2303     041B  3E93               	addlw	low (_prescaler_bits| (0+32768))
  2304     041C  0084               	movwf	4
  2305     041D  3085               	movlw	high (_prescaler_bits| (0+32768))
  2306     041E  1803               	skipnc
  2307     041F  3E01               	addlw	1
  2308     0420  0085               	movwf	5
  2309     0421  0800               	movf	0,w	;code access
  2310     0422  0021               	movlb	1	; select bank1
  2311     0423  0095               	movwf	21	;volatile
  2312     0424  0008               	return
  2313     0425                     __end_of_PROCESS_FINAL_SPEED_AND_PRESCALER:
  2314                           
  2315                           	psect	text8
  2316     0465                     __ptext8:	
  2317 ;; *************** function _GET_CURRENT_POT_VALUES *****************
  2318 ;; Defined at:
  2319 ;;		line 248 in file "main.c"
  2320 ;; Parameters:    Size  Location     Type
  2321 ;;		None
  2322 ;; Auto vars:     Size  Location     Type
  2323 ;;		None
  2324 ;; Return value:  Size  Location     Type
  2325 ;;                  1    wreg      unsigned char 
  2326 ;; Registers used:
  2327 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2328 ;; Tracked objects:
  2329 ;;		On entry : 1E/1
  2330 ;;		On exit  : 1F/0
  2331 ;;		Unchanged: 0/0
  2332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2333 ;;      Params:         0       0       0       0
  2334 ;;      Locals:         0       0       0       0
  2335 ;;      Temps:          0       2       0       0
  2336 ;;      Totals:         0       2       0       0
  2337 ;;Total ram usage:        2 bytes
  2338 ;; Hardware stack levels used: 1
  2339 ;; Hardware stack levels required when called: 4
  2340 ;; This function calls:
  2341 ;;		_DETERMINE_WAVESHAPE
  2342 ;;		_DO_ADC
  2343 ;; This function is called by:
  2344 ;;		_main
  2345 ;; This function uses a non-reentrant model
  2346 ;;
  2347                           
  2348     0465                     _GET_CURRENT_POT_VALUES:	
  2349                           ;psect for function _GET_CURRENT_POT_VALUES
  2350                           
  2351                           
  2352                           ;main.c: 249:     current_waveshape = DETERMINE_WAVESHAPE();
  2353                           
  2354                           ;incstack = 0
  2355                           ; Regs used in _GET_CURRENT_POT_VALUES: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2356     0465  3185  2524  3184   	fcall	_DETERMINE_WAVESHAPE
  2357     0468  00F5               	movwf	_current_waveshape	;volatile
  2358                           
  2359                           ;main.c: 250:     current_speed_linear = DO_ADC(&speed_adc_config_value);
  2360     0469  30CC               	movlw	low (_speed_adc_config_value| (0+32768))
  2361     046A  00C6               	movwf	DO_ADC@modifier
  2362     046B  3085               	movlw	high (_speed_adc_config_value| (0+32768))
  2363     046C  00C7               	movwf	DO_ADC@modifier+1
  2364     046D  3184  24D1  3184   	fcall	_DO_ADC
  2365     0470  0847               	movf	?_DO_ADC+1,w
  2366     0471  00B3               	movwf	_current_speed_linear+1	;volatile
  2367     0472  0846               	movf	?_DO_ADC,w
  2368     0473  00B2               	movwf	_current_speed_linear	;volatile
  2369                           
  2370                           ;main.c: 251:     current_depth = DO_ADC(&depth_adc_config_value);
  2371     0474  30CB               	movlw	low (_depth_adc_config_value| (0+32768))
  2372     0475  00C6               	movwf	DO_ADC@modifier
  2373     0476  3085               	movlw	high (_depth_adc_config_value| (0+32768))
  2374     0477  00C7               	movwf	DO_ADC@modifier+1
  2375     0478  3184  24D1  3184   	fcall	_DO_ADC
  2376     047B  0847               	movf	?_DO_ADC+1,w
  2377     047C  00AF               	movwf	_current_depth+1	;volatile
  2378     047D  0846               	movf	?_DO_ADC,w
  2379     047E  00AE               	movwf	_current_depth	;volatile
  2380                           
  2381                           ;main.c: 252:     current_depth = current_depth >> 2;
  2382     047F  082F               	movf	_current_depth+1,w	;volatile
  2383     0480  00CF               	movwf	??_GET_CURRENT_POT_VALUES+1
  2384     0481  082E               	movf	_current_depth,w	;volatile
  2385     0482  00CE               	movwf	??_GET_CURRENT_POT_VALUES
  2386     0483  36CF               	lsrf	??_GET_CURRENT_POT_VALUES+1,f
  2387     0484  0CCE               	rrf	??_GET_CURRENT_POT_VALUES,f
  2388     0485  36CF               	lsrf	??_GET_CURRENT_POT_VALUES+1,f
  2389     0486  0CCE               	rrf	??_GET_CURRENT_POT_VALUES,f
  2390     0487  084E               	movf	??_GET_CURRENT_POT_VALUES,w
  2391     0488  00AE               	movwf	_current_depth	;volatile
  2392     0489  084F               	movf	??_GET_CURRENT_POT_VALUES+1,w
  2393     048A  00AF               	movwf	_current_depth+1	;volatile
  2394                           
  2395                           ;main.c: 253:     current_symmetry = DO_ADC(&symmetry_adc_config_value);
  2396     048B  30CA               	movlw	low (_symmetry_adc_config_value| (0+32768))
  2397     048C  00C6               	movwf	DO_ADC@modifier
  2398     048D  3085               	movlw	high (_symmetry_adc_config_value| (0+32768))
  2399     048E  00C7               	movwf	DO_ADC@modifier+1
  2400     048F  3184  24D1         	fcall	_DO_ADC
  2401     0491  0847               	movf	?_DO_ADC+1,w
  2402     0492  00AD               	movwf	_current_symmetry+1	;volatile
  2403     0493  0846               	movf	?_DO_ADC,w
  2404     0494  00AC               	movwf	_current_symmetry	;volatile
  2405                           
  2406                           ;main.c: 254:     current_symmetry = current_symmetry >> 2;
  2407     0495  082D               	movf	_current_symmetry+1,w	;volatile
  2408     0496  00CF               	movwf	??_GET_CURRENT_POT_VALUES+1
  2409     0497  082C               	movf	_current_symmetry,w	;volatile
  2410     0498  00CE               	movwf	??_GET_CURRENT_POT_VALUES
  2411     0499  36CF               	lsrf	??_GET_CURRENT_POT_VALUES+1,f
  2412     049A  0CCE               	rrf	??_GET_CURRENT_POT_VALUES,f
  2413     049B  36CF               	lsrf	??_GET_CURRENT_POT_VALUES+1,f
  2414     049C  0CCE               	rrf	??_GET_CURRENT_POT_VALUES,f
  2415     049D  084E               	movf	??_GET_CURRENT_POT_VALUES,w
  2416     049E  00AC               	movwf	_current_symmetry	;volatile
  2417     049F  084F               	movf	??_GET_CURRENT_POT_VALUES+1,w
  2418     04A0  00AD               	movwf	_current_symmetry+1	;volatile
  2419     04A1  0008               	return
  2420     04A2                     __end_of_GET_CURRENT_POT_VALUES:
  2421                           
  2422                           	psect	text9
  2423     0524                     __ptext9:	
  2424 ;; *************** function _DETERMINE_WAVESHAPE *****************
  2425 ;; Defined at:
  2426 ;;		line 176 in file "main.c"
  2427 ;; Parameters:    Size  Location     Type
  2428 ;;		None
  2429 ;; Auto vars:     Size  Location     Type
  2430 ;;  ADC             2    6[BANK0 ] unsigned short 
  2431 ;; Return value:  Size  Location     Type
  2432 ;;                  1    wreg      unsigned char 
  2433 ;; Registers used:
  2434 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2435 ;; Tracked objects:
  2436 ;;		On entry : 1E/1
  2437 ;;		On exit  : 1F/0
  2438 ;;		Unchanged: 0/0
  2439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2440 ;;      Params:         0       0       0       0
  2441 ;;      Locals:         0       2       0       0
  2442 ;;      Temps:          0       0       0       0
  2443 ;;      Totals:         0       2       0       0
  2444 ;;Total ram usage:        2 bytes
  2445 ;; Hardware stack levels used: 1
  2446 ;; Hardware stack levels required when called: 3
  2447 ;; This function calls:
  2448 ;;		_DO_ADC
  2449 ;; This function is called by:
  2450 ;;		_GET_CURRENT_POT_VALUES
  2451 ;; This function uses a non-reentrant model
  2452 ;;
  2453                           
  2454     0524                     _DETERMINE_WAVESHAPE:	
  2455                           ;psect for function _DETERMINE_WAVESHAPE
  2456                           
  2457                           
  2458                           ;main.c: 177:     uint16_t ADC = DO_ADC(&waveshape_adc_config_value);
  2459                           
  2460                           ;incstack = 0
  2461                           ; Regs used in _DETERMINE_WAVESHAPE: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2462     0524  30CD               	movlw	low (_waveshape_adc_config_value| (0+32768))
  2463     0525  0020               	movlb	0	; select bank0
  2464     0526  00C6               	movwf	DO_ADC@modifier
  2465     0527  3085               	movlw	high (_waveshape_adc_config_value| (0+32768))
  2466     0528  00C7               	movwf	DO_ADC@modifier+1
  2467     0529  3184  24D1  3185   	fcall	_DO_ADC
  2468     052C  0847               	movf	?_DO_ADC+1,w
  2469     052D  00CD               	movwf	DETERMINE_WAVESHAPE@ADC+1
  2470     052E  0846               	movf	?_DO_ADC,w
  2471     052F  00CC               	movwf	DETERMINE_WAVESHAPE@ADC
  2472                           
  2473                           ;main.c: 178:     if(ADC <= 341){
  2474     0530  3001               	movlw	1
  2475     0531  024D               	subwf	DETERMINE_WAVESHAPE@ADC+1,w
  2476     0532  3056               	movlw	86
  2477     0533  1903               	skipnz
  2478     0534  024C               	subwf	DETERMINE_WAVESHAPE@ADC,w
  2479     0535  1803               	skipnc
  2480     0536  2D39               	goto	l1599
  2481                           
  2482                           ;main.c: 179:             return 0;
  2483     0537  3000               	movlw	0
  2484     0538  0008               	return
  2485     0539                     l1599:
  2486                           
  2487                           ;main.c: 181:         if (ADC <= 682){
  2488     0539  3002               	movlw	2
  2489     053A  024D               	subwf	DETERMINE_WAVESHAPE@ADC+1,w
  2490     053B  30AB               	movlw	171
  2491     053C  1903               	skipnz
  2492     053D  024C               	subwf	DETERMINE_WAVESHAPE@ADC,w
  2493     053E  1803               	skipnc
  2494     053F  2D42               	goto	l1605
  2495     0540                     l1601:
  2496                           
  2497                           ;main.c: 182:             return 1;
  2498     0540  3001               	movlw	1
  2499     0541  0008               	return
  2500     0542                     l1605:
  2501                           
  2502                           ;main.c: 184:         if (ADC <= 1023){
  2503     0542  3004               	movlw	4
  2504     0543  024D               	subwf	DETERMINE_WAVESHAPE@ADC+1,w
  2505     0544  3000               	movlw	0
  2506     0545  1903               	skipnz
  2507     0546  024C               	subwf	DETERMINE_WAVESHAPE@ADC,w
  2508     0547  1803               	skipnc
  2509     0548  2D40               	goto	l1601
  2510                           
  2511                           ;main.c: 185:             return 2;
  2512     0549  3002               	movlw	2
  2513     054A  0008               	return
  2514     054B                     __end_of_DETERMINE_WAVESHAPE:
  2515                           
  2516                           	psect	text10
  2517     04D1                     __ptext10:	
  2518 ;; *************** function _DO_ADC *****************
  2519 ;; Defined at:
  2520 ;;		line 162 in file "main.c"
  2521 ;; Parameters:    Size  Location     Type
  2522 ;;  modifier        2    0[BANK0 ] PTR const unsigned char 
  2523 ;;		 -> symmetry_adc_config_value(1), depth_adc_config_value(1), speed_adc_config_value(1), waveshape_adc_config_value(1
      +), 
  2524 ;; Auto vars:     Size  Location     Type
  2525 ;;  adc_result      2    3[BANK0 ] unsigned short 
  2526 ;;  temp            1    5[BANK0 ] unsigned char 
  2527 ;; Return value:  Size  Location     Type
  2528 ;;                  2    0[BANK0 ] unsigned short 
  2529 ;; Registers used:
  2530 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  2531 ;; Tracked objects:
  2532 ;;		On entry : 1F/0
  2533 ;;		On exit  : 1F/0
  2534 ;;		Unchanged: 0/0
  2535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2536 ;;      Params:         0       2       0       0
  2537 ;;      Locals:         0       3       0       0
  2538 ;;      Temps:          0       1       0       0
  2539 ;;      Totals:         0       6       0       0
  2540 ;;Total ram usage:        6 bytes
  2541 ;; Hardware stack levels used: 1
  2542 ;; Hardware stack levels required when called: 2
  2543 ;; This function calls:
  2544 ;;		Nothing
  2545 ;; This function is called by:
  2546 ;;		_DETERMINE_WAVESHAPE
  2547 ;;		_GET_CURRENT_POT_VALUES
  2548 ;; This function uses a non-reentrant model
  2549 ;;
  2550                           
  2551     04D1                     _DO_ADC:	
  2552                           ;psect for function _DO_ADC
  2553                           
  2554                           
  2555                           ;main.c: 163:     ADCON0 = 0x00;
  2556                           
  2557                           ;incstack = 0
  2558                           ; Regs used in _DO_ADC: [wreg-fsr0h+status,2+status,0+pclath]
  2559     04D1  0021               	movlb	1	; select bank1
  2560     04D2  019D               	clrf	29	;volatile
  2561                           
  2562                           ;main.c: 165:     uint8_t temp = *modifier << 2;
  2563     04D3  0020               	movlb	0	; select bank0
  2564     04D4  0846               	movf	DO_ADC@modifier,w
  2565     04D5  0084               	movwf	4
  2566     04D6  0847               	movf	DO_ADC@modifier+1,w
  2567     04D7  0085               	movwf	5
  2568     04D8  0800               	movf	0,w	;code access
  2569     04D9  00C8               	movwf	??_DO_ADC
  2570     04DA  3001               	movlw	1
  2571     04DB                     u995:
  2572     04DB  35C8               	lslf	??_DO_ADC,f
  2573     04DC  3EFF               	addlw	-1
  2574     04DD  1D03               	skipz
  2575     04DE  2CDB               	goto	u995
  2576     04DF  3548               	lslf	??_DO_ADC,w
  2577     04E0  00CB               	movwf	DO_ADC@temp
  2578                           
  2579                           ;main.c: 166:     ADCON0 = ADCON0 | temp;
  2580     04E1  0021               	movlb	1	; select bank1
  2581     04E2  081D               	movf	29,w	;volatile
  2582     04E3  0020               	movlb	0	; select bank0
  2583     04E4  044B               	iorwf	DO_ADC@temp,w
  2584     04E5  0021               	movlb	1	; select bank1
  2585     04E6  009D               	movwf	29	;volatile
  2586                           
  2587                           ;main.c: 167:     ADON = 1;
  2588     04E7  141D               	bsf	29,0	;volatile
  2589                           
  2590                           ;main.c: 168:     _delay((unsigned long)((0.005)*(32000000/4000.0)));
  2591     04E8  300D               	movlw	13
  2592     04E9                     u1377:
  2593     04E9  0B89               	decfsz	9,f
  2594     04EA  2CE9               	goto	u1377
  2595     04EB  0000               	nop
  2596                           
  2597                           ;main.c: 169:     GO_nDONE = 1;
  2598     04EC  0021               	movlb	1	; select bank1
  2599     04ED  149D               	bsf	29,1	;volatile
  2600     04EE                     l158:	
  2601                           ;main.c: 170:     while(GO_nDONE == 1){}
  2602                           
  2603     04EE  189D               	btfsc	29,1	;volatile
  2604     04EF  2CEE               	goto	l158
  2605                           
  2606                           ;main.c: 171:     ADON = 0;
  2607     04F0  101D               	bcf	29,0	;volatile
  2608                           
  2609                           ;main.c: 172:     uint16_t adc_result = ((ADRESH << 8) | ADRESL);
  2610     04F1  081C               	movf	28,w	;volatile
  2611     04F2  0020               	movlb	0	; select bank0
  2612     04F3  00CA               	movwf	DO_ADC@adc_result+1
  2613     04F4  0021               	movlb	1	; select bank1
  2614     04F5  081B               	movf	27,w	;volatile
  2615     04F6  0020               	movlb	0	; select bank0
  2616     04F7  00C9               	movwf	DO_ADC@adc_result
  2617                           
  2618                           ;main.c: 173:     return adc_result;
  2619     04F8  084A               	movf	DO_ADC@adc_result+1,w
  2620     04F9  00C7               	movwf	?_DO_ADC+1
  2621     04FA  0849               	movf	DO_ADC@adc_result,w
  2622     04FB  00C6               	movwf	?_DO_ADC
  2623     04FC  0008               	return
  2624     04FD                     __end_of_DO_ADC:
  2625                           
  2626                           	psect	text11
  2627     05BD                     __ptext11:	
  2628 ;; *************** function _CONFIG_TMR0_INTERRUPT *****************
  2629 ;; Defined at:
  2630 ;;		line 230 in file "main.c"
  2631 ;; Parameters:    Size  Location     Type
  2632 ;;		None
  2633 ;; Auto vars:     Size  Location     Type
  2634 ;;		None
  2635 ;; Return value:  Size  Location     Type
  2636 ;;                  1    wreg      unsigned char 
  2637 ;; Registers used:
  2638 ;;		None
  2639 ;; Tracked objects:
  2640 ;;		On entry : B1F/1
  2641 ;;		On exit  : B1F/1
  2642 ;;		Unchanged: B1F/0
  2643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2644 ;;      Params:         0       0       0       0
  2645 ;;      Locals:         0       0       0       0
  2646 ;;      Temps:          0       0       0       0
  2647 ;;      Totals:         0       0       0       0
  2648 ;;Total ram usage:        0 bytes
  2649 ;; Hardware stack levels used: 1
  2650 ;; Hardware stack levels required when called: 2
  2651 ;; This function calls:
  2652 ;;		Nothing
  2653 ;; This function is called by:
  2654 ;;		_main
  2655 ;; This function uses a non-reentrant model
  2656 ;;
  2657                           
  2658     05BD                     _CONFIG_TMR0_INTERRUPT:	
  2659                           ;psect for function _CONFIG_TMR0_INTERRUPT
  2660                           
  2661                           
  2662                           ;main.c: 231:     TMR0IE = 1;
  2663                           
  2664                           ;incstack = 0
  2665                           ; Regs used in _CONFIG_TMR0_INTERRUPT: []
  2666     05BD  168B               	bsf	11,5	;volatile
  2667                           
  2668                           ;main.c: 232:     return 1;;	Return value of _CONFIG_TMR0_INTERRUPT is never used
  2669     05BE  0008               	return
  2670     05BF                     __end_of_CONFIG_TMR0_INTERRUPT:
  2671                           
  2672                           	psect	text12
  2673     057E                     __ptext12:	
  2674 ;; *************** function _CONFIG_SYSTEM *****************
  2675 ;; Defined at:
  2676 ;;		line 235 in file "main.c"
  2677 ;; Parameters:    Size  Location     Type
  2678 ;;		None
  2679 ;; Auto vars:     Size  Location     Type
  2680 ;;		None
  2681 ;; Return value:  Size  Location     Type
  2682 ;;                  1    wreg      unsigned char 
  2683 ;; Registers used:
  2684 ;;		wreg, status,2, status,0, pclath, cstack
  2685 ;; Tracked objects:
  2686 ;;		On entry : B1F/0
  2687 ;;		On exit  : B1F/0
  2688 ;;		Unchanged: B00/0
  2689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2690 ;;      Params:         0       0       0       0
  2691 ;;      Locals:         0       0       0       0
  2692 ;;      Temps:          0       0       0       0
  2693 ;;      Totals:         0       0       0       0
  2694 ;;Total ram usage:        0 bytes
  2695 ;; Hardware stack levels used: 1
  2696 ;; Hardware stack levels required when called: 3
  2697 ;; This function calls:
  2698 ;;		_CONFIG_ADC_PINS
  2699 ;;		_CONFIG_INT_OSC
  2700 ;;		_CONFIG_PORTS
  2701 ;;		_CONFIG_PWM_CCP3
  2702 ;; This function is called by:
  2703 ;;		_main
  2704 ;; This function uses a non-reentrant model
  2705 ;;
  2706                           
  2707     057E                     _CONFIG_SYSTEM:	
  2708                           ;psect for function _CONFIG_SYSTEM
  2709                           
  2710                           
  2711                           ;main.c: 236:     CONFIG_INT_OSC();
  2712                           
  2713                           ;incstack = 0
  2714                           ; Regs used in _CONFIG_SYSTEM: [wreg+status,2+status,0+pclath+cstack]
  2715     057E  3185  25B1  3185   	fcall	_CONFIG_INT_OSC
  2716                           
  2717                           ;main.c: 237:     CONFIG_PORTS();
  2718     0581  3185  258A  3185   	fcall	_CONFIG_PORTS
  2719                           
  2720                           ;main.c: 238:     CONFIG_ADC_PINS();
  2721     0584  3185  25B7  3185   	fcall	_CONFIG_ADC_PINS
  2722                           
  2723                           ;main.c: 239:     CONFIG_PWM_CCP3();
  2724     0587  3185  256B         	fcall	_CONFIG_PWM_CCP3
  2725     0589  0008               	return
  2726     058A                     __end_of_CONFIG_SYSTEM:
  2727                           
  2728                           	psect	text13
  2729     056B                     __ptext13:	
  2730 ;; *************** function _CONFIG_PWM_CCP3 *****************
  2731 ;; Defined at:
  2732 ;;		line 203 in file "main.c"
  2733 ;; Parameters:    Size  Location     Type
  2734 ;;		None
  2735 ;; Auto vars:     Size  Location     Type
  2736 ;;		None
  2737 ;; Return value:  Size  Location     Type
  2738 ;;                  1    wreg      unsigned char 
  2739 ;; Registers used:
  2740 ;;		wreg, status,2
  2741 ;; Tracked objects:
  2742 ;;		On entry : B1F/1
  2743 ;;		On exit  : B1F/0
  2744 ;;		Unchanged: B00/0
  2745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2746 ;;      Params:         0       0       0       0
  2747 ;;      Locals:         0       0       0       0
  2748 ;;      Temps:          0       0       0       0
  2749 ;;      Totals:         0       0       0       0
  2750 ;;Total ram usage:        0 bytes
  2751 ;; Hardware stack levels used: 1
  2752 ;; Hardware stack levels required when called: 2
  2753 ;; This function calls:
  2754 ;;		Nothing
  2755 ;; This function is called by:
  2756 ;;		_CONFIG_SYSTEM
  2757 ;; This function uses a non-reentrant model
  2758 ;;
  2759                           
  2760     056B                     _CONFIG_PWM_CCP3:	
  2761                           ;psect for function _CONFIG_PWM_CCP3
  2762                           
  2763                           
  2764                           ;main.c: 204:     SRLEN = 0;
  2765                           
  2766                           ;incstack = 0
  2767                           ; Regs used in _CONFIG_PWM_CCP3: [wreg+status,2]
  2768     056B  0022               	movlb	2	; select bank2
  2769     056C  139A               	bcf	26,7	;volatile
  2770                           
  2771                           ;main.c: 205:     C1ON = 0;
  2772     056D  1391               	bcf	17,7	;volatile
  2773                           
  2774                           ;main.c: 207:     TRISA2 = 1;
  2775     056E  0021               	movlb	1	; select bank1
  2776     056F  150C               	bsf	12,2	;volatile
  2777                           
  2778                           ;main.c: 208:     PR2 = 0xFF;
  2779     0570  30FF               	movlw	255
  2780     0571  0020               	movlb	0	; select bank0
  2781     0572  009B               	movwf	27	;volatile
  2782                           
  2783                           ;main.c: 209:     CCP3CON = CCP3CON | 0b00001111;
  2784     0573  0026               	movlb	6	; select bank6
  2785     0574  0813               	movf	19,w	;volatile
  2786     0575  380F               	iorlw	15
  2787     0576  0093               	movwf	19	;volatile
  2788                           
  2789                           ;main.c: 211:     CCPTMRS0 = 0x00;
  2790     0577  0025               	movlb	5	; select bank5
  2791     0578  019E               	clrf	30	;volatile
  2792                           
  2793                           ;main.c: 212:     TMR2IF = 0;
  2794     0579  0020               	movlb	0	; select bank0
  2795     057A  1091               	bcf	17,1	;volatile
  2796                           
  2797                           ;main.c: 213:     T2CON = T2CON | 0b00000000;
  2798     057B  081C               	movf	28,w	;volatile
  2799     057C  009C               	movwf	28	;volatile
  2800     057D  0008               	return
  2801     057E                     __end_of_CONFIG_PWM_CCP3:
  2802                           
  2803                           	psect	text14
  2804     058A                     __ptext14:	
  2805 ;; *************** function _CONFIG_PORTS *****************
  2806 ;; Defined at:
  2807 ;;		line 150 in file "main.c"
  2808 ;; Parameters:    Size  Location     Type
  2809 ;;		None
  2810 ;; Auto vars:     Size  Location     Type
  2811 ;;		None
  2812 ;; Return value:  Size  Location     Type
  2813 ;;                  1    wreg      unsigned char 
  2814 ;; Registers used:
  2815 ;;		wreg, status,2
  2816 ;; Tracked objects:
  2817 ;;		On entry : B1F/1
  2818 ;;		On exit  : B1F/4
  2819 ;;		Unchanged: B00/0
  2820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2821 ;;      Params:         0       0       0       0
  2822 ;;      Locals:         0       0       0       0
  2823 ;;      Temps:          0       0       0       0
  2824 ;;      Totals:         0       0       0       0
  2825 ;;Total ram usage:        0 bytes
  2826 ;; Hardware stack levels used: 1
  2827 ;; Hardware stack levels required when called: 2
  2828 ;; This function calls:
  2829 ;;		Nothing
  2830 ;; This function is called by:
  2831 ;;		_CONFIG_SYSTEM
  2832 ;; This function uses a non-reentrant model
  2833 ;;
  2834                           
  2835     058A                     _CONFIG_PORTS:	
  2836                           ;psect for function _CONFIG_PORTS
  2837                           
  2838                           
  2839                           ;main.c: 151:     ANSELC = 0b00001111;
  2840                           
  2841                           ;incstack = 0
  2842                           ; Regs used in _CONFIG_PORTS: [wreg+status,2]
  2843     058A  300F               	movlw	15
  2844     058B  0023               	movlb	3	; select bank3
  2845     058C  008E               	movwf	14	;volatile
  2846                           
  2847                           ;main.c: 152:     TRISC = 0b00001111;
  2848     058D  300F               	movlw	15
  2849     058E  0021               	movlb	1	; select bank1
  2850     058F  008E               	movwf	14	;volatile
  2851                           
  2852                           ;main.c: 153:     WPUC = 0b00000000;
  2853     0590  0024               	movlb	4	; select bank4
  2854     0591  018E               	clrf	14	;volatile
  2855     0592  0008               	return
  2856     0593                     __end_of_CONFIG_PORTS:
  2857                           
  2858                           	psect	text15
  2859     05B1                     __ptext15:	
  2860 ;; *************** function _CONFIG_INT_OSC *****************
  2861 ;; Defined at:
  2862 ;;		line 143 in file "main.c"
  2863 ;; Parameters:    Size  Location     Type
  2864 ;;		None
  2865 ;; Auto vars:     Size  Location     Type
  2866 ;;		None
  2867 ;; Return value:  Size  Location     Type
  2868 ;;                  1    wreg      unsigned char 
  2869 ;; Registers used:
  2870 ;;		wreg
  2871 ;; Tracked objects:
  2872 ;;		On entry : B1F/0
  2873 ;;		On exit  : B1F/1
  2874 ;;		Unchanged: B00/0
  2875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2876 ;;      Params:         0       0       0       0
  2877 ;;      Locals:         0       0       0       0
  2878 ;;      Temps:          0       0       0       0
  2879 ;;      Totals:         0       0       0       0
  2880 ;;Total ram usage:        0 bytes
  2881 ;; Hardware stack levels used: 1
  2882 ;; Hardware stack levels required when called: 2
  2883 ;; This function calls:
  2884 ;;		Nothing
  2885 ;; This function is called by:
  2886 ;;		_CONFIG_SYSTEM
  2887 ;; This function uses a non-reentrant model
  2888 ;;
  2889                           
  2890     05B1                     _CONFIG_INT_OSC:	
  2891                           ;psect for function _CONFIG_INT_OSC
  2892                           
  2893                           
  2894                           ;main.c: 144:     OSCCON = 0b11110000;
  2895                           
  2896                           ;incstack = 0
  2897                           ; Regs used in _CONFIG_INT_OSC: [wreg]
  2898     05B1  30F0               	movlw	240
  2899     05B2  0021               	movlb	1	; select bank1
  2900     05B3  0099               	movwf	25	;volatile
  2901                           
  2902                           ;main.c: 145:     OSCTUNE = 0b00011111;
  2903     05B4  301F               	movlw	31
  2904     05B5  0098               	movwf	24	;volatile
  2905     05B6  0008               	return
  2906     05B7                     __end_of_CONFIG_INT_OSC:
  2907                           
  2908                           	psect	text16
  2909     05B7                     __ptext16:	
  2910 ;; *************** function _CONFIG_ADC_PINS *****************
  2911 ;; Defined at:
  2912 ;;		line 157 in file "main.c"
  2913 ;; Parameters:    Size  Location     Type
  2914 ;;		None
  2915 ;; Auto vars:     Size  Location     Type
  2916 ;;		None
  2917 ;; Return value:  Size  Location     Type
  2918 ;;                  1    wreg      unsigned char 
  2919 ;; Registers used:
  2920 ;;		wreg
  2921 ;; Tracked objects:
  2922 ;;		On entry : B1F/4
  2923 ;;		On exit  : B1F/1
  2924 ;;		Unchanged: B00/0
  2925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2926 ;;      Params:         0       0       0       0
  2927 ;;      Locals:         0       0       0       0
  2928 ;;      Temps:          0       0       0       0
  2929 ;;      Totals:         0       0       0       0
  2930 ;;Total ram usage:        0 bytes
  2931 ;; Hardware stack levels used: 1
  2932 ;; Hardware stack levels required when called: 2
  2933 ;; This function calls:
  2934 ;;		Nothing
  2935 ;; This function is called by:
  2936 ;;		_CONFIG_SYSTEM
  2937 ;; This function uses a non-reentrant model
  2938 ;;
  2939                           
  2940     05B7                     _CONFIG_ADC_PINS:	
  2941                           ;psect for function _CONFIG_ADC_PINS
  2942                           
  2943                           
  2944                           ;main.c: 158:     ADCON1 = 0b10100000;
  2945                           
  2946                           ;incstack = 0
  2947                           ; Regs used in _CONFIG_ADC_PINS: [wreg]
  2948     05B7  30A0               	movlw	160
  2949     05B8  0021               	movlb	1	; select bank1
  2950     05B9  009E               	movwf	30	;volatile
  2951     05BA  0008               	return
  2952     05BB                     __end_of_CONFIG_ADC_PINS:
  2953                           
  2954                           	psect	intentry
  2955     0004                     __pintentry:	
  2956 ;; *************** function _INTERRUPT_InterruptManager *****************
  2957 ;; Defined at:
  2958 ;;		line 387 in file "main.c"
  2959 ;; Parameters:    Size  Location     Type
  2960 ;;		None
  2961 ;; Auto vars:     Size  Location     Type
  2962 ;;		None
  2963 ;; Return value:  Size  Location     Type
  2964 ;;                  1    wreg      unsigned char 
  2965 ;; Registers used:
  2966 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2967 ;; Tracked objects:
  2968 ;;		On entry : 0/0
  2969 ;;		On exit  : 0/0
  2970 ;;		Unchanged: 0/0
  2971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2972 ;;      Params:         0       0       0       0
  2973 ;;      Locals:         0       0       0       0
  2974 ;;      Temps:          2       0       0       0
  2975 ;;      Totals:         2       0       0       0
  2976 ;;Total ram usage:        2 bytes
  2977 ;; Hardware stack levels used: 1
  2978 ;; Hardware stack levels required when called: 1
  2979 ;; This function calls:
  2980 ;;		_SET_DUTY_CCP3
  2981 ;; This function is called by:
  2982 ;;		Interrupt level 1
  2983 ;; This function uses a non-reentrant model
  2984 ;;
  2985                           
  2986     0004                     _INTERRUPT_InterruptManager:
  2987                           
  2988                           ;incstack = 0
  2989     0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  2990                           
  2991                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2992     0005  3180               	pagesel	$
  2993                           
  2994                           ;main.c: 388:     if(TMR0IF == 1){
  2995     0006  1D0B               	btfss	11,2	;volatile
  2996     0007  28D1               	goto	i1l261
  2997                           
  2998                           ;main.c: 389:     GIE = 0;
  2999     0008  138B               	bcf	11,7	;volatile
  3000                           
  3001                           ;main.c: 391:     TMR0 = final_TMR0;
  3002     0009  0020               	movlb	0	; select bank0
  3003     000A  0845               	movf	_final_TMR0,w	;volatile
  3004     000B  0095               	movwf	21	;volatile
  3005                           
  3006                           ;main.c: 392:     LATC5 = 1;
  3007     000C  0022               	movlb	2	; select bank2
  3008     000D  168E               	bsf	14,5	;volatile
  3009                           
  3010                           ;main.c: 393:     TMR0IF = 0;
  3011     000E  110B               	bcf	11,2	;volatile
  3012                           
  3013                           ;main.c: 395:     if(current_waveshape == 0){
  3014     000F  0875               	movf	_current_waveshape,w	;volatile
  3015     0010  1D03               	btfss	3,2
  3016     0011  2823               	goto	i1l1491
  3017                           
  3018                           ;main.c: 396:         duty = tri_table_one_quadrant[current_one_quadrant_index];
  3019     0012  0874               	movf	_current_one_quadrant_index,w	;volatile
  3020     0013  00FA               	movwf	??_INTERRUPT_InterruptManager
  3021     0014  01FB               	clrf	??_INTERRUPT_InterruptManager+1
  3022     0015  35FA               	lslf	??_INTERRUPT_InterruptManager,f
  3023     0016  0DFB               	rlf	??_INTERRUPT_InterruptManager+1,f
  3024     0017  30EE               	movlw	low _tri_table_one_quadrant
  3025     0018  077A               	addwf	??_INTERRUPT_InterruptManager,w
  3026     0019  0084               	movwf	4
  3027     001A  3000               	movlw	high _tri_table_one_quadrant
  3028     001B  3D7B               	addwfc	??_INTERRUPT_InterruptManager+1,w
  3029     001C  3880               	iorlw	128
  3030     001D  0085               	movwf	5
  3031     001E  3F00               	moviw [0]fsr0
  3032     001F  0020               	movlb	0	; select bank0
  3033     0020  00C3               	movwf	_duty	;volatile
  3034     0021  3F01               	moviw [1]fsr0
  3035     0022  283F               	goto	L3
  3036     0023                     i1l1491:	
  3037                           ;main.c: 397:     }
  3038                           
  3039     0023  0375               	decf	_current_waveshape,w	;volatile
  3040     0024  1D03               	btfss	3,2
  3041     0025  2837               	goto	i1l1495
  3042                           
  3043                           ;main.c: 399:         duty = sine_table_one_quadrant[current_one_quadrant_index];
  3044     0026  0874               	movf	_current_one_quadrant_index,w	;volatile
  3045     0027  00FA               	movwf	??_INTERRUPT_InterruptManager
  3046     0028  01FB               	clrf	??_INTERRUPT_InterruptManager+1
  3047     0029  35FA               	lslf	??_INTERRUPT_InterruptManager,f
  3048     002A  0DFB               	rlf	??_INTERRUPT_InterruptManager+1,f
  3049     002B  30F0               	movlw	low _sine_table_one_quadrant
  3050     002C  077A               	addwf	??_INTERRUPT_InterruptManager,w
  3051     002D  0084               	movwf	4
  3052     002E  3001               	movlw	high _sine_table_one_quadrant
  3053     002F  3D7B               	addwfc	??_INTERRUPT_InterruptManager+1,w
  3054     0030  3880               	iorlw	128
  3055     0031  0085               	movwf	5
  3056     0032  3F00               	moviw [0]fsr0
  3057     0033  0020               	movlb	0	; select bank0
  3058     0034  00C3               	movwf	_duty	;volatile
  3059     0035  3F01               	moviw [1]fsr0
  3060     0036  283F               	goto	L3
  3061     0037                     i1l1495:	
  3062                           ;main.c: 400:     }
  3063                           
  3064     0037  3002               	movlw	2
  3065     0038  0675               	xorwf	_current_waveshape,w	;volatile
  3066     0039  1D03               	btfss	3,2
  3067     003A  2840               	goto	i1l1499
  3068                           
  3069                           ;main.c: 402:         duty = 1023;
  3070     003B  30FF               	movlw	255
  3071     003C  0020               	movlb	0	; select bank0
  3072     003D  00C3               	movwf	_duty	;volatile
  3073     003E  3003               	movlw	3
  3074     003F                     L3:
  3075     003F  00C4               	movwf	_duty+1	;volatile
  3076     0040                     i1l1499:
  3077                           
  3078                           ;main.c: 404:     if(current_one_quadrant_index == 128){
  3079     0040  3080               	movlw	128
  3080     0041  0674               	xorwf	_current_one_quadrant_index,w	;volatile
  3081     0042  1D03               	btfss	3,2
  3082     0043  2847               	goto	i1l1503
  3083                           
  3084                           ;main.c: 405:         current_quadrant = 1;
  3085     0044  3001               	movlw	1
  3086     0045  0020               	movlb	0	; select bank0
  3087     0046  00BF               	movwf	_current_quadrant	;volatile
  3088     0047                     i1l1503:
  3089                           
  3090                           ;main.c: 407:     if(current_one_quadrant_index == 0){
  3091     0047  0874               	movf	_current_one_quadrant_index,w	;volatile
  3092     0048  1D03               	btfss	3,2
  3093     0049  2853               	goto	i1l1513
  3094                           
  3095                           ;main.c: 408:         current_quadrant = 0;
  3096     004A  0020               	movlb	0	; select bank0
  3097     004B  01BF               	clrf	_current_quadrant	;volatile
  3098                           
  3099                           ;main.c: 409:         if(current_halfcycle == 0){
  3100     004C  0840               	movf	_current_halfcycle,w	;volatile
  3101     004D  1D03               	btfss	3,2
  3102     004E  2852               	goto	i1l1511
  3103                           
  3104                           ;main.c: 410:             current_halfcycle = 1;
  3105     004F  3001               	movlw	1
  3106     0050  00C0               	movwf	_current_halfcycle	;volatile
  3107                           
  3108                           ;main.c: 411:         }
  3109     0051  2853               	goto	i1l1513
  3110     0052                     i1l1511:
  3111                           
  3112                           ;main.c: 413:             current_halfcycle = 0;
  3113     0052  01C0               	clrf	_current_halfcycle	;volatile
  3114     0053                     i1l1513:
  3115                           
  3116                           ;main.c: 416:         if(current_quadrant == 0){
  3117     0053  0020               	movlb	0	; select bank0
  3118     0054  083F               	movf	_current_quadrant,w	;volatile
  3119     0055  1D03               	btfss	3,2
  3120     0056  285C               	goto	i1l1517
  3121                           
  3122                           ;main.c: 417:             current_one_quadrant_index++;
  3123     0057  3001               	movlw	1
  3124     0058  00FA               	movwf	??_INTERRUPT_InterruptManager
  3125     0059  087A               	movf	??_INTERRUPT_InterruptManager,w
  3126     005A  07F4               	addwf	_current_one_quadrant_index,f	;volatile
  3127                           
  3128                           ;main.c: 418:         }
  3129     005B  285E               	goto	i1l257
  3130     005C                     i1l1517:
  3131                           
  3132                           ;main.c: 420:             current_one_quadrant_index--;
  3133     005C  3001               	movlw	1
  3134     005D  02F4               	subwf	_current_one_quadrant_index,f	;volatile
  3135     005E                     i1l257:	
  3136                           ;main.c: 421:         }
  3137                           
  3138                           
  3139                           ;main.c: 422:         if(current_halfcycle == 1){
  3140     005E  0340               	decf	_current_halfcycle,w	;volatile
  3141     005F  1D03               	btfss	3,2
  3142     0060  286B               	goto	i1l258
  3143                           
  3144                           ;main.c: 423:         duty = 1023 - duty;
  3145     0061  30FF               	movlw	255
  3146     0062  00FA               	movwf	??_INTERRUPT_InterruptManager
  3147     0063  3003               	movlw	3
  3148     0064  00FB               	movwf	??_INTERRUPT_InterruptManager+1
  3149     0065  0843               	movf	_duty,w	;volatile
  3150     0066  027A               	subwf	??_INTERRUPT_InterruptManager,w
  3151     0067  00C3               	movwf	_duty	;volatile
  3152     0068  0844               	movf	_duty+1,w	;volatile
  3153     0069  3B7B               	subwfb	??_INTERRUPT_InterruptManager+1,w
  3154     006A  00C4               	movwf	_duty+1	;volatile
  3155     006B                     i1l258:	
  3156                           ;main.c: 424:         }
  3157                           
  3158                           
  3159                           ;main.c: 427:     if(current_depth != 0){
  3160     006B  082E               	movf	_current_depth,w	;volatile
  3161     006C  042F               	iorwf	_current_depth+1,w	;volatile
  3162     006D  1903               	btfsc	3,2
  3163     006E  28C7               	goto	i1l1525
  3164                           
  3165                           ;main.c: 428:         duty_low_byte = duty & 0xFF;
  3166     006F  0843               	movf	_duty,w	;volatile
  3167     0070  00C2               	movwf	_duty_low_byte	;volatile
  3168                           
  3169                           ;main.c: 429:         duty_high_byte = duty >> 8;
  3170     0071  0844               	movf	_duty+1,w	;volatile
  3171     0072  00C1               	movwf	_duty_high_byte	;volatile
  3172     0073  01A2               	clrf	34	;# 
  3173     0074  01A0               	clrf	32	;# 
  3174     0075  1003               	bcf	3,0	;# 
  3175     0076  082E               	movf	_current_depth,w	;# 
  3176     0077  1842               	btfsc	_duty_low_byte,0	;# 
  3177     0078  07A2               	addwf	34,f	;# 
  3178     0079  0CA2               	rrf	34,f	;# 
  3179     007A  0CA0               	rrf	32,f	;# 
  3180     007B  18C2               	btfsc	_duty_low_byte,1	;# 
  3181     007C  07A2               	addwf	34,f	;# 
  3182     007D  0CA2               	rrf	34,f	;# 
  3183     007E  0CA0               	rrf	32,f	;# 
  3184     007F  1942               	btfsc	_duty_low_byte,2	;# 
  3185     0080  07A2               	addwf	34,f	;# 
  3186     0081  0CA2               	rrf	34,f	;# 
  3187     0082  0CA0               	rrf	32,f	;# 
  3188     0083  19C2               	btfsc	_duty_low_byte,3	;# 
  3189     0084  07A2               	addwf	34,f	;# 
  3190     0085  0CA2               	rrf	34,f	;# 
  3191     0086  0CA0               	rrf	32,f	;# 
  3192     0087  1A42               	btfsc	_duty_low_byte,4	;# 
  3193     0088  07A2               	addwf	34,f	;# 
  3194     0089  0CA2               	rrf	34,f	;# 
  3195     008A  0CA0               	rrf	32,f	;# 
  3196     008B  1AC2               	btfsc	_duty_low_byte,5	;# 
  3197     008C  07A2               	addwf	34,f	;# 
  3198     008D  0CA2               	rrf	34,f	;# 
  3199     008E  0CA0               	rrf	32,f	;# 
  3200     008F  1B42               	btfsc	_duty_low_byte,6	;# 
  3201     0090  07A2               	addwf	34,f	;# 
  3202     0091  0CA2               	rrf	34,f	;# 
  3203     0092  0CA0               	rrf	32,f	;# 
  3204     0093  1BC2               	btfsc	_duty_low_byte,7	;# 
  3205     0094  07A2               	addwf	34,f	;# 
  3206     0095  0CA2               	rrf	34,f	;# 
  3207     0096  0CA0               	rrf	32,f	;# 
  3208     0097  01A1               	clrf	33	;# 
  3209     0098  1841               	btfsc	_duty_high_byte,0	;# 
  3210     0099  07A2               	addwf	34,f	;# 
  3211     009A  0CA2               	rrf	34,f	;# 
  3212     009B  0CA1               	rrf	33,f	;# 
  3213     009C  18C1               	btfsc	_duty_high_byte,1	;# 
  3214     009D  07A2               	addwf	34,f	;# 
  3215     009E  0CA2               	rrf	34,f	;# 
  3216     009F  0CA1               	rrf	33,f	;# 
  3217     00A0  1941               	btfsc	_duty_high_byte,2	;# 
  3218     00A1  07A2               	addwf	34,f	;# 
  3219     00A2  0CA2               	rrf	34,f	;# 
  3220     00A3  0CA1               	rrf	33,f	;# 
  3221     00A4  19C1               	btfsc	_duty_high_byte,3	;# 
  3222     00A5  07A2               	addwf	34,f	;# 
  3223     00A6  0CA2               	rrf	34,f	;# 
  3224     00A7  0CA1               	rrf	33,f	;# 
  3225     00A8  1A41               	btfsc	_duty_high_byte,4	;# 
  3226     00A9  07A2               	addwf	34,f	;# 
  3227     00AA  0CA2               	rrf	34,f	;# 
  3228     00AB  0CA1               	rrf	33,f	;# 
  3229     00AC  1AC1               	btfsc	_duty_high_byte,5	;# 
  3230     00AD  07A2               	addwf	34,f	;# 
  3231     00AE  0CA2               	rrf	34,f	;# 
  3232     00AF  0CA1               	rrf	33,f	;# 
  3233     00B0  1B41               	btfsc	_duty_high_byte,6	;# 
  3234     00B1  07A2               	addwf	34,f	;# 
  3235     00B2  0CA2               	rrf	34,f	;# 
  3236     00B3  0CA1               	rrf	33,f	;# 
  3237     00B4  1BC1               	btfsc	_duty_high_byte,7	;# 
  3238     00B5  07A2               	addwf	34,f	;# 
  3239     00B6  0CA2               	rrf	34,f	;# 
  3240     00B7  0CA1               	rrf	33,f	;# 
  3241                           
  3242                           ;main.c: 464:         duty = 1023 - *top_two_bytes_ptr;
  3243     00B8  0020               	movlb	0	; select bank0
  3244     00B9  0856               	movf	_top_two_bytes_ptr,w
  3245     00BA  0086               	movwf	6
  3246     00BB  0857               	movf	_top_two_bytes_ptr+1,w
  3247     00BC  0087               	movwf	7
  3248     00BD  30FF               	movlw	255
  3249     00BE  00FA               	movwf	??_INTERRUPT_InterruptManager
  3250     00BF  3003               	movlw	3
  3251     00C0  00FB               	movwf	??_INTERRUPT_InterruptManager+1
  3252     00C1  3F40               	moviw [0]fsr1
  3253     00C2  027A               	subwf	??_INTERRUPT_InterruptManager,w
  3254     00C3  00C3               	movwf	_duty	;volatile
  3255     00C4  3F41               	moviw [1]fsr1
  3256     00C5  3B7B               	subwfb	??_INTERRUPT_InterruptManager+1,w
  3257     00C6  28CA               	goto	L4
  3258     00C7                     i1l1525:	
  3259                           ;main.c: 465:     }
  3260                           
  3261                           
  3262                           ;main.c: 467:         duty = 1023;
  3263     00C7  30FF               	movlw	255
  3264     00C8  00C3               	movwf	_duty	;volatile
  3265     00C9  3003               	movlw	3
  3266     00CA                     L4:
  3267     00CA  00C4               	movwf	_duty+1	;volatile
  3268                           
  3269                           ;main.c: 471:     SET_DUTY_CCP3(&duty);
  3270     00CB  3043               	movlw	(low (_duty| 0))& (0+255)
  3271     00CC  3185  254B         	fcall	_SET_DUTY_CCP3
  3272                           
  3273                           ;main.c: 474:     LATC5 = 0;
  3274     00CE  0022               	movlb	2	; select bank2
  3275     00CF  128E               	bcf	14,5	;volatile
  3276                           
  3277                           ;main.c: 475:     GIE = 1;
  3278     00D0  178B               	bsf	11,7	;volatile
  3279     00D1                     i1l261:
  3280     00D1  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  3281     00D2  0009               	retfie
  3282     00D3                     __end_of_INTERRUPT_InterruptManager:
  3283                           
  3284                           	psect	text18
  3285     054B                     __ptext18:	
  3286 ;; *************** function _SET_DUTY_CCP3 *****************
  3287 ;; Defined at:
  3288 ;;		line 193 in file "main.c"
  3289 ;; Parameters:    Size  Location     Type
  3290 ;;  duty_ptr        1    wreg     PTR volatile unsigned sh
  3291 ;;		 -> duty(2), 
  3292 ;; Auto vars:     Size  Location     Type
  3293 ;;  duty_ptr        1    3[COMMON] PTR volatile unsigned sh
  3294 ;;		 -> duty(2), 
  3295 ;;  temp            1    2[COMMON] unsigned char 
  3296 ;; Return value:  Size  Location     Type
  3297 ;;                  1    wreg      unsigned char 
  3298 ;; Registers used:
  3299 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3300 ;; Tracked objects:
  3301 ;;		On entry : 1F/0
  3302 ;;		On exit  : 1F/6
  3303 ;;		Unchanged: 0/0
  3304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3305 ;;      Params:         0       0       0       0
  3306 ;;      Locals:         2       0       0       0
  3307 ;;      Temps:          2       0       0       0
  3308 ;;      Totals:         4       0       0       0
  3309 ;;Total ram usage:        4 bytes
  3310 ;; Hardware stack levels used: 1
  3311 ;; This function calls:
  3312 ;;		Nothing
  3313 ;; This function is called by:
  3314 ;;		_INTERRUPT_InterruptManager
  3315 ;; This function uses a non-reentrant model
  3316 ;;
  3317                           
  3318     054B                     _SET_DUTY_CCP3:	
  3319                           ;psect for function _SET_DUTY_CCP3
  3320                           
  3321                           
  3322                           ;incstack = 0
  3323                           ; Regs used in _SET_DUTY_CCP3: [wreg+fsr1l+fsr1h+status,2+status,0]
  3324                           ;SET_DUTY_CCP3@duty_ptr stored from wreg
  3325     054B  00F9               	movwf	SET_DUTY_CCP3@duty_ptr
  3326                           
  3327                           ;main.c: 195:     CCPR3L = *duty_ptr >> 2;
  3328     054C  0879               	movf	SET_DUTY_CCP3@duty_ptr,w
  3329     054D  0086               	movwf	6
  3330     054E  0187               	clrf	7
  3331     054F  3F40               	moviw [0]fsr1
  3332     0550  00F6               	movwf	??_SET_DUTY_CCP3
  3333     0551  3F41               	moviw [1]fsr1
  3334     0552  00F7               	movwf	??_SET_DUTY_CCP3+1
  3335     0553  36F7               	lsrf	??_SET_DUTY_CCP3+1,f
  3336     0554  0CF6               	rrf	??_SET_DUTY_CCP3,f
  3337     0555  36F7               	lsrf	??_SET_DUTY_CCP3+1,f
  3338     0556  0CF6               	rrf	??_SET_DUTY_CCP3,f
  3339     0557  0876               	movf	??_SET_DUTY_CCP3,w
  3340     0558  0026               	movlb	6	; select bank6
  3341     0559  0091               	movwf	17	;volatile
  3342                           
  3343                           ;main.c: 196:     uint8_t temp = *duty_ptr % 0b100;
  3344     055A  0879               	movf	SET_DUTY_CCP3@duty_ptr,w
  3345     055B  0086               	movwf	6
  3346     055C  0187               	clrf	7
  3347     055D  0801               	movf	1,w
  3348     055E  3903               	andlw	3
  3349     055F  00F8               	movwf	SET_DUTY_CCP3@temp
  3350                           
  3351                           ;main.c: 197:     CCP3CON = CCP3CON | (temp << 4);
  3352     0560  0878               	movf	SET_DUTY_CCP3@temp,w
  3353     0561  00F6               	movwf	??_SET_DUTY_CCP3
  3354     0562  3003               	movlw	3
  3355     0563                     u66_25:
  3356     0563  35F6               	lslf	??_SET_DUTY_CCP3,f
  3357     0564  3EFF               	addlw	-1
  3358     0565  1D03               	skipz
  3359     0566  2D63               	goto	u66_25
  3360     0567  3576               	lslf	??_SET_DUTY_CCP3,w
  3361     0568  0413               	iorwf	19,w	;volatile
  3362     0569  0093               	movwf	19	;volatile
  3363     056A  0008               	return
  3364     056B                     __end_of_SET_DUTY_CCP3:
  3365     007E                     btemp	set	126	;btemp
  3366     007E                     int$flags	set	126
  3367     007E                     wtemp0	set	126
  3368                           
  3369                           	psect	config
  3370                           
  3371                           ;Config register CONFIG1 @ 0x8007
  3372                           ;	Oscillator Selection
  3373                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  3374                           ;	Watchdog Timer Enable
  3375                           ;	WDTE = OFF, WDT disabled
  3376                           ;	Power-up Timer Enable
  3377                           ;	PWRTE = OFF, PWRT disabled
  3378                           ;	MCLR Pin Function Select
  3379                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  3380                           ;	Flash Program Memory Code Protection
  3381                           ;	CP = OFF, Program memory code protection is disabled
  3382                           ;	Data Memory Code Protection
  3383                           ;	CPD = OFF, Data memory code protection is disabled
  3384                           ;	Brown-out Reset Enable
  3385                           ;	BOREN = OFF, Brown-out Reset disabled
  3386                           ;	Clock Out Enable
  3387                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  3388                           ;	Internal/External Switchover
  3389                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3390                           ;	Fail-Safe Clock Monitor Enable
  3391                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3392     8007                     	org	32775
  3393     8007  09E4               	dw	2532
  3394                           
  3395                           ;Config register CONFIG2 @ 0x8008
  3396                           ;	Flash Memory Self-Write Protection
  3397                           ;	WRT = OFF, Write protection off
  3398                           ;	PLL Enable
  3399                           ;	PLLEN = ON, 4x PLL enabled
  3400                           ;	Stack Overflow/Underflow Reset Enable
  3401                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  3402                           ;	Brown-out Reset Voltage Selection
  3403                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  3404                           ;	In-Circuit Debugger Mode
  3405                           ;	DEBUG = ON, In-Circuit Debugger enabled, ICSPCLK and ICSPDAT are dedicated to the debu
      +                          gger
  3406                           ;	Low-Voltage Programming Enable
  3407                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  3408     8008                     	org	32776
  3409     8008  0FFF               	dw	4095

Data Sizes:
    Strings     0
    Constant    539
    Data        2
    BSS         44
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     16      56
    BANK1            80      0       0
    BANK2            64      0       0

Pointer List with Targets:

    DO_ADC@modifier	PTR const unsigned char  size(2) Largest target is 1
		 -> depth_adc_config_value(CODE[1]), speed_adc_config_value(CODE[1]), symmetry_adc_config_value(CODE[1]), waveshape_adc_config_value(CODE[1]), 

    SET_DUTY_CCP3@duty_ptr	PTR volatile unsigned short  size(1) Largest target is 2
		 -> duty(BANK0[2]), 

    TMR0_WRITE@timer_value_ptr	PTR volatile unsigned char  size(1) Largest target is 1
		 -> final_TMR0(BANK0[1]), 

    top_two_bytes_ptr	PTR unsigned short  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_SET_DUTY_CCP3

Critical Paths under _main in BANK0

    _main->_PROCESS_RAW_SPEED_AND_PRESCALER
    _PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST->_SHORTEN_PERIOD
    _PROCESS_RAW_SPEED_AND_PRESCALER->___lmul
    _GET_CURRENT_POT_VALUES->_DETERMINE_WAVESHAPE
    _DETERMINE_WAVESHAPE->_DO_ADC

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1725
                      _CONFIG_SYSTEM
              _CONFIG_TMR0_INTERRUPT
             _GET_CURRENT_POT_VALUES
  _PROCESS_FINAL_SPEED_AND_PRESCALER
    _PROCESS_RAW_SPEED_AND_PRESCALER
_PROCESS_TMR0_OFFSET_AND_PRESCALER_A
                         _TMR0_WRITE
                   _TURN_ON_CCP3_PWM
 ---------------------------------------------------------------------------------
 (1) _TURN_ON_CCP3_PWM                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_WRITE                                           1     1      0      67
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST             2     2      0     291
                                              5 BANK0      2     2      0
                     _SHORTEN_PERIOD
 ---------------------------------------------------------------------------------
 (2) _SHORTEN_PERIOD                                       5     5      0     161
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _PROCESS_RAW_SPEED_AND_PRESCALER                      4     4      0     316
                                             12 BANK0      4     4      0
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     316
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) _PROCESS_FINAL_SPEED_AND_PRESCALER                    1     1      0      37
 ---------------------------------------------------------------------------------
 (1) _GET_CURRENT_POT_VALUES                               2     2      0    1014
                                              8 BANK0      2     2      0
                _DETERMINE_WAVESHAPE
                             _DO_ADC
 ---------------------------------------------------------------------------------
 (2) _DETERMINE_WAVESHAPE                                  2     2      0     555
                                              6 BANK0      2     2      0
                             _DO_ADC
 ---------------------------------------------------------------------------------
 (2) _DO_ADC                                               6     4      2     459
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _CONFIG_TMR0_INTERRUPT                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CONFIG_SYSTEM                                        0     0      0       0
                    _CONFIG_ADC_PINS
                     _CONFIG_INT_OSC
                       _CONFIG_PORTS
                    _CONFIG_PWM_CCP3
 ---------------------------------------------------------------------------------
 (2) _CONFIG_PWM_CCP3                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CONFIG_PORTS                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CONFIG_INT_OSC                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CONFIG_ADC_PINS                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           2     2      0     100
                                              4 COMMON     2     2      0
                      _SET_DUTY_CCP3
 ---------------------------------------------------------------------------------
 (5) _SET_DUTY_CCP3                                        4     4      0     100
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CONFIG_SYSTEM
     _CONFIG_ADC_PINS
     _CONFIG_INT_OSC
     _CONFIG_PORTS
     _CONFIG_PWM_CCP3
   _CONFIG_TMR0_INTERRUPT
   _GET_CURRENT_POT_VALUES
     _DETERMINE_WAVESHAPE
       _DO_ADC
     _DO_ADC
   _PROCESS_FINAL_SPEED_AND_PRESCALER
   _PROCESS_RAW_SPEED_AND_PRESCALER
     ___lmul
   _PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST
     _SHORTEN_PERIOD
   _TMR0_WRITE
   _TURN_ON_CCP3_PWM

 _INTERRUPT_InterruptManager (ROOT)
   _SET_DUTY_CCP3

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              E0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      44       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     10      38       6       70.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            40      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               40      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      44      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Sat Jan 20 15:09:21 2024

                                                      r1 0020  
                                                      r2 0021  
                                                      r3 0022  
                                                     _CW 05BF  
                                                     _NO 05C1  
                                                    l204 03EB  
                                                    l158 04EE  
                                                    l177 059D  
                                                    _CCW 05C0  
                                                    _GIE 005F  
                                                    _PR2 001B  
                                                    u995 04DB  
                                                    _YES 05C2  
                                                    wreg 0009  
                                                   l1601 0540  
                                                   l1605 0542  
                                                   _C1ON 088F  
                                                   l1641 0314  
                                                   l1651 0328  
                                                   l1803 045E  
                                                   l1751 0417  
                                                   l1743 03F9  
                                                   l1719 03BB  
                                                   l1737 03E5  
                                                   l1673 04AA  
                                                   l1657 0359  
                                                   l1747 0408  
                                                   l1677 04B4  
                                                   l1781 0449  
                                                   l1829 0517  
                                                   l1599 0539  
                                                   l1783 044C  
                                                   l1793 045B  
                                                   l1777 0443  
                                                   l1769 0430  
                                                   l1795 0453  
                                                   l1787 0456  
                                                   _ADON 04E8  
                                                   u1125 04B5  
                                                   u1135 04BC  
                                                   u1075 0348  
                                                   u1165 039C  
                                                   u1095 035E  
                                                   u1185 03C6  
                                                   u1195 03D1  
                                                   u1377 04E9  
                                                   _TMR0 0015  
                                                   _WPUC 020E  
                                      _current_speed_log 0030  
                                                   _main 04FD  
                                                   _duty 0043  
                                                   fsr0h 0005  
                                                   fsr1h 0007  
                                                   indf0 0000  
                                                   fsr0l 0004  
                                                   indf1 0001  
                                                   fsr1l 0006  
                                                   btemp 007E  
                                      _current_waveshape 0075  
                                                   start 00D3  
                                  _CONFIG_TMR0_INTERRUPT 05BD  
                                       __end_of_NEGATIVE 05C9  
                                   __end_of_CONFIG_PORTS 0593  
                                                  STATUS 0003  
                                                  ?_main 0076  
                                                  _T2CON 001C  
                                                  _LATC5 0875  
                                                  i1l261 00D1  
                                                  i1l257 005E  
                                                  i1l258 006B  
                                                  _SRLEN 08D7  
                                                  _TRISC 008E  
                                                  u66_25 0563  
                                            ?_TMR0_WRITE 0076  
                                    ___lmul@multiplicand 004A  
                                       __end_of_POSITIVE 05CA  
                               ??_GET_CURRENT_POT_VALUES 004E  
                                                  status 0003  
                                                  wtemp0 007E  
                             _current_one_quadrant_index 0074  
                                        __initialization 00D5  
                                           __end_of_main 0524  
       __end_of_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST 0465  
             ??_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST 004B  
              ?_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST 0076  
               _PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST 0425  
                            ?_INTERRUPT_InterruptManager 0076  
                                      __end_of_DONT_CARE 05C4  
                                                 ??_main 0056  
                                  __end_of_DIVIDE_BY_TWO 05C7  
                                 _speed_adc_config_value 05CC  
                                  __end_of_CONFIG_SYSTEM 058A  
                                                 _ADCON0 009D  
                                                 _ADCON1 009E  
                                                 _ADRESH 009C  
                                                 _ADRESL 009B  
                                                 _CCPR3L 0311  
                                                 _ANSELC 018E  
                                                 _DO_ADC 04D1  
                                                 i1l1511 0052  
                                                 i1l1503 0047  
                                                 i1l1513 0053  
                                                 i1l1525 00C7  
                                                 i1l1517 005C  
                                                 i1l1491 0023  
                                                 i1l1495 0037  
                                                 i1l1499 0040  
                                                 _OSCCON 0099  
                                                 _TMR0IE 005D  
                                                 _TMR0IF 005A  
                                                 _TMR2IF 0089  
                                                 _TMR2ON 00E2  
                                                 _TRISA2 0462  
                                 ?_CONFIG_TMR0_INTERRUPT 0076  
                                         DO_ADC@modifier 0046  
                            __end_of_DETERMINE_WAVESHAPE 054B  
                      __end_of_symmetry_adc_config_value 05CB  
                                                 ___lmul 04A2  
                                  __end_of_SET_DUTY_CCP3 056B  
                                      ?_TURN_ON_CCP3_PWM 0076  
                                      ??_CONFIG_ADC_PINS 0046  
                                _current_speed_linear_32 0024  
                                     ??_TURN_ON_CCP3_PWM 0046  
                                __end_of__initialization 00EA  
                                         _SHORTEN_PERIOD 02F2  
                                         _DIVIDE_BY_FOUR 05C4  
                                         _CONFIG_INT_OSC 05B1  
                                         __pcstackCOMMON 0076  
                                           __pidataBANK0 05BB  
                                            _dTMR0_ideal 0070  
                                             __end_of_CW 05C0  
                                             __end_of_NO 05C2  
                                 _tri_table_one_quadrant 00EE  
                                      ??_CONFIG_PWM_CCP3 0046  
                                      _top_two_bytes_ptr 0056  
                                          _current_depth 002E  
                                             __pbssBANK0 0020  
                                                ?_DO_ADC 0046  
                                 __end_of_SHORTEN_PERIOD 0372  
                                           _CONFIG_PORTS 058A  
                                 __end_of_DIVIDE_BY_FOUR 05C5  
                                 __end_of_CONFIG_INT_OSC 05B7  
                                     __end_of_DO_NOTHING 05C8  
                                             __pmaintext 04FD  
                                 _GET_CURRENT_POT_VALUES 0465  
                                                ?___lmul 0046  
                                             __pintentry 0004  
PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST@symmetry_status 004C  
                                                _CCP3CON 0313  
                                         ___lmul@product 004E  
                                             _final_TMR0 0045  
                                           ??_TMR0_WRITE 0046  
                                  SET_DUTY_CCP3@duty_ptr 0079  
                                                _OSCTUNE 0098  
                                _sine_table_one_quadrant 01F0  
                              TMR0_WRITE@timer_value_ptr 0046  
                                        ?_SHORTEN_PERIOD 0076  
              __end_of_PROCESS_FINAL_SPEED_AND_PRESCALER 0425  
                    ??_PROCESS_FINAL_SPEED_AND_PRESCALER 0046  
                     ?_PROCESS_FINAL_SPEED_AND_PRESCALER 0076  
                      _PROCESS_FINAL_SPEED_AND_PRESCALER 03DC  
                                        ?_CONFIG_INT_OSC 0076  
                                   _current_speed_log_32 0020  
                                     __end_of_TMR0_WRITE 05AB  
                                   _current_speed_linear 0032  
                              _base_prescaler_bits_index 003C  
                                                __ptext1 059B  
                                                __ptext2 05A3  
                                                __ptext3 0425  
                                                __ptext4 02F2  
                                                __ptext5 0372  
                                                __ptext6 04A2  
                                                __ptext7 03DC  
                                                __ptext8 0465  
                                                __ptext9 0524  
                                        _MULTIPLY_BY_TWO 05C5  
                __end_of_PROCESS_RAW_SPEED_AND_PRESCALER 03DC  
                      ??_PROCESS_RAW_SPEED_AND_PRESCALER 0052  
                       ?_PROCESS_RAW_SPEED_AND_PRESCALER 0076  
                        _PROCESS_RAW_SPEED_AND_PRESCALER 0372  
                                              _DONT_CARE 05C3  
                                                clrloop0 05AC  
                                   end_of_initialization 00EA  
                                ??_CONFIG_TMR0_INTERRUPT 0046  
                                          _duty_low_byte 0042  
                         __end_of_speed_adc_config_value 05CD  
                                 _depth_adc_config_value 05CB  
                                        _CONFIG_ADC_PINS 05B7  
                                       _TMR0_offset_sign 003D  
                                             DO_ADC@temp 004B  
                                         __end_of_DO_ADC 04FD  
                                      SET_DUTY_CCP3@temp 0078  
                                       _current_quadrant 003F  
                                __end_of_MULTIPLY_BY_TWO 05C6  
                                        _CONFIG_PWM_CCP3 056B  
                                       _current_symmetry 002C  
                                         __end_of___lmul 04D1  
                               _speed_control_subtracted 0036  
                                    start_initialization 00D5  
                                            __end_of_CCW 05C1  
                                            __end_of_YES 05C3  
                                               ??_DO_ADC 0048  
                                ?_GET_CURRENT_POT_VALUES 0076  
                        __end_of_sine_table_one_quadrant 02F2  
                                __end_of_CONFIG_ADC_PINS 05BB  
                                               ??___lmul 004E  
                         __end_of_tri_table_one_quadrant 01F0  
                                            __pdataBANK0 0056  
                                       DO_ADC@adc_result 0049  
                                            __pbssCOMMON 0070  
                                              ___latbits 0001  
                                          _DIVIDE_BY_TWO 05C6  
                                          __pcstackBANK0 0046  
                                       ??_SHORTEN_PERIOD 0046  
                                          _CONFIG_SYSTEM 057E  
                                       ??_CONFIG_INT_OSC 0046  
                         __end_of_GET_CURRENT_POT_VALUES 04A2  
                                __end_of_CONFIG_PWM_CCP3 057E  
                                         _prescaler_bits 0593  
                           ??_INTERRUPT_InterruptManager 007A  
                                           _how_many_128 0034  
                                          _SET_DUTY_CCP3 054B  
                                               _CCPTMRS0 029E  
                                         ?_CONFIG_SYSTEM 0076  
                                       _prescaler_adjust 0073  
                                        _symmetry_status 003A  
                                               _NEGATIVE 05C8  
                     __end_of_waveshape_adc_config_value 05CE  
                             _waveshape_adc_config_value 05CD  
                          __end_of_CONFIG_TMR0_INTERRUPT 05BF  
                                              clear_ram0 05AB  
                                               _GO_nDONE 04E9  
                                       _TURN_ON_CCP3_PWM 059B  
                                 __end_of_prescaler_bits 059B  
                                       ?_CONFIG_ADC_PINS 0076  
                                               _POSITIVE 05C9  
                                         ?_SET_DUTY_CCP3 0076  
                                      _clear_TMR0_please 003B  
                           SHORTEN_PERIOD@TMR0_raw_extra 0049  
                                      ___lmul@multiplier 0046  
                                    _DETERMINE_WAVESHAPE 0524  
                                 DETERMINE_WAVESHAPE@ADC 004C  
                                       ?_CONFIG_PWM_CCP3 0076  
                         __end_of_depth_adc_config_value 05CC  
                                   ?_DETERMINE_WAVESHAPE 0076  
                                        ??_CONFIG_SYSTEM 0046  
                                       _speed_control_32 0028  
                                               __ptext10 04D1  
                                               __ptext11 05BD  
                                               __ptext12 057E  
                                               __ptext13 056B  
                                               __ptext14 058A  
                                               __ptext15 05B1  
                                               __ptext16 05B7  
                                               __ptext18 054B  
                                          ?_CONFIG_PORTS 0076  
                                         _duty_high_byte 0041  
                                          _speed_control 0038  
                                               _raw_TMR0 0072  
                                               int$flags 007E  
                                  ??_DETERMINE_WAVESHAPE 004C  
                     __end_of_INTERRUPT_InterruptManager 00D3  
                             _INTERRUPT_InterruptManager 0004  
                                        ??_SET_DUTY_CCP3 0076  
                                             _DO_NOTHING 05C7  
                                         __pstringtext10 05C5  
                                         __pstringtext11 05C6  
                                         __pstringtext12 05C7  
                                         __pstringtext13 05C8  
                                         __pstringtext14 05C9  
                                         __pstringtext15 05CA  
                                         __pstringtext16 05CB  
                                         __pstringtext17 05CC  
                                         __pstringtext18 05CD  
                              _symmetry_adc_config_value 05CA  
                                         ??_CONFIG_PORTS 0046  
                                               intlevel1 0000  
                                          __pstringtext1 00EE  
                                          __pstringtext2 01F0  
                                          __pstringtext3 0593  
                                          __pstringtext4 05BF  
                                          __pstringtext5 05C0  
                                          __pstringtext6 05C1  
                                          __pstringtext7 05C2  
                                          __pstringtext8 05C3  
                                          __pstringtext9 05C4  
                                            _TMR0_offset 003E  
                                             _OPTION_REG 0095  
                                             _TMR0_WRITE 05A3  
                               __end_of_TURN_ON_CCP3_PWM 05A3  
                                      _current_halfcycle 0040  
