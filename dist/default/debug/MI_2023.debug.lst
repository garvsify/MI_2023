

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Sat Jan 20 16:04:33 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og9 
     1                           	processor	16F1824
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    15                           	psect	stringtext11,global,class=STRCODE,delta=2,noexec
    16                           	psect	stringtext12,global,class=STRCODE,delta=2,noexec
    17                           	psect	stringtext13,global,class=STRCODE,delta=2,noexec
    18                           	psect	stringtext14,global,class=STRCODE,delta=2,noexec
    19                           	psect	stringtext15,global,class=STRCODE,delta=2,noexec
    20                           	psect	stringtext16,global,class=STRCODE,delta=2,noexec
    21                           	psect	stringtext17,global,class=STRCODE,delta=2,noexec
    22                           	psect	stringtext18,global,class=STRCODE,delta=2,noexec
    23                           	psect	cinit,global,class=CODE,merge=1,delta=2
    24                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    25                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    26                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    27                           	psect	clrtext,global,class=CODE,delta=2
    28                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    29                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    30                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    31                           	psect	text1,local,class=CODE,merge=1,delta=2
    32                           	psect	text2,local,class=CODE,merge=1,delta=2
    33                           	psect	text3,local,class=CODE,merge=1,delta=2
    34                           	psect	text4,local,class=CODE,merge=1,delta=2
    35                           	psect	text5,local,class=CODE,merge=1,delta=2
    36                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text7,local,class=CODE,merge=1,delta=2
    38                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text9,local,class=CODE,merge=1,delta=2
    40                           	psect	text10,local,class=CODE,merge=1,delta=2
    41                           	psect	text11,local,class=CODE,merge=1,delta=2
    42                           	psect	text12,local,class=CODE,merge=1,delta=2
    43                           	psect	text13,local,class=CODE,merge=1,delta=2
    44                           	psect	text14,local,class=CODE,merge=1,delta=2
    45                           	psect	text15,local,class=CODE,merge=1,delta=2
    46                           	psect	text16,local,class=CODE,merge=1,delta=2
    47                           	psect	text17,local,class=CODE,merge=1,delta=2
    48                           	psect	text18,local,class=CODE,merge=1,delta=2
    49                           	psect	intentry,global,class=CODE,delta=2
    50                           	psect	text20,local,class=CODE,merge=1,delta=2
    51                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    52                           	dabs	1,0x7E,2
    53     0000                     
    54                           ; Generated 06/07/2023 GMT
    55                           ; 
    56                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    57                           ; All rights reserved.
    58                           ; 
    59                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    60                           ; 
    61                           ; Redistribution and use in source and binary forms, with or without modification, are
    62                           ; permitted provided that the following conditions are met:
    63                           ; 
    64                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    65                           ;        conditions and the following disclaimer.
    66                           ; 
    67                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    68                           ;        of conditions and the following disclaimer in the documentation and/or other
    69                           ;        materials provided with the distribution. Publication is not required when
    70                           ;        this file is used in an embedded application.
    71                           ; 
    72                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    73                           ;        software without specific prior written permission.
    74                           ; 
    75                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    76                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    77                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    78                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    79                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    80                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    81                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    82                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    83                           ; 
    84                           ; 
    85                           ; Code-generator required, PIC16F1824 Definitions
    86                           ; 
    87                           ; SFR Addresses
    88     0000                     	;# 
    89     0001                     	;# 
    90     0002                     	;# 
    91     0003                     	;# 
    92     0004                     	;# 
    93     0005                     	;# 
    94     0006                     	;# 
    95     0007                     	;# 
    96     0008                     	;# 
    97     0009                     	;# 
    98     000A                     	;# 
    99     000B                     	;# 
   100     000C                     	;# 
   101     000E                     	;# 
   102     0011                     	;# 
   103     0012                     	;# 
   104     0013                     	;# 
   105     0015                     	;# 
   106     0016                     	;# 
   107     0016                     	;# 
   108     0017                     	;# 
   109     0018                     	;# 
   110     0019                     	;# 
   111     001A                     	;# 
   112     001B                     	;# 
   113     001C                     	;# 
   114     001E                     	;# 
   115     001F                     	;# 
   116     008C                     	;# 
   117     008E                     	;# 
   118     0091                     	;# 
   119     0092                     	;# 
   120     0093                     	;# 
   121     0095                     	;# 
   122     0096                     	;# 
   123     0097                     	;# 
   124     0098                     	;# 
   125     0099                     	;# 
   126     009A                     	;# 
   127     009B                     	;# 
   128     009B                     	;# 
   129     009C                     	;# 
   130     009D                     	;# 
   131     009E                     	;# 
   132     010C                     	;# 
   133     010E                     	;# 
   134     0111                     	;# 
   135     0112                     	;# 
   136     0113                     	;# 
   137     0114                     	;# 
   138     0115                     	;# 
   139     0116                     	;# 
   140     0117                     	;# 
   141     0118                     	;# 
   142     0119                     	;# 
   143     011A                     	;# 
   144     011B                     	;# 
   145     011D                     	;# 
   146     011E                     	;# 
   147     018C                     	;# 
   148     018E                     	;# 
   149     0191                     	;# 
   150     0191                     	;# 
   151     0192                     	;# 
   152     0193                     	;# 
   153     0193                     	;# 
   154     0193                     	;# 
   155     0194                     	;# 
   156     0195                     	;# 
   157     0196                     	;# 
   158     0199                     	;# 
   159     019A                     	;# 
   160     019B                     	;# 
   161     019B                     	;# 
   162     019B                     	;# 
   163     019B                     	;# 
   164     019C                     	;# 
   165     019C                     	;# 
   166     019D                     	;# 
   167     019E                     	;# 
   168     019F                     	;# 
   169     020C                     	;# 
   170     020E                     	;# 
   171     0211                     	;# 
   172     0211                     	;# 
   173     0212                     	;# 
   174     0212                     	;# 
   175     0213                     	;# 
   176     0213                     	;# 
   177     0214                     	;# 
   178     0214                     	;# 
   179     0215                     	;# 
   180     0215                     	;# 
   181     0215                     	;# 
   182     0215                     	;# 
   183     0216                     	;# 
   184     0216                     	;# 
   185     0217                     	;# 
   186     0217                     	;# 
   187     0291                     	;# 
   188     0291                     	;# 
   189     0292                     	;# 
   190     0293                     	;# 
   191     0294                     	;# 
   192     0295                     	;# 
   193     0295                     	;# 
   194     0296                     	;# 
   195     0298                     	;# 
   196     0298                     	;# 
   197     0299                     	;# 
   198     029A                     	;# 
   199     029B                     	;# 
   200     029C                     	;# 
   201     029D                     	;# 
   202     029E                     	;# 
   203     029E                     	;# 
   204     0311                     	;# 
   205     0311                     	;# 
   206     0312                     	;# 
   207     0313                     	;# 
   208     0318                     	;# 
   209     0318                     	;# 
   210     0319                     	;# 
   211     031A                     	;# 
   212     038C                     	;# 
   213     038E                     	;# 
   214     0391                     	;# 
   215     0392                     	;# 
   216     0393                     	;# 
   217     039A                     	;# 
   218     039C                     	;# 
   219     039D                     	;# 
   220     039E                     	;# 
   221     039F                     	;# 
   222     0415                     	;# 
   223     0416                     	;# 
   224     0417                     	;# 
   225     041C                     	;# 
   226     041D                     	;# 
   227     041E                     	;# 
   228     0FE4                     	;# 
   229     0FE5                     	;# 
   230     0FE6                     	;# 
   231     0FE7                     	;# 
   232     0FE8                     	;# 
   233     0FE9                     	;# 
   234     0FEA                     	;# 
   235     0FEB                     	;# 
   236     0FED                     	;# 
   237     0FEE                     	;# 
   238     0FEF                     	;# 
   239     0020                     	;# 
   240     0021                     	;# 
   241     0022                     	;# 
   242     0023                     	;# 
   243     0024                     	;# 
   244     0025                     	;# 
   245     0000                     	;# 
   246     0001                     	;# 
   247     0002                     	;# 
   248     0003                     	;# 
   249     0004                     	;# 
   250     0005                     	;# 
   251     0006                     	;# 
   252     0007                     	;# 
   253     0008                     	;# 
   254     0009                     	;# 
   255     000A                     	;# 
   256     000B                     	;# 
   257     000C                     	;# 
   258     000E                     	;# 
   259     0011                     	;# 
   260     0012                     	;# 
   261     0013                     	;# 
   262     0015                     	;# 
   263     0016                     	;# 
   264     0016                     	;# 
   265     0017                     	;# 
   266     0018                     	;# 
   267     0019                     	;# 
   268     001A                     	;# 
   269     001B                     	;# 
   270     001C                     	;# 
   271     001E                     	;# 
   272     001F                     	;# 
   273     008C                     	;# 
   274     008E                     	;# 
   275     0091                     	;# 
   276     0092                     	;# 
   277     0093                     	;# 
   278     0095                     	;# 
   279     0096                     	;# 
   280     0097                     	;# 
   281     0098                     	;# 
   282     0099                     	;# 
   283     009A                     	;# 
   284     009B                     	;# 
   285     009B                     	;# 
   286     009C                     	;# 
   287     009D                     	;# 
   288     009E                     	;# 
   289     010C                     	;# 
   290     010E                     	;# 
   291     0111                     	;# 
   292     0112                     	;# 
   293     0113                     	;# 
   294     0114                     	;# 
   295     0115                     	;# 
   296     0116                     	;# 
   297     0117                     	;# 
   298     0118                     	;# 
   299     0119                     	;# 
   300     011A                     	;# 
   301     011B                     	;# 
   302     011D                     	;# 
   303     011E                     	;# 
   304     018C                     	;# 
   305     018E                     	;# 
   306     0191                     	;# 
   307     0191                     	;# 
   308     0192                     	;# 
   309     0193                     	;# 
   310     0193                     	;# 
   311     0193                     	;# 
   312     0194                     	;# 
   313     0195                     	;# 
   314     0196                     	;# 
   315     0199                     	;# 
   316     019A                     	;# 
   317     019B                     	;# 
   318     019B                     	;# 
   319     019B                     	;# 
   320     019B                     	;# 
   321     019C                     	;# 
   322     019C                     	;# 
   323     019D                     	;# 
   324     019E                     	;# 
   325     019F                     	;# 
   326     020C                     	;# 
   327     020E                     	;# 
   328     0211                     	;# 
   329     0211                     	;# 
   330     0212                     	;# 
   331     0212                     	;# 
   332     0213                     	;# 
   333     0213                     	;# 
   334     0214                     	;# 
   335     0214                     	;# 
   336     0215                     	;# 
   337     0215                     	;# 
   338     0215                     	;# 
   339     0215                     	;# 
   340     0216                     	;# 
   341     0216                     	;# 
   342     0217                     	;# 
   343     0217                     	;# 
   344     0291                     	;# 
   345     0291                     	;# 
   346     0292                     	;# 
   347     0293                     	;# 
   348     0294                     	;# 
   349     0295                     	;# 
   350     0295                     	;# 
   351     0296                     	;# 
   352     0298                     	;# 
   353     0298                     	;# 
   354     0299                     	;# 
   355     029A                     	;# 
   356     029B                     	;# 
   357     029C                     	;# 
   358     029D                     	;# 
   359     029E                     	;# 
   360     029E                     	;# 
   361     0311                     	;# 
   362     0311                     	;# 
   363     0312                     	;# 
   364     0313                     	;# 
   365     0318                     	;# 
   366     0318                     	;# 
   367     0319                     	;# 
   368     031A                     	;# 
   369     038C                     	;# 
   370     038E                     	;# 
   371     0391                     	;# 
   372     0392                     	;# 
   373     0393                     	;# 
   374     039A                     	;# 
   375     039C                     	;# 
   376     039D                     	;# 
   377     039E                     	;# 
   378     039F                     	;# 
   379     0415                     	;# 
   380     0416                     	;# 
   381     0417                     	;# 
   382     041C                     	;# 
   383     041D                     	;# 
   384     041E                     	;# 
   385     0FE4                     	;# 
   386     0FE5                     	;# 
   387     0FE6                     	;# 
   388     0FE7                     	;# 
   389     0FE8                     	;# 
   390     0FE9                     	;# 
   391     0FEA                     	;# 
   392     0FEB                     	;# 
   393     0FED                     	;# 
   394     0FEE                     	;# 
   395     0FEF                     	;# 
   396                           
   397                           	psect	idataBANK0
   398     0611                     __pidataBANK0:
   399                           
   400                           ;initializer for _top_two_bytes_ptr
   401     0611  3421               	retlw	33
   402     0612  3400               	retlw	0
   403                           
   404                           	psect	stringtext1
   405     00EE                     __pstringtext1:
   406     00EE                     _tri_table_one_quadrant:
   407     00EE  3400               	retlw	0
   408     00EF  3402               	retlw	2
   409     00F0  3404               	retlw	4
   410     00F1  3402               	retlw	2
   411     00F2  3408               	retlw	8
   412     00F3  3402               	retlw	2
   413     00F4  340C               	retlw	12
   414     00F5  3402               	retlw	2
   415     00F6  3410               	retlw	16
   416     00F7  3402               	retlw	2
   417     00F8  3414               	retlw	20
   418     00F9  3402               	retlw	2
   419     00FA  3418               	retlw	24
   420     00FB  3402               	retlw	2
   421     00FC  341C               	retlw	28
   422     00FD  3402               	retlw	2
   423     00FE  3420               	retlw	32
   424     00FF  3402               	retlw	2
   425     0100  3424               	retlw	36
   426     0101  3402               	retlw	2
   427     0102  3428               	retlw	40
   428     0103  3402               	retlw	2
   429     0104  342C               	retlw	44
   430     0105  3402               	retlw	2
   431     0106  3430               	retlw	48
   432     0107  3402               	retlw	2
   433     0108  3434               	retlw	52
   434     0109  3402               	retlw	2
   435     010A  3438               	retlw	56
   436     010B  3402               	retlw	2
   437     010C  343C               	retlw	60
   438     010D  3402               	retlw	2
   439     010E  3440               	retlw	64
   440     010F  3402               	retlw	2
   441     0110  3444               	retlw	68
   442     0111  3402               	retlw	2
   443     0112  3448               	retlw	72
   444     0113  3402               	retlw	2
   445     0114  344C               	retlw	76
   446     0115  3402               	retlw	2
   447     0116  3450               	retlw	80
   448     0117  3402               	retlw	2
   449     0118  3454               	retlw	84
   450     0119  3402               	retlw	2
   451     011A  3458               	retlw	88
   452     011B  3402               	retlw	2
   453     011C  345C               	retlw	92
   454     011D  3402               	retlw	2
   455     011E  3460               	retlw	96
   456     011F  3402               	retlw	2
   457     0120  3464               	retlw	100
   458     0121  3402               	retlw	2
   459     0122  3468               	retlw	104
   460     0123  3402               	retlw	2
   461     0124  346C               	retlw	108
   462     0125  3402               	retlw	2
   463     0126  3470               	retlw	112
   464     0127  3402               	retlw	2
   465     0128  3474               	retlw	116
   466     0129  3402               	retlw	2
   467     012A  3478               	retlw	120
   468     012B  3402               	retlw	2
   469     012C  347C               	retlw	124
   470     012D  3402               	retlw	2
   471     012E  3480               	retlw	128
   472     012F  3402               	retlw	2
   473     0130  3484               	retlw	132
   474     0131  3402               	retlw	2
   475     0132  3488               	retlw	136
   476     0133  3402               	retlw	2
   477     0134  348C               	retlw	140
   478     0135  3402               	retlw	2
   479     0136  3490               	retlw	144
   480     0137  3402               	retlw	2
   481     0138  3494               	retlw	148
   482     0139  3402               	retlw	2
   483     013A  3498               	retlw	152
   484     013B  3402               	retlw	2
   485     013C  349C               	retlw	156
   486     013D  3402               	retlw	2
   487     013E  34A0               	retlw	160
   488     013F  3402               	retlw	2
   489     0140  34A4               	retlw	164
   490     0141  3402               	retlw	2
   491     0142  34A8               	retlw	168
   492     0143  3402               	retlw	2
   493     0144  34AC               	retlw	172
   494     0145  3402               	retlw	2
   495     0146  34B0               	retlw	176
   496     0147  3402               	retlw	2
   497     0148  34B4               	retlw	180
   498     0149  3402               	retlw	2
   499     014A  34B8               	retlw	184
   500     014B  3402               	retlw	2
   501     014C  34BC               	retlw	188
   502     014D  3402               	retlw	2
   503     014E  34C0               	retlw	192
   504     014F  3402               	retlw	2
   505     0150  34C4               	retlw	196
   506     0151  3402               	retlw	2
   507     0152  34C8               	retlw	200
   508     0153  3402               	retlw	2
   509     0154  34CC               	retlw	204
   510     0155  3402               	retlw	2
   511     0156  34D0               	retlw	208
   512     0157  3402               	retlw	2
   513     0158  34D4               	retlw	212
   514     0159  3402               	retlw	2
   515     015A  34D8               	retlw	216
   516     015B  3402               	retlw	2
   517     015C  34DC               	retlw	220
   518     015D  3402               	retlw	2
   519     015E  34E0               	retlw	224
   520     015F  3402               	retlw	2
   521     0160  34E4               	retlw	228
   522     0161  3402               	retlw	2
   523     0162  34E8               	retlw	232
   524     0163  3402               	retlw	2
   525     0164  34EC               	retlw	236
   526     0165  3402               	retlw	2
   527     0166  34F0               	retlw	240
   528     0167  3402               	retlw	2
   529     0168  34F4               	retlw	244
   530     0169  3402               	retlw	2
   531     016A  34F8               	retlw	248
   532     016B  3402               	retlw	2
   533     016C  34FB               	retlw	251
   534     016D  3402               	retlw	2
   535     016E  34FF               	retlw	255
   536     016F  3402               	retlw	2
   537     0170  3403               	retlw	3
   538     0171  3403               	retlw	3
   539     0172  3407               	retlw	7
   540     0173  3403               	retlw	3
   541     0174  340B               	retlw	11
   542     0175  3403               	retlw	3
   543     0176  340F               	retlw	15
   544     0177  3403               	retlw	3
   545     0178  3413               	retlw	19
   546     0179  3403               	retlw	3
   547     017A  3417               	retlw	23
   548     017B  3403               	retlw	3
   549     017C  341B               	retlw	27
   550     017D  3403               	retlw	3
   551     017E  341F               	retlw	31
   552     017F  3403               	retlw	3
   553     0180  3423               	retlw	35
   554     0181  3403               	retlw	3
   555     0182  3427               	retlw	39
   556     0183  3403               	retlw	3
   557     0184  342B               	retlw	43
   558     0185  3403               	retlw	3
   559     0186  342F               	retlw	47
   560     0187  3403               	retlw	3
   561     0188  3433               	retlw	51
   562     0189  3403               	retlw	3
   563     018A  3437               	retlw	55
   564     018B  3403               	retlw	3
   565     018C  343B               	retlw	59
   566     018D  3403               	retlw	3
   567     018E  343F               	retlw	63
   568     018F  3403               	retlw	3
   569     0190  3443               	retlw	67
   570     0191  3403               	retlw	3
   571     0192  3447               	retlw	71
   572     0193  3403               	retlw	3
   573     0194  344B               	retlw	75
   574     0195  3403               	retlw	3
   575     0196  344F               	retlw	79
   576     0197  3403               	retlw	3
   577     0198  3453               	retlw	83
   578     0199  3403               	retlw	3
   579     019A  3457               	retlw	87
   580     019B  3403               	retlw	3
   581     019C  345B               	retlw	91
   582     019D  3403               	retlw	3
   583     019E  345F               	retlw	95
   584     019F  3403               	retlw	3
   585     01A0  3463               	retlw	99
   586     01A1  3403               	retlw	3
   587     01A2  3467               	retlw	103
   588     01A3  3403               	retlw	3
   589     01A4  346B               	retlw	107
   590     01A5  3403               	retlw	3
   591     01A6  346F               	retlw	111
   592     01A7  3403               	retlw	3
   593     01A8  3473               	retlw	115
   594     01A9  3403               	retlw	3
   595     01AA  3477               	retlw	119
   596     01AB  3403               	retlw	3
   597     01AC  347B               	retlw	123
   598     01AD  3403               	retlw	3
   599     01AE  347F               	retlw	127
   600     01AF  3403               	retlw	3
   601     01B0  3483               	retlw	131
   602     01B1  3403               	retlw	3
   603     01B2  3487               	retlw	135
   604     01B3  3403               	retlw	3
   605     01B4  348B               	retlw	139
   606     01B5  3403               	retlw	3
   607     01B6  348F               	retlw	143
   608     01B7  3403               	retlw	3
   609     01B8  3493               	retlw	147
   610     01B9  3403               	retlw	3
   611     01BA  3497               	retlw	151
   612     01BB  3403               	retlw	3
   613     01BC  349B               	retlw	155
   614     01BD  3403               	retlw	3
   615     01BE  349F               	retlw	159
   616     01BF  3403               	retlw	3
   617     01C0  34A3               	retlw	163
   618     01C1  3403               	retlw	3
   619     01C2  34A7               	retlw	167
   620     01C3  3403               	retlw	3
   621     01C4  34AB               	retlw	171
   622     01C5  3403               	retlw	3
   623     01C6  34AF               	retlw	175
   624     01C7  3403               	retlw	3
   625     01C8  34B3               	retlw	179
   626     01C9  3403               	retlw	3
   627     01CA  34B7               	retlw	183
   628     01CB  3403               	retlw	3
   629     01CC  34BB               	retlw	187
   630     01CD  3403               	retlw	3
   631     01CE  34BF               	retlw	191
   632     01CF  3403               	retlw	3
   633     01D0  34C3               	retlw	195
   634     01D1  3403               	retlw	3
   635     01D2  34C7               	retlw	199
   636     01D3  3403               	retlw	3
   637     01D4  34CB               	retlw	203
   638     01D5  3403               	retlw	3
   639     01D6  34CF               	retlw	207
   640     01D7  3403               	retlw	3
   641     01D8  34D3               	retlw	211
   642     01D9  3403               	retlw	3
   643     01DA  34D7               	retlw	215
   644     01DB  3403               	retlw	3
   645     01DC  34DB               	retlw	219
   646     01DD  3403               	retlw	3
   647     01DE  34DF               	retlw	223
   648     01DF  3403               	retlw	3
   649     01E0  34E3               	retlw	227
   650     01E1  3403               	retlw	3
   651     01E2  34E7               	retlw	231
   652     01E3  3403               	retlw	3
   653     01E4  34EB               	retlw	235
   654     01E5  3403               	retlw	3
   655     01E6  34EF               	retlw	239
   656     01E7  3403               	retlw	3
   657     01E8  34F3               	retlw	243
   658     01E9  3403               	retlw	3
   659     01EA  34F7               	retlw	247
   660     01EB  3403               	retlw	3
   661     01EC  34FB               	retlw	251
   662     01ED  3403               	retlw	3
   663     01EE  34FF               	retlw	255
   664     01EF  3403               	retlw	3
   665     01F0                     __end_of_tri_table_one_quadrant:
   666                           
   667                           	psect	stringtext2
   668     01F0                     __pstringtext2:
   669     01F0                     _sine_table_one_quadrant:
   670     01F0  3400               	retlw	0
   671     01F1  3402               	retlw	2
   672     01F2  3406               	retlw	6
   673     01F3  3402               	retlw	2
   674     01F4  340C               	retlw	12
   675     01F5  3402               	retlw	2
   676     01F6  3412               	retlw	18
   677     01F7  3402               	retlw	2
   678     01F8  3419               	retlw	25
   679     01F9  3402               	retlw	2
   680     01FA  341F               	retlw	31
   681     01FB  3402               	retlw	2
   682     01FC  3425               	retlw	37
   683     01FD  3402               	retlw	2
   684     01FE  342B               	retlw	43
   685     01FF  3402               	retlw	2
   686     0200  3432               	retlw	50
   687     0201  3402               	retlw	2
   688     0202  3438               	retlw	56
   689     0203  3402               	retlw	2
   690     0204  343E               	retlw	62
   691     0205  3402               	retlw	2
   692     0206  3444               	retlw	68
   693     0207  3402               	retlw	2
   694     0208  344B               	retlw	75
   695     0209  3402               	retlw	2
   696     020A  3451               	retlw	81
   697     020B  3402               	retlw	2
   698     020C  3457               	retlw	87
   699     020D  3402               	retlw	2
   700     020E  345D               	retlw	93
   701     020F  3402               	retlw	2
   702     0210  3463               	retlw	99
   703     0211  3402               	retlw	2
   704     0212  3469               	retlw	105
   705     0213  3402               	retlw	2
   706     0214  3470               	retlw	112
   707     0215  3402               	retlw	2
   708     0216  3476               	retlw	118
   709     0217  3402               	retlw	2
   710     0218  347C               	retlw	124
   711     0219  3402               	retlw	2
   712     021A  3482               	retlw	130
   713     021B  3402               	retlw	2
   714     021C  3488               	retlw	136
   715     021D  3402               	retlw	2
   716     021E  348E               	retlw	142
   717     021F  3402               	retlw	2
   718     0220  3494               	retlw	148
   719     0221  3402               	retlw	2
   720     0222  349A               	retlw	154
   721     0223  3402               	retlw	2
   722     0224  34A0               	retlw	160
   723     0225  3402               	retlw	2
   724     0226  34A6               	retlw	166
   725     0227  3402               	retlw	2
   726     0228  34AC               	retlw	172
   727     0229  3402               	retlw	2
   728     022A  34B2               	retlw	178
   729     022B  3402               	retlw	2
   730     022C  34B8               	retlw	184
   731     022D  3402               	retlw	2
   732     022E  34BD               	retlw	189
   733     022F  3402               	retlw	2
   734     0230  34C3               	retlw	195
   735     0231  3402               	retlw	2
   736     0232  34C9               	retlw	201
   737     0233  3402               	retlw	2
   738     0234  34CF               	retlw	207
   739     0235  3402               	retlw	2
   740     0236  34D5               	retlw	213
   741     0237  3402               	retlw	2
   742     0238  34DA               	retlw	218
   743     0239  3402               	retlw	2
   744     023A  34E0               	retlw	224
   745     023B  3402               	retlw	2
   746     023C  34E5               	retlw	229
   747     023D  3402               	retlw	2
   748     023E  34EB               	retlw	235
   749     023F  3402               	retlw	2
   750     0240  34F1               	retlw	241
   751     0241  3402               	retlw	2
   752     0242  34F6               	retlw	246
   753     0243  3402               	retlw	2
   754     0244  34FC               	retlw	252
   755     0245  3402               	retlw	2
   756     0246  3401               	retlw	1
   757     0247  3403               	retlw	3
   758     0248  3406               	retlw	6
   759     0249  3403               	retlw	3
   760     024A  340C               	retlw	12
   761     024B  3403               	retlw	3
   762     024C  3411               	retlw	17
   763     024D  3403               	retlw	3
   764     024E  3416               	retlw	22
   765     024F  3403               	retlw	3
   766     0250  341C               	retlw	28
   767     0251  3403               	retlw	3
   768     0252  3421               	retlw	33
   769     0253  3403               	retlw	3
   770     0254  3426               	retlw	38
   771     0255  3403               	retlw	3
   772     0256  342B               	retlw	43
   773     0257  3403               	retlw	3
   774     0258  3430               	retlw	48
   775     0259  3403               	retlw	3
   776     025A  3435               	retlw	53
   777     025B  3403               	retlw	3
   778     025C  343A               	retlw	58
   779     025D  3403               	retlw	3
   780     025E  343F               	retlw	63
   781     025F  3403               	retlw	3
   782     0260  3444               	retlw	68
   783     0261  3403               	retlw	3
   784     0262  3449               	retlw	73
   785     0263  3403               	retlw	3
   786     0264  344E               	retlw	78
   787     0265  3403               	retlw	3
   788     0266  3452               	retlw	82
   789     0267  3403               	retlw	3
   790     0268  3457               	retlw	87
   791     0269  3403               	retlw	3
   792     026A  345C               	retlw	92
   793     026B  3403               	retlw	3
   794     026C  3460               	retlw	96
   795     026D  3403               	retlw	3
   796     026E  3465               	retlw	101
   797     026F  3403               	retlw	3
   798     0270  3469               	retlw	105
   799     0271  3403               	retlw	3
   800     0272  346E               	retlw	110
   801     0273  3403               	retlw	3
   802     0274  3472               	retlw	114
   803     0275  3403               	retlw	3
   804     0276  3476               	retlw	118
   805     0277  3403               	retlw	3
   806     0278  347A               	retlw	122
   807     0279  3403               	retlw	3
   808     027A  347F               	retlw	127
   809     027B  3403               	retlw	3
   810     027C  3483               	retlw	131
   811     027D  3403               	retlw	3
   812     027E  3487               	retlw	135
   813     027F  3403               	retlw	3
   814     0280  348B               	retlw	139
   815     0281  3403               	retlw	3
   816     0282  348F               	retlw	143
   817     0283  3403               	retlw	3
   818     0284  3493               	retlw	147
   819     0285  3403               	retlw	3
   820     0286  3497               	retlw	151
   821     0287  3403               	retlw	3
   822     0288  349A               	retlw	154
   823     0289  3403               	retlw	3
   824     028A  349E               	retlw	158
   825     028B  3403               	retlw	3
   826     028C  34A2               	retlw	162
   827     028D  3403               	retlw	3
   828     028E  34A5               	retlw	165
   829     028F  3403               	retlw	3
   830     0290  34A9               	retlw	169
   831     0291  3403               	retlw	3
   832     0292  34AC               	retlw	172
   833     0293  3403               	retlw	3
   834     0294  34B0               	retlw	176
   835     0295  3403               	retlw	3
   836     0296  34B3               	retlw	179
   837     0297  3403               	retlw	3
   838     0298  34B6               	retlw	182
   839     0299  3403               	retlw	3
   840     029A  34B9               	retlw	185
   841     029B  3403               	retlw	3
   842     029C  34BD               	retlw	189
   843     029D  3403               	retlw	3
   844     029E  34C0               	retlw	192
   845     029F  3403               	retlw	3
   846     02A0  34C3               	retlw	195
   847     02A1  3403               	retlw	3
   848     02A2  34C6               	retlw	198
   849     02A3  3403               	retlw	3
   850     02A4  34C8               	retlw	200
   851     02A5  3403               	retlw	3
   852     02A6  34CB               	retlw	203
   853     02A7  3403               	retlw	3
   854     02A8  34CE               	retlw	206
   855     02A9  3403               	retlw	3
   856     02AA  34D1               	retlw	209
   857     02AB  3403               	retlw	3
   858     02AC  34D3               	retlw	211
   859     02AD  3403               	retlw	3
   860     02AE  34D6               	retlw	214
   861     02AF  3403               	retlw	3
   862     02B0  34D8               	retlw	216
   863     02B1  3403               	retlw	3
   864     02B2  34DA               	retlw	218
   865     02B3  3403               	retlw	3
   866     02B4  34DD               	retlw	221
   867     02B5  3403               	retlw	3
   868     02B6  34DF               	retlw	223
   869     02B7  3403               	retlw	3
   870     02B8  34E1               	retlw	225
   871     02B9  3403               	retlw	3
   872     02BA  34E3               	retlw	227
   873     02BB  3403               	retlw	3
   874     02BC  34E5               	retlw	229
   875     02BD  3403               	retlw	3
   876     02BE  34E7               	retlw	231
   877     02BF  3403               	retlw	3
   878     02C0  34E9               	retlw	233
   879     02C1  3403               	retlw	3
   880     02C2  34EB               	retlw	235
   881     02C3  3403               	retlw	3
   882     02C4  34EC               	retlw	236
   883     02C5  3403               	retlw	3
   884     02C6  34EE               	retlw	238
   885     02C7  3403               	retlw	3
   886     02C8  34F0               	retlw	240
   887     02C9  3403               	retlw	3
   888     02CA  34F1               	retlw	241
   889     02CB  3403               	retlw	3
   890     02CC  34F3               	retlw	243
   891     02CD  3403               	retlw	3
   892     02CE  34F4               	retlw	244
   893     02CF  3403               	retlw	3
   894     02D0  34F5               	retlw	245
   895     02D1  3403               	retlw	3
   896     02D2  34F6               	retlw	246
   897     02D3  3403               	retlw	3
   898     02D4  34F7               	retlw	247
   899     02D5  3403               	retlw	3
   900     02D6  34F9               	retlw	249
   901     02D7  3403               	retlw	3
   902     02D8  34F9               	retlw	249
   903     02D9  3403               	retlw	3
   904     02DA  34FA               	retlw	250
   905     02DB  3403               	retlw	3
   906     02DC  34FB               	retlw	251
   907     02DD  3403               	retlw	3
   908     02DE  34FC               	retlw	252
   909     02DF  3403               	retlw	3
   910     02E0  34FD               	retlw	253
   911     02E1  3403               	retlw	3
   912     02E2  34FD               	retlw	253
   913     02E3  3403               	retlw	3
   914     02E4  34FE               	retlw	254
   915     02E5  3403               	retlw	3
   916     02E6  34FE               	retlw	254
   917     02E7  3403               	retlw	3
   918     02E8  34FE               	retlw	254
   919     02E9  3403               	retlw	3
   920     02EA  34FF               	retlw	255
   921     02EB  3403               	retlw	3
   922     02EC  34FF               	retlw	255
   923     02ED  3403               	retlw	3
   924     02EE  34FF               	retlw	255
   925     02EF  3403               	retlw	3
   926     02F0  34FF               	retlw	255
   927     02F1  3403               	retlw	3
   928     02F2                     __end_of_sine_table_one_quadrant:
   929                           
   930                           	psect	stringtext3
   931     05E9                     __pstringtext3:
   932     05E9                     _prescaler_bits:
   933     05E9  3407               	retlw	7
   934     05EA  3406               	retlw	6
   935     05EB  3405               	retlw	5
   936     05EC  3404               	retlw	4
   937     05ED  3403               	retlw	3
   938     05EE  3402               	retlw	2
   939     05EF  3401               	retlw	1
   940     05F0  3400               	retlw	0
   941     05F1                     __end_of_prescaler_bits:
   942                           
   943                           	psect	stringtext4
   944     0615                     __pstringtext4:
   945     0615                     _CW:
   946     0615  3401               	retlw	1
   947     0616                     __end_of_CW:
   948                           
   949                           	psect	stringtext5
   950     0616                     __pstringtext5:
   951     0616                     _CCW:
   952     0616  3400               	retlw	0
   953     0617                     __end_of_CCW:
   954                           
   955                           	psect	stringtext6
   956     0617                     __pstringtext6:
   957     0617                     _NO:
   958     0617  3400               	retlw	0
   959     0618                     __end_of_NO:
   960                           
   961                           	psect	stringtext7
   962     0618                     __pstringtext7:
   963     0618                     _YES:
   964     0618  3401               	retlw	1
   965     0619                     __end_of_YES:
   966                           
   967                           	psect	stringtext8
   968     0619                     __pstringtext8:
   969     0619                     _DONT_CARE:
   970     0619  3404               	retlw	4
   971     061A                     __end_of_DONT_CARE:
   972                           
   973                           	psect	stringtext9
   974     061A                     __pstringtext9:
   975     061A                     _DIVIDE_BY_FOUR:
   976     061A  3403               	retlw	3
   977     061B                     __end_of_DIVIDE_BY_FOUR:
   978                           
   979                           	psect	stringtext10
   980     061B                     __pstringtext10:
   981     061B                     _MULTIPLY_BY_TWO:
   982     061B  3402               	retlw	2
   983     061C                     __end_of_MULTIPLY_BY_TWO:
   984                           
   985                           	psect	stringtext11
   986     061C                     __pstringtext11:
   987     061C                     _DIVIDE_BY_TWO:
   988     061C  3401               	retlw	1
   989     061D                     __end_of_DIVIDE_BY_TWO:
   990                           
   991                           	psect	stringtext12
   992     061D                     __pstringtext12:
   993     061D                     _DO_NOTHING:
   994     061D  3400               	retlw	0
   995     061E                     __end_of_DO_NOTHING:
   996                           
   997                           	psect	stringtext13
   998     061E                     __pstringtext13:
   999     061E                     _NEGATIVE:
  1000     061E  3400               	retlw	0
  1001     061F                     __end_of_NEGATIVE:
  1002                           
  1003                           	psect	stringtext14
  1004     061F                     __pstringtext14:
  1005     061F                     _POSITIVE:
  1006     061F  3401               	retlw	1
  1007     0620                     __end_of_POSITIVE:
  1008                           
  1009                           	psect	stringtext15
  1010     0620                     __pstringtext15:
  1011     0620                     _symmetry_adc_config_value:
  1012     0620  3407               	retlw	7
  1013     0621                     __end_of_symmetry_adc_config_value:
  1014                           
  1015                           	psect	stringtext16
  1016     0621                     __pstringtext16:
  1017     0621                     _depth_adc_config_value:
  1018     0621  3406               	retlw	6
  1019     0622                     __end_of_depth_adc_config_value:
  1020                           
  1021                           	psect	stringtext17
  1022     0622                     __pstringtext17:
  1023     0622                     _speed_adc_config_value:
  1024     0622  3405               	retlw	5
  1025     0623                     __end_of_speed_adc_config_value:
  1026                           
  1027                           	psect	stringtext18
  1028     0623                     __pstringtext18:
  1029     0623                     _waveshape_adc_config_value:
  1030     0623  3404               	retlw	4
  1031     0624                     __end_of_waveshape_adc_config_value:
  1032     0015                     _TMR0	set	21
  1033     001C                     _T2CON	set	28
  1034     001B                     _PR2	set	27
  1035     005F                     _GIE	set	95
  1036     005A                     _TMR0IF	set	90
  1037     005D                     _TMR0IE	set	93
  1038     00E2                     _TMR2ON	set	226
  1039     0089                     _TMR2IF	set	137
  1040     0095                     _OPTION_REG	set	149
  1041     009B                     _ADRESL	set	155
  1042     009C                     _ADRESH	set	156
  1043     009D                     _ADCON0	set	157
  1044     009E                     _ADCON1	set	158
  1045     008E                     _TRISC	set	142
  1046     0098                     _OSCTUNE	set	152
  1047     0099                     _OSCCON	set	153
  1048     0462                     _TRISA2	set	1122
  1049     04E9                     _GO_nDONE	set	1257
  1050     04E8                     _ADON	set	1256
  1051     0875                     _LATC5	set	2165
  1052     088F                     _C1ON	set	2191
  1053     08D7                     _SRLEN	set	2263
  1054     018E                     _ANSELC	set	398
  1055     020E                     _WPUC	set	526
  1056     029E                     _CCPTMRS0	set	670
  1057     0313                     _CCP3CON	set	787
  1058     0311                     _CCPR3L	set	785
  1059                           
  1060                           	psect	cinit
  1061     00D5                     start_initialization:	
  1062                           ; #config settings
  1063                           
  1064     00D5                     __initialization:
  1065                           
  1066                           ; Initialize objects allocated to BANK0
  1067     00D5  3186  2611  3180   	fcall	__pidataBANK0	;fetch initializer
  1068     00D8  00D6               	movwf	__pdataBANK0& (0+127)
  1069     00D9  3186  2612  3180   	fcall	__pidataBANK0+1	;fetch initializer
  1070     00DC  00D7               	movwf	(__pdataBANK0+1)& (0+127)
  1071                           
  1072                           ; Clear objects allocated to COMMON
  1073     00DD  01F0               	clrf	__pbssCOMMON& (0+127)
  1074     00DE  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  1075     00DF  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  1076     00E0  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  1077     00E1  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  1078     00E2  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  1079                           
  1080                           ; Clear objects allocated to BANK0
  1081     00E3  3020               	movlw	low __pbssBANK0
  1082     00E4  0084               	movwf	4
  1083     00E5  3000               	movlw	high __pbssBANK0
  1084     00E6  0085               	movwf	5
  1085     00E7  3026               	movlw	38
  1086     00E8  3186  2601         	fcall	clear_ram0
  1087     00EA                     end_of_initialization:	
  1088                           ;End of C runtime variable initialization code
  1089                           
  1090     00EA                     __end_of__initialization:
  1091     00EA  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1092     00EB  0020               	movlb	0
  1093     00EC  3185  2D38         	ljmp	_main	;jump to C main() function
  1094                           
  1095                           	psect	bssCOMMON
  1096     0070                     __pbssCOMMON:
  1097     0070                     _dTMR0_ideal:
  1098     0070                     	ds	2
  1099     0072                     _raw_TMR0:
  1100     0072                     	ds	1
  1101     0073                     _prescaler_adjust:
  1102     0073                     	ds	1
  1103     0074                     _current_one_quadrant_index:
  1104     0074                     	ds	1
  1105     0075                     _current_waveshape:
  1106     0075                     	ds	1
  1107                           
  1108                           	psect	bssBANK0
  1109     0020                     __pbssBANK0:
  1110     0020                     _current_speed_log_32:
  1111     0020                     	ds	4
  1112     0024                     _current_speed_linear_32:
  1113     0024                     	ds	4
  1114     0028                     _speed_control_32:
  1115     0028                     	ds	4
  1116     002C                     _current_symmetry:
  1117     002C                     	ds	2
  1118     002E                     _current_depth:
  1119     002E                     	ds	2
  1120     0030                     _current_speed_log:
  1121     0030                     	ds	2
  1122     0032                     _current_speed_linear:
  1123     0032                     	ds	2
  1124     0034                     _how_many_128:
  1125     0034                     	ds	2
  1126     0036                     _speed_control_subtracted:
  1127     0036                     	ds	2
  1128     0038                     _speed_control:
  1129     0038                     	ds	2
  1130     003A                     _symmetry_status:
  1131     003A                     	ds	1
  1132     003B                     _clear_TMR0_please:
  1133     003B                     	ds	1
  1134     003C                     _base_prescaler_bits_index:
  1135     003C                     	ds	1
  1136     003D                     _TMR0_offset_sign:
  1137     003D                     	ds	1
  1138     003E                     _TMR0_offset:
  1139     003E                     	ds	1
  1140     003F                     _current_quadrant:
  1141     003F                     	ds	1
  1142     0040                     _current_halfcycle:
  1143     0040                     	ds	1
  1144     0041                     _duty_high_byte:
  1145     0041                     	ds	1
  1146     0042                     _duty_low_byte:
  1147     0042                     	ds	1
  1148     0043                     _duty:
  1149     0043                     	ds	2
  1150     0045                     _final_TMR0:
  1151     0045                     	ds	1
  1152                           
  1153                           	psect	dataBANK0
  1154     0056                     __pdataBANK0:
  1155     0056                     _top_two_bytes_ptr:
  1156     0056                     	ds	2
  1157                           
  1158                           	psect	clrtext
  1159     0601                     clear_ram0:	
  1160                           ;	Called with FSR0 containing the base address, and
  1161                           ;	WREG with the size to clear
  1162                           
  1163     0601  0064               	clrwdt	;clear the watchdog before getting into this loop
  1164     0602                     clrloop0:
  1165     0602  0180               	clrf	0	;clear RAM location pointed to by FSR
  1166     0603  3101               	addfsr 0,1
  1167     0604  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1168     0605  2E02               	goto	clrloop0	;have we reached the end yet?
  1169     0606  3400               	retlw	0	;all done for this memory range, return
  1170                           
  1171                           	psect	cstackCOMMON
  1172     0076                     __pcstackCOMMON:
  1173     0076                     ?_CONFIG_INT_OSC:
  1174     0076                     ?_CONFIG_PORTS:	
  1175                           ; 1 bytes @ 0x0
  1176                           
  1177     0076                     ?_CONFIG_ADC_PINS:	
  1178                           ; 1 bytes @ 0x0
  1179                           
  1180     0076                     ?_DETERMINE_WAVESHAPE:	
  1181                           ; 1 bytes @ 0x0
  1182                           
  1183     0076                     ?_SET_DUTY_CCP3:	
  1184                           ; 1 bytes @ 0x0
  1185                           
  1186     0076                     ??_SET_DUTY_CCP3:	
  1187                           ; 1 bytes @ 0x0
  1188                           
  1189     0076                     ?_CONFIG_PWM_CCP3:	
  1190                           ; 1 bytes @ 0x0
  1191                           
  1192     0076                     ?_TURN_ON_CCP3_PWM:	
  1193                           ; 1 bytes @ 0x0
  1194                           
  1195     0076                     ?_CONFIG_TMR0_INTERRUPT:	
  1196                           ; 1 bytes @ 0x0
  1197                           
  1198     0076                     ?_CONFIG_SYSTEM:	
  1199                           ; 1 bytes @ 0x0
  1200                           
  1201     0076                     ?_TMR0_WRITE:	
  1202                           ; 1 bytes @ 0x0
  1203                           
  1204     0076                     ?_GET_CURRENT_POT_VALUES:	
  1205                           ; 1 bytes @ 0x0
  1206                           
  1207     0076                     ?_PROCESS_RAW_SPEED_AND_PRESCALER:	
  1208                           ; 1 bytes @ 0x0
  1209                           
  1210     0076                     ?_PROCESS_FINAL_SPEED_AND_PRESCALER:	
  1211                           ; 1 bytes @ 0x0
  1212                           
  1213     0076                     ?_SHORTEN_PERIOD:	
  1214                           ; 1 bytes @ 0x0
  1215                           
  1216     0076                     ?_LENGTHEN_PERIOD:	
  1217                           ; 1 bytes @ 0x0
  1218                           
  1219     0076                     ?_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST:	
  1220                           ; 1 bytes @ 0x0
  1221                           
  1222     0076                     ?_INTERRUPT_InterruptManager:	
  1223                           ; 1 bytes @ 0x0
  1224                           
  1225     0076                     ?_main:	
  1226                           ; 1 bytes @ 0x0
  1227                           
  1228                           
  1229                           ; 1 bytes @ 0x0
  1230     0076                     	ds	2
  1231     0078                     SET_DUTY_CCP3@temp:
  1232                           
  1233                           ; 1 bytes @ 0x2
  1234     0078                     	ds	1
  1235     0079                     SET_DUTY_CCP3@duty_ptr:
  1236                           
  1237                           ; 1 bytes @ 0x3
  1238     0079                     	ds	1
  1239     007A                     ??_INTERRUPT_InterruptManager:
  1240                           
  1241                           ; 1 bytes @ 0x4
  1242     007A                     	ds	2
  1243                           
  1244                           	psect	cstackBANK0
  1245     0046                     __pcstackBANK0:
  1246     0046                     ??_CONFIG_INT_OSC:
  1247     0046                     ??_CONFIG_PORTS:	
  1248                           ; 1 bytes @ 0x0
  1249                           
  1250     0046                     ??_CONFIG_ADC_PINS:	
  1251                           ; 1 bytes @ 0x0
  1252                           
  1253     0046                     ??_CONFIG_PWM_CCP3:	
  1254                           ; 1 bytes @ 0x0
  1255                           
  1256     0046                     ??_TURN_ON_CCP3_PWM:	
  1257                           ; 1 bytes @ 0x0
  1258                           
  1259     0046                     ??_CONFIG_TMR0_INTERRUPT:	
  1260                           ; 1 bytes @ 0x0
  1261                           
  1262     0046                     ??_CONFIG_SYSTEM:	
  1263                           ; 1 bytes @ 0x0
  1264                           
  1265     0046                     ??_TMR0_WRITE:	
  1266                           ; 1 bytes @ 0x0
  1267                           
  1268     0046                     ??_PROCESS_FINAL_SPEED_AND_PRESCALER:	
  1269                           ; 1 bytes @ 0x0
  1270                           
  1271     0046                     ??_SHORTEN_PERIOD:	
  1272                           ; 1 bytes @ 0x0
  1273                           
  1274     0046                     ?_DO_ADC:	
  1275                           ; 1 bytes @ 0x0
  1276                           
  1277     0046                     ?___wmul:	
  1278                           ; 2 bytes @ 0x0
  1279                           
  1280     0046                     ?___lmul:	
  1281                           ; 2 bytes @ 0x0
  1282                           
  1283     0046                     TMR0_WRITE@timer_value_ptr:	
  1284                           ; 4 bytes @ 0x0
  1285                           
  1286     0046                     DO_ADC@modifier:	
  1287                           ; 1 bytes @ 0x0
  1288                           
  1289     0046                     ___wmul@multiplier:	
  1290                           ; 2 bytes @ 0x0
  1291                           
  1292     0046                     ___lmul@multiplier:	
  1293                           ; 2 bytes @ 0x0
  1294                           
  1295                           
  1296                           ; 4 bytes @ 0x0
  1297     0046                     	ds	2
  1298     0048                     ??_DO_ADC:
  1299     0048                     ___wmul@multiplicand:	
  1300                           ; 1 bytes @ 0x2
  1301                           
  1302                           
  1303                           ; 2 bytes @ 0x2
  1304     0048                     	ds	1
  1305     0049                     DO_ADC@adc_result:
  1306     0049                     SHORTEN_PERIOD@TMR0_raw_extra:	
  1307                           ; 2 bytes @ 0x3
  1308                           
  1309                           
  1310                           ; 2 bytes @ 0x3
  1311     0049                     	ds	1
  1312     004A                     ??___wmul:
  1313     004A                     ___wmul@product:	
  1314                           ; 1 bytes @ 0x4
  1315                           
  1316     004A                     ___lmul@multiplicand:	
  1317                           ; 2 bytes @ 0x4
  1318                           
  1319                           
  1320                           ; 4 bytes @ 0x4
  1321     004A                     	ds	1
  1322     004B                     DO_ADC@temp:
  1323                           
  1324                           ; 1 bytes @ 0x5
  1325     004B                     	ds	1
  1326     004C                     ??_DETERMINE_WAVESHAPE:
  1327     004C                     ??_LENGTHEN_PERIOD:	
  1328                           ; 1 bytes @ 0x6
  1329                           
  1330     004C                     DETERMINE_WAVESHAPE@ADC:	
  1331                           ; 1 bytes @ 0x6
  1332                           
  1333                           
  1334                           ; 2 bytes @ 0x6
  1335     004C                     	ds	2
  1336     004E                     ??_GET_CURRENT_POT_VALUES:
  1337     004E                     ??___lmul:	
  1338                           ; 1 bytes @ 0x8
  1339                           
  1340     004E                     ___lmul@product:	
  1341                           ; 1 bytes @ 0x8
  1342                           
  1343                           
  1344                           ; 4 bytes @ 0x8
  1345     004E                     	ds	1
  1346     004F                     ??_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST:
  1347                           
  1348                           ; 1 bytes @ 0x9
  1349     004F                     	ds	1
  1350     0050                     PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST@symmetry_status:
  1351                           
  1352                           ; 1 bytes @ 0xA
  1353     0050                     	ds	2
  1354     0052                     ??_PROCESS_RAW_SPEED_AND_PRESCALER:
  1355                           
  1356                           ; 1 bytes @ 0xC
  1357     0052                     	ds	4
  1358     0056                     ??_main:
  1359                           
  1360                           	psect	maintext
  1361     0538                     __pmaintext:	
  1362                           ; 1 bytes @ 0x10
  1363 ;;
  1364 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1365 ;;
  1366 ;; *************** function _main *****************
  1367 ;; Defined at:
  1368 ;;		line 471 in file "main.c"
  1369 ;; Parameters:    Size  Location     Type
  1370 ;;		None
  1371 ;; Auto vars:     Size  Location     Type
  1372 ;;		None
  1373 ;; Return value:  Size  Location     Type
  1374 ;;                  1    wreg      void 
  1375 ;; Registers used:
  1376 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1377 ;; Tracked objects:
  1378 ;;		On entry : B1F/0
  1379 ;;		On exit  : 1E/0
  1380 ;;		Unchanged: 0/0
  1381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1382 ;;      Params:         0       0       0       0
  1383 ;;      Locals:         0       0       0       0
  1384 ;;      Temps:          0       0       0       0
  1385 ;;      Totals:         0       0       0       0
  1386 ;;Total ram usage:        0 bytes
  1387 ;; Hardware stack levels required when called: 5
  1388 ;; This function calls:
  1389 ;;		_CONFIG_SYSTEM
  1390 ;;		_CONFIG_TMR0_INTERRUPT
  1391 ;;		_GET_CURRENT_POT_VALUES
  1392 ;;		_PROCESS_FINAL_SPEED_AND_PRESCALER
  1393 ;;		_PROCESS_RAW_SPEED_AND_PRESCALER
  1394 ;;		_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST
  1395 ;;		_TMR0_WRITE
  1396 ;;		_TURN_ON_CCP3_PWM
  1397 ;; This function is called by:
  1398 ;;		Startup code after reset
  1399 ;; This function uses a non-reentrant model
  1400 ;;
  1401                           
  1402     0538                     _main:	
  1403                           ;psect for function _main
  1404                           
  1405                           
  1406                           ;main.c: 473:     CONFIG_SYSTEM();
  1407                           
  1408                           ;incstack = 0
  1409                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1410     0538  3185  25D4  3185   	fcall	_CONFIG_SYSTEM
  1411                           
  1412                           ;main.c: 474:     TURN_ON_CCP3_PWM();
  1413     053B  3185  25F1  3185   	fcall	_TURN_ON_CCP3_PWM
  1414                           
  1415                           ;main.c: 475:     CONFIG_TMR0_INTERRUPT();
  1416     053E  3186  2613  3185   	fcall	_CONFIG_TMR0_INTERRUPT
  1417                           
  1418                           ;main.c: 476:     GET_CURRENT_POT_VALUES();
  1419     0541  3184  2467  3185   	fcall	_GET_CURRENT_POT_VALUES
  1420                           
  1421                           ;main.c: 477:     PROCESS_RAW_SPEED_AND_PRESCALER();
  1422     0544  3183  2372  3185   	fcall	_PROCESS_RAW_SPEED_AND_PRESCALER
  1423                           
  1424                           ;main.c: 478:     PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST();
  1425     0547  3184  2429  3185   	fcall	_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST
  1426                           
  1427                           ;main.c: 479:     PROCESS_FINAL_SPEED_AND_PRESCALER();
  1428     054A  3183  23DC  3185   	fcall	_PROCESS_FINAL_SPEED_AND_PRESCALER
  1429                           
  1430                           ;main.c: 480:     TMR0_WRITE(&final_TMR0);
  1431     054D  3045               	movlw	(low (_final_TMR0| 0))& (0+255)
  1432     054E  3185  25F9  3185   	fcall	_TMR0_WRITE
  1433                           
  1434                           ;main.c: 481:     GIE = 1;
  1435     0551  178B               	bsf	11,7	;volatile
  1436     0552                     l1897:
  1437                           
  1438                           ;main.c: 485:         GET_CURRENT_POT_VALUES();
  1439     0552  3184  2467  3185   	fcall	_GET_CURRENT_POT_VALUES
  1440                           
  1441                           ;main.c: 486:         PROCESS_RAW_SPEED_AND_PRESCALER();
  1442     0555  3183  2372  3185   	fcall	_PROCESS_RAW_SPEED_AND_PRESCALER
  1443                           
  1444                           ;main.c: 487:         PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST();
  1445     0558  3184  2429  3185   	fcall	_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST
  1446                           
  1447                           ;main.c: 488:         PROCESS_FINAL_SPEED_AND_PRESCALER();
  1448     055B  3183  23DC  3185   	fcall	_PROCESS_FINAL_SPEED_AND_PRESCALER
  1449     055E  2D52               	goto	l1897
  1450     055F                     __end_of_main:
  1451                           
  1452                           	psect	text1
  1453     05F1                     __ptext1:	
  1454 ;; *************** function _TURN_ON_CCP3_PWM *****************
  1455 ;; Defined at:
  1456 ;;		line 220 in file "main.c"
  1457 ;; Parameters:    Size  Location     Type
  1458 ;;		None
  1459 ;; Auto vars:     Size  Location     Type
  1460 ;;		None
  1461 ;; Return value:  Size  Location     Type
  1462 ;;                  1    wreg      unsigned char 
  1463 ;; Registers used:
  1464 ;;		None
  1465 ;; Tracked objects:
  1466 ;;		On entry : B1F/0
  1467 ;;		On exit  : B1F/1
  1468 ;;		Unchanged: B00/0
  1469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1470 ;;      Params:         0       0       0       0
  1471 ;;      Locals:         0       0       0       0
  1472 ;;      Temps:          0       0       0       0
  1473 ;;      Totals:         0       0       0       0
  1474 ;;Total ram usage:        0 bytes
  1475 ;; Hardware stack levels used: 1
  1476 ;; Hardware stack levels required when called: 2
  1477 ;; This function calls:
  1478 ;;		Nothing
  1479 ;; This function is called by:
  1480 ;;		_main
  1481 ;; This function uses a non-reentrant model
  1482 ;;
  1483                           
  1484     05F1                     _TURN_ON_CCP3_PWM:	
  1485                           ;psect for function _TURN_ON_CCP3_PWM
  1486                           
  1487                           
  1488                           ;main.c: 222:     TMR2IF = 0;
  1489                           
  1490                           ;incstack = 0
  1491                           ; Regs used in _TURN_ON_CCP3_PWM: []
  1492     05F1  1091               	bcf	17,1	;volatile
  1493                           
  1494                           ;main.c: 223:     TMR2ON = 1;
  1495     05F2  151C               	bsf	28,2	;volatile
  1496     05F3                     l177:	
  1497                           ;main.c: 224:     while(TMR2IF == 0){}
  1498                           
  1499     05F3  1C91               	btfss	17,1	;volatile
  1500     05F4  2DF3               	goto	l177
  1501                           
  1502                           ;main.c: 225:     TMR2IF = 0;
  1503     05F5  1091               	bcf	17,1	;volatile
  1504                           
  1505                           ;main.c: 226:     TRISA2 = 0;
  1506     05F6  0021               	movlb	1	; select bank1
  1507     05F7  110C               	bcf	12,2	;volatile
  1508                           
  1509                           ;main.c: 227:     return 1;;	Return value of _TURN_ON_CCP3_PWM is never used
  1510     05F8  0008               	return
  1511     05F9                     __end_of_TURN_ON_CCP3_PWM:
  1512                           
  1513                           	psect	text2
  1514     05F9                     __ptext2:	
  1515 ;; *************** function _TMR0_WRITE *****************
  1516 ;; Defined at:
  1517 ;;		line 243 in file "main.c"
  1518 ;; Parameters:    Size  Location     Type
  1519 ;;  timer_value_    1    wreg     PTR volatile unsigned ch
  1520 ;;		 -> final_TMR0(1), 
  1521 ;; Auto vars:     Size  Location     Type
  1522 ;;  timer_value_    1    0[BANK0 ] PTR volatile unsigned ch
  1523 ;;		 -> final_TMR0(1), 
  1524 ;; Return value:  Size  Location     Type
  1525 ;;                  1    wreg      unsigned char 
  1526 ;; Registers used:
  1527 ;;		wreg, fsr1l, fsr1h
  1528 ;; Tracked objects:
  1529 ;;		On entry : 1E/0
  1530 ;;		On exit  : 1F/0
  1531 ;;		Unchanged: 0/0
  1532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1533 ;;      Params:         0       0       0       0
  1534 ;;      Locals:         0       1       0       0
  1535 ;;      Temps:          0       0       0       0
  1536 ;;      Totals:         0       1       0       0
  1537 ;;Total ram usage:        1 bytes
  1538 ;; Hardware stack levels used: 1
  1539 ;; Hardware stack levels required when called: 2
  1540 ;; This function calls:
  1541 ;;		Nothing
  1542 ;; This function is called by:
  1543 ;;		_main
  1544 ;; This function uses a non-reentrant model
  1545 ;;
  1546                           
  1547     05F9                     _TMR0_WRITE:	
  1548                           ;psect for function _TMR0_WRITE
  1549                           
  1550                           
  1551                           ;incstack = 0
  1552                           ; Regs used in _TMR0_WRITE: [wregfsr1]
  1553                           ;TMR0_WRITE@timer_value_ptr stored from wreg
  1554     05F9  0020               	movlb	0	; select bank0
  1555     05FA  00C6               	movwf	TMR0_WRITE@timer_value_ptr
  1556                           
  1557                           ;main.c: 244:     TMR0 = (uint8_t) *timer_value_ptr;
  1558     05FB  0846               	movf	TMR0_WRITE@timer_value_ptr,w
  1559     05FC  0086               	movwf	6
  1560     05FD  0187               	clrf	7
  1561     05FE  0801               	movf	1,w
  1562     05FF  0095               	movwf	21	;volatile
  1563     0600  0008               	return
  1564     0601                     __end_of_TMR0_WRITE:
  1565                           
  1566                           	psect	text3
  1567     0429                     __ptext3:	
  1568 ;; *************** function _PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST *****************
  1569 ;; Defined at:
  1570 ;;		line 352 in file "main.c"
  1571 ;; Parameters:    Size  Location     Type
  1572 ;;		None
  1573 ;; Auto vars:     Size  Location     Type
  1574 ;;  symmetry_sta    1   10[BANK0 ] unsigned char 
  1575 ;; Return value:  Size  Location     Type
  1576 ;;                  1    wreg      unsigned char 
  1577 ;; Registers used:
  1578 ;;		wreg, status,2, status,0, pclath, cstack
  1579 ;; Tracked objects:
  1580 ;;		On entry : 1F/0
  1581 ;;		On exit  : 1F/0
  1582 ;;		Unchanged: 0/0
  1583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1584 ;;      Params:         0       0       0       0
  1585 ;;      Locals:         0       1       0       0
  1586 ;;      Temps:          0       1       0       0
  1587 ;;      Totals:         0       2       0       0
  1588 ;;Total ram usage:        2 bytes
  1589 ;; Hardware stack levels used: 1
  1590 ;; Hardware stack levels required when called: 4
  1591 ;; This function calls:
  1592 ;;		_LENGTHEN_PERIOD
  1593 ;;		_SHORTEN_PERIOD
  1594 ;; This function is called by:
  1595 ;;		_main
  1596 ;; This function uses a non-reentrant model
  1597 ;;
  1598                           
  1599     0429                     _PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST:	
  1600                           ;psect for function _PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST
  1601                           
  1602                           
  1603                           ;main.c: 353:     if(current_symmetry == 128){
  1604                           
  1605                           ;incstack = 0
  1606                           ; Regs used in _PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST: [wreg+status,2+status,0+pclath
      +                          +cstack]
  1607     0429  3080               	movlw	128
  1608     042A  062C               	xorwf	_current_symmetry,w	;volatile
  1609     042B  042D               	iorwf	_current_symmetry+1,w	;volatile
  1610     042C  1D03               	btfss	3,2
  1611     042D  2C34               	goto	l1845
  1612                           
  1613                           ;main.c: 354:         TMR0_offset = 0;
  1614     042E  01BE               	clrf	_TMR0_offset	;volatile
  1615                           
  1616                           ;main.c: 355:         TMR0_offset_sign = POSITIVE;
  1617     042F  3001               	movlw	1
  1618     0430  00BD               	movwf	_TMR0_offset_sign	;volatile
  1619                           
  1620                           ;main.c: 356:         prescaler_adjust = DO_NOTHING;
  1621     0431  01F3               	clrf	_prescaler_adjust	;volatile
  1622                           
  1623                           ;main.c: 357:         clear_TMR0_please = NO;
  1624     0432  01BB               	clrf	_clear_TMR0_please	;volatile
  1625                           
  1626                           ;main.c: 358:         return 1;;	Return value of _PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJU
      +                          ST is never used
  1627     0433  0008               	return
  1628     0434                     l1845:
  1629                           
  1630                           ;main.c: 360:     uint8_t symmetry_status = CCW;
  1631     0434  01D0               	clrf	PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST@symmetry_status
  1632                           
  1633                           ;main.c: 361:     if(current_symmetry > 128){
  1634     0435  3000               	movlw	0
  1635     0436  022D               	subwf	_current_symmetry+1,w	;volatile
  1636     0437  3081               	movlw	129
  1637     0438  1903               	skipnz
  1638     0439  022C               	subwf	_current_symmetry,w	;volatile
  1639     043A  1C03               	skipc
  1640     043B  2C47               	goto	l1853
  1641                           
  1642                           ;main.c: 362:         current_symmetry = 255 - current_symmetry;
  1643     043C  30FF               	movlw	255
  1644     043D  00CF               	movwf	??_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST
  1645     043E  082C               	movf	_current_symmetry,w	;volatile
  1646     043F  024F               	subwf	??_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST,w
  1647     0440  00AC               	movwf	_current_symmetry	;volatile
  1648     0441  092D               	comf	_current_symmetry+1,w	;volatile
  1649     0442  1803               	skipnc
  1650     0443  0A89               	incf	9,f
  1651     0444  00AD               	movwf	_current_symmetry+1	;volatile
  1652                           
  1653                           ;main.c: 363:         symmetry_status = CW;
  1654     0445  01D0               	clrf	PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST@symmetry_status
  1655     0446  0AD0               	incf	PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST@symmetry_status,f
  1656     0447                     l1853:
  1657                           
  1658                           ;main.c: 365:     if((current_halfcycle == 0) && (symmetry_status == CCW)){
  1659     0447  0840               	movf	_current_halfcycle,w	;volatile
  1660     0448  1D03               	btfss	3,2
  1661     0449  2C50               	goto	l1859
  1662     044A  0850               	movf	PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST@symmetry_status,w
  1663     044B  1D03               	btfss	3,2
  1664     044C  2C50               	goto	l1859
  1665     044D                     l1857:
  1666                           
  1667                           ;main.c: 366:         SHORTEN_PERIOD();
  1668     044D  3182  22F2         	fcall	_SHORTEN_PERIOD
  1669                           
  1670                           ;main.c: 367:     }
  1671     044F  0008               	return
  1672     0450                     l1859:
  1673     0450  0840               	movf	_current_halfcycle,w	;volatile
  1674     0451  1D03               	btfss	3,2
  1675     0452  2C5D               	goto	l1865
  1676     0453  0350               	decf	PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST@symmetry_status,w
  1677     0454  1903               	btfsc	3,2
  1678     0455  2C5A               	goto	l1863
  1679     0456  2C5D               	goto	l1865
  1680     0457                     l1867:
  1681     0457  0850               	movf	PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST@symmetry_status,w
  1682     0458  1D03               	btfss	3,2
  1683     0459  2C60               	goto	l1871
  1684     045A                     l1863:
  1685                           
  1686                           ;main.c: 369:         LENGTHEN_PERIOD();
  1687     045A  3184  24A4         	fcall	_LENGTHEN_PERIOD
  1688                           
  1689                           ;main.c: 370:     }
  1690     045C  0008               	return
  1691     045D                     l1865:
  1692     045D  0340               	decf	_current_halfcycle,w	;volatile
  1693     045E  1903               	btfsc	3,2
  1694     045F  2C57               	goto	l1867
  1695     0460                     l1871:
  1696     0460  0340               	decf	_current_halfcycle,w	;volatile
  1697     0461  1D03               	btfss	3,2
  1698     0462  0008               	return
  1699     0463  0350               	decf	PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST@symmetry_status,w
  1700     0464  1D03               	btfss	3,2
  1701     0465  0008               	return
  1702     0466  2C4D               	goto	l1857
  1703     0467                     __end_of_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST:
  1704                           
  1705                           	psect	text4
  1706     02F2                     __ptext4:	
  1707 ;; *************** function _SHORTEN_PERIOD *****************
  1708 ;; Defined at:
  1709 ;;		line 302 in file "main.c"
  1710 ;; Parameters:    Size  Location     Type
  1711 ;;		None
  1712 ;; Auto vars:     Size  Location     Type
  1713 ;;  TMR0_raw_ext    2    3[BANK0 ] unsigned short 
  1714 ;; Return value:  Size  Location     Type
  1715 ;;                  1    wreg      unsigned char 
  1716 ;; Registers used:
  1717 ;;		wreg, status,2, status,0
  1718 ;; Tracked objects:
  1719 ;;		On entry : 1F/0
  1720 ;;		On exit  : 1F/0
  1721 ;;		Unchanged: 0/0
  1722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1723 ;;      Params:         0       0       0       0
  1724 ;;      Locals:         0       2       0       0
  1725 ;;      Temps:          0       3       0       0
  1726 ;;      Totals:         0       5       0       0
  1727 ;;Total ram usage:        5 bytes
  1728 ;; Hardware stack levels used: 1
  1729 ;; Hardware stack levels required when called: 2
  1730 ;; This function calls:
  1731 ;;		Nothing
  1732 ;; This function is called by:
  1733 ;;		_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST
  1734 ;; This function uses a non-reentrant model
  1735 ;;
  1736                           
  1737     02F2                     _SHORTEN_PERIOD:	
  1738                           ;psect for function _SHORTEN_PERIOD
  1739                           
  1740                           
  1741                           ;main.c: 303:     dTMR0_ideal = (128 - current_symmetry) << 1;
  1742                           
  1743                           ;incstack = 0
  1744                           ; Regs used in _SHORTEN_PERIOD: [wreg+status,2+status,0]
  1745     02F2  3080               	movlw	128
  1746     02F3  00C6               	movwf	??_SHORTEN_PERIOD
  1747     02F4  082C               	movf	_current_symmetry,w	;volatile
  1748     02F5  0246               	subwf	??_SHORTEN_PERIOD,w
  1749     02F6  00C7               	movwf	??_SHORTEN_PERIOD+1
  1750     02F7  092D               	comf	_current_symmetry+1,w	;volatile
  1751     02F8  1803               	skipnc
  1752     02F9  0A89               	incf	9,f
  1753     02FA  00C8               	movwf	??_SHORTEN_PERIOD+2
  1754     02FB  3547               	lslf	??_SHORTEN_PERIOD+1,w
  1755     02FC  00F0               	movwf	_dTMR0_ideal	;volatile
  1756     02FD  0D48               	rlf	??_SHORTEN_PERIOD+2,w
  1757     02FE  00F1               	movwf	_dTMR0_ideal+1	;volatile
  1758                           
  1759                           ;main.c: 304:     if((dTMR0_ideal + raw_TMR0) < 128){
  1760     02FF  0872               	movf	_raw_TMR0,w	;volatile
  1761     0300  0770               	addwf	_dTMR0_ideal,w	;volatile
  1762     0301  00C6               	movwf	??_SHORTEN_PERIOD
  1763     0302  0871               	movf	_dTMR0_ideal+1,w	;volatile
  1764     0303  1803               	skipnc
  1765     0304  0A71               	incf	_dTMR0_ideal+1,w	;volatile
  1766     0305  00C7               	movwf	??_SHORTEN_PERIOD+1
  1767     0306  3000               	movlw	0
  1768     0307  0247               	subwf	??_SHORTEN_PERIOD+1,w
  1769     0308  3080               	movlw	128
  1770     0309  1903               	skipnz
  1771     030A  0246               	subwf	??_SHORTEN_PERIOD,w
  1772     030B  1803               	skipnc
  1773     030C  2B14               	goto	l1699
  1774                           
  1775                           ;main.c: 305:         TMR0_offset = (uint8_t)dTMR0_ideal;
  1776     030D  0870               	movf	_dTMR0_ideal,w	;volatile
  1777     030E  00BE               	movwf	_TMR0_offset	;volatile
  1778                           
  1779                           ;main.c: 306:         TMR0_offset_sign = POSITIVE;
  1780     030F  3001               	movlw	1
  1781     0310  00BD               	movwf	_TMR0_offset_sign	;volatile
  1782                           
  1783                           ;main.c: 307:         prescaler_adjust = DO_NOTHING;
  1784     0311  01F3               	clrf	_prescaler_adjust	;volatile
  1785                           
  1786                           ;main.c: 308:         clear_TMR0_please = NO;
  1787     0312  01BB               	clrf	_clear_TMR0_please	;volatile
  1788                           
  1789                           ;main.c: 309:     }
  1790     0313  0008               	return
  1791     0314                     l1699:
  1792     0314  0872               	movf	_raw_TMR0,w	;volatile
  1793     0315  0770               	addwf	_dTMR0_ideal,w	;volatile
  1794     0316  00C6               	movwf	??_SHORTEN_PERIOD
  1795     0317  0871               	movf	_dTMR0_ideal+1,w	;volatile
  1796     0318  1803               	skipnc
  1797     0319  0A71               	incf	_dTMR0_ideal+1,w	;volatile
  1798     031A  00C7               	movwf	??_SHORTEN_PERIOD+1
  1799     031B  3080               	movlw	128
  1800     031C  0646               	xorwf	??_SHORTEN_PERIOD,w
  1801     031D  0447               	iorwf	??_SHORTEN_PERIOD+1,w
  1802     031E  1D03               	btfss	3,2
  1803     031F  2B28               	goto	l1709
  1804                           
  1805                           ;main.c: 311:         TMR0_offset = 0;
  1806     0320  01BE               	clrf	_TMR0_offset	;volatile
  1807                           
  1808                           ;main.c: 312:         TMR0_offset_sign = DONT_CARE;
  1809     0321  3004               	movlw	4
  1810     0322  00BD               	movwf	_TMR0_offset_sign	;volatile
  1811                           
  1812                           ;main.c: 313:         prescaler_adjust = DIVIDE_BY_TWO;
  1813     0323  3001               	movlw	1
  1814     0324                     L1:
  1815     0324  00F3               	movwf	_prescaler_adjust	;volatile
  1816                           
  1817                           ;main.c: 314:         clear_TMR0_please = YES;
  1818     0325  3001               	movlw	1
  1819     0326  00BB               	movwf	_clear_TMR0_please	;volatile
  1820                           
  1821                           ;main.c: 315:     }
  1822     0327  0008               	return
  1823     0328                     l1709:
  1824     0328  0872               	movf	_raw_TMR0,w	;volatile
  1825     0329  0770               	addwf	_dTMR0_ideal,w	;volatile
  1826     032A  00C6               	movwf	??_SHORTEN_PERIOD
  1827     032B  0871               	movf	_dTMR0_ideal+1,w	;volatile
  1828     032C  1803               	skipnc
  1829     032D  0A71               	incf	_dTMR0_ideal+1,w	;volatile
  1830     032E  00C7               	movwf	??_SHORTEN_PERIOD+1
  1831     032F  3000               	movlw	0
  1832     0330  0247               	subwf	??_SHORTEN_PERIOD+1,w
  1833     0331  3081               	movlw	129
  1834     0332  1903               	skipnz
  1835     0333  0246               	subwf	??_SHORTEN_PERIOD,w
  1836     0334  1C03               	skipc
  1837     0335  0008               	return
  1838                           
  1839                           ;main.c: 317:         uint16_t TMR0_raw_extra = dTMR0_ideal + raw_TMR0 - 128;
  1840     0336  0872               	movf	_raw_TMR0,w	;volatile
  1841     0337  0770               	addwf	_dTMR0_ideal,w	;volatile
  1842     0338  00C6               	movwf	??_SHORTEN_PERIOD
  1843     0339  0871               	movf	_dTMR0_ideal+1,w	;volatile
  1844     033A  1803               	skipnc
  1845     033B  0A71               	incf	_dTMR0_ideal+1,w	;volatile
  1846     033C  00C7               	movwf	??_SHORTEN_PERIOD+1
  1847     033D  0846               	movf	??_SHORTEN_PERIOD,w
  1848     033E  3E80               	addlw	128
  1849     033F  00C9               	movwf	SHORTEN_PERIOD@TMR0_raw_extra
  1850     0340  30FF               	movlw	255
  1851     0341  3D47               	addwfc	??_SHORTEN_PERIOD+1,w
  1852     0342  00CA               	movwf	SHORTEN_PERIOD@TMR0_raw_extra+1
  1853                           
  1854                           ;main.c: 318:         if(TMR0_raw_extra >> 7 == 0){
  1855     0343  084A               	movf	SHORTEN_PERIOD@TMR0_raw_extra+1,w
  1856     0344  00C7               	movwf	??_SHORTEN_PERIOD+1
  1857     0345  0849               	movf	SHORTEN_PERIOD@TMR0_raw_extra,w
  1858     0346  00C6               	movwf	??_SHORTEN_PERIOD
  1859     0347  3007               	movlw	7
  1860     0348                     u1255:
  1861     0348  36C7               	lsrf	??_SHORTEN_PERIOD+1,f
  1862     0349  0CC6               	rrf	??_SHORTEN_PERIOD,f
  1863     034A  0B89               	decfsz	9,f
  1864     034B  2B48               	goto	u1255
  1865     034C  0846               	movf	??_SHORTEN_PERIOD,w
  1866     034D  0447               	iorwf	??_SHORTEN_PERIOD+1,w
  1867     034E  1D03               	btfss	3,2
  1868     034F  2B59               	goto	l1715
  1869                           
  1870                           ;main.c: 319:             TMR0_offset = (uint8_t)TMR0_raw_extra;
  1871     0350  0849               	movf	SHORTEN_PERIOD@TMR0_raw_extra,w
  1872     0351  00BE               	movwf	_TMR0_offset	;volatile
  1873                           
  1874                           ;main.c: 320:             TMR0_offset_sign = POSITIVE;
  1875     0352  3001               	movlw	1
  1876     0353  00BD               	movwf	_TMR0_offset_sign	;volatile
  1877                           
  1878                           ;main.c: 321:             prescaler_adjust = DIVIDE_BY_TWO;
  1879     0354  3001               	movlw	1
  1880     0355  00F3               	movwf	_prescaler_adjust	;volatile
  1881                           
  1882                           ;main.c: 322:             clear_TMR0_please = YES;
  1883     0356  3001               	movlw	1
  1884     0357  00BB               	movwf	_clear_TMR0_please	;volatile
  1885                           
  1886                           ;main.c: 323:         }
  1887     0358  0008               	return
  1888     0359                     l1715:
  1889     0359  084A               	movf	SHORTEN_PERIOD@TMR0_raw_extra+1,w
  1890     035A  00C7               	movwf	??_SHORTEN_PERIOD+1
  1891     035B  0849               	movf	SHORTEN_PERIOD@TMR0_raw_extra,w
  1892     035C  00C6               	movwf	??_SHORTEN_PERIOD
  1893     035D  3007               	movlw	7
  1894     035E                     u1275:
  1895     035E  36C7               	lsrf	??_SHORTEN_PERIOD+1,f
  1896     035F  0CC6               	rrf	??_SHORTEN_PERIOD,f
  1897     0360  0B89               	decfsz	9,f
  1898     0361  2B5E               	goto	u1275
  1899     0362  0346               	decf	??_SHORTEN_PERIOD,w
  1900     0363  0447               	iorwf	??_SHORTEN_PERIOD+1,w
  1901     0364  1D03               	btfss	3,2
  1902     0365  0008               	return
  1903                           
  1904                           ;main.c: 325:             TMR0_raw_extra = TMR0_raw_extra - 128;
  1905     0366  0849               	movf	SHORTEN_PERIOD@TMR0_raw_extra,w
  1906     0367  3E80               	addlw	128
  1907     0368  00C9               	movwf	SHORTEN_PERIOD@TMR0_raw_extra
  1908     0369  30FF               	movlw	255
  1909     036A  3D4A               	addwfc	SHORTEN_PERIOD@TMR0_raw_extra+1,w
  1910     036B  00CA               	movwf	SHORTEN_PERIOD@TMR0_raw_extra+1
  1911                           
  1912                           ;main.c: 326:             TMR0_offset = (uint8_t)TMR0_raw_extra;
  1913     036C  0849               	movf	SHORTEN_PERIOD@TMR0_raw_extra,w
  1914     036D  00BE               	movwf	_TMR0_offset	;volatile
  1915                           
  1916                           ;main.c: 327:             TMR0_offset_sign = POSITIVE;
  1917     036E  3001               	movlw	1
  1918     036F  00BD               	movwf	_TMR0_offset_sign	;volatile
  1919                           
  1920                           ;main.c: 328:             prescaler_adjust = DIVIDE_BY_FOUR;
  1921     0370  3003               	movlw	3
  1922     0371  2B24               	goto	L1
  1923     0372                     __end_of_SHORTEN_PERIOD:
  1924                           
  1925                           	psect	text5
  1926     04A4                     __ptext5:	
  1927 ;; *************** function _LENGTHEN_PERIOD *****************
  1928 ;; Defined at:
  1929 ;;		line 335 in file "main.c"
  1930 ;; Parameters:    Size  Location     Type
  1931 ;;		None
  1932 ;; Auto vars:     Size  Location     Type
  1933 ;;		None
  1934 ;; Return value:  Size  Location     Type
  1935 ;;                  1    wreg      unsigned char 
  1936 ;; Registers used:
  1937 ;;		wreg, status,2, status,0, pclath, cstack
  1938 ;; Tracked objects:
  1939 ;;		On entry : 1F/0
  1940 ;;		On exit  : 1F/0
  1941 ;;		Unchanged: 0/0
  1942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1943 ;;      Params:         0       0       0       0
  1944 ;;      Locals:         0       0       0       0
  1945 ;;      Temps:          0       3       0       0
  1946 ;;      Totals:         0       3       0       0
  1947 ;;Total ram usage:        3 bytes
  1948 ;; Hardware stack levels used: 1
  1949 ;; Hardware stack levels required when called: 3
  1950 ;; This function calls:
  1951 ;;		___wmul
  1952 ;; This function is called by:
  1953 ;;		_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST
  1954 ;; This function uses a non-reentrant model
  1955 ;;
  1956                           
  1957     04A4                     _LENGTHEN_PERIOD:	
  1958                           ;psect for function _LENGTHEN_PERIOD
  1959                           
  1960                           
  1961                           ;main.c: 336:     dTMR0_ideal = 97 - ((97 * current_symmetry) >> 7);
  1962                           
  1963                           ;incstack = 0
  1964                           ; Regs used in _LENGTHEN_PERIOD: [wreg+status,2+status,0+pclath+cstack]
  1965     04A4  082D               	movf	_current_symmetry+1,w	;volatile
  1966     04A5  00C7               	movwf	___wmul@multiplier+1
  1967     04A6  082C               	movf	_current_symmetry,w	;volatile
  1968     04A7  00C6               	movwf	___wmul@multiplier
  1969     04A8  3061               	movlw	97
  1970     04A9  00C8               	movwf	___wmul@multiplicand
  1971     04AA  3000               	movlw	0
  1972     04AB  00C9               	movwf	___wmul@multiplicand+1
  1973     04AC  3185  25A6  3184   	fcall	___wmul
  1974     04AF  0846               	movf	?___wmul,w
  1975     04B0  00CC               	movwf	??_LENGTHEN_PERIOD
  1976     04B1  0847               	movf	?___wmul+1,w
  1977     04B2  00CD               	movwf	??_LENGTHEN_PERIOD+1
  1978     04B3  3007               	movlw	7
  1979     04B4                     u1295:
  1980     04B4  36CD               	lsrf	??_LENGTHEN_PERIOD+1,f
  1981     04B5  0CCC               	rrf	??_LENGTHEN_PERIOD,f
  1982     04B6  0B89               	decfsz	9,f
  1983     04B7  2CB4               	goto	u1295
  1984     04B8  3061               	movlw	97
  1985     04B9  00CE               	movwf	??_LENGTHEN_PERIOD+2
  1986     04BA  084C               	movf	??_LENGTHEN_PERIOD,w
  1987     04BB  024E               	subwf	??_LENGTHEN_PERIOD+2,w
  1988     04BC  00F0               	movwf	_dTMR0_ideal	;volatile
  1989     04BD  094D               	comf	??_LENGTHEN_PERIOD+1,w
  1990     04BE  1803               	skipnc
  1991     04BF  0A89               	incf	9,f
  1992     04C0  00F1               	movwf	_dTMR0_ideal+1	;volatile
  1993                           
  1994                           ;main.c: 337:         if(raw_TMR0 < dTMR0_ideal){
  1995     04C1  0872               	movf	_raw_TMR0,w	;volatile
  1996     04C2  00CC               	movwf	??_LENGTHEN_PERIOD
  1997     04C3  01CD               	clrf	??_LENGTHEN_PERIOD+1
  1998     04C4  0871               	movf	_dTMR0_ideal+1,w	;volatile
  1999     04C5  024D               	subwf	??_LENGTHEN_PERIOD+1,w
  2000     04C6  1D03               	skipz
  2001     04C7  2CCA               	goto	u1305
  2002     04C8  0870               	movf	_dTMR0_ideal,w	;volatile
  2003     04C9  024C               	subwf	??_LENGTHEN_PERIOD,w
  2004     04CA                     u1305:
  2005     04CA  1803               	skipnc
  2006     04CB  2CD7               	goto	l1741
  2007                           
  2008                           ;main.c: 338:             TMR0_offset = (uint8_t) 128 - (dTMR0_ideal - raw_TMR0);
  2009     04CC  0870               	movf	_dTMR0_ideal,w	;volatile
  2010     04CD  0272               	subwf	_raw_TMR0,w
  2011     04CE  3E80               	addlw	128
  2012     04CF  00BE               	movwf	_TMR0_offset	;volatile
  2013                           
  2014                           ;main.c: 339:             TMR0_offset_sign = POSITIVE;
  2015     04D0  3001               	movlw	1
  2016     04D1  00BD               	movwf	_TMR0_offset_sign	;volatile
  2017                           
  2018                           ;main.c: 340:             prescaler_adjust = MULTIPLY_BY_TWO;
  2019     04D2  3002               	movlw	2
  2020     04D3  00F3               	movwf	_prescaler_adjust	;volatile
  2021                           
  2022                           ;main.c: 341:             clear_TMR0_please = YES;
  2023     04D4  3001               	movlw	1
  2024     04D5  00BB               	movwf	_clear_TMR0_please	;volatile
  2025                           
  2026                           ;main.c: 342:         }
  2027     04D6  0008               	return
  2028     04D7                     l1741:
  2029                           
  2030                           ;main.c: 344:             TMR0_offset = (uint8_t)dTMR0_ideal;
  2031     04D7  0870               	movf	_dTMR0_ideal,w	;volatile
  2032     04D8  00BE               	movwf	_TMR0_offset	;volatile
  2033                           
  2034                           ;main.c: 345:             TMR0_offset_sign = NEGATIVE;
  2035     04D9  01BD               	clrf	_TMR0_offset_sign	;volatile
  2036                           
  2037                           ;main.c: 346:             prescaler_adjust = DO_NOTHING;
  2038     04DA  01F3               	clrf	_prescaler_adjust	;volatile
  2039                           
  2040                           ;main.c: 347:             clear_TMR0_please = NO;
  2041     04DB  01BB               	clrf	_clear_TMR0_please	;volatile
  2042     04DC  0008               	return
  2043     04DD                     __end_of_LENGTHEN_PERIOD:
  2044                           
  2045                           	psect	text6
  2046     05A6                     __ptext6:	
  2047 ;; *************** function ___wmul *****************
  2048 ;; Defined at:
  2049 ;;		line 15 in file "/Applications/microchip/xc8/v2.45/pic/sources/c99/common/Umul16.c"
  2050 ;; Parameters:    Size  Location     Type
  2051 ;;  multiplier      2    0[BANK0 ] unsigned int 
  2052 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  2053 ;; Auto vars:     Size  Location     Type
  2054 ;;  product         2    4[BANK0 ] unsigned int 
  2055 ;; Return value:  Size  Location     Type
  2056 ;;                  2    0[BANK0 ] unsigned int 
  2057 ;; Registers used:
  2058 ;;		wreg, status,2, status,0
  2059 ;; Tracked objects:
  2060 ;;		On entry : 1F/0
  2061 ;;		On exit  : 1F/0
  2062 ;;		Unchanged: 0/0
  2063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2064 ;;      Params:         0       4       0       0
  2065 ;;      Locals:         0       2       0       0
  2066 ;;      Temps:          0       0       0       0
  2067 ;;      Totals:         0       6       0       0
  2068 ;;Total ram usage:        6 bytes
  2069 ;; Hardware stack levels used: 1
  2070 ;; Hardware stack levels required when called: 2
  2071 ;; This function calls:
  2072 ;;		Nothing
  2073 ;; This function is called by:
  2074 ;;		_LENGTHEN_PERIOD
  2075 ;; This function uses a non-reentrant model
  2076 ;;
  2077                           
  2078     05A6                     ___wmul:	
  2079                           ;psect for function ___wmul
  2080                           
  2081                           
  2082                           ;incstack = 0
  2083                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2084     05A6  01CA               	clrf	___wmul@product
  2085     05A7  01CB               	clrf	___wmul@product+1
  2086     05A8                     l1623:
  2087     05A8  1C46               	btfss	___wmul@multiplier,0
  2088     05A9  2DAE               	goto	l419
  2089     05AA  0848               	movf	___wmul@multiplicand,w
  2090     05AB  07CA               	addwf	___wmul@product,f
  2091     05AC  0849               	movf	___wmul@multiplicand+1,w
  2092     05AD  3DCB               	addwfc	___wmul@product+1,f
  2093     05AE                     l419:
  2094     05AE  3001               	movlw	1
  2095     05AF                     u1165:
  2096     05AF  35C8               	lslf	___wmul@multiplicand,f
  2097     05B0  0DC9               	rlf	___wmul@multiplicand+1,f
  2098     05B1  0B89               	decfsz	9,f
  2099     05B2  2DAF               	goto	u1165
  2100     05B3  3001               	movlw	1
  2101     05B4                     u1175:
  2102     05B4  36C7               	lsrf	___wmul@multiplier+1,f
  2103     05B5  0CC6               	rrf	___wmul@multiplier,f
  2104     05B6  0B89               	decfsz	9,f
  2105     05B7  2DB4               	goto	u1175
  2106     05B8  0846               	movf	___wmul@multiplier,w
  2107     05B9  0447               	iorwf	___wmul@multiplier+1,w
  2108     05BA  1D03               	btfss	3,2
  2109     05BB  2DA8               	goto	l1623
  2110     05BC  084B               	movf	___wmul@product+1,w
  2111     05BD  00C7               	movwf	?___wmul+1
  2112     05BE  084A               	movf	___wmul@product,w
  2113     05BF  00C6               	movwf	?___wmul
  2114     05C0  0008               	return
  2115     05C1                     __end_of___wmul:
  2116                           
  2117                           	psect	text7
  2118     0372                     __ptext7:	
  2119 ;; *************** function _PROCESS_RAW_SPEED_AND_PRESCALER *****************
  2120 ;; Defined at:
  2121 ;;		line 258 in file "main.c"
  2122 ;; Parameters:    Size  Location     Type
  2123 ;;		None
  2124 ;; Auto vars:     Size  Location     Type
  2125 ;;		None
  2126 ;; Return value:  Size  Location     Type
  2127 ;;                  1    wreg      unsigned char 
  2128 ;; Registers used:
  2129 ;;		wreg, status,2, status,0, pclath, cstack
  2130 ;; Tracked objects:
  2131 ;;		On entry : 1F/0
  2132 ;;		On exit  : 1F/0
  2133 ;;		Unchanged: 0/0
  2134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2135 ;;      Params:         0       0       0       0
  2136 ;;      Locals:         0       0       0       0
  2137 ;;      Temps:          0       4       0       0
  2138 ;;      Totals:         0       4       0       0
  2139 ;;Total ram usage:        4 bytes
  2140 ;; Hardware stack levels used: 1
  2141 ;; Hardware stack levels required when called: 3
  2142 ;; This function calls:
  2143 ;;		___lmul
  2144 ;; This function is called by:
  2145 ;;		_main
  2146 ;; This function uses a non-reentrant model
  2147 ;;
  2148                           
  2149     0372                     _PROCESS_RAW_SPEED_AND_PRESCALER:	
  2150                           ;psect for function _PROCESS_RAW_SPEED_AND_PRESCALER
  2151                           
  2152                           
  2153                           ;main.c: 259:     current_speed_linear_32 = current_speed_linear;
  2154                           
  2155                           ;incstack = 0
  2156                           ; Regs used in _PROCESS_RAW_SPEED_AND_PRESCALER: [wreg+status,2+status,0+pclath+cstack]
  2157     0372  0832               	movf	_current_speed_linear,w	;volatile
  2158     0373  00A4               	movwf	_current_speed_linear_32	;volatile
  2159     0374  0833               	movf	_current_speed_linear+1,w	;volatile
  2160     0375  00A5               	movwf	_current_speed_linear_32+1	;volatile
  2161     0376  01A6               	clrf	_current_speed_linear_32+2	;volatile
  2162     0377  01A7               	clrf	_current_speed_linear_32+3	;volatile
  2163                           
  2164                           ;main.c: 260:     speed_control_32 = current_speed_linear_32 * 600;;
  2165     0378  0827               	movf	_current_speed_linear_32+3,w	;volatile
  2166     0379  00C9               	movwf	___lmul@multiplier+3
  2167     037A  0826               	movf	_current_speed_linear_32+2,w	;volatile
  2168     037B  00C8               	movwf	___lmul@multiplier+2
  2169     037C  0825               	movf	_current_speed_linear_32+1,w	;volatile
  2170     037D  00C7               	movwf	___lmul@multiplier+1
  2171     037E  0824               	movf	_current_speed_linear_32,w	;volatile
  2172     037F  00C6               	movwf	___lmul@multiplier
  2173     0380  3000               	movlw	0
  2174     0381  00CD               	movwf	___lmul@multiplicand+3
  2175     0382  3000               	movlw	0
  2176     0383  00CC               	movwf	___lmul@multiplicand+2
  2177     0384  3002               	movlw	2
  2178     0385  00CB               	movwf	___lmul@multiplicand+1
  2179     0386  3058               	movlw	88
  2180     0387  00CA               	movwf	___lmul@multiplicand
  2181     0388  3184  24DD  3183   	fcall	___lmul
  2182     038B  0849               	movf	?___lmul+3,w
  2183     038C  00AB               	movwf	_speed_control_32+3	;volatile
  2184     038D  0848               	movf	?___lmul+2,w
  2185     038E  00AA               	movwf	_speed_control_32+2	;volatile
  2186     038F  0847               	movf	?___lmul+1,w
  2187     0390  00A9               	movwf	_speed_control_32+1	;volatile
  2188     0391  0846               	movf	?___lmul,w
  2189     0392  00A8               	movwf	_speed_control_32	;volatile
  2190                           
  2191                           ;main.c: 261:     speed_control_32 = speed_control_32 >> 10;
  2192     0393  0828               	movf	_speed_control_32,w	;volatile
  2193     0394  00D2               	movwf	??_PROCESS_RAW_SPEED_AND_PRESCALER
  2194     0395  0829               	movf	_speed_control_32+1,w	;volatile
  2195     0396  00D3               	movwf	??_PROCESS_RAW_SPEED_AND_PRESCALER+1
  2196     0397  082A               	movf	_speed_control_32+2,w	;volatile
  2197     0398  00D4               	movwf	??_PROCESS_RAW_SPEED_AND_PRESCALER+2
  2198     0399  082B               	movf	_speed_control_32+3,w	;volatile
  2199     039A  00D5               	movwf	??_PROCESS_RAW_SPEED_AND_PRESCALER+3
  2200     039B  300A               	movlw	10
  2201     039C                     u1365:
  2202     039C  36D5               	lsrf	??_PROCESS_RAW_SPEED_AND_PRESCALER+3,f
  2203     039D  0CD4               	rrf	??_PROCESS_RAW_SPEED_AND_PRESCALER+2,f
  2204     039E  0CD3               	rrf	??_PROCESS_RAW_SPEED_AND_PRESCALER+1,f
  2205     039F  0CD2               	rrf	??_PROCESS_RAW_SPEED_AND_PRESCALER,f
  2206     03A0  0B89               	decfsz	9,f
  2207     03A1  2B9C               	goto	u1365
  2208     03A2  0855               	movf	??_PROCESS_RAW_SPEED_AND_PRESCALER+3,w
  2209     03A3  00AB               	movwf	_speed_control_32+3	;volatile
  2210     03A4  0854               	movf	??_PROCESS_RAW_SPEED_AND_PRESCALER+2,w
  2211     03A5  00AA               	movwf	_speed_control_32+2	;volatile
  2212     03A6  0853               	movf	??_PROCESS_RAW_SPEED_AND_PRESCALER+1,w
  2213     03A7  00A9               	movwf	_speed_control_32+1	;volatile
  2214     03A8  0852               	movf	??_PROCESS_RAW_SPEED_AND_PRESCALER,w
  2215     03A9  00A8               	movwf	_speed_control_32	;volatile
  2216                           
  2217                           ;main.c: 262:     speed_control = (uint16_t) speed_control_32;
  2218     03AA  0829               	movf	_speed_control_32+1,w	;volatile
  2219     03AB  00B9               	movwf	_speed_control+1	;volatile
  2220     03AC  0828               	movf	_speed_control_32,w	;volatile
  2221     03AD  00B8               	movwf	_speed_control	;volatile
  2222                           
  2223                           ;main.c: 264:         if(speed_control <= (127-12)){
  2224     03AE  3000               	movlw	0
  2225     03AF  0239               	subwf	_speed_control+1,w	;volatile
  2226     03B0  3074               	movlw	116
  2227     03B1  1903               	skipnz
  2228     03B2  0238               	subwf	_speed_control,w	;volatile
  2229     03B3  1803               	skipnc
  2230     03B4  2BBB               	goto	l1799
  2231                           
  2232                           ;main.c: 265:             raw_TMR0 = (uint8_t) speed_control + 12;
  2233     03B5  0838               	movf	_speed_control,w	;volatile
  2234     03B6  3E0C               	addlw	12
  2235     03B7  00F2               	movwf	_raw_TMR0	;volatile
  2236                           
  2237                           ;main.c: 266:             base_prescaler_bits_index = 1;
  2238     03B8  3001               	movlw	1
  2239     03B9  00BC               	movwf	_base_prescaler_bits_index	;volatile
  2240                           
  2241                           ;main.c: 267:         }
  2242     03BA  0008               	return
  2243     03BB                     l1799:
  2244                           
  2245                           ;main.c: 269:             speed_control_subtracted = speed_control - (127-12);
  2246     03BB  0838               	movf	_speed_control,w	;volatile
  2247     03BC  3E8D               	addlw	141
  2248     03BD  00B6               	movwf	_speed_control_subtracted	;volatile
  2249     03BE  30FF               	movlw	255
  2250     03BF  3D39               	addwfc	_speed_control+1,w	;volatile
  2251     03C0  00B7               	movwf	_speed_control_subtracted+1	;volatile
  2252                           
  2253                           ;main.c: 270:             how_many_128 = speed_control_subtracted >> 7;
  2254     03C1  0837               	movf	_speed_control_subtracted+1,w	;volatile
  2255     03C2  00D3               	movwf	??_PROCESS_RAW_SPEED_AND_PRESCALER+1
  2256     03C3  0836               	movf	_speed_control_subtracted,w	;volatile
  2257     03C4  00D2               	movwf	??_PROCESS_RAW_SPEED_AND_PRESCALER
  2258     03C5  3007               	movlw	7
  2259     03C6                     u1385:
  2260     03C6  36D3               	lsrf	??_PROCESS_RAW_SPEED_AND_PRESCALER+1,f
  2261     03C7  0CD2               	rrf	??_PROCESS_RAW_SPEED_AND_PRESCALER,f
  2262     03C8  0B89               	decfsz	9,f
  2263     03C9  2BC6               	goto	u1385
  2264     03CA  0852               	movf	??_PROCESS_RAW_SPEED_AND_PRESCALER,w
  2265     03CB  00B4               	movwf	_how_many_128	;volatile
  2266     03CC  0853               	movf	??_PROCESS_RAW_SPEED_AND_PRESCALER+1,w
  2267     03CD  00B5               	movwf	_how_many_128+1	;volatile
  2268                           
  2269                           ;main.c: 271:             raw_TMR0 = (uint8_t) (speed_control_subtracted - (how_many_128
      +                           << 7));
  2270     03CE  0834               	movf	_how_many_128,w	;volatile
  2271     03CF  00D2               	movwf	??_PROCESS_RAW_SPEED_AND_PRESCALER
  2272     03D0  3006               	movlw	6
  2273     03D1                     u1395:
  2274     03D1  35D2               	lslf	??_PROCESS_RAW_SPEED_AND_PRESCALER,f
  2275     03D2  3EFF               	addlw	-1
  2276     03D3  1D03               	skipz
  2277     03D4  2BD1               	goto	u1395
  2278     03D5  3552               	lslf	??_PROCESS_RAW_SPEED_AND_PRESCALER,w
  2279     03D6  0736               	addwf	_speed_control_subtracted,w	;volatile
  2280     03D7  00F2               	movwf	_raw_TMR0	;volatile
  2281                           
  2282                           ;main.c: 272:             base_prescaler_bits_index = how_many_128 + 2;
  2283     03D8  0834               	movf	_how_many_128,w	;volatile
  2284     03D9  3E02               	addlw	2
  2285     03DA  00BC               	movwf	_base_prescaler_bits_index	;volatile
  2286     03DB  0008               	return
  2287     03DC                     __end_of_PROCESS_RAW_SPEED_AND_PRESCALER:
  2288                           
  2289                           	psect	text8
  2290     04DD                     __ptext8:	
  2291 ;; *************** function ___lmul *****************
  2292 ;; Defined at:
  2293 ;;		line 15 in file "/Applications/microchip/xc8/v2.45/pic/sources/c99/common/Umul32.c"
  2294 ;; Parameters:    Size  Location     Type
  2295 ;;  multiplier      4    0[BANK0 ] unsigned long 
  2296 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  2297 ;; Auto vars:     Size  Location     Type
  2298 ;;  product         4    8[BANK0 ] unsigned long 
  2299 ;; Return value:  Size  Location     Type
  2300 ;;                  4    0[BANK0 ] unsigned long 
  2301 ;; Registers used:
  2302 ;;		wreg, status,2, status,0
  2303 ;; Tracked objects:
  2304 ;;		On entry : 1F/0
  2305 ;;		On exit  : 1F/0
  2306 ;;		Unchanged: 0/0
  2307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2308 ;;      Params:         0       8       0       0
  2309 ;;      Locals:         0       4       0       0
  2310 ;;      Temps:          0       0       0       0
  2311 ;;      Totals:         0      12       0       0
  2312 ;;Total ram usage:       12 bytes
  2313 ;; Hardware stack levels used: 1
  2314 ;; Hardware stack levels required when called: 2
  2315 ;; This function calls:
  2316 ;;		Nothing
  2317 ;; This function is called by:
  2318 ;;		_PROCESS_RAW_SPEED_AND_PRESCALER
  2319 ;; This function uses a non-reentrant model
  2320 ;;
  2321                           
  2322     04DD                     ___lmul:	
  2323                           ;psect for function ___lmul
  2324                           
  2325                           
  2326                           ;incstack = 0
  2327                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  2328     04DD  3000               	movlw	0
  2329     04DE  00D1               	movwf	___lmul@product+3
  2330     04DF  3000               	movlw	0
  2331     04E0  00D0               	movwf	___lmul@product+2
  2332     04E1  3000               	movlw	0
  2333     04E2  00CF               	movwf	___lmul@product+1
  2334     04E3  3000               	movlw	0
  2335     04E4  00CE               	movwf	___lmul@product
  2336     04E5                     l1753:
  2337     04E5  1C46               	btfss	___lmul@multiplier,0
  2338     04E6  2CEF               	goto	l1757
  2339     04E7  084A               	movf	___lmul@multiplicand,w
  2340     04E8  07CE               	addwf	___lmul@product,f
  2341     04E9  084B               	movf	___lmul@multiplicand+1,w
  2342     04EA  3DCF               	addwfc	___lmul@product+1,f
  2343     04EB  084C               	movf	___lmul@multiplicand+2,w
  2344     04EC  3DD0               	addwfc	___lmul@product+2,f
  2345     04ED  084D               	movf	___lmul@multiplicand+3,w
  2346     04EE  3DD1               	addwfc	___lmul@product+3,f
  2347     04EF                     l1757:
  2348     04EF  3001               	movlw	1
  2349     04F0                     u1325:
  2350     04F0  35CA               	lslf	___lmul@multiplicand,f
  2351     04F1  0DCB               	rlf	___lmul@multiplicand+1,f
  2352     04F2  0DCC               	rlf	___lmul@multiplicand+2,f
  2353     04F3  0DCD               	rlf	___lmul@multiplicand+3,f
  2354     04F4  0B89               	decfsz	9,f
  2355     04F5  2CF0               	goto	u1325
  2356     04F6  3001               	movlw	1
  2357     04F7                     u1335:
  2358     04F7  36C9               	lsrf	___lmul@multiplier+3,f
  2359     04F8  0CC8               	rrf	___lmul@multiplier+2,f
  2360     04F9  0CC7               	rrf	___lmul@multiplier+1,f
  2361     04FA  0CC6               	rrf	___lmul@multiplier,f
  2362     04FB  0B89               	decfsz	9,f
  2363     04FC  2CF7               	goto	u1335
  2364     04FD  0849               	movf	___lmul@multiplier+3,w
  2365     04FE  0448               	iorwf	___lmul@multiplier+2,w
  2366     04FF  0447               	iorwf	___lmul@multiplier+1,w
  2367     0500  0446               	iorwf	___lmul@multiplier,w
  2368     0501  1D03               	skipz
  2369     0502  2CE5               	goto	l1753
  2370     0503  0851               	movf	___lmul@product+3,w
  2371     0504  00C9               	movwf	?___lmul+3
  2372     0505  0850               	movf	___lmul@product+2,w
  2373     0506  00C8               	movwf	?___lmul+2
  2374     0507  084F               	movf	___lmul@product+1,w
  2375     0508  00C7               	movwf	?___lmul+1
  2376     0509  084E               	movf	___lmul@product,w
  2377     050A  00C6               	movwf	?___lmul
  2378     050B  0008               	return
  2379     050C                     __end_of___lmul:
  2380                           
  2381                           	psect	text9
  2382     03DC                     __ptext9:	
  2383 ;; *************** function _PROCESS_FINAL_SPEED_AND_PRESCALER *****************
  2384 ;; Defined at:
  2385 ;;		line 277 in file "main.c"
  2386 ;; Parameters:    Size  Location     Type
  2387 ;;		None
  2388 ;; Auto vars:     Size  Location     Type
  2389 ;;		None
  2390 ;; Return value:  Size  Location     Type
  2391 ;;                  1    wreg      unsigned char 
  2392 ;; Registers used:
  2393 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  2394 ;; Tracked objects:
  2395 ;;		On entry : 1F/0
  2396 ;;		On exit  : 1E/0
  2397 ;;		Unchanged: 0/0
  2398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2399 ;;      Params:         0       0       0       0
  2400 ;;      Locals:         0       0       0       0
  2401 ;;      Temps:          0       0       0       0
  2402 ;;      Totals:         0       0       0       0
  2403 ;;Total ram usage:        0 bytes
  2404 ;; Hardware stack levels used: 1
  2405 ;; Hardware stack levels required when called: 2
  2406 ;; This function calls:
  2407 ;;		Nothing
  2408 ;; This function is called by:
  2409 ;;		_main
  2410 ;; This function uses a non-reentrant model
  2411 ;;
  2412                           
  2413     03DC                     _PROCESS_FINAL_SPEED_AND_PRESCALER:	
  2414                           ;psect for function _PROCESS_FINAL_SPEED_AND_PRESCALER
  2415                           
  2416                           
  2417                           ;main.c: 278:     if(clear_TMR0_please){
  2418                           
  2419                           ;incstack = 0
  2420                           ; Regs used in _PROCESS_FINAL_SPEED_AND_PRESCALER: [wreg-fsr0h+status,2+status,0+pclath]
  2421     03DC  083B               	movf	_clear_TMR0_please,w	;volatile
  2422     03DD  1D03               	btfss	3,2
  2423                           
  2424                           ;main.c: 279:         raw_TMR0 = 0;
  2425     03DE  01F2               	clrf	_raw_TMR0	;volatile
  2426                           
  2427                           ;main.c: 281:     if((TMR0_offset_sign == POSITIVE) || (TMR0_offset_sign == DONT_CARE)){
  2428     03DF  033D               	decf	_TMR0_offset_sign,w	;volatile
  2429     03E0  1903               	btfsc	3,2
  2430     03E1  2BE6               	goto	l1811
  2431     03E2  3004               	movlw	4
  2432     03E3  063D               	xorwf	_TMR0_offset_sign,w	;volatile
  2433     03E4  1D03               	btfss	3,2
  2434     03E5  2BE9               	goto	l1813
  2435     03E6                     l1811:
  2436                           
  2437                           ;main.c: 282:         final_TMR0 = raw_TMR0 + TMR0_offset;
  2438     03E6  0872               	movf	_raw_TMR0,w	;volatile
  2439     03E7  073E               	addwf	_TMR0_offset,w	;volatile
  2440     03E8  2BEE               	goto	L2
  2441     03E9                     l1813:	
  2442                           ;main.c: 283:     }
  2443                           
  2444     03E9  083D               	movf	_TMR0_offset_sign,w	;volatile
  2445     03EA  1D03               	btfss	3,2
  2446     03EB  2BEF               	goto	l204
  2447                           
  2448                           ;main.c: 285:         final_TMR0 = raw_TMR0 - TMR0_offset;
  2449     03EC  083E               	movf	_TMR0_offset,w	;volatile
  2450     03ED  0272               	subwf	_raw_TMR0,w	;volatile
  2451     03EE                     L2:
  2452     03EE  00C5               	movwf	_final_TMR0	;volatile
  2453     03EF                     l204:
  2454                           
  2455                           ;main.c: 287:     if(prescaler_adjust == DIVIDE_BY_TWO){
  2456     03EF  0373               	decf	_prescaler_adjust,w	;volatile
  2457     03F0  1D03               	btfss	3,2
  2458     03F1  2BFD               	goto	l1819
  2459                           
  2460                           ;main.c: 288:         OPTION_REG = prescaler_bits[base_prescaler_bits_index + 1];
  2461     03F2  083C               	movf	_base_prescaler_bits_index,w	;volatile
  2462     03F3  3EEA               	addlw	low ((_prescaler_bits+1)| (0+32768))
  2463     03F4  0084               	movwf	4
  2464     03F5  3085               	movlw	high ((_prescaler_bits+1)| (0+32768))
  2465     03F6  1803               	skipnc
  2466     03F7  3E01               	addlw	1
  2467     03F8  0085               	movwf	5
  2468     03F9  0800               	movf	0,w	;code access
  2469     03FA  0021               	movlb	1	; select bank1
  2470     03FB  0095               	movwf	21	;volatile
  2471                           
  2472                           ;main.c: 289:     }
  2473     03FC  0008               	return
  2474     03FD                     l1819:
  2475     03FD  3003               	movlw	3
  2476     03FE  0673               	xorwf	_prescaler_adjust,w	;volatile
  2477     03FF  1D03               	btfss	3,2
  2478     0400  2C0C               	goto	l1823
  2479                           
  2480                           ;main.c: 291:         OPTION_REG = prescaler_bits[base_prescaler_bits_index + 2];
  2481     0401  083C               	movf	_base_prescaler_bits_index,w	;volatile
  2482     0402  3EEB               	addlw	low ((_prescaler_bits+2)| (0+32768))
  2483     0403  0084               	movwf	4
  2484     0404  3085               	movlw	high ((_prescaler_bits+2)| (0+32768))
  2485     0405  1803               	skipnc
  2486     0406  3E01               	addlw	1
  2487     0407  0085               	movwf	5
  2488     0408  0800               	movf	0,w	;code access
  2489     0409  0021               	movlb	1	; select bank1
  2490     040A  0095               	movwf	21	;volatile
  2491                           
  2492                           ;main.c: 292:     }
  2493     040B  0008               	return
  2494     040C                     l1823:
  2495     040C  3002               	movlw	2
  2496     040D  0673               	xorwf	_prescaler_adjust,w	;volatile
  2497     040E  1D03               	btfss	3,2
  2498     040F  2C1B               	goto	l1827
  2499                           
  2500                           ;main.c: 294:         OPTION_REG = prescaler_bits[base_prescaler_bits_index - 1];
  2501     0410  083C               	movf	_base_prescaler_bits_index,w	;volatile
  2502     0411  3EE8               	addlw	low ((_prescaler_bits+65535)| (0+32768))
  2503     0412  0084               	movwf	4
  2504     0413  3085               	movlw	high ((_prescaler_bits+65535)| (0+32768))
  2505     0414  1803               	skipnc
  2506     0415  3E01               	addlw	1
  2507     0416  0085               	movwf	5
  2508     0417  0800               	movf	0,w	;code access
  2509     0418  0021               	movlb	1	; select bank1
  2510     0419  0095               	movwf	21	;volatile
  2511                           
  2512                           ;main.c: 295:     }
  2513     041A  0008               	return
  2514     041B                     l1827:
  2515     041B  0873               	movf	_prescaler_adjust,w	;volatile
  2516     041C  1D03               	btfss	3,2
  2517     041D  0008               	return
  2518                           
  2519                           ;main.c: 297:         OPTION_REG = prescaler_bits[base_prescaler_bits_index];
  2520     041E  083C               	movf	_base_prescaler_bits_index,w	;volatile
  2521     041F  3EE9               	addlw	low (_prescaler_bits| (0+32768))
  2522     0420  0084               	movwf	4
  2523     0421  3085               	movlw	high (_prescaler_bits| (0+32768))
  2524     0422  1803               	skipnc
  2525     0423  3E01               	addlw	1
  2526     0424  0085               	movwf	5
  2527     0425  0800               	movf	0,w	;code access
  2528     0426  0021               	movlb	1	; select bank1
  2529     0427  0095               	movwf	21	;volatile
  2530     0428  0008               	return
  2531     0429                     __end_of_PROCESS_FINAL_SPEED_AND_PRESCALER:
  2532                           
  2533                           	psect	text10
  2534     0467                     __ptext10:	
  2535 ;; *************** function _GET_CURRENT_POT_VALUES *****************
  2536 ;; Defined at:
  2537 ;;		line 248 in file "main.c"
  2538 ;; Parameters:    Size  Location     Type
  2539 ;;		None
  2540 ;; Auto vars:     Size  Location     Type
  2541 ;;		None
  2542 ;; Return value:  Size  Location     Type
  2543 ;;                  1    wreg      unsigned char 
  2544 ;; Registers used:
  2545 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2546 ;; Tracked objects:
  2547 ;;		On entry : 1E/1
  2548 ;;		On exit  : 1F/0
  2549 ;;		Unchanged: 0/0
  2550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2551 ;;      Params:         0       0       0       0
  2552 ;;      Locals:         0       0       0       0
  2553 ;;      Temps:          0       2       0       0
  2554 ;;      Totals:         0       2       0       0
  2555 ;;Total ram usage:        2 bytes
  2556 ;; Hardware stack levels used: 1
  2557 ;; Hardware stack levels required when called: 4
  2558 ;; This function calls:
  2559 ;;		_DETERMINE_WAVESHAPE
  2560 ;;		_DO_ADC
  2561 ;; This function is called by:
  2562 ;;		_main
  2563 ;; This function uses a non-reentrant model
  2564 ;;
  2565                           
  2566     0467                     _GET_CURRENT_POT_VALUES:	
  2567                           ;psect for function _GET_CURRENT_POT_VALUES
  2568                           
  2569                           
  2570                           ;main.c: 249:     current_waveshape = DETERMINE_WAVESHAPE();
  2571                           
  2572                           ;incstack = 0
  2573                           ; Regs used in _GET_CURRENT_POT_VALUES: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2574     0467  3185  255F  3184   	fcall	_DETERMINE_WAVESHAPE
  2575     046A  00F5               	movwf	_current_waveshape	;volatile
  2576                           
  2577                           ;main.c: 250:     current_speed_linear = DO_ADC(&speed_adc_config_value);
  2578     046B  3022               	movlw	low (_speed_adc_config_value| (0+32768))
  2579     046C  00C6               	movwf	DO_ADC@modifier
  2580     046D  3086               	movlw	high (_speed_adc_config_value| (0+32768))
  2581     046E  00C7               	movwf	DO_ADC@modifier+1
  2582     046F  3185  250C  3184   	fcall	_DO_ADC
  2583     0472  0847               	movf	?_DO_ADC+1,w
  2584     0473  00B3               	movwf	_current_speed_linear+1	;volatile
  2585     0474  0846               	movf	?_DO_ADC,w
  2586     0475  00B2               	movwf	_current_speed_linear	;volatile
  2587                           
  2588                           ;main.c: 251:     current_depth = DO_ADC(&depth_adc_config_value);
  2589     0476  3021               	movlw	low (_depth_adc_config_value| (0+32768))
  2590     0477  00C6               	movwf	DO_ADC@modifier
  2591     0478  3086               	movlw	high (_depth_adc_config_value| (0+32768))
  2592     0479  00C7               	movwf	DO_ADC@modifier+1
  2593     047A  3185  250C  3184   	fcall	_DO_ADC
  2594     047D  0847               	movf	?_DO_ADC+1,w
  2595     047E  00AF               	movwf	_current_depth+1	;volatile
  2596     047F  0846               	movf	?_DO_ADC,w
  2597     0480  00AE               	movwf	_current_depth	;volatile
  2598                           
  2599                           ;main.c: 252:     current_depth = current_depth >> 2;
  2600     0481  082F               	movf	_current_depth+1,w	;volatile
  2601     0482  00CF               	movwf	??_GET_CURRENT_POT_VALUES+1
  2602     0483  082E               	movf	_current_depth,w	;volatile
  2603     0484  00CE               	movwf	??_GET_CURRENT_POT_VALUES
  2604     0485  36CF               	lsrf	??_GET_CURRENT_POT_VALUES+1,f
  2605     0486  0CCE               	rrf	??_GET_CURRENT_POT_VALUES,f
  2606     0487  36CF               	lsrf	??_GET_CURRENT_POT_VALUES+1,f
  2607     0488  0CCE               	rrf	??_GET_CURRENT_POT_VALUES,f
  2608     0489  084E               	movf	??_GET_CURRENT_POT_VALUES,w
  2609     048A  00AE               	movwf	_current_depth	;volatile
  2610     048B  084F               	movf	??_GET_CURRENT_POT_VALUES+1,w
  2611     048C  00AF               	movwf	_current_depth+1	;volatile
  2612                           
  2613                           ;main.c: 253:     current_symmetry = DO_ADC(&symmetry_adc_config_value);
  2614     048D  3020               	movlw	low (_symmetry_adc_config_value| (0+32768))
  2615     048E  00C6               	movwf	DO_ADC@modifier
  2616     048F  3086               	movlw	high (_symmetry_adc_config_value| (0+32768))
  2617     0490  00C7               	movwf	DO_ADC@modifier+1
  2618     0491  3185  250C         	fcall	_DO_ADC
  2619     0493  0847               	movf	?_DO_ADC+1,w
  2620     0494  00AD               	movwf	_current_symmetry+1	;volatile
  2621     0495  0846               	movf	?_DO_ADC,w
  2622     0496  00AC               	movwf	_current_symmetry	;volatile
  2623                           
  2624                           ;main.c: 254:     current_symmetry = current_symmetry >> 2;
  2625     0497  082D               	movf	_current_symmetry+1,w	;volatile
  2626     0498  00CF               	movwf	??_GET_CURRENT_POT_VALUES+1
  2627     0499  082C               	movf	_current_symmetry,w	;volatile
  2628     049A  00CE               	movwf	??_GET_CURRENT_POT_VALUES
  2629     049B  36CF               	lsrf	??_GET_CURRENT_POT_VALUES+1,f
  2630     049C  0CCE               	rrf	??_GET_CURRENT_POT_VALUES,f
  2631     049D  36CF               	lsrf	??_GET_CURRENT_POT_VALUES+1,f
  2632     049E  0CCE               	rrf	??_GET_CURRENT_POT_VALUES,f
  2633     049F  084E               	movf	??_GET_CURRENT_POT_VALUES,w
  2634     04A0  00AC               	movwf	_current_symmetry	;volatile
  2635     04A1  084F               	movf	??_GET_CURRENT_POT_VALUES+1,w
  2636     04A2  00AD               	movwf	_current_symmetry+1	;volatile
  2637     04A3  0008               	return
  2638     04A4                     __end_of_GET_CURRENT_POT_VALUES:
  2639                           
  2640                           	psect	text11
  2641     055F                     __ptext11:	
  2642 ;; *************** function _DETERMINE_WAVESHAPE *****************
  2643 ;; Defined at:
  2644 ;;		line 176 in file "main.c"
  2645 ;; Parameters:    Size  Location     Type
  2646 ;;		None
  2647 ;; Auto vars:     Size  Location     Type
  2648 ;;  ADC             2    6[BANK0 ] unsigned short 
  2649 ;; Return value:  Size  Location     Type
  2650 ;;                  1    wreg      unsigned char 
  2651 ;; Registers used:
  2652 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2653 ;; Tracked objects:
  2654 ;;		On entry : 1E/1
  2655 ;;		On exit  : 1F/0
  2656 ;;		Unchanged: 0/0
  2657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2658 ;;      Params:         0       0       0       0
  2659 ;;      Locals:         0       2       0       0
  2660 ;;      Temps:          0       0       0       0
  2661 ;;      Totals:         0       2       0       0
  2662 ;;Total ram usage:        2 bytes
  2663 ;; Hardware stack levels used: 1
  2664 ;; Hardware stack levels required when called: 3
  2665 ;; This function calls:
  2666 ;;		_DO_ADC
  2667 ;; This function is called by:
  2668 ;;		_GET_CURRENT_POT_VALUES
  2669 ;; This function uses a non-reentrant model
  2670 ;;
  2671                           
  2672     055F                     _DETERMINE_WAVESHAPE:	
  2673                           ;psect for function _DETERMINE_WAVESHAPE
  2674                           
  2675                           
  2676                           ;main.c: 177:     uint16_t ADC = DO_ADC(&waveshape_adc_config_value);
  2677                           
  2678                           ;incstack = 0
  2679                           ; Regs used in _DETERMINE_WAVESHAPE: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2680     055F  3023               	movlw	low (_waveshape_adc_config_value| (0+32768))
  2681     0560  0020               	movlb	0	; select bank0
  2682     0561  00C6               	movwf	DO_ADC@modifier
  2683     0562  3086               	movlw	high (_waveshape_adc_config_value| (0+32768))
  2684     0563  00C7               	movwf	DO_ADC@modifier+1
  2685     0564  3185  250C  3185   	fcall	_DO_ADC
  2686     0567  0847               	movf	?_DO_ADC+1,w
  2687     0568  00CD               	movwf	DETERMINE_WAVESHAPE@ADC+1
  2688     0569  0846               	movf	?_DO_ADC,w
  2689     056A  00CC               	movwf	DETERMINE_WAVESHAPE@ADC
  2690                           
  2691                           ;main.c: 178:     if(ADC <= 341){
  2692     056B  3001               	movlw	1
  2693     056C  024D               	subwf	DETERMINE_WAVESHAPE@ADC+1,w
  2694     056D  3056               	movlw	86
  2695     056E  1903               	skipnz
  2696     056F  024C               	subwf	DETERMINE_WAVESHAPE@ADC,w
  2697     0570  1803               	skipnc
  2698     0571  2D74               	goto	l1657
  2699                           
  2700                           ;main.c: 179:             return 0;
  2701     0572  3000               	movlw	0
  2702     0573  0008               	return
  2703     0574                     l1657:
  2704                           
  2705                           ;main.c: 181:         if (ADC <= 682){
  2706     0574  3002               	movlw	2
  2707     0575  024D               	subwf	DETERMINE_WAVESHAPE@ADC+1,w
  2708     0576  30AB               	movlw	171
  2709     0577  1903               	skipnz
  2710     0578  024C               	subwf	DETERMINE_WAVESHAPE@ADC,w
  2711     0579  1803               	skipnc
  2712     057A  2D7D               	goto	l1663
  2713     057B                     l1659:
  2714                           
  2715                           ;main.c: 182:             return 1;
  2716     057B  3001               	movlw	1
  2717     057C  0008               	return
  2718     057D                     l1663:
  2719                           
  2720                           ;main.c: 184:         if (ADC <= 1023){
  2721     057D  3004               	movlw	4
  2722     057E  024D               	subwf	DETERMINE_WAVESHAPE@ADC+1,w
  2723     057F  3000               	movlw	0
  2724     0580  1903               	skipnz
  2725     0581  024C               	subwf	DETERMINE_WAVESHAPE@ADC,w
  2726     0582  1803               	skipnc
  2727     0583  2D7B               	goto	l1659
  2728                           
  2729                           ;main.c: 185:             return 2;
  2730     0584  3002               	movlw	2
  2731     0585  0008               	return
  2732     0586                     __end_of_DETERMINE_WAVESHAPE:
  2733                           
  2734                           	psect	text12
  2735     050C                     __ptext12:	
  2736 ;; *************** function _DO_ADC *****************
  2737 ;; Defined at:
  2738 ;;		line 162 in file "main.c"
  2739 ;; Parameters:    Size  Location     Type
  2740 ;;  modifier        2    0[BANK0 ] PTR const unsigned char 
  2741 ;;		 -> symmetry_adc_config_value(1), depth_adc_config_value(1), speed_adc_config_value(1), waveshape_adc_config_value(1
      +), 
  2742 ;; Auto vars:     Size  Location     Type
  2743 ;;  adc_result      2    3[BANK0 ] unsigned short 
  2744 ;;  temp            1    5[BANK0 ] unsigned char 
  2745 ;; Return value:  Size  Location     Type
  2746 ;;                  2    0[BANK0 ] unsigned short 
  2747 ;; Registers used:
  2748 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  2749 ;; Tracked objects:
  2750 ;;		On entry : 1F/0
  2751 ;;		On exit  : 1F/0
  2752 ;;		Unchanged: 0/0
  2753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2754 ;;      Params:         0       2       0       0
  2755 ;;      Locals:         0       3       0       0
  2756 ;;      Temps:          0       1       0       0
  2757 ;;      Totals:         0       6       0       0
  2758 ;;Total ram usage:        6 bytes
  2759 ;; Hardware stack levels used: 1
  2760 ;; Hardware stack levels required when called: 2
  2761 ;; This function calls:
  2762 ;;		Nothing
  2763 ;; This function is called by:
  2764 ;;		_DETERMINE_WAVESHAPE
  2765 ;;		_GET_CURRENT_POT_VALUES
  2766 ;; This function uses a non-reentrant model
  2767 ;;
  2768                           
  2769     050C                     _DO_ADC:	
  2770                           ;psect for function _DO_ADC
  2771                           
  2772                           
  2773                           ;main.c: 163:     ADCON0 = 0x00;
  2774                           
  2775                           ;incstack = 0
  2776                           ; Regs used in _DO_ADC: [wreg-fsr0h+status,2+status,0+pclath]
  2777     050C  0021               	movlb	1	; select bank1
  2778     050D  019D               	clrf	29	;volatile
  2779                           
  2780                           ;main.c: 165:     uint8_t temp = *modifier << 2;
  2781     050E  0020               	movlb	0	; select bank0
  2782     050F  0846               	movf	DO_ADC@modifier,w
  2783     0510  0084               	movwf	4
  2784     0511  0847               	movf	DO_ADC@modifier+1,w
  2785     0512  0085               	movwf	5
  2786     0513  0800               	movf	0,w	;code access
  2787     0514  00C8               	movwf	??_DO_ADC
  2788     0515  3001               	movlw	1
  2789     0516                     u1135:
  2790     0516  35C8               	lslf	??_DO_ADC,f
  2791     0517  3EFF               	addlw	-1
  2792     0518  1D03               	skipz
  2793     0519  2D16               	goto	u1135
  2794     051A  3548               	lslf	??_DO_ADC,w
  2795     051B  00CB               	movwf	DO_ADC@temp
  2796                           
  2797                           ;main.c: 166:     ADCON0 = ADCON0 | temp;
  2798     051C  0021               	movlb	1	; select bank1
  2799     051D  081D               	movf	29,w	;volatile
  2800     051E  0020               	movlb	0	; select bank0
  2801     051F  044B               	iorwf	DO_ADC@temp,w
  2802     0520  0021               	movlb	1	; select bank1
  2803     0521  009D               	movwf	29	;volatile
  2804                           
  2805                           ;main.c: 167:     ADON = 1;
  2806     0522  141D               	bsf	29,0	;volatile
  2807                           
  2808                           ;main.c: 168:     _delay((unsigned long)((0.005)*(32000000/4000.0)));
  2809     0523  300D               	movlw	13
  2810     0524                     u1587:
  2811     0524  0B89               	decfsz	9,f
  2812     0525  2D24               	goto	u1587
  2813     0526  0000               	nop
  2814                           
  2815                           ;main.c: 169:     GO_nDONE = 1;
  2816     0527  0021               	movlb	1	; select bank1
  2817     0528  149D               	bsf	29,1	;volatile
  2818     0529                     l158:	
  2819                           ;main.c: 170:     while(GO_nDONE == 1){}
  2820                           
  2821     0529  189D               	btfsc	29,1	;volatile
  2822     052A  2D29               	goto	l158
  2823                           
  2824                           ;main.c: 171:     ADON = 0;
  2825     052B  101D               	bcf	29,0	;volatile
  2826                           
  2827                           ;main.c: 172:     uint16_t adc_result = ((ADRESH << 8) | ADRESL);
  2828     052C  081C               	movf	28,w	;volatile
  2829     052D  0020               	movlb	0	; select bank0
  2830     052E  00CA               	movwf	DO_ADC@adc_result+1
  2831     052F  0021               	movlb	1	; select bank1
  2832     0530  081B               	movf	27,w	;volatile
  2833     0531  0020               	movlb	0	; select bank0
  2834     0532  00C9               	movwf	DO_ADC@adc_result
  2835                           
  2836                           ;main.c: 173:     return adc_result;
  2837     0533  084A               	movf	DO_ADC@adc_result+1,w
  2838     0534  00C7               	movwf	?_DO_ADC+1
  2839     0535  0849               	movf	DO_ADC@adc_result,w
  2840     0536  00C6               	movwf	?_DO_ADC
  2841     0537  0008               	return
  2842     0538                     __end_of_DO_ADC:
  2843                           
  2844                           	psect	text13
  2845     0613                     __ptext13:	
  2846 ;; *************** function _CONFIG_TMR0_INTERRUPT *****************
  2847 ;; Defined at:
  2848 ;;		line 230 in file "main.c"
  2849 ;; Parameters:    Size  Location     Type
  2850 ;;		None
  2851 ;; Auto vars:     Size  Location     Type
  2852 ;;		None
  2853 ;; Return value:  Size  Location     Type
  2854 ;;                  1    wreg      unsigned char 
  2855 ;; Registers used:
  2856 ;;		None
  2857 ;; Tracked objects:
  2858 ;;		On entry : B1F/1
  2859 ;;		On exit  : B1F/1
  2860 ;;		Unchanged: B1F/0
  2861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2862 ;;      Params:         0       0       0       0
  2863 ;;      Locals:         0       0       0       0
  2864 ;;      Temps:          0       0       0       0
  2865 ;;      Totals:         0       0       0       0
  2866 ;;Total ram usage:        0 bytes
  2867 ;; Hardware stack levels used: 1
  2868 ;; Hardware stack levels required when called: 2
  2869 ;; This function calls:
  2870 ;;		Nothing
  2871 ;; This function is called by:
  2872 ;;		_main
  2873 ;; This function uses a non-reentrant model
  2874 ;;
  2875                           
  2876     0613                     _CONFIG_TMR0_INTERRUPT:	
  2877                           ;psect for function _CONFIG_TMR0_INTERRUPT
  2878                           
  2879                           
  2880                           ;main.c: 231:     TMR0IE = 1;
  2881                           
  2882                           ;incstack = 0
  2883                           ; Regs used in _CONFIG_TMR0_INTERRUPT: []
  2884     0613  168B               	bsf	11,5	;volatile
  2885                           
  2886                           ;main.c: 232:     return 1;;	Return value of _CONFIG_TMR0_INTERRUPT is never used
  2887     0614  0008               	return
  2888     0615                     __end_of_CONFIG_TMR0_INTERRUPT:
  2889                           
  2890                           	psect	text14
  2891     05D4                     __ptext14:	
  2892 ;; *************** function _CONFIG_SYSTEM *****************
  2893 ;; Defined at:
  2894 ;;		line 235 in file "main.c"
  2895 ;; Parameters:    Size  Location     Type
  2896 ;;		None
  2897 ;; Auto vars:     Size  Location     Type
  2898 ;;		None
  2899 ;; Return value:  Size  Location     Type
  2900 ;;                  1    wreg      unsigned char 
  2901 ;; Registers used:
  2902 ;;		wreg, status,2, status,0, pclath, cstack
  2903 ;; Tracked objects:
  2904 ;;		On entry : B1F/0
  2905 ;;		On exit  : B1F/0
  2906 ;;		Unchanged: B00/0
  2907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2908 ;;      Params:         0       0       0       0
  2909 ;;      Locals:         0       0       0       0
  2910 ;;      Temps:          0       0       0       0
  2911 ;;      Totals:         0       0       0       0
  2912 ;;Total ram usage:        0 bytes
  2913 ;; Hardware stack levels used: 1
  2914 ;; Hardware stack levels required when called: 3
  2915 ;; This function calls:
  2916 ;;		_CONFIG_ADC_PINS
  2917 ;;		_CONFIG_INT_OSC
  2918 ;;		_CONFIG_PORTS
  2919 ;;		_CONFIG_PWM_CCP3
  2920 ;; This function is called by:
  2921 ;;		_main
  2922 ;; This function uses a non-reentrant model
  2923 ;;
  2924                           
  2925     05D4                     _CONFIG_SYSTEM:	
  2926                           ;psect for function _CONFIG_SYSTEM
  2927                           
  2928                           
  2929                           ;main.c: 236:     CONFIG_INT_OSC();
  2930                           
  2931                           ;incstack = 0
  2932                           ; Regs used in _CONFIG_SYSTEM: [wreg+status,2+status,0+pclath+cstack]
  2933     05D4  3186  2607  3185   	fcall	_CONFIG_INT_OSC
  2934                           
  2935                           ;main.c: 237:     CONFIG_PORTS();
  2936     05D7  3185  25E0  3185   	fcall	_CONFIG_PORTS
  2937                           
  2938                           ;main.c: 238:     CONFIG_ADC_PINS();
  2939     05DA  3186  260D  3185   	fcall	_CONFIG_ADC_PINS
  2940                           
  2941                           ;main.c: 239:     CONFIG_PWM_CCP3();
  2942     05DD  3185  25C1         	fcall	_CONFIG_PWM_CCP3
  2943     05DF  0008               	return
  2944     05E0                     __end_of_CONFIG_SYSTEM:
  2945                           
  2946                           	psect	text15
  2947     05C1                     __ptext15:	
  2948 ;; *************** function _CONFIG_PWM_CCP3 *****************
  2949 ;; Defined at:
  2950 ;;		line 203 in file "main.c"
  2951 ;; Parameters:    Size  Location     Type
  2952 ;;		None
  2953 ;; Auto vars:     Size  Location     Type
  2954 ;;		None
  2955 ;; Return value:  Size  Location     Type
  2956 ;;                  1    wreg      unsigned char 
  2957 ;; Registers used:
  2958 ;;		wreg, status,2
  2959 ;; Tracked objects:
  2960 ;;		On entry : B1F/1
  2961 ;;		On exit  : B1F/0
  2962 ;;		Unchanged: B00/0
  2963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2964 ;;      Params:         0       0       0       0
  2965 ;;      Locals:         0       0       0       0
  2966 ;;      Temps:          0       0       0       0
  2967 ;;      Totals:         0       0       0       0
  2968 ;;Total ram usage:        0 bytes
  2969 ;; Hardware stack levels used: 1
  2970 ;; Hardware stack levels required when called: 2
  2971 ;; This function calls:
  2972 ;;		Nothing
  2973 ;; This function is called by:
  2974 ;;		_CONFIG_SYSTEM
  2975 ;; This function uses a non-reentrant model
  2976 ;;
  2977                           
  2978     05C1                     _CONFIG_PWM_CCP3:	
  2979                           ;psect for function _CONFIG_PWM_CCP3
  2980                           
  2981                           
  2982                           ;main.c: 204:     SRLEN = 0;
  2983                           
  2984                           ;incstack = 0
  2985                           ; Regs used in _CONFIG_PWM_CCP3: [wreg+status,2]
  2986     05C1  0022               	movlb	2	; select bank2
  2987     05C2  139A               	bcf	26,7	;volatile
  2988                           
  2989                           ;main.c: 205:     C1ON = 0;
  2990     05C3  1391               	bcf	17,7	;volatile
  2991                           
  2992                           ;main.c: 207:     TRISA2 = 1;
  2993     05C4  0021               	movlb	1	; select bank1
  2994     05C5  150C               	bsf	12,2	;volatile
  2995                           
  2996                           ;main.c: 208:     PR2 = 0xFF;
  2997     05C6  30FF               	movlw	255
  2998     05C7  0020               	movlb	0	; select bank0
  2999     05C8  009B               	movwf	27	;volatile
  3000                           
  3001                           ;main.c: 209:     CCP3CON = CCP3CON | 0b00001111;
  3002     05C9  0026               	movlb	6	; select bank6
  3003     05CA  0813               	movf	19,w	;volatile
  3004     05CB  380F               	iorlw	15
  3005     05CC  0093               	movwf	19	;volatile
  3006                           
  3007                           ;main.c: 211:     CCPTMRS0 = 0x00;
  3008     05CD  0025               	movlb	5	; select bank5
  3009     05CE  019E               	clrf	30	;volatile
  3010                           
  3011                           ;main.c: 212:     TMR2IF = 0;
  3012     05CF  0020               	movlb	0	; select bank0
  3013     05D0  1091               	bcf	17,1	;volatile
  3014                           
  3015                           ;main.c: 213:     T2CON = T2CON | 0b00000000;
  3016     05D1  081C               	movf	28,w	;volatile
  3017     05D2  009C               	movwf	28	;volatile
  3018     05D3  0008               	return
  3019     05D4                     __end_of_CONFIG_PWM_CCP3:
  3020                           
  3021                           	psect	text16
  3022     05E0                     __ptext16:	
  3023 ;; *************** function _CONFIG_PORTS *****************
  3024 ;; Defined at:
  3025 ;;		line 150 in file "main.c"
  3026 ;; Parameters:    Size  Location     Type
  3027 ;;		None
  3028 ;; Auto vars:     Size  Location     Type
  3029 ;;		None
  3030 ;; Return value:  Size  Location     Type
  3031 ;;                  1    wreg      unsigned char 
  3032 ;; Registers used:
  3033 ;;		wreg, status,2
  3034 ;; Tracked objects:
  3035 ;;		On entry : B1F/1
  3036 ;;		On exit  : B1F/4
  3037 ;;		Unchanged: B00/0
  3038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3039 ;;      Params:         0       0       0       0
  3040 ;;      Locals:         0       0       0       0
  3041 ;;      Temps:          0       0       0       0
  3042 ;;      Totals:         0       0       0       0
  3043 ;;Total ram usage:        0 bytes
  3044 ;; Hardware stack levels used: 1
  3045 ;; Hardware stack levels required when called: 2
  3046 ;; This function calls:
  3047 ;;		Nothing
  3048 ;; This function is called by:
  3049 ;;		_CONFIG_SYSTEM
  3050 ;; This function uses a non-reentrant model
  3051 ;;
  3052                           
  3053     05E0                     _CONFIG_PORTS:	
  3054                           ;psect for function _CONFIG_PORTS
  3055                           
  3056                           
  3057                           ;main.c: 151:     ANSELC = 0b00001111;
  3058                           
  3059                           ;incstack = 0
  3060                           ; Regs used in _CONFIG_PORTS: [wreg+status,2]
  3061     05E0  300F               	movlw	15
  3062     05E1  0023               	movlb	3	; select bank3
  3063     05E2  008E               	movwf	14	;volatile
  3064                           
  3065                           ;main.c: 152:     TRISC = 0b00001111;
  3066     05E3  300F               	movlw	15
  3067     05E4  0021               	movlb	1	; select bank1
  3068     05E5  008E               	movwf	14	;volatile
  3069                           
  3070                           ;main.c: 153:     WPUC = 0b00000000;
  3071     05E6  0024               	movlb	4	; select bank4
  3072     05E7  018E               	clrf	14	;volatile
  3073     05E8  0008               	return
  3074     05E9                     __end_of_CONFIG_PORTS:
  3075                           
  3076                           	psect	text17
  3077     0607                     __ptext17:	
  3078 ;; *************** function _CONFIG_INT_OSC *****************
  3079 ;; Defined at:
  3080 ;;		line 143 in file "main.c"
  3081 ;; Parameters:    Size  Location     Type
  3082 ;;		None
  3083 ;; Auto vars:     Size  Location     Type
  3084 ;;		None
  3085 ;; Return value:  Size  Location     Type
  3086 ;;                  1    wreg      unsigned char 
  3087 ;; Registers used:
  3088 ;;		wreg
  3089 ;; Tracked objects:
  3090 ;;		On entry : B1F/0
  3091 ;;		On exit  : B1F/1
  3092 ;;		Unchanged: B00/0
  3093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3094 ;;      Params:         0       0       0       0
  3095 ;;      Locals:         0       0       0       0
  3096 ;;      Temps:          0       0       0       0
  3097 ;;      Totals:         0       0       0       0
  3098 ;;Total ram usage:        0 bytes
  3099 ;; Hardware stack levels used: 1
  3100 ;; Hardware stack levels required when called: 2
  3101 ;; This function calls:
  3102 ;;		Nothing
  3103 ;; This function is called by:
  3104 ;;		_CONFIG_SYSTEM
  3105 ;; This function uses a non-reentrant model
  3106 ;;
  3107                           
  3108     0607                     _CONFIG_INT_OSC:	
  3109                           ;psect for function _CONFIG_INT_OSC
  3110                           
  3111                           
  3112                           ;main.c: 144:     OSCCON = 0b11110000;
  3113                           
  3114                           ;incstack = 0
  3115                           ; Regs used in _CONFIG_INT_OSC: [wreg]
  3116     0607  30F0               	movlw	240
  3117     0608  0021               	movlb	1	; select bank1
  3118     0609  0099               	movwf	25	;volatile
  3119                           
  3120                           ;main.c: 145:     OSCTUNE = 0b00011111;
  3121     060A  301F               	movlw	31
  3122     060B  0098               	movwf	24	;volatile
  3123     060C  0008               	return
  3124     060D                     __end_of_CONFIG_INT_OSC:
  3125                           
  3126                           	psect	text18
  3127     060D                     __ptext18:	
  3128 ;; *************** function _CONFIG_ADC_PINS *****************
  3129 ;; Defined at:
  3130 ;;		line 157 in file "main.c"
  3131 ;; Parameters:    Size  Location     Type
  3132 ;;		None
  3133 ;; Auto vars:     Size  Location     Type
  3134 ;;		None
  3135 ;; Return value:  Size  Location     Type
  3136 ;;                  1    wreg      unsigned char 
  3137 ;; Registers used:
  3138 ;;		wreg
  3139 ;; Tracked objects:
  3140 ;;		On entry : B1F/4
  3141 ;;		On exit  : B1F/1
  3142 ;;		Unchanged: B00/0
  3143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3144 ;;      Params:         0       0       0       0
  3145 ;;      Locals:         0       0       0       0
  3146 ;;      Temps:          0       0       0       0
  3147 ;;      Totals:         0       0       0       0
  3148 ;;Total ram usage:        0 bytes
  3149 ;; Hardware stack levels used: 1
  3150 ;; Hardware stack levels required when called: 2
  3151 ;; This function calls:
  3152 ;;		Nothing
  3153 ;; This function is called by:
  3154 ;;		_CONFIG_SYSTEM
  3155 ;; This function uses a non-reentrant model
  3156 ;;
  3157                           
  3158     060D                     _CONFIG_ADC_PINS:	
  3159                           ;psect for function _CONFIG_ADC_PINS
  3160                           
  3161                           
  3162                           ;main.c: 158:     ADCON1 = 0b10100000;
  3163                           
  3164                           ;incstack = 0
  3165                           ; Regs used in _CONFIG_ADC_PINS: [wreg]
  3166     060D  30A0               	movlw	160
  3167     060E  0021               	movlb	1	; select bank1
  3168     060F  009E               	movwf	30	;volatile
  3169     0610  0008               	return
  3170     0611                     __end_of_CONFIG_ADC_PINS:
  3171                           
  3172                           	psect	intentry
  3173     0004                     __pintentry:	
  3174 ;; *************** function _INTERRUPT_InterruptManager *****************
  3175 ;; Defined at:
  3176 ;;		line 380 in file "main.c"
  3177 ;; Parameters:    Size  Location     Type
  3178 ;;		None
  3179 ;; Auto vars:     Size  Location     Type
  3180 ;;		None
  3181 ;; Return value:  Size  Location     Type
  3182 ;;                  1    wreg      unsigned char 
  3183 ;; Registers used:
  3184 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3185 ;; Tracked objects:
  3186 ;;		On entry : 0/0
  3187 ;;		On exit  : 0/0
  3188 ;;		Unchanged: 0/0
  3189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3190 ;;      Params:         0       0       0       0
  3191 ;;      Locals:         0       0       0       0
  3192 ;;      Temps:          2       0       0       0
  3193 ;;      Totals:         2       0       0       0
  3194 ;;Total ram usage:        2 bytes
  3195 ;; Hardware stack levels used: 1
  3196 ;; Hardware stack levels required when called: 1
  3197 ;; This function calls:
  3198 ;;		_SET_DUTY_CCP3
  3199 ;; This function is called by:
  3200 ;;		Interrupt level 1
  3201 ;; This function uses a non-reentrant model
  3202 ;;
  3203                           
  3204     0004                     _INTERRUPT_InterruptManager:
  3205                           
  3206                           ;incstack = 0
  3207     0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  3208                           
  3209                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3210     0005  3180               	pagesel	$
  3211                           
  3212                           ;main.c: 381:     if(TMR0IF == 1){
  3213     0006  1D0B               	btfss	11,2	;volatile
  3214     0007  28D1               	goto	i1l261
  3215                           
  3216                           ;main.c: 382:     GIE = 0;
  3217     0008  138B               	bcf	11,7	;volatile
  3218                           
  3219                           ;main.c: 383:     TMR0 = final_TMR0;
  3220     0009  0020               	movlb	0	; select bank0
  3221     000A  0845               	movf	_final_TMR0,w	;volatile
  3222     000B  0095               	movwf	21	;volatile
  3223                           
  3224                           ;main.c: 384:     LATC5 = 1;
  3225     000C  0022               	movlb	2	; select bank2
  3226     000D  168E               	bsf	14,5	;volatile
  3227                           
  3228                           ;main.c: 385:     TMR0IF = 0;
  3229     000E  110B               	bcf	11,2	;volatile
  3230                           
  3231                           ;main.c: 387:     if(current_waveshape == 0){
  3232     000F  0875               	movf	_current_waveshape,w	;volatile
  3233     0010  1D03               	btfss	3,2
  3234     0011  2823               	goto	i1l1537
  3235                           
  3236                           ;main.c: 388:         duty = tri_table_one_quadrant[current_one_quadrant_index];
  3237     0012  0874               	movf	_current_one_quadrant_index,w	;volatile
  3238     0013  00FA               	movwf	??_INTERRUPT_InterruptManager
  3239     0014  01FB               	clrf	??_INTERRUPT_InterruptManager+1
  3240     0015  35FA               	lslf	??_INTERRUPT_InterruptManager,f
  3241     0016  0DFB               	rlf	??_INTERRUPT_InterruptManager+1,f
  3242     0017  30EE               	movlw	low _tri_table_one_quadrant
  3243     0018  077A               	addwf	??_INTERRUPT_InterruptManager,w
  3244     0019  0084               	movwf	4
  3245     001A  3000               	movlw	high _tri_table_one_quadrant
  3246     001B  3D7B               	addwfc	??_INTERRUPT_InterruptManager+1,w
  3247     001C  3880               	iorlw	128
  3248     001D  0085               	movwf	5
  3249     001E  3F00               	moviw [0]fsr0
  3250     001F  0020               	movlb	0	; select bank0
  3251     0020  00C3               	movwf	_duty	;volatile
  3252     0021  3F01               	moviw [1]fsr0
  3253     0022  283F               	goto	L3
  3254     0023                     i1l1537:	
  3255                           ;main.c: 389:     }
  3256                           
  3257     0023  0375               	decf	_current_waveshape,w	;volatile
  3258     0024  1D03               	btfss	3,2
  3259     0025  2837               	goto	i1l1541
  3260                           
  3261                           ;main.c: 391:         duty = sine_table_one_quadrant[current_one_quadrant_index];
  3262     0026  0874               	movf	_current_one_quadrant_index,w	;volatile
  3263     0027  00FA               	movwf	??_INTERRUPT_InterruptManager
  3264     0028  01FB               	clrf	??_INTERRUPT_InterruptManager+1
  3265     0029  35FA               	lslf	??_INTERRUPT_InterruptManager,f
  3266     002A  0DFB               	rlf	??_INTERRUPT_InterruptManager+1,f
  3267     002B  30F0               	movlw	low _sine_table_one_quadrant
  3268     002C  077A               	addwf	??_INTERRUPT_InterruptManager,w
  3269     002D  0084               	movwf	4
  3270     002E  3001               	movlw	high _sine_table_one_quadrant
  3271     002F  3D7B               	addwfc	??_INTERRUPT_InterruptManager+1,w
  3272     0030  3880               	iorlw	128
  3273     0031  0085               	movwf	5
  3274     0032  3F00               	moviw [0]fsr0
  3275     0033  0020               	movlb	0	; select bank0
  3276     0034  00C3               	movwf	_duty	;volatile
  3277     0035  3F01               	moviw [1]fsr0
  3278     0036  283F               	goto	L3
  3279     0037                     i1l1541:	
  3280                           ;main.c: 392:     }
  3281                           
  3282     0037  3002               	movlw	2
  3283     0038  0675               	xorwf	_current_waveshape,w	;volatile
  3284     0039  1D03               	btfss	3,2
  3285     003A  2840               	goto	i1l1545
  3286                           
  3287                           ;main.c: 394:         duty = 1023;
  3288     003B  30FF               	movlw	255
  3289     003C  0020               	movlb	0	; select bank0
  3290     003D  00C3               	movwf	_duty	;volatile
  3291     003E  3003               	movlw	3
  3292     003F                     L3:
  3293     003F  00C4               	movwf	_duty+1	;volatile
  3294     0040                     i1l1545:
  3295                           
  3296                           ;main.c: 396:     if(current_one_quadrant_index == 128){
  3297     0040  3080               	movlw	128
  3298     0041  0674               	xorwf	_current_one_quadrant_index,w	;volatile
  3299     0042  1D03               	btfss	3,2
  3300     0043  2847               	goto	i1l1549
  3301                           
  3302                           ;main.c: 397:         current_quadrant = 1;
  3303     0044  3001               	movlw	1
  3304     0045  0020               	movlb	0	; select bank0
  3305     0046  00BF               	movwf	_current_quadrant	;volatile
  3306     0047                     i1l1549:
  3307                           
  3308                           ;main.c: 399:     if(current_one_quadrant_index == 0){
  3309     0047  0874               	movf	_current_one_quadrant_index,w	;volatile
  3310     0048  1D03               	btfss	3,2
  3311     0049  2853               	goto	i1l1559
  3312                           
  3313                           ;main.c: 400:         current_quadrant = 0;
  3314     004A  0020               	movlb	0	; select bank0
  3315     004B  01BF               	clrf	_current_quadrant	;volatile
  3316                           
  3317                           ;main.c: 401:         if(current_halfcycle == 0){
  3318     004C  0840               	movf	_current_halfcycle,w	;volatile
  3319     004D  1D03               	btfss	3,2
  3320     004E  2852               	goto	i1l1557
  3321                           
  3322                           ;main.c: 402:             current_halfcycle = 1;
  3323     004F  3001               	movlw	1
  3324     0050  00C0               	movwf	_current_halfcycle	;volatile
  3325                           
  3326                           ;main.c: 403:         }
  3327     0051  2853               	goto	i1l1559
  3328     0052                     i1l1557:
  3329                           
  3330                           ;main.c: 405:             current_halfcycle = 0;
  3331     0052  01C0               	clrf	_current_halfcycle	;volatile
  3332     0053                     i1l1559:
  3333                           
  3334                           ;main.c: 408:         if(current_quadrant == 0){
  3335     0053  0020               	movlb	0	; select bank0
  3336     0054  083F               	movf	_current_quadrant,w	;volatile
  3337     0055  1D03               	btfss	3,2
  3338     0056  285C               	goto	i1l1563
  3339                           
  3340                           ;main.c: 409:             current_one_quadrant_index++;
  3341     0057  3001               	movlw	1
  3342     0058  00FA               	movwf	??_INTERRUPT_InterruptManager
  3343     0059  087A               	movf	??_INTERRUPT_InterruptManager,w
  3344     005A  07F4               	addwf	_current_one_quadrant_index,f	;volatile
  3345                           
  3346                           ;main.c: 410:         }
  3347     005B  285E               	goto	i1l257
  3348     005C                     i1l1563:
  3349                           
  3350                           ;main.c: 412:             current_one_quadrant_index--;
  3351     005C  3001               	movlw	1
  3352     005D  02F4               	subwf	_current_one_quadrant_index,f	;volatile
  3353     005E                     i1l257:	
  3354                           ;main.c: 413:         }
  3355                           
  3356                           
  3357                           ;main.c: 414:         if(current_halfcycle == 1){
  3358     005E  0340               	decf	_current_halfcycle,w	;volatile
  3359     005F  1D03               	btfss	3,2
  3360     0060  286B               	goto	i1l258
  3361                           
  3362                           ;main.c: 415:         duty = 1023 - duty;
  3363     0061  30FF               	movlw	255
  3364     0062  00FA               	movwf	??_INTERRUPT_InterruptManager
  3365     0063  3003               	movlw	3
  3366     0064  00FB               	movwf	??_INTERRUPT_InterruptManager+1
  3367     0065  0843               	movf	_duty,w	;volatile
  3368     0066  027A               	subwf	??_INTERRUPT_InterruptManager,w
  3369     0067  00C3               	movwf	_duty	;volatile
  3370     0068  0844               	movf	_duty+1,w	;volatile
  3371     0069  3B7B               	subwfb	??_INTERRUPT_InterruptManager+1,w
  3372     006A  00C4               	movwf	_duty+1	;volatile
  3373     006B                     i1l258:	
  3374                           ;main.c: 416:         }
  3375                           
  3376                           
  3377                           ;main.c: 419:     if(current_depth != 0){
  3378     006B  082E               	movf	_current_depth,w	;volatile
  3379     006C  042F               	iorwf	_current_depth+1,w	;volatile
  3380     006D  1903               	btfsc	3,2
  3381     006E  28C7               	goto	i1l1571
  3382                           
  3383                           ;main.c: 420:         duty_low_byte = duty & 0xFF;
  3384     006F  0843               	movf	_duty,w	;volatile
  3385     0070  00C2               	movwf	_duty_low_byte	;volatile
  3386                           
  3387                           ;main.c: 421:         duty_high_byte = duty >> 8;
  3388     0071  0844               	movf	_duty+1,w	;volatile
  3389     0072  00C1               	movwf	_duty_high_byte	;volatile
  3390     0073  01A2               	clrf	34	;# 
  3391     0074  01A0               	clrf	32	;# 
  3392     0075  1003               	bcf	3,0	;# 
  3393     0076  082E               	movf	_current_depth,w	;# 
  3394     0077  1842               	btfsc	_duty_low_byte,0	;# 
  3395     0078  07A2               	addwf	34,f	;# 
  3396     0079  0CA2               	rrf	34,f	;# 
  3397     007A  0CA0               	rrf	32,f	;# 
  3398     007B  18C2               	btfsc	_duty_low_byte,1	;# 
  3399     007C  07A2               	addwf	34,f	;# 
  3400     007D  0CA2               	rrf	34,f	;# 
  3401     007E  0CA0               	rrf	32,f	;# 
  3402     007F  1942               	btfsc	_duty_low_byte,2	;# 
  3403     0080  07A2               	addwf	34,f	;# 
  3404     0081  0CA2               	rrf	34,f	;# 
  3405     0082  0CA0               	rrf	32,f	;# 
  3406     0083  19C2               	btfsc	_duty_low_byte,3	;# 
  3407     0084  07A2               	addwf	34,f	;# 
  3408     0085  0CA2               	rrf	34,f	;# 
  3409     0086  0CA0               	rrf	32,f	;# 
  3410     0087  1A42               	btfsc	_duty_low_byte,4	;# 
  3411     0088  07A2               	addwf	34,f	;# 
  3412     0089  0CA2               	rrf	34,f	;# 
  3413     008A  0CA0               	rrf	32,f	;# 
  3414     008B  1AC2               	btfsc	_duty_low_byte,5	;# 
  3415     008C  07A2               	addwf	34,f	;# 
  3416     008D  0CA2               	rrf	34,f	;# 
  3417     008E  0CA0               	rrf	32,f	;# 
  3418     008F  1B42               	btfsc	_duty_low_byte,6	;# 
  3419     0090  07A2               	addwf	34,f	;# 
  3420     0091  0CA2               	rrf	34,f	;# 
  3421     0092  0CA0               	rrf	32,f	;# 
  3422     0093  1BC2               	btfsc	_duty_low_byte,7	;# 
  3423     0094  07A2               	addwf	34,f	;# 
  3424     0095  0CA2               	rrf	34,f	;# 
  3425     0096  0CA0               	rrf	32,f	;# 
  3426     0097  01A1               	clrf	33	;# 
  3427     0098  1841               	btfsc	_duty_high_byte,0	;# 
  3428     0099  07A2               	addwf	34,f	;# 
  3429     009A  0CA2               	rrf	34,f	;# 
  3430     009B  0CA1               	rrf	33,f	;# 
  3431     009C  18C1               	btfsc	_duty_high_byte,1	;# 
  3432     009D  07A2               	addwf	34,f	;# 
  3433     009E  0CA2               	rrf	34,f	;# 
  3434     009F  0CA1               	rrf	33,f	;# 
  3435     00A0  1941               	btfsc	_duty_high_byte,2	;# 
  3436     00A1  07A2               	addwf	34,f	;# 
  3437     00A2  0CA2               	rrf	34,f	;# 
  3438     00A3  0CA1               	rrf	33,f	;# 
  3439     00A4  19C1               	btfsc	_duty_high_byte,3	;# 
  3440     00A5  07A2               	addwf	34,f	;# 
  3441     00A6  0CA2               	rrf	34,f	;# 
  3442     00A7  0CA1               	rrf	33,f	;# 
  3443     00A8  1A41               	btfsc	_duty_high_byte,4	;# 
  3444     00A9  07A2               	addwf	34,f	;# 
  3445     00AA  0CA2               	rrf	34,f	;# 
  3446     00AB  0CA1               	rrf	33,f	;# 
  3447     00AC  1AC1               	btfsc	_duty_high_byte,5	;# 
  3448     00AD  07A2               	addwf	34,f	;# 
  3449     00AE  0CA2               	rrf	34,f	;# 
  3450     00AF  0CA1               	rrf	33,f	;# 
  3451     00B0  1B41               	btfsc	_duty_high_byte,6	;# 
  3452     00B1  07A2               	addwf	34,f	;# 
  3453     00B2  0CA2               	rrf	34,f	;# 
  3454     00B3  0CA1               	rrf	33,f	;# 
  3455     00B4  1BC1               	btfsc	_duty_high_byte,7	;# 
  3456     00B5  07A2               	addwf	34,f	;# 
  3457     00B6  0CA2               	rrf	34,f	;# 
  3458     00B7  0CA1               	rrf	33,f	;# 
  3459                           
  3460                           ;main.c: 456:         duty = 1023 - *top_two_bytes_ptr;
  3461     00B8  0020               	movlb	0	; select bank0
  3462     00B9  0856               	movf	_top_two_bytes_ptr,w
  3463     00BA  0086               	movwf	6
  3464     00BB  0857               	movf	_top_two_bytes_ptr+1,w
  3465     00BC  0087               	movwf	7
  3466     00BD  30FF               	movlw	255
  3467     00BE  00FA               	movwf	??_INTERRUPT_InterruptManager
  3468     00BF  3003               	movlw	3
  3469     00C0  00FB               	movwf	??_INTERRUPT_InterruptManager+1
  3470     00C1  3F40               	moviw [0]fsr1
  3471     00C2  027A               	subwf	??_INTERRUPT_InterruptManager,w
  3472     00C3  00C3               	movwf	_duty	;volatile
  3473     00C4  3F41               	moviw [1]fsr1
  3474     00C5  3B7B               	subwfb	??_INTERRUPT_InterruptManager+1,w
  3475     00C6  28CA               	goto	L4
  3476     00C7                     i1l1571:	
  3477                           ;main.c: 457:     }
  3478                           
  3479                           
  3480                           ;main.c: 459:         duty = 1023;
  3481     00C7  30FF               	movlw	255
  3482     00C8  00C3               	movwf	_duty	;volatile
  3483     00C9  3003               	movlw	3
  3484     00CA                     L4:
  3485     00CA  00C4               	movwf	_duty+1	;volatile
  3486                           
  3487                           ;main.c: 463:     SET_DUTY_CCP3(&duty);
  3488     00CB  3043               	movlw	(low (_duty| 0))& (0+255)
  3489     00CC  3185  2586         	fcall	_SET_DUTY_CCP3
  3490                           
  3491                           ;main.c: 466:     LATC5 = 0;
  3492     00CE  0022               	movlb	2	; select bank2
  3493     00CF  128E               	bcf	14,5	;volatile
  3494                           
  3495                           ;main.c: 467:     GIE = 1;
  3496     00D0  178B               	bsf	11,7	;volatile
  3497     00D1                     i1l261:
  3498     00D1  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  3499     00D2  0009               	retfie
  3500     00D3                     __end_of_INTERRUPT_InterruptManager:
  3501                           
  3502                           	psect	text20
  3503     0586                     __ptext20:	
  3504 ;; *************** function _SET_DUTY_CCP3 *****************
  3505 ;; Defined at:
  3506 ;;		line 193 in file "main.c"
  3507 ;; Parameters:    Size  Location     Type
  3508 ;;  duty_ptr        1    wreg     PTR volatile unsigned sh
  3509 ;;		 -> duty(2), 
  3510 ;; Auto vars:     Size  Location     Type
  3511 ;;  duty_ptr        1    3[COMMON] PTR volatile unsigned sh
  3512 ;;		 -> duty(2), 
  3513 ;;  temp            1    2[COMMON] unsigned char 
  3514 ;; Return value:  Size  Location     Type
  3515 ;;                  1    wreg      unsigned char 
  3516 ;; Registers used:
  3517 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3518 ;; Tracked objects:
  3519 ;;		On entry : 1F/0
  3520 ;;		On exit  : 1F/6
  3521 ;;		Unchanged: 0/0
  3522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3523 ;;      Params:         0       0       0       0
  3524 ;;      Locals:         2       0       0       0
  3525 ;;      Temps:          2       0       0       0
  3526 ;;      Totals:         4       0       0       0
  3527 ;;Total ram usage:        4 bytes
  3528 ;; Hardware stack levels used: 1
  3529 ;; This function calls:
  3530 ;;		Nothing
  3531 ;; This function is called by:
  3532 ;;		_INTERRUPT_InterruptManager
  3533 ;; This function uses a non-reentrant model
  3534 ;;
  3535                           
  3536     0586                     _SET_DUTY_CCP3:	
  3537                           ;psect for function _SET_DUTY_CCP3
  3538                           
  3539                           
  3540                           ;incstack = 0
  3541                           ; Regs used in _SET_DUTY_CCP3: [wreg+fsr1l+fsr1h+status,2+status,0]
  3542                           ;SET_DUTY_CCP3@duty_ptr stored from wreg
  3543     0586  00F9               	movwf	SET_DUTY_CCP3@duty_ptr
  3544                           
  3545                           ;main.c: 195:     CCPR3L = *duty_ptr >> 2;
  3546     0587  0879               	movf	SET_DUTY_CCP3@duty_ptr,w
  3547     0588  0086               	movwf	6
  3548     0589  0187               	clrf	7
  3549     058A  3F40               	moviw [0]fsr1
  3550     058B  00F6               	movwf	??_SET_DUTY_CCP3
  3551     058C  3F41               	moviw [1]fsr1
  3552     058D  00F7               	movwf	??_SET_DUTY_CCP3+1
  3553     058E  36F7               	lsrf	??_SET_DUTY_CCP3+1,f
  3554     058F  0CF6               	rrf	??_SET_DUTY_CCP3,f
  3555     0590  36F7               	lsrf	??_SET_DUTY_CCP3+1,f
  3556     0591  0CF6               	rrf	??_SET_DUTY_CCP3,f
  3557     0592  0876               	movf	??_SET_DUTY_CCP3,w
  3558     0593  0026               	movlb	6	; select bank6
  3559     0594  0091               	movwf	17	;volatile
  3560                           
  3561                           ;main.c: 196:     uint8_t temp = *duty_ptr % 0b100;
  3562     0595  0879               	movf	SET_DUTY_CCP3@duty_ptr,w
  3563     0596  0086               	movwf	6
  3564     0597  0187               	clrf	7
  3565     0598  0801               	movf	1,w
  3566     0599  3903               	andlw	3
  3567     059A  00F8               	movwf	SET_DUTY_CCP3@temp
  3568                           
  3569                           ;main.c: 197:     CCP3CON = CCP3CON | (temp << 4);
  3570     059B  0878               	movf	SET_DUTY_CCP3@temp,w
  3571     059C  00F6               	movwf	??_SET_DUTY_CCP3
  3572     059D  3003               	movlw	3
  3573     059E                     u79_25:
  3574     059E  35F6               	lslf	??_SET_DUTY_CCP3,f
  3575     059F  3EFF               	addlw	-1
  3576     05A0  1D03               	skipz
  3577     05A1  2D9E               	goto	u79_25
  3578     05A2  3576               	lslf	??_SET_DUTY_CCP3,w
  3579     05A3  0413               	iorwf	19,w	;volatile
  3580     05A4  0093               	movwf	19	;volatile
  3581     05A5  0008               	return
  3582     05A6                     __end_of_SET_DUTY_CCP3:
  3583     007E                     btemp	set	126	;btemp
  3584     007E                     int$flags	set	126
  3585     007E                     wtemp0	set	126
  3586                           
  3587                           	psect	config
  3588                           
  3589                           ;Config register CONFIG1 @ 0x8007
  3590                           ;	Oscillator Selection
  3591                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  3592                           ;	Watchdog Timer Enable
  3593                           ;	WDTE = OFF, WDT disabled
  3594                           ;	Power-up Timer Enable
  3595                           ;	PWRTE = OFF, PWRT disabled
  3596                           ;	MCLR Pin Function Select
  3597                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  3598                           ;	Flash Program Memory Code Protection
  3599                           ;	CP = OFF, Program memory code protection is disabled
  3600                           ;	Data Memory Code Protection
  3601                           ;	CPD = OFF, Data memory code protection is disabled
  3602                           ;	Brown-out Reset Enable
  3603                           ;	BOREN = OFF, Brown-out Reset disabled
  3604                           ;	Clock Out Enable
  3605                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  3606                           ;	Internal/External Switchover
  3607                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3608                           ;	Fail-Safe Clock Monitor Enable
  3609                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3610     8007                     	org	32775
  3611     8007  09E4               	dw	2532
  3612                           
  3613                           ;Config register CONFIG2 @ 0x8008
  3614                           ;	Flash Memory Self-Write Protection
  3615                           ;	WRT = OFF, Write protection off
  3616                           ;	PLL Enable
  3617                           ;	PLLEN = ON, 4x PLL enabled
  3618                           ;	Stack Overflow/Underflow Reset Enable
  3619                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  3620                           ;	Brown-out Reset Voltage Selection
  3621                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  3622                           ;	In-Circuit Debugger Mode
  3623                           ;	DEBUG = ON, In-Circuit Debugger enabled, ICSPCLK and ICSPDAT are dedicated to the debu
      +                          gger
  3624                           ;	Low-Voltage Programming Enable
  3625                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  3626     8008                     	org	32776
  3627     8008  0FFF               	dw	4095

Data Sizes:
    Strings     0
    Constant    539
    Data        2
    BSS         44
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     16      56
    BANK1            80      0       0
    BANK2            64      0       0

Pointer List with Targets:

    DO_ADC@modifier	PTR const unsigned char  size(2) Largest target is 1
		 -> depth_adc_config_value(CODE[1]), speed_adc_config_value(CODE[1]), symmetry_adc_config_value(CODE[1]), waveshape_adc_config_value(CODE[1]), 

    SET_DUTY_CCP3@duty_ptr	PTR volatile unsigned short  size(1) Largest target is 2
		 -> duty(BANK0[2]), 

    TMR0_WRITE@timer_value_ptr	PTR volatile unsigned char  size(1) Largest target is 1
		 -> final_TMR0(BANK0[1]), 

    top_two_bytes_ptr	PTR unsigned short  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_SET_DUTY_CCP3

Critical Paths under _main in BANK0

    _main->_PROCESS_RAW_SPEED_AND_PRESCALER
    _PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST->_LENGTHEN_PERIOD
    _LENGTHEN_PERIOD->___wmul
    _PROCESS_RAW_SPEED_AND_PRESCALER->___lmul
    _GET_CURRENT_POT_VALUES->_DETERMINE_WAVESHAPE
    _DETERMINE_WAVESHAPE->_DO_ADC

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2004
                      _CONFIG_SYSTEM
              _CONFIG_TMR0_INTERRUPT
             _GET_CURRENT_POT_VALUES
  _PROCESS_FINAL_SPEED_AND_PRESCALER
    _PROCESS_RAW_SPEED_AND_PRESCALER
_PROCESS_TMR0_OFFSET_AND_PRESCALER_A
                         _TMR0_WRITE
                   _TURN_ON_CCP3_PWM
 ---------------------------------------------------------------------------------
 (1) _TURN_ON_CCP3_PWM                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_WRITE                                           1     1      0      67
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST             2     2      0     607
                                              9 BANK0      2     2      0
                    _LENGTHEN_PERIOD
                     _SHORTEN_PERIOD
 ---------------------------------------------------------------------------------
 (2) _SHORTEN_PERIOD                                       5     5      0     161
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) _LENGTHEN_PERIOD                                      3     3      0     316
                                              6 BANK0      3     3      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     316
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _PROCESS_RAW_SPEED_AND_PRESCALER                      4     4      0     316
                                             12 BANK0      4     4      0
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     316
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) _PROCESS_FINAL_SPEED_AND_PRESCALER                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GET_CURRENT_POT_VALUES                               2     2      0    1014
                                              8 BANK0      2     2      0
                _DETERMINE_WAVESHAPE
                             _DO_ADC
 ---------------------------------------------------------------------------------
 (2) _DETERMINE_WAVESHAPE                                  2     2      0     555
                                              6 BANK0      2     2      0
                             _DO_ADC
 ---------------------------------------------------------------------------------
 (2) _DO_ADC                                               6     4      2     459
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _CONFIG_TMR0_INTERRUPT                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CONFIG_SYSTEM                                        0     0      0       0
                    _CONFIG_ADC_PINS
                     _CONFIG_INT_OSC
                       _CONFIG_PORTS
                    _CONFIG_PWM_CCP3
 ---------------------------------------------------------------------------------
 (2) _CONFIG_PWM_CCP3                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CONFIG_PORTS                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CONFIG_INT_OSC                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CONFIG_ADC_PINS                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           2     2      0     100
                                              4 COMMON     2     2      0
                      _SET_DUTY_CCP3
 ---------------------------------------------------------------------------------
 (5) _SET_DUTY_CCP3                                        4     4      0     100
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CONFIG_SYSTEM
     _CONFIG_ADC_PINS
     _CONFIG_INT_OSC
     _CONFIG_PORTS
     _CONFIG_PWM_CCP3
   _CONFIG_TMR0_INTERRUPT
   _GET_CURRENT_POT_VALUES
     _DETERMINE_WAVESHAPE
       _DO_ADC
     _DO_ADC
   _PROCESS_FINAL_SPEED_AND_PRESCALER
   _PROCESS_RAW_SPEED_AND_PRESCALER
     ___lmul
   _PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST
     _LENGTHEN_PERIOD
       ___wmul
     _SHORTEN_PERIOD
   _TMR0_WRITE
   _TURN_ON_CCP3_PWM

 _INTERRUPT_InterruptManager (ROOT)
   _SET_DUTY_CCP3

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              E0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      44       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     10      38       6       70.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            40      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               40      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      44      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Sat Jan 20 16:04:33 2024

                                                      r1 0020  
                                                      r2 0021  
                                                      r3 0022  
                                                     _CW 0615  
                                                     _NO 0617  
                                    ___wmul@multiplicand 0048  
                                                    l204 03EF  
                                                    l158 0529  
                                                    l177 05F3  
                                                    l419 05AE  
                                                    _CCW 0616  
                                                    _GIE 005F  
                                                    _PR2 001B  
                                                    _YES 0618  
                                                    wreg 0009  
                                                   l1623 05A8  
                                                   _C1ON 088F  
                                                   l1811 03E6  
                                                   l1715 0359  
                                                   l1813 03E9  
                                                   l1741 04D7  
                                                   l1709 0328  
                                                   l1663 057D  
                                                   l1823 040C  
                                                   l1657 0574  
                                                   l1753 04E5  
                                                   l1659 057B  
                                                   l1827 041B  
                                                   l1819 03FD  
                                                   l1757 04EF  
                                                   l1853 0447  
                                                   l1845 0434  
                                                   l1871 0460  
                                                   l1863 045A  
                                                   l1865 045D  
                                                   l1857 044D  
                                                   l1699 0314  
                                                   l1867 0457  
                                                   l1859 0450  
                                                   l1799 03BB  
                                                   l1897 0552  
                                                   _ADON 04E8  
                                                   u1135 0516  
                                                   u1305 04CA  
                                                   u1325 04F0  
                                                   u1165 05AF  
                                                   u1335 04F7  
                                                   u1175 05B4  
                                                   u1255 0348  
                                                   u1275 035E  
                                                   u1365 039C  
                                                   u1295 04B4  
                                                   u1385 03C6  
                                                   u1395 03D1  
                                                   u1587 0524  
                                                   _TMR0 0015  
                                                   _WPUC 020E  
                                      _current_speed_log 0030  
                                                   _main 0538  
                                                   _duty 0043  
                                                   fsr0h 0005  
                                                   fsr1h 0007  
                                                   indf0 0000  
                                                   fsr0l 0004  
                                                   indf1 0001  
                                                   fsr1l 0006  
                                                   btemp 007E  
                                      _current_waveshape 0075  
                                                   start 00D3  
                                  _CONFIG_TMR0_INTERRUPT 0613  
                                       __end_of_NEGATIVE 061F  
                                   __end_of_CONFIG_PORTS 05E9  
                                                  STATUS 0003  
                                                  ?_main 0076  
                                                  _T2CON 001C  
                                                  _LATC5 0875  
                                                  i1l261 00D1  
                                                  i1l257 005E  
                                                  i1l258 006B  
                                                  _SRLEN 08D7  
                                                  _TRISC 008E  
                                                  u79_25 059E  
                                            ?_TMR0_WRITE 0076  
                                    ___lmul@multiplicand 004A  
                                       __end_of_POSITIVE 0620  
                               ??_GET_CURRENT_POT_VALUES 004E  
                                                  status 0003  
                                                  wtemp0 007E  
                             _current_one_quadrant_index 0074  
                                        __initialization 00D5  
                                           __end_of_main 055F  
       __end_of_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST 0467  
             ??_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST 004F  
              ?_PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST 0076  
               _PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST 0429  
                            ?_INTERRUPT_InterruptManager 0076  
                                      __end_of_DONT_CARE 061A  
                                                 ??_main 0056  
                                  __end_of_DIVIDE_BY_TWO 061D  
                                 _speed_adc_config_value 0622  
                                  __end_of_CONFIG_SYSTEM 05E0  
                                                 _ADCON0 009D  
                                                 _ADCON1 009E  
                                                 _ADRESH 009C  
                                                 _ADRESL 009B  
                                                 _CCPR3L 0311  
                                                 _ANSELC 018E  
                                                 _DO_ADC 050C  
                                                 i1l1541 0037  
                                                 i1l1545 0040  
                                                 i1l1537 0023  
                                                 i1l1571 00C7  
                                                 i1l1563 005C  
                                                 i1l1557 0052  
                                                 i1l1549 0047  
                                                 i1l1559 0053  
                                                 _OSCCON 0099  
                                                 _TMR0IE 005D  
                                                 _TMR0IF 005A  
                                                 _TMR2IF 0089  
                                                 _TMR2ON 00E2  
                                                 _TRISA2 0462  
                                 ?_CONFIG_TMR0_INTERRUPT 0076  
                                         DO_ADC@modifier 0046  
                            __end_of_DETERMINE_WAVESHAPE 0586  
                      __end_of_symmetry_adc_config_value 0621  
                                                 ___lmul 04DD  
                                                 ___wmul 05A6  
                                  __end_of_SET_DUTY_CCP3 05A6  
                                      ?_TURN_ON_CCP3_PWM 0076  
                                      ??_CONFIG_ADC_PINS 0046  
                                _current_speed_linear_32 0024  
                                     ??_TURN_ON_CCP3_PWM 0046  
                                __end_of__initialization 00EA  
                                         _SHORTEN_PERIOD 02F2  
                                         _DIVIDE_BY_FOUR 061A  
                                         _CONFIG_INT_OSC 0607  
                                         __pcstackCOMMON 0076  
                                           __pidataBANK0 0611  
                                            _dTMR0_ideal 0070  
                                             __end_of_CW 0616  
                                             __end_of_NO 0618  
                                 _tri_table_one_quadrant 00EE  
                                      ??_CONFIG_PWM_CCP3 0046  
                                      _top_two_bytes_ptr 0056  
                                          _current_depth 002E  
                                             __pbssBANK0 0020  
                                                ?_DO_ADC 0046  
                                 __end_of_SHORTEN_PERIOD 0372  
                                           _CONFIG_PORTS 05E0  
                                 __end_of_DIVIDE_BY_FOUR 061B  
                                 __end_of_CONFIG_INT_OSC 060D  
                                     __end_of_DO_NOTHING 061E  
                                             __pmaintext 0538  
                                 _GET_CURRENT_POT_VALUES 0467  
                                                ?___lmul 0046  
                                                ?___wmul 0046  
                                             __pintentry 0004  
PROCESS_TMR0_OFFSET_AND_PRESCALER_ADJUST@symmetry_status 0050  
                                                _CCP3CON 0313  
                                         ___lmul@product 004E  
                                             _final_TMR0 0045  
                                           ??_TMR0_WRITE 0046  
                                  SET_DUTY_CCP3@duty_ptr 0079  
                                                _OSCTUNE 0098  
                                _sine_table_one_quadrant 01F0  
                              TMR0_WRITE@timer_value_ptr 0046  
                                        ?_SHORTEN_PERIOD 0076  
              __end_of_PROCESS_FINAL_SPEED_AND_PRESCALER 0429  
                    ??_PROCESS_FINAL_SPEED_AND_PRESCALER 0046  
                     ?_PROCESS_FINAL_SPEED_AND_PRESCALER 0076  
                      _PROCESS_FINAL_SPEED_AND_PRESCALER 03DC  
                                        ?_CONFIG_INT_OSC 0076  
                                   _current_speed_log_32 0020  
                                     __end_of_TMR0_WRITE 0601  
                                   _current_speed_linear 0032  
                              _base_prescaler_bits_index 003C  
                                                __ptext1 05F1  
                                                __ptext2 05F9  
                                                __ptext3 0429  
                                                __ptext4 02F2  
                                                __ptext5 04A4  
                                                __ptext6 05A6  
                                                __ptext7 0372  
                                                __ptext8 04DD  
                                                __ptext9 03DC  
                                        _MULTIPLY_BY_TWO 061B  
                __end_of_PROCESS_RAW_SPEED_AND_PRESCALER 03DC  
                      ??_PROCESS_RAW_SPEED_AND_PRESCALER 0052  
                       ?_PROCESS_RAW_SPEED_AND_PRESCALER 0076  
                        _PROCESS_RAW_SPEED_AND_PRESCALER 0372  
                                              _DONT_CARE 0619  
                                                clrloop0 0602  
                                   end_of_initialization 00EA  
                                ??_CONFIG_TMR0_INTERRUPT 0046  
                                          _duty_low_byte 0042  
                         __end_of_speed_adc_config_value 0623  
                                 _depth_adc_config_value 0621  
                                        _CONFIG_ADC_PINS 060D  
                                       _TMR0_offset_sign 003D  
                                      ??_LENGTHEN_PERIOD 004C  
                                             DO_ADC@temp 004B  
                                         __end_of_DO_ADC 0538  
                                      SET_DUTY_CCP3@temp 0078  
                                       _current_quadrant 003F  
                                __end_of_MULTIPLY_BY_TWO 061C  
                                        _CONFIG_PWM_CCP3 05C1  
                                       _current_symmetry 002C  
                                         __end_of___lmul 050C  
                                         __end_of___wmul 05C1  
                               _speed_control_subtracted 0036  
                                    start_initialization 00D5  
                                            __end_of_CCW 0617  
                                            __end_of_YES 0619  
                                               ??_DO_ADC 0048  
                                ?_GET_CURRENT_POT_VALUES 0076  
                        __end_of_sine_table_one_quadrant 02F2  
                                __end_of_CONFIG_ADC_PINS 0611  
                                               ??___lmul 004E  
                                               ??___wmul 004A  
                         __end_of_tri_table_one_quadrant 01F0  
                                            __pdataBANK0 0056  
                                       DO_ADC@adc_result 0049  
                                            __pbssCOMMON 0070  
                                              ___latbits 0001  
                                          _DIVIDE_BY_TWO 061C  
                                          __pcstackBANK0 0046  
                                       ??_SHORTEN_PERIOD 0046  
                                          _CONFIG_SYSTEM 05D4  
                                       ??_CONFIG_INT_OSC 0046  
                         __end_of_GET_CURRENT_POT_VALUES 04A4  
                                __end_of_CONFIG_PWM_CCP3 05D4  
                                         _prescaler_bits 05E9  
                           ??_INTERRUPT_InterruptManager 007A  
                                           _how_many_128 0034  
                                          _SET_DUTY_CCP3 0586  
                                               _CCPTMRS0 029E  
                                         ?_CONFIG_SYSTEM 0076  
                                       _prescaler_adjust 0073  
                                        _symmetry_status 003A  
                                               _NEGATIVE 061E  
                                         ___wmul@product 004A  
                     __end_of_waveshape_adc_config_value 0624  
                             _waveshape_adc_config_value 0623  
                          __end_of_CONFIG_TMR0_INTERRUPT 0615  
                                              clear_ram0 0601  
                                               _GO_nDONE 04E9  
                                       _TURN_ON_CCP3_PWM 05F1  
                                 __end_of_prescaler_bits 05F1  
                                       ?_CONFIG_ADC_PINS 0076  
                                               _POSITIVE 061F  
                                        _LENGTHEN_PERIOD 04A4  
                                      ___wmul@multiplier 0046  
                                         ?_SET_DUTY_CCP3 0076  
                                      _clear_TMR0_please 003B  
                           SHORTEN_PERIOD@TMR0_raw_extra 0049  
                                      ___lmul@multiplier 0046  
                                    _DETERMINE_WAVESHAPE 055F  
                                 DETERMINE_WAVESHAPE@ADC 004C  
                                       ?_CONFIG_PWM_CCP3 0076  
                         __end_of_depth_adc_config_value 0622  
                                   ?_DETERMINE_WAVESHAPE 0076  
                                        ??_CONFIG_SYSTEM 0046  
                                       _speed_control_32 0028  
                                               __ptext10 0467  
                                               __ptext11 055F  
                                               __ptext20 0586  
                                               __ptext12 050C  
                                               __ptext13 0613  
                                               __ptext14 05D4  
                                               __ptext15 05C1  
                                               __ptext16 05E0  
                                               __ptext17 0607  
                                               __ptext18 060D  
                                          ?_CONFIG_PORTS 0076  
                                         _duty_high_byte 0041  
                                          _speed_control 0038  
                                               _raw_TMR0 0072  
                                __end_of_LENGTHEN_PERIOD 04DD  
                                               int$flags 007E  
                                  ??_DETERMINE_WAVESHAPE 004C  
                     __end_of_INTERRUPT_InterruptManager 00D3  
                             _INTERRUPT_InterruptManager 0004  
                                        ??_SET_DUTY_CCP3 0076  
                                             _DO_NOTHING 061D  
                                         __pstringtext10 061B  
                                         __pstringtext11 061C  
                                         __pstringtext12 061D  
                                         __pstringtext13 061E  
                                         __pstringtext14 061F  
                                         __pstringtext15 0620  
                                         __pstringtext16 0621  
                                         __pstringtext17 0622  
                                         __pstringtext18 0623  
                              _symmetry_adc_config_value 0620  
                                         ??_CONFIG_PORTS 0046  
                                               intlevel1 0000  
                                          __pstringtext1 00EE  
                                          __pstringtext2 01F0  
                                          __pstringtext3 05E9  
                                          __pstringtext4 0615  
                                          __pstringtext5 0616  
                                          __pstringtext6 0617  
                                          __pstringtext7 0618  
                                          __pstringtext8 0619  
                                          __pstringtext9 061A  
                                            _TMR0_offset 003E  
                                             _OPTION_REG 0095  
                                             _TMR0_WRITE 05F9  
                               __end_of_TURN_ON_CCP3_PWM 05F9  
                                      _current_halfcycle 0040  
                                       ?_LENGTHEN_PERIOD 0076  
